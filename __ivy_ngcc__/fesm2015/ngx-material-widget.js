import { Component, Inject, EventEmitter, Input, Output, ViewEncapsulation, ViewChild, Pipe, Directive, NgModule, ViewContainerRef, Compiler, ChangeDetectorRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormGroup, FormArray, FormControl, ReactiveFormsModule } from '@angular/forms';
import { Router, ActivatedRoute, RouterModule } from '@angular/router';
import { Breakpoints, BreakpointObserver, LayoutModule } from '@angular/cdk/layout';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatChipsModule } from '@angular/material/chips';
import { MatIconModule } from '@angular/material/icon';
import { MatBadgeModule } from '@angular/material/badge';
import { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogModule } from '@angular/material/dialog';
import { MatButtonModule } from '@angular/material/button';
import { MatMenuModule } from '@angular/material/menu';
import { MatCardModule } from '@angular/material/card';
import { MatTabsModule } from '@angular/material/tabs';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA, MatBottomSheetModule } from '@angular/material/bottom-sheet';
import { MatDividerModule } from '@angular/material/divider';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatSelectModule } from '@angular/material/select';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatRadioModule } from '@angular/material/radio';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatMomentDateModule } from '@angular/material-moment-adapter';
import { MatSliderModule } from '@angular/material/slider';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatListModule } from '@angular/material/list';
import { MatTableDataSource, MatTableModule } from '@angular/material/table';
import { MatSort, MatSortModule } from '@angular/material/sort';
import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';
import { MatGridListModule } from '@angular/material/grid-list';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { AbilityModule } from '@casl/angular';
import { Ability, PureAbility } from '@casl/ability';
import { TooltipModule } from 'ng2-tooltip-directive';
import { AES, enc } from 'crypto-js';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { SelectionModel } from '@angular/cdk/collections';
import { QuillModule } from 'ngx-quill';
import { ENTER } from '@angular/cdk/keycodes';
import { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';
import { FlexLayoutModule } from '@angular/flex-layout';
import { MatToolbarModule } from '@angular/material/toolbar';
import { InfiniteScrollModule } from 'ngx-infinite-scroll';
import { MdePopoverModule } from '@material-extended/mde';
import { DomSanitizer } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/dialog';
import * as ɵngcc2 from '@casl/ability';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/router';
import * as ɵngcc5 from '@angular/material/menu';
import * as ɵngcc6 from '@angular/flex-layout/extended';
import * as ɵngcc7 from '@angular/material/button';
import * as ɵngcc8 from '@angular/material/badge';
import * as ɵngcc9 from '@angular/material/chips';
import * as ɵngcc10 from '@angular/material/tooltip';
import * as ɵngcc11 from '@angular/material/button-toggle';
import * as ɵngcc12 from '@angular/material/icon';
import * as ɵngcc13 from '@casl/angular';
import * as ɵngcc14 from '@angular/material/divider';
import * as ɵngcc15 from '@angular/material/card';
import * as ɵngcc16 from '@angular/material/tabs';
import * as ɵngcc17 from '@angular/material/expansion';
import * as ɵngcc18 from '@angular/material/bottom-sheet';
import * as ɵngcc19 from '@angular/material/sidenav';
import * as ɵngcc20 from '@angular/common/http';
import * as ɵngcc21 from '@angular/material/list';
import * as ɵngcc22 from '@angular/material/progress-spinner';
import * as ɵngcc23 from '@angular/material/form-field';
import * as ɵngcc24 from '@angular/material/input';
import * as ɵngcc25 from '@angular/forms';
import * as ɵngcc26 from '@angular/material/select';
import * as ɵngcc27 from '@angular/material/core';
import * as ɵngcc28 from '@angular/material/autocomplete';
import * as ɵngcc29 from '@angular/material/datepicker';
import * as ɵngcc30 from 'ngx-quill';
import * as ɵngcc31 from '@angular/material/checkbox';
import * as ɵngcc32 from '@angular/material/radio';
import * as ɵngcc33 from '@angular/material/slider';
import * as ɵngcc34 from '@angular/material/slide-toggle';
import * as ɵngcc35 from '@angular/cdk/layout';
import * as ɵngcc36 from '@angular/material/paginator';
import * as ɵngcc37 from 'ngx-infinite-scroll';
import * as ɵngcc38 from '@angular/material/grid-list';
import * as ɵngcc39 from '@angular/material/table';
import * as ɵngcc40 from '@angular/material/sort';
import * as ɵngcc41 from 'ng2-tooltip-directive';
import * as ɵngcc42 from '@angular/platform-browser';

function ButtonDeleteConfirmationComponent_h1_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);
} }
function ButtonDeleteConfirmationComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "p");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message);
} }
function ButtonDeleteConfirmationComponent_mx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 6);
    ɵngcc0.ɵɵlistener("onClick", function ButtonDeleteConfirmationComponent_mx_button_3_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.click($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const button_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("form", ctx_r2.data.form)("sourceIdentifier", ctx_r2.data.sourceIdentifier)("sourceIndex", ctx_r2.data.sourceIndex)("widgetArrayIndex", ctx_r2.data.widgetArrayIndex)("button", button_r3)("context", ctx_r2.data.context)("originalData", ctx_r2.data.originalData)("buttonRoute", ctx_r2.data.buttonRoute)("parentHierarchy", ctx_r2.data.parentHierarchy);
} }
function ButtonComponent_span_0_button_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c0 = function (a0, a1, a2, a3) { return { "mx-small-btn": a0, "mx-tiny-btn": a1, "mx-micro-btn": a2, "mx-default-btn": a3 }; };
const _c1 = function (a0) { return { "width": a0 }; };
function ButtonComponent_span_0_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_1_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-menu-button mx-menu-button-", ctx_r3._button.identifier, "");
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction4(8, _c0, ctx_r3._button.size == "small", ctx_r3._button.size == "tiny", ctx_r3._button.size == "micro", ctx_r3._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(13, _c1, "calc(" + ctx_r3._button.width + " - 8px)"));
    ɵngcc0.ɵɵattribute("color", ctx_r3._button.color);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_button_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_2_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-flat-button mx-flat-button-", ctx_r4._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r4._button.color)("disabled", ctx_r4.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c0, ctx_r4._button.size == "small", ctx_r4._button.size == "tiny", ctx_r4._button.size == "micro", ctx_r4._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx_r4._button.width == "" || ctx_r4._button.width == "100%" ? ctx_r4._button.width : "calc(" + ctx_r4._button.width + " - 8px)"))("matBadge", ctx_r4._button.badge ? ctx_r4._button.badge.content : "")("matBadgeColor", ctx_r4._button.badge ? ctx_r4._button.badge.color : "")("matBadgePosition", ctx_r4._button.badge ? ctx_r4._button.badge.position : "")("matBadgeSize", ctx_r4._button.badge ? ctx_r4._button.badge.size : "")("matBadgeHidden", ctx_r4._button.badge ? ctx_r4._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_button_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c2 = function (a0, a1, a2, a3, a4) { return { "mx-small-btn": a0, "mx-tiny-btn": a1, "mx-micro-btn": a2, "mx-default-btn": a3, "mx-button-wt-padding": a4 }; };
function ButtonComponent_span_0_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_3_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-ghost-button mx-ghost-button-", ctx_r5._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r5._button.color)("disabled", ctx_r5.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction5(13, _c2, ctx_r5._button.size == "small", ctx_r5._button.size == "tiny", ctx_r5._button.size == "micro", ctx_r5._button.size == "default", ctx_r5.buttonWithoutPadding == true))("ngStyle", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx_r5._button.width == "" || ctx_r5._button.width == "100%" ? ctx_r5._button.width : "calc(" + ctx_r5._button.width + " - 8px)"))("matBadge", ctx_r5._button.badge ? ctx_r5._button.badge.content : "")("matBadgeColor", ctx_r5._button.badge ? ctx_r5._button.badge.color : "")("matBadgePosition", ctx_r5._button.badge ? ctx_r5._button.badge.position : "")("matBadgeSize", ctx_r5._button.badge ? ctx_r5._button.badge.size : "")("matBadgeHidden", ctx_r5._button.badge ? ctx_r5._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_button_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_4_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_4_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-raised-button mx-raised-button-", ctx_r6._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r6._button.color)("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c0, ctx_r6._button.size == "small", ctx_r6._button.size == "tiny", ctx_r6._button.size == "micro", ctx_r6._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx_r6._button.width == "" || ctx_r6._button.width == "100%" ? ctx_r6._button.width : "calc(" + ctx_r6._button.width + " - 8px)"))("disabled", ctx_r6.isButtonDisabled)("matBadge", ctx_r6._button.badge ? ctx_r6._button.badge.content : "")("matBadgeColor", ctx_r6._button.badge ? ctx_r6._button.badge.color : "")("matBadgePosition", ctx_r6._button.badge ? ctx_r6._button.badge.position : "")("matBadgeSize", ctx_r6._button.badge ? ctx_r6._button.badge.size : "")("matBadgeHidden", ctx_r6._button.badge ? ctx_r6._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_button_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_5_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_5_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-stroked-button mx-stroked-button-", ctx_r7._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r7._button.color)("disabled", ctx_r7.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c0, ctx_r7._button.size == "small", ctx_r7._button.size == "tiny", ctx_r7._button.size == "micro", ctx_r7._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx_r7._button.width == "" || ctx_r7._button.width == "100%" ? ctx_r7._button.width : "calc(" + ctx_r7._button.width + " - 8px)"))("matBadge", ctx_r7._button.badge ? ctx_r7._button.badge.content : "")("matBadgeColor", ctx_r7._button.badge ? ctx_r7._button.badge.color : "")("matBadgePosition", ctx_r7._button.badge ? ctx_r7._button.badge.position : "")("matBadgeSize", ctx_r7._button.badge ? ctx_r7._button.badge.size : "")("matBadgeHidden", ctx_r7._button.badge ? ctx_r7._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_button_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r28 = ɵngcc0.ɵɵnextContext(2); return ctx_r28.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_6_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-fab-button mx-fab-button-", ctx_r8._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r8._button.color)("disabled", ctx_r8.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c0, ctx_r8._button.size == "small", ctx_r8._button.size == "tiny", ctx_r8._button.size == "micro", ctx_r8._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx_r8._button.width == "" || ctx_r8._button.width == "100%" ? ctx_r8._button.width : "calc(" + ctx_r8._button.width + " - 8px)"))("matBadge", ctx_r8._button.badge ? ctx_r8._button.badge.content : "")("matBadgeColor", ctx_r8._button.badge ? ctx_r8._button.badge.color : "")("matBadgePosition", ctx_r8._button.badge ? ctx_r8._button.badge.position : "")("matBadgeSize", ctx_r8._button.badge ? ctx_r8._button.badge.size : "")("matBadgeHidden", ctx_r8._button.badge ? ctx_r8._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_mat_chip_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_mat_chip_7_Template(rf, ctx) { if (rf & 1) {
    const _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 19);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_span_0_mat_chip_7_Template_mat_chip_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_mat_chip_7_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-chip-button mx-chip-button-", ctx_r9._button.identifier, "");
    ɵngcc0.ɵɵproperty("selected", ctx_r9.state)("ngClass", ɵngcc0.ɵɵpureFunction4(14, _c0, ctx_r9._button.size == "small", ctx_r9._button.size == "tiny", ctx_r9._button.size == "micro", ctx_r9._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx_r9._button.width == "" || ctx_r9._button.width == "100%" ? ctx_r9._button.width : "calc(" + ctx_r9._button.width + " - 8px)"))("color", ctx_r9._button.color)("disabled", ctx_r9.isButtonDisabled)("matBadge", ctx_r9._button.badge ? ctx_r9._button.badge.content : "")("matBadgeColor", ctx_r9._button.badge ? ctx_r9._button.badge.color : "")("matBadgePosition", ctx_r9._button.badge ? ctx_r9._button.badge.position : "")("matBadgeSize", ctx_r9._button.badge ? ctx_r9._button.badge.size : "")("matBadgeHidden", ctx_r9._button.badge ? ctx_r9._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_a_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ButtonComponent_span_0_a_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 20);
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_a_8_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-link mx-link-", ctx_r10._button.identifier, "");
    ɵngcc0.ɵɵproperty("color", ctx_r10._button.color)("disabled", ctx_r10.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction5(15, _c2, ctx_r10._button.size == "small", ctx_r10._button.size == "tiny", ctx_r10._button.size == "micro", ctx_r10._button.size == "default", ctx_r10.buttonWithoutPadding == true))("ngStyle", ɵngcc0.ɵɵpureFunction1(21, _c1, ctx_r10._button.width == "" || ctx_r10._button.width == "100%" ? ctx_r10._button.width : "calc(" + ctx_r10._button.width + " - 8px)"))("routerLink", ctx_r10.routerLink)("matTooltip", ctx_r10._button.label)("matBadge", ctx_r10._button.badge ? ctx_r10._button.badge.content : "")("matBadgeColor", ctx_r10._button.badge ? ctx_r10._button.badge.color : "")("matBadgePosition", ctx_r10._button.badge ? ctx_r10._button.badge.position : "")("matBadgeSize", ctx_r10._button.badge ? ctx_r10._button.badge.size : "")("matBadgeHidden", ctx_r10._button.badge ? ctx_r10._button.badge.hide : false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_mat_button_toggle_9_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c3 = function (a0, a1, a2, a3) { return { "mx-small-btn": a0, "mx-tiny-btn": a1, "mx-micro-btn": a2, "mx-toggle-default-btn": a3 }; };
function ButtonComponent_span_0_mat_button_toggle_9_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-button-toggle", 21);
    ɵngcc0.ɵɵlistener("change", function ButtonComponent_span_0_mat_button_toggle_9_Template_mat_button_toggle_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.click($event); });
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_mat_button_toggle_9_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-toggle-button mx-button-", ctx_r11._button.identifier, "");
    ɵngcc0.ɵɵproperty("value", ctx_r11._button.identifier)("disabled", ctx_r11.isButtonDisabled)("ngClass", ɵngcc0.ɵɵpureFunction4(14, _c3, ctx_r11._button.size == "small", ctx_r11._button.size == "tiny", ctx_r11._button.size == "micro", ctx_r11._button.size == "default"))("ngStyle", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx_r11._button.width == "" || ctx_r11._button.width == "100%" ? ctx_r11._button.width : "calc(" + ctx_r11._button.width + " - 8px)"))("matBadge", ctx_r11._button.badge ? ctx_r11._button.badge.content : "")("matBadgeColor", ctx_r11._button.badge ? ctx_r11._button.badge.color : "")("matBadgePosition", ctx_r11._button.badge ? ctx_r11._button.badge.position : "")("matBadgeSize", ctx_r11._button.badge ? ctx_r11._button.badge.size : "")("matBadgeHidden", ctx_r11._button.badge ? ctx_r11._button.badge.hide : false);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r11.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function ButtonComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_span_0_button_1_Template, 2, 15, "button", 3);
    ɵngcc0.ɵɵtemplate(2, ButtonComponent_span_0_button_2_Template, 2, 20, "button", 4);
    ɵngcc0.ɵɵtemplate(3, ButtonComponent_span_0_button_3_Template, 2, 21, "button", 5);
    ɵngcc0.ɵɵtemplate(4, ButtonComponent_span_0_button_4_Template, 2, 20, "button", 6);
    ɵngcc0.ɵɵtemplate(5, ButtonComponent_span_0_button_5_Template, 2, 20, "button", 7);
    ɵngcc0.ɵɵtemplate(6, ButtonComponent_span_0_button_6_Template, 2, 20, "button", 8);
    ɵngcc0.ɵɵtemplate(7, ButtonComponent_span_0_mat_chip_7_Template, 2, 21, "mat-chip", 9);
    ɵngcc0.ɵɵtemplate(8, ButtonComponent_span_0_a_8_Template, 2, 23, "a", 10);
    ɵngcc0.ɵɵtemplate(9, ButtonComponent_span_0_mat_button_toggle_9_Template, 2, 21, "mat-button-toggle", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r0._button.width);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isMenuButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isFlatButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isGhostButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isRaisedButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isStrokedButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isFabButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isChip);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isLink);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isGroupButton);
} }
const _c4 = function (a0, a1, a2) { return { "mx-small-icon": a0, "mx-tiny-icon": a1, "mx-micro-icon": a2 }; };
function ButtonComponent_ng_template_2_mat_icon_0_Template(rf, ctx) { if (rf & 1) {
    const _r43 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 26);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_ng_template_2_mat_icon_0_Template_mat_icon_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r43); const ctx_r42 = ɵngcc0.ɵɵnextContext(2); return ctx_r42.iconClick($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r37 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-button-icon mx-button-icon-", ctx_r37._button.identifier, "");
    ɵngcc0.ɵɵstyleProp("padding-right", !ctx_r37.isDisplayOnlyIcon ? 5 : 0, "px");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(8, _c4, ctx_r37._button.size == "small", ctx_r37._button.size == "tiny", ctx_r37._button.size == "micro"));
    ɵngcc0.ɵɵattribute("aria-label", ctx_r37.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r37._button.icon, " ");
} }
function ButtonComponent_ng_template_2_br_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "br");
} }
function ButtonComponent_ng_template_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-button-label mx-button-label-", ctx_r39._button.identifier, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r39.label);
} }
function ButtonComponent_ng_template_2_br_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "br");
} }
function ButtonComponent_ng_template_2_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    const _r45 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 26);
    ɵngcc0.ɵɵlistener("click", function ButtonComponent_ng_template_2_mat_icon_4_Template_mat_icon_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r45); const ctx_r44 = ɵngcc0.ɵɵnextContext(2); return ctx_r44.iconClick($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r41 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-button-icon mx-button-icon-", ctx_r41._button.identifier, "");
    ɵngcc0.ɵɵstyleProp("padding-left", !ctx_r41.isDisplayOnlyIcon ? 5 : 0, "px");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(8, _c4, ctx_r41._button.size == "small", ctx_r41._button.size == "tiny", ctx_r41._button.size == "micro"));
    ɵngcc0.ɵɵattribute("aria-label", ctx_r41.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r41._button.icon, " ");
} }
function ButtonComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ButtonComponent_ng_template_2_mat_icon_0_Template, 2, 12, "mat-icon", 22);
    ɵngcc0.ɵɵtemplate(1, ButtonComponent_ng_template_2_br_1_Template, 1, 0, "br", 23);
    ɵngcc0.ɵɵtemplate(2, ButtonComponent_ng_template_2_span_2_Template, 2, 4, "span", 24);
    ɵngcc0.ɵɵtemplate(3, ButtonComponent_ng_template_2_br_3_Template, 1, 0, "br", 23);
    ɵngcc0.ɵɵtemplate(4, ButtonComponent_ng_template_2_mat_icon_4_Template, 2, 12, "mat-icon", 25);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.hasIconDisplay && (ctx_r2._button.iconPosition == "LEFT" || ctx_r2._button.iconPosition == "TOP"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.hasIconDisplay && ctx_r2._button.iconPosition == "TOP" && !ctx_r2.isDisplayOnlyIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.isDisplayOnlyIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.hasIconDisplay && ctx_r2._button.iconPosition == "BOTTOM" && !ctx_r2.isDisplayOnlyIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.hasIconDisplay && (ctx_r2._button.iconPosition == "RIGHT" || ctx_r2._button.iconPosition == "BOTTOM"));
} }
const _c5 = function (a0) { return { "mx-button": a0 }; };
function ButtonGroupComponent_span_0_mat_chip_list_1_mx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 8);
    ɵngcc0.ɵɵlistener("onClick", function ButtonGroupComponent_span_0_mat_chip_list_1_mx_button_1_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(3); return ctx_r9.click($event); })("onIconClick", function ButtonGroupComponent_span_0_mat_chip_list_1_mx_button_1_Template_mx_button_onIconClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(3); return ctx_r11.iconClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const button_r8 = ctx.$implicit;
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    const buttonList_r1 = ctx_r12.$implicit;
    const bIndex_r2 = ctx_r12.index;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", "calc(" + buttonList_r1.buttonWidth + "% - 8px)");
    ɵngcc0.ɵɵproperty("form", ctx_r7.form)("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c5, bIndex_r2 + 1 != buttonList_r1.length))("formDisplayMode", ctx_r7.formDisplayMode)("sourceIdentifier", ctx_r7.sourceIdentifier)("sourceIndex", ctx_r7.sourceIndex)("widgetArrayIndex", ctx_r7.widgetArrayIndex)("button", button_r8)("context", ctx_r7.context)("originalData", ctx_r7.originalData)("buttonRoute", ctx_r7.buttonRoute)("parentHierarchy", ctx_r7.parentHierarchy)("disabled", ctx_r7.disabled);
} }
function ButtonGroupComponent_span_0_mat_chip_list_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-chip-list", 6);
    ɵngcc0.ɵɵtemplate(1, ButtonGroupComponent_span_0_mat_chip_list_1_mx_button_1_Template, 1, 16, "mx-button", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext();
    const buttonList_r1 = ctx_r13.$implicit;
    const bIndex_r2 = ctx_r13.index;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-chip-group mx-chip-group-", buttonList_r1.groupIdentifier, "");
    ɵngcc0.ɵɵstyleProp("width", buttonList_r1.width, "%");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c5, bIndex_r2 < ctx_r3.buttonLists.length - 1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", buttonList_r1.groupButtons);
} }
function ButtonGroupComponent_span_0_mat_button_toggle_group_2_mx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 12);
    ɵngcc0.ɵɵlistener("onClick", function ButtonGroupComponent_span_0_mat_button_toggle_group_2_mx_button_2_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(3); return ctx_r17.click($event); })("onIconClick", function ButtonGroupComponent_span_0_mat_button_toggle_group_2_mx_button_2_Template_mx_button_onIconClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r19 = ɵngcc0.ɵɵnextContext(3); return ctx_r19.iconClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const button_r16 = ctx.$implicit;
    const buttonList_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r15 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", buttonList_r1.buttonWidth, "%");
    ɵngcc0.ɵɵproperty("form", ctx_r15.form)("formDisplayMode", ctx_r15.formDisplayMode)("sourceIdentifier", ctx_r15.sourceIdentifier)("sourceIndex", ctx_r15.sourceIndex)("widgetArrayIndex", ctx_r15.widgetArrayIndex)("button", button_r16)("context", ctx_r15.context)("originalData", ctx_r15.originalData)("buttonRoute", ctx_r15.buttonRoute)("parentHierarchy", ctx_r15.parentHierarchy)("disabled", ctx_r15.disabled);
} }
function ButtonGroupComponent_span_0_mat_button_toggle_group_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-button-toggle-group", 9, 10);
    ɵngcc0.ɵɵtemplate(2, ButtonGroupComponent_span_0_mat_button_toggle_group_2_mx_button_2_Template, 1, 13, "mx-button", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext();
    const buttonList_r1 = ctx_r21.$implicit;
    const bIndex_r2 = ctx_r21.index;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-toggle-group mx-toggle-group-", buttonList_r1.groupIdentifier, "");
    ɵngcc0.ɵɵstyleProp("width", buttonList_r1.width, "%");
    ɵngcc0.ɵɵproperty("name", buttonList_r1.groupIdentifier)("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c5, bIndex_r2 < ctx_r4.buttonLists.length - 1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", buttonList_r1.groupButtons);
} }
function ButtonGroupComponent_span_0_span_3_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const buttonList_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵclassMapInterpolate1("mx-button-label mx-button-label-", buttonList_r1.groupIdentifier, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(buttonList_r1.groupLabel);
} }
function ButtonGroupComponent_span_0_span_3_mx_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 12);
    ɵngcc0.ɵɵlistener("onClick", function ButtonGroupComponent_span_0_span_3_mx_button_7_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(3); return ctx_r27.click($event); })("onIconClick", function ButtonGroupComponent_span_0_span_3_mx_button_7_Template_mx_button_onIconClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(3); return ctx_r29.iconClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const button_r26 = ctx.$implicit;
    const ctx_r24 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("form", ctx_r24.form)("formDisplayMode", ctx_r24.formDisplayMode)("sourceIdentifier", ctx_r24.sourceIdentifier)("sourceIndex", ctx_r24.sourceIndex)("widgetArrayIndex", ctx_r24.widgetArrayIndex)("button", button_r26)("context", ctx_r24.context)("originalData", ctx_r24.originalData)("buttonRoute", ctx_r24.buttonRoute)("parentHierarchy", ctx_r24.parentHierarchy)("disabled", ctx_r24.disabled);
} }
const _c6 = function (a0, a1, a2, a3) { return { "mx-small-icon": a0, "mx-tiny-icon": a1, "mx-micro-icon": a2, "mx-default-icon": a3 }; };
function ButtonGroupComponent_span_0_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "button", 14);
    ɵngcc0.ɵɵtemplate(2, ButtonGroupComponent_span_0_span_3_span_2_Template, 2, 4, "span", 15);
    ɵngcc0.ɵɵelementStart(3, "mat-icon", 16);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "mat-menu", null, 17);
    ɵngcc0.ɵɵtemplate(7, ButtonGroupComponent_span_0_span_3_mx_button_7_Template, 1, 11, "mx-button", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r23 = ɵngcc0.ɵɵreference(6);
    const ctx_r30 = ɵngcc0.ɵɵnextContext();
    const buttonList_r1 = ctx_r30.$implicit;
    const bIndex_r2 = ctx_r30.index;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-hover-group mx-hover-group-", buttonList_r1.groupIdentifier, "");
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(20, _c5, bIndex_r2 < ctx_r5.buttonLists.length - 1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", buttonList_r1.width, "%");
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r23)("ngClass", ɵngcc0.ɵɵpureFunction4(22, _c0, buttonList_r1.hoverButtons[0].size == "small", buttonList_r1.hoverButtons[0].size == "tiny", buttonList_r1.hoverButtons[0].size == "micro", buttonList_r1.hoverButtons[0].size == "default"))("matBadge", buttonList_r1.badge ? buttonList_r1.badge.content : "")("matBadgeColor", buttonList_r1.badge ? buttonList_r1.badge.color : "")("matBadgePosition", buttonList_r1.badge ? buttonList_r1.badge.position : "")("matBadgeSize", buttonList_r1.badge ? buttonList_r1.badge.size : "")("matBadgeHidden", buttonList_r1.badge ? buttonList_r1.badge.hide : false);
    ɵngcc0.ɵɵattribute("aria-label", buttonList_r1.groupLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", buttonList_r1.groupLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(27, _c6, buttonList_r1.hoverButtons[0].size == "small", buttonList_r1.hoverButtons[0].size == "tiny", buttonList_r1.hoverButtons[0].size == "micro", buttonList_r1.hoverButtons[0].size == "default"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(buttonList_r1.groupIcon);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", buttonList_r1.hoverButtons);
} }
function ButtonGroupComponent_span_0_span_4_mx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r37 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 25);
    ɵngcc0.ɵɵlistener("onClick", function ButtonGroupComponent_span_0_span_4_mx_button_1_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(3); return ctx_r36.click($event); })("onIconClick", function ButtonGroupComponent_span_0_span_4_mx_button_1_Template_mx_button_onIconClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r38 = ɵngcc0.ɵɵnextContext(3); return ctx_r38.iconClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const button_r34 = ctx.$implicit;
    const index_r35 = ctx.index;
    const buttonList_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r31 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("form", ctx_r31.form)("formDisplayMode", ctx_r31.formDisplayMode)("sourceIdentifier", ctx_r31.sourceIdentifier)("sourceIndex", ctx_r31.sourceIndex)("widgetArrayIndex", ctx_r31.widgetArrayIndex)("button", button_r34)("context", ctx_r31.context)("originalData", ctx_r31.originalData)("buttonRoute", ctx_r31.buttonRoute)("parentHierarchy", ctx_r31.parentHierarchy)("disabled", ctx_r31.disabled)("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c5, index_r35 + 1 != buttonList_r1.length))("fxShow", button_r34.showOnDesktop)("fxShow.xs", button_r34.showOnMobile)("fxShow.sm", button_r34.showOnTablet);
} }
function ButtonGroupComponent_span_0_span_4_ng_container_7_mat_divider_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function ButtonGroupComponent_span_0_span_4_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    const _r45 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 26);
    ɵngcc0.ɵɵelementStart(2, "mx-button", 27);
    ɵngcc0.ɵɵlistener("onClick", function ButtonGroupComponent_span_0_span_4_ng_container_7_Template_mx_button_onClick_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r45); const ctx_r44 = ɵngcc0.ɵɵnextContext(3); return ctx_r44.click($event); })("onIconClick", function ButtonGroupComponent_span_0_span_4_ng_container_7_Template_mx_button_onIconClick_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r45); const ctx_r46 = ɵngcc0.ɵɵnextContext(3); return ctx_r46.iconClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ButtonGroupComponent_span_0_span_4_ng_container_7_mat_divider_3_Template, 1, 0, "mat-divider", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const button_r40 = ctx.$implicit;
    const last_r42 = ctx.last;
    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("fxShow", !button_r40.showOnDesktop)("fxShow.sm", !button_r40.showOnTablet)("fxShow.xs", !button_r40.showOnMobile);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("form", ctx_r33.form)("formDisplayMode", ctx_r33.formDisplayMode)("sourceIdentifier", ctx_r33.sourceIdentifier)("sourceIndex", ctx_r33.sourceIndex)("widgetArrayIndex", ctx_r33.widgetArrayIndex)("button", button_r40)("context", ctx_r33.context)("originalData", ctx_r33.originalData)("buttonRoute", ctx_r33.buttonRoute)("disabled", ctx_r33.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !last_r42);
} }
function ButtonGroupComponent_span_0_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵtemplate(1, ButtonGroupComponent_span_0_span_4_mx_button_1_Template, 1, 17, "mx-button", 20);
    ɵngcc0.ɵɵelementStart(2, "button", 21);
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "mat-menu", 22, 23);
    ɵngcc0.ɵɵtemplate(7, ButtonGroupComponent_span_0_span_4_ng_container_7_Template, 4, 14, "ng-container", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r32 = ɵngcc0.ɵɵreference(6);
    const ctx_r47 = ɵngcc0.ɵɵnextContext();
    const bIndex_r2 = ctx_r47.index;
    const buttonList_r1 = ctx_r47.$implicit;
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c5, bIndex_r2 < ctx_r6.buttonLists.length - 1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", buttonList_r1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r32)("fxShow", !ctx_r6.displayDesktopDD)("fxShow.sm", !ctx_r6.displayTabletDD)("fxShow.xs", !ctx_r6.displayMobileDD);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r6.hoverButtonLists[bIndex_r2]);
} }
function ButtonGroupComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵtemplate(1, ButtonGroupComponent_span_0_mat_chip_list_1_Template, 2, 9, "mat-chip-list", 2);
    ɵngcc0.ɵɵtemplate(2, ButtonGroupComponent_span_0_mat_button_toggle_group_2_Template, 3, 10, "mat-button-toggle-group", 3);
    ɵngcc0.ɵɵtemplate(3, ButtonGroupComponent_span_0_span_3_Template, 8, 32, "span", 4);
    ɵngcc0.ɵɵtemplate(4, ButtonGroupComponent_span_0_span_4_Template, 8, 9, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const bIndex_r2 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.buttonListsType[bIndex_r2] == "ChipGroup");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.buttonListsType[bIndex_r2] == "ButtonGroup");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.buttonListsType[bIndex_r2] == "ButtonHover");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.buttonListsType[bIndex_r2] == "ButtonArray");
} }
function CrudFormComponent_div_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r8.header.description.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.header.description.icon);
} }
function CrudFormComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelementStart(2, "div", 10);
    ɵngcc0.ɵɵelementStart(3, "div", 11);
    ɵngcc0.ɵɵtemplate(4, CrudFormComponent_div_4_mat_icon_4_Template, 2, 2, "mat-icon", 12);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r0.header.description.bgColor)("color", ctx_r0.header.description.textColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.header.description.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.header.description.text);
} }
function CrudFormComponent_span_5_mat_tab_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c7 = function (a0, a1, a2, a3) { return { tab: a0, record: a1, formRows: a2, tIndex: a3 }; };
function CrudFormComponent_span_5_mat_tab_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 16);
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_span_5_mat_tab_2_ng_container_1_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r10 = ctx.$implicit;
    const tIndex_r11 = ctx.index;
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    const _r4 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("label", tab_r10.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction4(3, _c7, tab_r10, ctx_r9.record, ctx_r9.rowsInTab[tIndex_r11], tIndex_r11));
} }
function CrudFormComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-tab-group", 14);
    ɵngcc0.ɵɵlistener("selectedTabChange", function CrudFormComponent_span_5_Template_mat_tab_group_selectedTabChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onTabChange($event); });
    ɵngcc0.ɵɵtemplate(2, CrudFormComponent_span_5_mat_tab_2_Template, 2, 8, "mat-tab", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.filteredTabs);
} }
function CrudFormComponent_span_6_mat_expansion_panel_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudFormComponent_span_6_mat_expansion_panel_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel", 19);
    ɵngcc0.ɵɵlistener("opened", function CrudFormComponent_span_6_mat_expansion_panel_2_Template_mat_expansion_panel_opened_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const tIndex_r17 = ctx.index; const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.onAccordianChange(tIndex_r17); });
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵelementStart(2, "mat-panel-title");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, CrudFormComponent_span_6_mat_expansion_panel_2_ng_container_4_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r16 = ctx.$implicit;
    const tIndex_r17 = ctx.index;
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    const _r4 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("expanded", tIndex_r17 === 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", tab_r16.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction4(4, _c7, tab_r16, ctx_r15.record, ctx_r15.rowsInTab[tIndex_r17], tIndex_r17));
} }
function CrudFormComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-accordion");
    ɵngcc0.ɵɵtemplate(2, CrudFormComponent_span_6_mat_expansion_panel_2_Template, 5, 9, "mat-expansion-panel", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.filteredTabs);
} }
function CrudFormComponent_span_7_span_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudFormComponent_span_7_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_span_7_span_1_ng_container_1_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r22 = ctx.$implicit;
    const tIndex_r23 = ctx.index;
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    const _r4 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction4(2, _c7, tab_r22, ctx_r21.record, ctx_r21.rowsInTab[tIndex_r23], tIndex_r23));
} }
function CrudFormComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_span_7_span_1_Template, 2, 7, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.filteredTabs);
} }
function CrudFormComponent_ng_template_8_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r25 = ɵngcc0.ɵɵnextContext(2).tab;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", tab_r25.description.text, " ");
} }
function CrudFormComponent_ng_template_8_div_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_span_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c8 = function (a0, a1, a2, a3, a5, a6) { return { cell: a0, supportingRecord: a1, record: a2, configData: a3, multiple: true, cellArrayIndex: a5, tIndex: a6 }; };
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_span_1_ng_container_1_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cellArrayIndex_r47 = ctx.index;
    const cell_r37 = ɵngcc0.ɵɵnextContext(4).$implicit;
    const ctx_r50 = ɵngcc0.ɵɵnextContext(3);
    const record_r26 = ctx_r50.record;
    const tIndex_r28 = ctx_r50.tIndex;
    const ctx_r45 = ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction6(2, _c8, cell_r37, record_r26, record_r26[cell_r37.widget.identifier][cellArrayIndex_r47], ctx_r45.configData.record[cell_r37.widget.identifier][cellArrayIndex_r47], cellArrayIndex_r47, tIndex_r28));
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_span_1_Template, 2, 9, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r37 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const record_r26 = ɵngcc0.ɵɵnextContext(3).record;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", record_r26[cell_r37.widget.identifier]);
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_ng_template_8_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c9 = function () { return {}; };
const _c10 = function (a0, a1, a2, a3, a6) { return { cell: a0, supportingRecord: a1, record: a2, configData: a3, multiple: true, cellArrayIndex: 0, tIndex: a6 }; };
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_ng_template_8_ng_container_0_Template, 1, 0, "ng-container", 17);
} if (rf & 2) {
    const cell_r37 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const tIndex_r28 = ɵngcc0.ɵɵnextContext(3).tIndex;
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction5(5, _c10, cell_r37, ɵngcc0.ɵɵpureFunction0(2, _c9), ɵngcc0.ɵɵpureFunction0(3, _c9), ɵngcc0.ɵɵpureFunction0(4, _c9), tIndex_r28));
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_Template(rf, ctx) { if (rf & 1) {
    const _r57 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card", 32);
    ɵngcc0.ɵɵelementStart(1, "mat-card-header", 1);
    ɵngcc0.ɵɵelementStart(2, "mat-card-title");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "mx-button", 33);
    ɵngcc0.ɵɵlistener("onClick", function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_Template_mx_button_onClick_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r57); const ctx_r56 = ɵngcc0.ɵɵnextContext(6); ctx_r56.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "mat-divider", 34);
    ɵngcc0.ɵɵelementStart(6, "mat-card-content", 35);
    ɵngcc0.ɵɵtemplate(7, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_span_7_Template, 2, 1, "span", 29);
    ɵngcc0.ɵɵtemplate(8, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_ng_template_8_Template, 1, 11, "ng-template", null, 36, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r43 = ɵngcc0.ɵɵreference(9);
    const cell_r37 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const rIndex_r35 = ɵngcc0.ɵɵnextContext().index;
    const record_r26 = ɵngcc0.ɵɵnextContext(2).record;
    const ctx_r41 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(cell_r37.multiple.sectionTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("sourceIdentifier", cell_r37.widget.identifier)("sourceIndex", rIndex_r35)("context", record_r26)("originalData", ctx_r41.configData.record[cell_r37.widget.identifier])("button", ctx_r41.addWidget);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", record_r26[cell_r37.widget.identifier] && record_r26[cell_r37.widget.identifier].length > 0)("ngIfElse", _r43);
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_mat_card_1_Template, 10, 8, "mat-card", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const record_r26 = ɵngcc0.ɵɵnextContext(3).record;
    const ctx_r38 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r38.displayWidget(cell_r37, record_r26, record_r26[cell_r37.widget.identifier] && record_r26[cell_r37.widget.identifier][0] ? record_r26[cell_r37.widget.identifier][0] : ɵngcc0.ɵɵpureFunction0(1, _c9)));
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c11 = function (a0, a1, a2, a3, a6) { return { cell: a0, supportingRecord: a1, record: a2, configData: a3, multiple: false, cellArrayIndex: null, tIndex: a6 }; };
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_span_0_ng_container_1_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r37 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r66 = ɵngcc0.ɵɵnextContext(3);
    const record_r26 = ctx_r66.record;
    const tIndex_r28 = ctx_r66.tIndex;
    const ctx_r63 = ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction5(2, _c11, cell_r37, record_r26, record_r26[cell_r37.widget.identifier], ctx_r63.configData.record[cell_r37.widget.identifier], tIndex_r28));
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_span_0_Template, 2, 8, "span", 5);
} if (rf & 2) {
    const cell_r37 = ɵngcc0.ɵɵnextContext().$implicit;
    const record_r26 = ɵngcc0.ɵɵnextContext(3).record;
    const ctx_r40 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r40.displayWidget(cell_r37, record_r26, record_r26[cell_r37.widget.identifier]));
} }
function CrudFormComponent_ng_template_8_div_0_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_span_1_Template, 2, 2, "span", 29);
    ɵngcc0.ɵɵtemplate(2, CrudFormComponent_ng_template_8_div_0_div_3_div_1_ng_template_2_Template, 1, 1, "ng-template", null, 30, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r37 = ctx.$implicit;
    const _r39 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", cell_r37.colSpan * 6, " mx-crud-form");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r37.multiple && cell_r37.multiple.addMore)("ngIfElse", _r39);
} }
function CrudFormComponent_ng_template_8_div_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 27);
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_3_div_1_Template, 4, 5, "div", 28);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r34 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r34);
} }
function CrudFormComponent_ng_template_8_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_8_div_0_div_1_Template, 3, 1, "div", 23);
    ɵngcc0.ɵɵtemplate(2, CrudFormComponent_ng_template_8_div_0_div_2_Template, 2, 0, "div", 24);
    ɵngcc0.ɵɵtemplate(3, CrudFormComponent_ng_template_8_div_0_div_3_Template, 2, 1, "div", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r69 = ɵngcc0.ɵɵnextContext();
    const tab_r25 = ctx_r69.tab;
    const formRows_r27 = ctx_r69.formRows;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", tab_r25.description && tab_r25.description.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", tab_r25.customPlugin && tab_r25.customPlugin.component);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", formRows_r27);
} }
function CrudFormComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudFormComponent_ng_template_8_div_0_Template, 4, 3, "div", 21);
    ɵngcc0.ɵɵpipe(1, "can");
} if (rf & 2) {
    const tab_r25 = ctx.tab;
    ɵngcc0.ɵɵproperty("ngIf", tab_r25 && (tab_r25.permission == null || tab_r25.permission && ɵngcc0.ɵɵpipeBind2(1, 1, tab_r25.permission["subject"], tab_r25.permission["action"])));
} }
function CrudFormComponent_ng_template_10_mx_form_0_Template(rf, ctx) { if (rf & 1) {
    const _r81 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-form", 39);
    ɵngcc0.ɵɵlistener("onFieldChange", function CrudFormComponent_ng_template_10_mx_form_0_Template_mx_form_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r80 = ɵngcc0.ɵɵnextContext(2); return ctx_r80.fieldChange($event); })("onFormChange", function CrudFormComponent_ng_template_10_mx_form_0_Template_mx_form_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r82 = ɵngcc0.ɵɵnextContext(2); return ctx_r82.formChange($event); })("onButtonClick", function CrudFormComponent_ng_template_10_mx_form_0_Template_mx_form_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r83 = ɵngcc0.ɵɵnextContext(2); return ctx_r83.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r84 = ɵngcc0.ɵɵnextContext();
    const cell_r70 = ctx_r84.cell;
    const tIndex_r76 = ctx_r84.tIndex;
    const cellArrayIndex_r75 = ctx_r84.cellArrayIndex;
    const record_r72 = ctx_r84.record;
    const configData_r73 = ctx_r84.configData;
    const ctx_r77 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formConfig", cell_r70.widget)("sourceIndex", tIndex_r76)("widgetArrayIndex", cellArrayIndex_r75)("record", record_r72)("originalData", configData_r73)("keyMap", ctx_r77.keyMap)("reset", ctx_r77.reset);
} }
function CrudFormComponent_ng_template_10_mx_static_list_1_Template(rf, ctx) { if (rf & 1) {
    const _r86 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-static-list", 40);
    ɵngcc0.ɵɵlistener("onFormChange", function CrudFormComponent_ng_template_10_mx_static_list_1_Template_mx_static_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r85 = ɵngcc0.ɵɵnextContext(2); return ctx_r85.formChange($event); })("onFieldChange", function CrudFormComponent_ng_template_10_mx_static_list_1_Template_mx_static_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r87 = ɵngcc0.ɵɵnextContext(2); return ctx_r87.fieldChange($event); })("onButtonClick", function CrudFormComponent_ng_template_10_mx_static_list_1_Template_mx_static_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r88 = ɵngcc0.ɵɵnextContext(2); return ctx_r88.buttonClick($event); })("onPageChange", function CrudFormComponent_ng_template_10_mx_static_list_1_Template_mx_static_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r89 = ɵngcc0.ɵɵnextContext(2); return ctx_r89.onPage($event); })("onSortChange", function CrudFormComponent_ng_template_10_mx_static_list_1_Template_mx_static_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r90 = ɵngcc0.ɵɵnextContext(2); return ctx_r90.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r91 = ɵngcc0.ɵɵnextContext();
    const cell_r70 = ctx_r91.cell;
    const tIndex_r76 = ctx_r91.tIndex;
    const cellArrayIndex_r75 = ctx_r91.cellArrayIndex;
    const record_r72 = ctx_r91.record;
    const configData_r73 = ctx_r91.configData;
    const ctx_r78 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("listConfig", cell_r70.widget)("sourceIdentifier", ctx_r78.identifier)("sourceIndex", tIndex_r76)("widgetArrayIndex", cellArrayIndex_r75)("record", record_r72)("originalData", configData_r73)("keyMap", ctx_r78.keyMap);
} }
function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template(rf, ctx) { if (rf & 1) {
    const _r93 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-dynamic-list", 40);
    ɵngcc0.ɵɵlistener("onFormChange", function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template_mx_dynamic_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r92 = ɵngcc0.ɵɵnextContext(2); return ctx_r92.formChange($event); })("onFieldChange", function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template_mx_dynamic_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r94 = ɵngcc0.ɵɵnextContext(2); return ctx_r94.fieldChange($event); })("onButtonClick", function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template_mx_dynamic_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r95 = ɵngcc0.ɵɵnextContext(2); return ctx_r95.buttonClick($event); })("onPageChange", function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template_mx_dynamic_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r96 = ɵngcc0.ɵɵnextContext(2); return ctx_r96.onPage($event); })("onSortChange", function CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template_mx_dynamic_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r93); const ctx_r97 = ɵngcc0.ɵɵnextContext(2); return ctx_r97.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r98 = ɵngcc0.ɵɵnextContext();
    const cell_r70 = ctx_r98.cell;
    const tIndex_r76 = ctx_r98.tIndex;
    const cellArrayIndex_r75 = ctx_r98.cellArrayIndex;
    const record_r72 = ctx_r98.record;
    const configData_r73 = ctx_r98.configData;
    const ctx_r79 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("listConfig", cell_r70.widget)("sourceIdentifier", ctx_r79.identifier)("sourceIndex", tIndex_r76)("widgetArrayIndex", cellArrayIndex_r75)("record", record_r72)("originalData", configData_r73)("keyMap", ctx_r79.keyMap);
} }
function CrudFormComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudFormComponent_ng_template_10_mx_form_0_Template, 1, 7, "mx-form", 37);
    ɵngcc0.ɵɵtemplate(1, CrudFormComponent_ng_template_10_mx_static_list_1_Template, 1, 7, "mx-static-list", 38);
    ɵngcc0.ɵɵtemplate(2, CrudFormComponent_ng_template_10_mx_dynamic_list_2_Template, 1, 7, "mx-dynamic-list", 38);
} if (rf & 2) {
    const cell_r70 = ctx.cell;
    ɵngcc0.ɵɵproperty("ngIf", cell_r70.widgetType == "FORM");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r70.widgetType == "LIST" && cell_r70.widget.listType == "STATIC");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r70.widgetType == "LIST" && cell_r70.widget.listType == "DYNAMIC");
} }
const _c12 = ["sidenav"];
function CrudListComponent_mat_card_0_div_3_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r15.header.description.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r15.header.description.icon);
} }
const _c13 = function (a0, a1) { return { "mx-crud-header-desc-without-bg": a0, "mx-crud-header-desc-with-bg": a1 }; };
function CrudListComponent_mat_card_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelementStart(2, "div", 14);
    ɵngcc0.ɵɵelementStart(3, "div", 17);
    ɵngcc0.ɵɵtemplate(4, CrudListComponent_mat_card_0_div_3_mat_icon_4_Template, 2, 2, "mat-icon", 18);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("margin", ctx_r9.listConfig && ctx_r9.listConfig.style && ctx_r9.listConfig.style.hideCard ? "0px 16px" : "auto");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r9.header.description.bgColor)("color", ctx_r9.header.description.textColor);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c13, !ctx_r9.header.description.bgColor, ctx_r9.header.description.bgColor));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.header.description.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r9.header.description.text);
} }
function CrudListComponent_mat_card_0_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "span", 20);
    ɵngcc0.ɵɵelementStart(2, "mx-button-group", 21);
    ɵngcc0.ɵɵlistener("onClick", function CrudListComponent_mat_card_0_div_6_Template_mx_button_group_onClick_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("buttons", ctx_r10.quickLinks)("sourceIdentifier", ctx_r10.identifier)("sourceIndex", "0")("context", ctx_r10.records)("originalData", ctx_r10.configData.originalData);
} }
function CrudListComponent_mat_card_0_div_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudListComponent_mat_card_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵtemplate(2, CrudListComponent_mat_card_0_div_7_ng_container_2_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function CrudListComponent_mat_card_0_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "div", 14);
    ɵngcc0.ɵɵelementEnd();
} }
function CrudListComponent_mat_card_0_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudListComponent_mat_card_0_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "div", 14);
    ɵngcc0.ɵɵelementEnd();
} }
function CrudListComponent_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card", 5);
    ɵngcc0.ɵɵelementStart(1, "mx-crud-header", 6);
    ɵngcc0.ɵɵlistener("onButtonClick", function CrudListComponent_mat_card_0_Template_mx_crud_header_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "mat-card-content");
    ɵngcc0.ɵɵtemplate(3, CrudListComponent_mat_card_0_div_3_Template, 7, 12, "div", 7);
    ɵngcc0.ɵɵelementStart(4, "div", 8);
    ɵngcc0.ɵɵelementStart(5, "div", 9);
    ɵngcc0.ɵɵtemplate(6, CrudListComponent_mat_card_0_div_6_Template, 3, 5, "div", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, CrudListComponent_mat_card_0_div_7_Template, 3, 1, "div", 11);
    ɵngcc0.ɵɵtemplate(8, CrudListComponent_mat_card_0_div_8_Template, 2, 0, "div", 12);
    ɵngcc0.ɵɵelementStart(9, "div", 13);
    ɵngcc0.ɵɵelementStart(10, "div", 14);
    ɵngcc0.ɵɵtemplate(11, CrudListComponent_mat_card_0_ng_container_11_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, CrudListComponent_mat_card_0_div_12_Template, 2, 0, "div", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵstyleProp("padding", ctx_r0.listConfig && ctx_r0.listConfig.style && ctx_r0.listConfig.style.hideCard ? 0 : "auto", "px");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleMap(ctx_r0.listConfig.style);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("identifier", ctx_r0.identifier)("title", ctx_r0.title)("subtitle", ctx_r0.header.subtitle)("description", ctx_r0.header.description)("badges", ctx_r0.badges)("icon", ctx_r0.header.icon)("pageBackRoute", ctx_r0.pageBackRoute)("formDisplayMode", "CRUD_LIST")("actions", ctx_r0.actions)("context", ctx_r0.records)("originalData", ctx_r0._configData.originalData);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.header.description && ctx_r0.header.description.text);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.quickLinks && ctx_r0.quickLinks.length > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showSearchForm);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.listConfig.customPlugin && ctx_r0.listConfig.customPlugin.placement == "ABOVE" && ctx_r0.listConfig.customPlugin.component);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.listConfig.customPlugin && ctx_r0.listConfig.customPlugin.placement == "BELOW" && ctx_r0.listConfig.customPlugin.component);
} }
function CrudListComponent_ng_template_2_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudListComponent_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_2_span_0_ng_container_1_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function CrudListComponent_ng_template_2_span_1_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 35);
    ɵngcc0.ɵɵtext(1, "Apply Filter");
    ɵngcc0.ɵɵelementEnd();
} }
function CrudListComponent_ng_template_2_span_1_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 35);
    ɵngcc0.ɵɵtext(1, "Filters (");
    ɵngcc0.ɵɵelementStart(2, "strong");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, ")");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r27.searchOnFieldsCount);
} }
function CrudListComponent_ng_template_2_span_1_ng_container_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudListComponent_ng_template_2_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 25);
    ɵngcc0.ɵɵtext(1, " 1");
    ɵngcc0.ɵɵelementStart(2, "span", 26);
    ɵngcc0.ɵɵelementStart(3, "mat-sidenav-content", null, 27);
    ɵngcc0.ɵɵelementStart(5, "mx-button", 28);
    ɵngcc0.ɵɵlistener("onClick", function CrudListComponent_ng_template_2_span_1_Template_mx_button_onClick_5_listener() { ɵngcc0.ɵɵrestoreView(_r31); const _r28 = ɵngcc0.ɵɵreference(11); return _r28.open(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "span", 29);
    ɵngcc0.ɵɵtemplate(7, CrudListComponent_ng_template_2_span_1_span_7_Template, 2, 0, "span", 30);
    ɵngcc0.ɵɵtemplate(8, CrudListComponent_ng_template_2_span_1_span_8_Template, 5, 1, "span", 30);
    ɵngcc0.ɵɵelementStart(9, "mx-button-group", 31);
    ɵngcc0.ɵɵlistener("onIconClick", function CrudListComponent_ng_template_2_span_1_Template_mx_button_group_onIconClick_9_listener() { ɵngcc0.ɵɵrestoreView(_r31); const ctx_r32 = ɵngcc0.ɵɵnextContext(2); return ctx_r32.buttonIconClick; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "mat-sidenav", 32, 33);
    ɵngcc0.ɵɵlistener("keydown.escape", function CrudListComponent_ng_template_2_span_1_Template_mat_sidenav_keydown_escape_10_listener() { ɵngcc0.ɵɵrestoreView(_r31); const ctx_r33 = ɵngcc0.ɵɵnextContext(2); return ctx_r33.close(); })("backdropClick", function CrudListComponent_ng_template_2_span_1_Template_mat_sidenav_backdropClick_10_listener() { ɵngcc0.ɵɵrestoreView(_r31); const ctx_r34 = ɵngcc0.ɵɵnextContext(2); return ctx_r34.close(); });
    ɵngcc0.ɵɵelementStart(12, "div", 34);
    ɵngcc0.ɵɵelementStart(13, "div", 9);
    ɵngcc0.ɵɵelementStart(14, "div", 14);
    ɵngcc0.ɵɵtemplate(15, CrudListComponent_ng_template_2_span_1_ng_container_15_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("sourceIdentifier", ctx_r22.identifier)("sourceIndex", "0")("button", ctx_r22.searchButton)("context", ctx_r22.records)("originalData", ctx_r22.configData.originalData);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r22.searchOnFieldsCount == null || ctx_r22.searchOnFieldsCount == 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r22.searchOnFieldsCount && ctx_r22.searchOnFieldsCount > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r22.searchOnFieldsButtons)("formDisplayMode", "ADD")("sourceIdentifier", "searchFields")("sourceIndex", 0)("widgetArrayIndex", 0)("originalData", ctx_r22.searchData);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("position", ctx_r22.searchConfig.displayType == "LEFT_MODAL" ? "start" : "end")("disableClose", false);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function CrudListComponent_ng_template_2_span_2_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mx-button", 36);
    ɵngcc0.ɵɵlistener("onClick", function CrudListComponent_ng_template_2_span_2_Template_mx_button_onClick_1_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.openBottomSheet(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("sourceIdentifier", ctx_r23.identifier)("sourceIndex", "0")("button", ctx_r23.searchButton);
} }
function CrudListComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudListComponent_ng_template_2_span_0_Template, 2, 1, "span", 23);
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_2_span_1_Template, 16, 16, "span", 24);
    ɵngcc0.ɵɵtemplate(2, CrudListComponent_ng_template_2_span_2_Template, 2, 3, "span", 23);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.searchConfig.displayType == "ABOVE_LIST");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.searchConfig.displayType == "LEFT_MODAL" || ctx_r2.searchConfig.displayType == "RIGHT_MODAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.searchConfig.displayType == "BOTTOM_MODAL");
} }
function CrudListComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    const _r38 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mx-form", 37);
    ɵngcc0.ɵɵlistener("onFieldChange", function CrudListComponent_ng_template_4_Template_mx_form_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.fieldChange($event); })("onFormChange", function CrudListComponent_ng_template_4_Template_mx_form_onFormChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r39 = ɵngcc0.ɵɵnextContext(); return ctx_r39.formChange($event); })("onButtonClick", function CrudListComponent_ng_template_4_Template_mx_form_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r40 = ɵngcc0.ɵɵnextContext(); return ctx_r40.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formConfig", ctx_r4.searchConfig.form)("sourceIndex", "0")("reset", ctx_r4.formReset)("record", ctx_r4.searchData)("keyMap", ctx_r4.keyMap);
} }
function CrudListComponent_ng_template_6_span_0_span_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c14 = function (a0) { return { lConfig: a0, rIndex: 0 }; };
function CrudListComponent_ng_template_6_span_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_6_span_0_span_1_ng_container_1_Template, 1, 0, "ng-container", 40);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lConfig_r45 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c14, lConfig_r45));
} }
function CrudListComponent_ng_template_6_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_6_span_0_span_1_Template, 2, 4, "span", 39);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r41 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r41.listConfig.lists);
} }
function CrudListComponent_ng_template_6_span_1_mat_tab_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c15 = function (a0, a1) { return { lConfig: a0, rIndex: a1 }; };
function CrudListComponent_ng_template_6_span_1_mat_tab_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-tab", 43);
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_6_span_1_mat_tab_2_ng_container_1_Template, 1, 0, "ng-container", 40);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lConfig_r48 = ctx.$implicit;
    const rIndex_r49 = ctx.index;
    const ctx_r47 = ɵngcc0.ɵɵnextContext(3);
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("label", ctx_r47.listHeaders[rIndex_r49].title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c15, lConfig_r48, rIndex_r49));
} }
function CrudListComponent_ng_template_6_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r52 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-tab-group", 41);
    ɵngcc0.ɵɵlistener("selectedTabChange", function CrudListComponent_ng_template_6_span_1_Template_mat_tab_group_selectedTabChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const ctx_r51 = ɵngcc0.ɵɵnextContext(2); return ctx_r51.onTabChange($event); });
    ɵngcc0.ɵɵtemplate(2, CrudListComponent_ng_template_6_span_1_mat_tab_2_Template, 2, 6, "mat-tab", 42);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r42 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r42.listConfig.lists);
} }
function CrudListComponent_ng_template_6_span_2_mat_expansion_panel_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function CrudListComponent_ng_template_6_span_2_mat_expansion_panel_2_Template(rf, ctx) { if (rf & 1) {
    const _r58 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel", 46);
    ɵngcc0.ɵɵlistener("opened", function CrudListComponent_ng_template_6_span_2_mat_expansion_panel_2_Template_mat_expansion_panel_opened_0_listener() { ɵngcc0.ɵɵrestoreView(_r58); const rIndex_r55 = ctx.index; const ctx_r57 = ɵngcc0.ɵɵnextContext(3); return ctx_r57.onAccordianChange(rIndex_r55); });
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵelementStart(2, "mat-panel-title");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, CrudListComponent_ng_template_6_span_2_mat_expansion_panel_2_ng_container_4_Template, 1, 0, "ng-container", 40);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lConfig_r54 = ctx.$implicit;
    const rIndex_r55 = ctx.index;
    const ctx_r53 = ɵngcc0.ɵɵnextContext(3);
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("expanded", rIndex_r55 === 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r53.listHeaders[rIndex_r55].title, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(4, _c15, lConfig_r54, rIndex_r55));
} }
function CrudListComponent_ng_template_6_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 44);
    ɵngcc0.ɵɵelementStart(1, "mat-accordion");
    ɵngcc0.ɵɵtemplate(2, CrudListComponent_ng_template_6_span_2_mat_expansion_panel_2_Template, 5, 7, "mat-expansion-panel", 45);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r43 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r43.listConfig.lists);
} }
function CrudListComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudListComponent_ng_template_6_span_0_Template, 2, 1, "span", 23);
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_6_span_1_Template, 3, 1, "span", 23);
    ɵngcc0.ɵɵtemplate(2, CrudListComponent_ng_template_6_span_2_Template, 3, 1, "span", 38);
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.listConfig.lists.length == 1 || ctx_r6.listConfig.lists.length > 1 && ctx_r6.listConfig.displayType == "LIST");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.listConfig.lists.length > 1 && ctx_r6.listConfig.displayType == "TAB");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.listConfig.lists.length > 1 && ctx_r6.listConfig.displayType == "ACCORDIAN");
} }
const _c16 = function () { return []; };
function CrudListComponent_ng_template_8_mx_static_list_0_Template(rf, ctx) { if (rf & 1) {
    const _r64 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-static-list", 48);
    ɵngcc0.ɵɵlistener("onFormChange", function CrudListComponent_ng_template_8_mx_static_list_0_Template_mx_static_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r63 = ɵngcc0.ɵɵnextContext(2); return ctx_r63.formChange($event); })("onFieldChange", function CrudListComponent_ng_template_8_mx_static_list_0_Template_mx_static_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r65 = ɵngcc0.ɵɵnextContext(2); return ctx_r65.fieldChange($event); })("onButtonClick", function CrudListComponent_ng_template_8_mx_static_list_0_Template_mx_static_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r66 = ɵngcc0.ɵɵnextContext(2); return ctx_r66.buttonClick($event); })("onPageChange", function CrudListComponent_ng_template_8_mx_static_list_0_Template_mx_static_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ctx_r67.onPage($event); })("onSortChange", function CrudListComponent_ng_template_8_mx_static_list_0_Template_mx_static_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r68 = ɵngcc0.ɵɵnextContext(2); return ctx_r68.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r69 = ɵngcc0.ɵɵnextContext();
    const lConfig_r59 = ctx_r69.lConfig;
    const rIndex_r60 = ctx_r69.rIndex;
    const ctx_r61 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("listConfig", lConfig_r59)("sourceIdentifier", ctx_r61.identifier)("sourceIndex", rIndex_r60)("record", ctx_r61.records && ctx_r61.records[rIndex_r60] ? ctx_r61.records[rIndex_r60] : ɵngcc0.ɵɵpureFunction0(9, _c16))("originalData", ctx_r61.configData.originalData)("listReset", ctx_r61.listReset)("expanded", ctx_r61._expanded)("expandRowIndex", ctx_r61.expandRowIndex)("keyMap", ctx_r61.keyMap);
} }
function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template(rf, ctx) { if (rf & 1) {
    const _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-dynamic-list", 48);
    ɵngcc0.ɵɵlistener("onFormChange", function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template_mx_dynamic_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r70 = ɵngcc0.ɵɵnextContext(2); return ctx_r70.formChange($event); })("onFieldChange", function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template_mx_dynamic_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r72 = ɵngcc0.ɵɵnextContext(2); return ctx_r72.fieldChange($event); })("onButtonClick", function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template_mx_dynamic_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r73 = ɵngcc0.ɵɵnextContext(2); return ctx_r73.buttonClick($event); })("onPageChange", function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template_mx_dynamic_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r74 = ɵngcc0.ɵɵnextContext(2); return ctx_r74.onPage($event); })("onSortChange", function CrudListComponent_ng_template_8_mx_dynamic_list_1_Template_mx_dynamic_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r75 = ɵngcc0.ɵɵnextContext(2); return ctx_r75.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r76 = ɵngcc0.ɵɵnextContext();
    const lConfig_r59 = ctx_r76.lConfig;
    const rIndex_r60 = ctx_r76.rIndex;
    const ctx_r62 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("listConfig", lConfig_r59)("sourceIdentifier", ctx_r62.identifier)("sourceIndex", rIndex_r60)("record", ctx_r62.records && ctx_r62.records[rIndex_r60] ? ctx_r62.records[rIndex_r60] : ɵngcc0.ɵɵpureFunction0(9, _c16))("originalData", ctx_r62.configData.originalData)("listReset", ctx_r62.listReset)("expanded", ctx_r62._expanded)("expandRowIndex", ctx_r62.expandRowIndex)("keyMap", ctx_r62.keyMap);
} }
function CrudListComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CrudListComponent_ng_template_8_mx_static_list_0_Template, 1, 10, "mx-static-list", 47);
    ɵngcc0.ɵɵtemplate(1, CrudListComponent_ng_template_8_mx_dynamic_list_1_Template, 1, 10, "mx-dynamic-list", 47);
} if (rf & 2) {
    const lConfig_r59 = ctx.lConfig;
    ɵngcc0.ɵɵproperty("ngIf", lConfig_r59.listType == "STATIC");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", lConfig_r59.listType == "DYNAMIC");
} }
function BottomSearchSheet_span_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵelementStart(1, "mx-form", 2);
    ɵngcc0.ɵɵlistener("onFieldChange", function BottomSearchSheet_span_0_Template_mx_form_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.fieldChange($event); })("onFormChange", function BottomSearchSheet_span_0_Template_mx_form_onFormChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.formChange($event); })("onButtonClick", function BottomSearchSheet_span_0_Template_mx_form_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formConfig", ctx_r0.data.searchConfig.form)("sourceIndex", "0")("record", ctx_r0.data.searchData)("reset", ctx_r0.data.reset);
} }
const _c17 = ["fileInput"];
function FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 13);
} if (rf & 2) {
    const file_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("src", file_r4.url, ɵngcc0.ɵɵsanitizeUrl);
} }
function FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_a_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 14);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 15);
    ɵngcc0.ɵɵtext(2, "file_download");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r4 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("href", file_r4.url, ɵngcc0.ɵɵsanitizeUrl)("disabled", ctx_r8.disabled);
} }
function FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const file_r4 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onDeleteFileClick(file_r4); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 17);
    ɵngcc0.ɵɵtext(2, "delete");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("disabled", ctx_r9.disabled || ctx_r9.isUploadingInProgress);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", ctx_r9.isUploadingInProgress ? "" : "warn");
} }
function FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 9);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtemplate(2, FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_img_2_Template, 1, 1, "img", 10);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtemplate(6, FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_a_6_Template, 3, 2, "a", 11);
    ɵngcc0.ɵɵtemplate(7, FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_button_7_Template, 3, 2, "button", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.isFileImageType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(file_r4.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.hideDownloadButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.hideDeleteFileButton);
} }
function FileUploaderComponent_mat_card_content_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FileUploaderComponent_mat_card_content_2_ng_container_2_li_1_Template, 8, 4, "li", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const index_r5 = ctx.index;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", index_r5 < ctx_r3.showLess);
} }
const _c18 = function (a0) { return { "mx-disable": a0 }; };
function FileUploaderComponent_mat_card_content_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-content", 5);
    ɵngcc0.ɵɵelementStart(1, "ul", 6);
    ɵngcc0.ɵɵtemplate(2, FileUploaderComponent_mat_card_content_2_ng_container_2_Template, 2, 1, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c18, ctx_r0.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.fileList);
} }
function FileUploaderComponent_mat_card_actions_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c18, ctx_r16.disabled));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r16.fileIcon);
} }
function FileUploaderComponent_mat_card_actions_3_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 25);
    ɵngcc0.ɵɵlistener("click", function FileUploaderComponent_mat_card_actions_3_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.onUploadClick(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "file_upload");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r17.disabled || ctx_r17.isUploadingInProgress);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r17.uploadButtonText, " ");
} }
function FileUploaderComponent_mat_card_actions_3_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 26);
    ɵngcc0.ɵɵlistener("click", function FileUploaderComponent_mat_card_actions_3_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.onShowAllItems(); });
    ɵngcc0.ɵɵtext(1, " Show All ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c18, ctx_r18.disabled))("disabled", ctx_r18.disabled || ctx_r18.isUploadingInProgress);
} }
function FileUploaderComponent_mat_card_actions_3_mat_spinner_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-spinner", 27);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("diameter", 18);
} }
function FileUploaderComponent_mat_card_actions_3_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 28);
    ɵngcc0.ɵɵlistener("click", function FileUploaderComponent_mat_card_actions_3_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.onDeleteAllClick(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 29);
    ɵngcc0.ɵɵtext(2, "delete");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r20.disabled || ctx_r20.isUploadingInProgress)("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c18, ctx_r20.disabled));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", ctx_r20.isUploadingInProgress ? "" : "warn");
} }
const _c19 = function (a0) { return { "empty-list": a0 }; };
function FileUploaderComponent_mat_card_actions_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 18);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵtemplate(2, FileUploaderComponent_mat_card_actions_3_div_2_Template, 3, 4, "div", 19);
    ɵngcc0.ɵɵtemplate(3, FileUploaderComponent_mat_card_actions_3_button_3_Template, 4, 2, "button", 20);
    ɵngcc0.ɵɵtemplate(4, FileUploaderComponent_mat_card_actions_3_button_4_Template, 2, 4, "button", 21);
    ɵngcc0.ɵɵtemplate(5, FileUploaderComponent_mat_card_actions_3_mat_spinner_5_Template, 1, 1, "mat-spinner", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, FileUploaderComponent_mat_card_actions_3_button_6_Template, 3, 5, "button", 23);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c19, ctx_r1.fileList.length == 0));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.hideFileIconButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.hideUploadButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showLess < ctx_r1.fileList.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isUploadingInProgress);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.hideDeleteAllButton && ctx_r1.fileList.length > 1);
} }
const _c20 = ["listView"];
function FieldComponent_div_0_span_3_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_div_0_span_3_span_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_div_0_span_3_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_div_0_span_3_span_4_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(3);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function FieldComponent_div_0_span_3_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r16.field.help.message, " ");
} }
const _c21 = function (a0, a1) { return { "mx-field-lbl-horizontal": a0, "mx-field-lbl-horizontal-premitive": a1 }; };
function FieldComponent_div_0_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_div_0_span_3_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_div_0_span_3_span_4_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_div_0_span_3_span_5_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r12.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(8, _c21, ctx_r12.field.type != "CHECKBOX" && ctx_r12.field.type != "RADIO" && ctx_r12.field.type != "SLIDER" && ctx_r12.field.type != "TOGGLE_OPTION" && ctx_r12.field.type != "UPLOAD" && ctx_r12.field.type != "IMAGE" && ctx_r12.field.type != "BOOLEAN" && ctx_r12.field.type != "JSON", !(ctx_r12.field.type != "CHECKBOX" && ctx_r12.field.type != "RADIO" && ctx_r12.field.type != "SLIDER" && ctx_r12.field.type != "TOGGLE_OPTION" && ctx_r12.field.type != "UPLOAD" && ctx_r12.field.type != "IMAGE" && ctx_r12.field.type != "BOOLEAN" && ctx_r12.field.type != "JSON")));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r12.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.field.help && ctx_r12.field.help.message && ctx_r12.field.help.displayType == "RIGHT_MODAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.field.help && ctx_r12.field.help.message && ctx_r12.field.help.displayType == "PLAIN_TEXT" && ctx_r12.field.help.withLabel);
} }
function FieldComponent_div_0_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵelementStart(2, "div", 9);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_div_0_span_3_Template, 6, 11, "span", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 11);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_div_0_ng_container_5_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isAddMore || ctx_r0.isAddMore && (ctx_r0.fieldIndex == 0 || ctx_r0.fieldIndex == null) && ctx_r0.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
} }
function FieldComponent_span_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_span_2_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
} }
function FieldComponent_ng_template_4_span_0_mat_label_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_mat_label_1_span_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_4_span_0_mat_label_1_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_mat_label_1_span_5_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(4);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function FieldComponent_ng_template_4_span_0_mat_label_1_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r37 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r37.field.help.message, " ");
} }
function FieldComponent_ng_template_4_span_0_mat_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_4_span_0_mat_label_1_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵelement(4, "mx-tooltip", 26);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_4_span_0_mat_label_1_span_5_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_4_span_0_mat_label_1_span_6_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r22.field.key, " mx-field-lbl-inline");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r22.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r22.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r22.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r22.field.help && ctx_r22.field.help.message && ctx_r22.field.help.displayType == "RIGHT_MODAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r22.field.help && ctx_r22.field.help.message && ctx_r22.field.help.displayType == "PLAIN_TEXT" && ctx_r22.field.help.withLabel);
} }
const _c22 = function (a0, a1) { return { "mx-field-value-wrapper-horizontal": a0, "mx-field-value-wrapper-vertical": a1 }; };
function FieldComponent_ng_template_4_span_0_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelement(1, "img", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c22, ctx_r23.field.fieldDisplayType != "HORIZONTAL", ctx_r23.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-image mx-field-image-", ctx_r23.field.key, "");
    ɵngcc0.ɵɵstyleProp("width", ctx_r23.field["width"] ? ctx_r23.field["width"] : "auto", "px");
    ɵngcc0.ɵɵproperty("src", ctx_r23.imagePath, ɵngcc0.ɵɵsanitizeUrl);
} }
function FieldComponent_ng_template_4_span_0_span_3_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵtext(1, "done");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_3_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, "close");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_3_mat_icon_1_Template, 2, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_3_mat_icon_2_Template, 2, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-boolean mx-field-boolean-", ctx_r24.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(6, _c22, ctx_r24.field.fieldDisplayType != "HORIZONTAL", ctx_r24.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.resolvedValue == true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.resolvedValue == false);
} }
function FieldComponent_ng_template_4_span_0_span_4_span_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵtext(1, "done");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_4_span_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, "close");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_4_span_1_mat_icon_1_Template, 2, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_4_span_1_mat_icon_2_Template, 2, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r41 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element  mx-field-boolean mx-field-boolean-", ctx_r41.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r41.resolvedValue == true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r41.resolvedValue == false);
} }
function FieldComponent_ng_template_4_span_0_span_4_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r42 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-value mx-field-value-", ctx_r42.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r42.getDropdownValue(ctx_r42.field, ctx_r42.value), " ");
} }
function FieldComponent_ng_template_4_span_0_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_4_span_1_Template, 3, 5, "span", 20);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_4_span_2_Template, 2, 4, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c22, ctx_r25.field.fieldDisplayType != "HORIZONTAL", ctx_r25.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r25.value == true || ctx_r25.value == false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r25.value != true && ctx_r25.value != false);
} }
function FieldComponent_ng_template_4_span_0_span_5_span_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵtext(1, "done");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_5_span_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, "close");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_5_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_5_span_1_mat_icon_1_Template, 2, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_5_span_1_mat_icon_2_Template, 2, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r45 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element  mx-field-boolean mx-field-boolean-", ctx_r45.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r45.resolvedValue == true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r45.resolvedValue == false);
} }
function FieldComponent_ng_template_4_span_0_span_5_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r46 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-value mx-field-value-", ctx_r46.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r46.getDropdownValue(ctx_r46.field, ctx_r46.value), " ");
} }
function FieldComponent_ng_template_4_span_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_5_span_1_Template, 3, 5, "span", 20);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_5_span_2_Template, 2, 4, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c22, ctx_r26.field.fieldDisplayType != "HORIZONTAL", ctx_r26.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r26.value == true || ctx_r26.value == false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r26.value != true && ctx_r26.value != false);
} }
function FieldComponent_ng_template_4_span_0_span_6_span_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵtext(1, "done");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_6_span_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, "close");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_6_span_1_mat_icon_1_Template, 2, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_6_span_1_mat_icon_2_Template, 2, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r49 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element  mx-field-boolean mx-field-boolean-", ctx_r49.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r49.resolvedValue == true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r49.resolvedValue == false);
} }
function FieldComponent_ng_template_4_span_0_span_6_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r50 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-value mx-field-value-", ctx_r50.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r50.getDropdownValue(ctx_r50.field, ctx_r50.value), " ");
} }
function FieldComponent_ng_template_4_span_0_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_6_span_1_Template, 3, 5, "span", 20);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_6_span_2_Template, 2, 4, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c22, ctx_r27.field.fieldDisplayType != "HORIZONTAL", ctx_r27.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r27.value == true || ctx_r27.value == false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r27.value != true && ctx_r27.value != false);
} }
function FieldComponent_ng_template_4_span_0_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r28 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-form-field mx-field-value mx-field-value-", ctx_r28.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c22, ctx_r28.field.fieldDisplayType != "HORIZONTAL", ctx_r28.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r28.field["resolveTextWithKey"] ? ctx_r28.getResolveTextWithKey(ctx_r28.field) : ctx_r28.resolvedValue, " ");
} }
function FieldComponent_ng_template_4_span_0_span_8_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r59 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 37);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_8_div_4_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r58 = ɵngcc0.ɵɵnextContext(4); return ctx_r58.displayFullText(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r53 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r53.getValue(ctx_r53.field, ctx_r53.value), "... ");
} }
function FieldComponent_ng_template_4_span_0_span_8_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    const _r61 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 38);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_8_ng_template_5_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r61); const ctx_r60 = ɵngcc0.ɵɵnextContext(4); return ctx_r60.displayShortText(); });
    ɵngcc0.ɵɵelementStart(1, "pre");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "json");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r55 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r55.getValue(ctx_r55.field, ctx_r55.value)));
} }
function FieldComponent_ng_template_4_span_0_span_8_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r63 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 39);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_8_div_7_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r62 = ɵngcc0.ɵɵnextContext(4); return ctx_r62.displayFullText(); });
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2, " Show More ");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_more");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_8_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r65 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 39);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_8_div_8_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r65); const ctx_r64 = ɵngcc0.ɵɵnextContext(4); return ctx_r64.displayShortText(); });
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2, " Show Less ");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_less");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_4_span_0_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "div", 32);
    ɵngcc0.ɵɵelementStart(3, "div", 33);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_4_span_0_span_8_div_4_Template, 2, 1, "div", 34);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_4_span_0_span_8_ng_template_5_Template, 4, 3, "ng-template", null, 35, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_4_span_0_span_8_div_7_Template, 5, 0, "div", 36);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_4_span_0_span_8_div_8_Template, 5, 0, "div", 36);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r54 = ɵngcc0.ɵɵreference(6);
    const ctx_r29 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-", ctx_r29.field.key, "");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r29.displayEllipsis())("ngIfElse", _r54);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r29.displayEllipsis() && ctx_r29.ellipsisRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r29.displayEllipsis() && ctx_r29.ellipsisRequired);
} }
function FieldComponent_ng_template_4_span_0_span_9_Template(rf, ctx) { if (rf & 1) {
    const _r67 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 40);
    ɵngcc0.ɵɵelementStart(1, "mx-paragraph", 41);
    ɵngcc0.ɵɵlistener("onFieldChange", function FieldComponent_ng_template_4_span_0_span_9_Template_mx_paragraph_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r66 = ɵngcc0.ɵɵnextContext(3); return ctx_r66.onParagraphChange($event); })("onButtonClick", function FieldComponent_ng_template_4_span_0_span_9_Template_mx_paragraph_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r67); const ctx_r68 = ɵngcc0.ɵɵnextContext(3); return ctx_r68.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r30 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r30.field)("sourceType", ctx_r30.sourceType)("sourceIdentifier", ctx_r30.sourceIdentifier)("sourceIndex", ctx_r30.sourceIndex)("widgetArrayIndex", ctx_r30.widgetArrayIndex)("form", ctx_r30.form)("keyMap", ctx_r30.keyMap)("field", ctx_r30.field)("displayMode", ctx_r30.displayMode)("originalData", ctx_r30.originalData)("fieldControl", ctx_r30.fieldControl)("dependencies", ctx_r30.dependencies);
} }
function FieldComponent_ng_template_4_span_0_span_10_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_4_span_0_span_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "mx-multi-image", 42);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_10_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r31 = ɵngcc0.ɵɵnextContext(3);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r31.field)("disabled", ctx_r31.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_4_span_0_span_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "mx-file-uploader", 42);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r32.field)("disabled", ctx_r32.isFieldDisabled);
} }
function FieldComponent_ng_template_4_span_0_span_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "a", 43);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("href", "mailto:", ctx_r33.getValue(ctx_r33.field, ctx_r33.value), "", ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r33.getValue(ctx_r33.field, ctx_r33.value));
} }
function FieldComponent_ng_template_4_span_0_span_13_span_1_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r77 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 47);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_13_span_1_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r77); const ctx_r76 = ɵngcc0.ɵɵnextContext(5); return ctx_r76.displayFullText(); });
    ɵngcc0.ɵɵtext(1, " ... ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r73 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("innerHtml", ctx_r73.getValue(ctx_r73.field, ctx_r73.value), ɵngcc0.ɵɵsanitizeHtml);
} }
function FieldComponent_ng_template_4_span_0_span_13_span_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r79 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 48);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_4_span_0_span_13_span_1_ng_template_2_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r78 = ɵngcc0.ɵɵnextContext(5); return ctx_r78.displayShortText(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r75 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("innerHtml", ctx_r75.getValue(ctx_r75.field, ctx_r75.value), ɵngcc0.ɵɵsanitizeHtml);
} }
function FieldComponent_ng_template_4_span_0_span_13_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_13_span_1_span_1_Template, 2, 1, "span", 46);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_13_span_1_ng_template_2_Template, 1, 1, "ng-template", null, 35, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r74 = ɵngcc0.ɵɵreference(3);
    const ctx_r70 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵstyleProp("text-align", ctx_r70.textAlign);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c22, ctx_r70.field.fieldDisplayType != "HORIZONTAL", ctx_r70.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r70.displayEllipsis())("ngIfElse", _r74);
} }
function FieldComponent_ng_template_4_span_0_span_13_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-chip-list");
    ɵngcc0.ɵɵelementStart(1, "mat-chip", 49);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r72 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r72.getValue(ctx_r72.field, ctx_r72.value));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", ctx_r72.bubbleColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r72.getValue(ctx_r72.field, ctx_r72.value));
} }
function FieldComponent_ng_template_4_span_0_span_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_span_13_span_1_Template, 4, 8, "span", 44);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_13_ng_template_2_Template, 3, 3, "ng-template", null, 45, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r71 = ɵngcc0.ɵɵreference(3);
    const ctx_r34 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r34.asBubble)("ngIfElse", _r71);
} }
const _c23 = function (a0, a1) { return { "mx-field-lbl-horizontal": a0, "mx-field-lbl": a1 }; };
function FieldComponent_ng_template_4_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_0_mat_label_1_Template, 7, 8, "mat-label", 20);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_0_span_2_Template, 2, 10, "span", 21);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_4_span_0_span_3_Template, 3, 9, "span", 22);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_4_span_0_span_4_Template, 3, 6, "span", 21);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_4_span_0_span_5_Template, 3, 6, "span", 21);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_4_span_0_span_6_Template, 3, 6, "span", 21);
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_4_span_0_span_7_Template, 2, 8, "span", 22);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_4_span_0_span_8_Template, 9, 7, "span", 23);
    ɵngcc0.ɵɵtemplate(9, FieldComponent_ng_template_4_span_0_span_9_Template, 2, 12, "span", 24);
    ɵngcc0.ɵɵtemplate(10, FieldComponent_ng_template_4_span_0_span_10_Template, 3, 3, "span", 23);
    ɵngcc0.ɵɵtemplate(11, FieldComponent_ng_template_4_span_0_span_11_Template, 2, 2, "span", 23);
    ɵngcc0.ɵɵtemplate(12, FieldComponent_ng_template_4_span_0_span_12_Template, 3, 2, "span", 23);
    ɵngcc0.ɵɵtemplate(13, FieldComponent_ng_template_4_span_0_span_13_Template, 4, 2, "span", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field mx-field-key-", ctx_r19.field.key, "");
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r19.field.type)("ngClass", ɵngcc0.ɵɵpureFunction2(17, _c23, (ctx_r19.field.type == "LABEL" || ctx_r19.field.type == "BOOLEAN") && ctx_r19.field.fieldDisplayType == "HORIZONTAL", (ctx_r19.field.type == "LABEL" || ctx_r19.field.type == "BOOLEAN") && ctx_r19.sourceType == "FORM"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r19.field.fieldDisplayType != "HORIZONTAL" && ctx_r19.field.type != "PARAGRAPH" && ctx_r19.field.type != "TOGGLE_OPTION" && !ctx_r19.hideLabel && ctx_r19.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "IMAGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "BOOLEAN");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "DROPDOWN");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "CHECKBOX");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "RADIO");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "AUTOCOMPLETE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "JSON");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "PARAGRAPH");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "MULTI_IMAGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "UPLOAD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "EMAIL");
} }
function FieldComponent_ng_template_4_span_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c24 = function (a0, a1) { return { "mx-field-lbl-horizontal": a0, "mx-field-lbl-for-label": a1 }; };
function FieldComponent_ng_template_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 50);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_1_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    const _r4 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(2, _c24, (ctx_r20.field.type == "LABEL" || ctx_r20.field.type == "BOOLEAN") && ctx_r20.field.fieldDisplayType == "HORIZONTAL", (ctx_r20.field.type == "LABEL" || ctx_r20.field.type == "BOOLEAN") && ctx_r20.sourceType == "FORM"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function FieldComponent_ng_template_4_span_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_4_span_2_div_5_mx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r86 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 55);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_4_span_2_div_5_mx_button_1_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r86); const ctx_r85 = ɵngcc0.ɵɵnextContext(4); return ctx_r85.removeField(ctx_r85.field, ctx_r85.fieldIndex); });
    ɵngcc0.ɵɵpipe(1, "can");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r83 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-addmore mx-field-addmore-", ctx_r83.field.key, "");
    ɵngcc0.ɵɵproperty("disabled", !(ctx_r83.addMorePermission == null || ctx_r83.addMorePermission && ɵngcc0.ɵɵpipeBind2(1, 9, ctx_r83.addMorePermission["subject"], ctx_r83.addMorePermission["action"])))("form", ctx_r83.form)("sourceIdentifier", ctx_r83.sourceIdentifier)("sourceIndex", ctx_r83.sourceIndex)("widgetArrayIndex", ctx_r83.widgetArrayIndex)("button", ctx_r83.minusButton);
} }
function FieldComponent_ng_template_4_span_2_div_5_mx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r88 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 56);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_4_span_2_div_5_mx_button_2_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r88); const ctx_r87 = ɵngcc0.ɵɵnextContext(4); return ctx_r87.addField(ctx_r87.field); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r84 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-addmore mx-field-addmore-", ctx_r84.field.key, "");
    ɵngcc0.ɵɵproperty("form", ctx_r84.form)("sourceIdentifier", ctx_r84.sourceIdentifier)("sourceIndex", ctx_r84.sourceIndex)("widgetArrayIndex", ctx_r84.widgetArrayIndex)("button", ctx_r84.plusButton);
} }
function FieldComponent_ng_template_4_span_2_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_2_div_5_mx_button_1_Template, 2, 12, "mx-button", 53);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_2_div_5_mx_button_2_Template, 1, 8, "mx-button", 54);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r82 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r82.addMoreButtonDisplayInColumns, " mdc-layout-grid__cell--align-middle");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r82.fieldIndex != ctx_r82.form.controls[ctx_r82.field.key]["controls"].length - 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r82.fieldIndex == ctx_r82.form.controls[ctx_r82.field.key]["controls"].length - 1);
} }
function FieldComponent_ng_template_4_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 51);
    ɵngcc0.ɵɵelementStart(1, "div", 52);
    ɵngcc0.ɵɵelementStart(2, "div", 8);
    ɵngcc0.ɵɵelementStart(3, "div");
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_4_span_2_ng_container_4_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_4_span_2_div_5_Template, 3, 5, "div", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    const _r4 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r21.isAddMore ? ctx_r21.addMoreFieldDisplayInColumns : ctx_r21.addMoreFieldDisplayInColumns + ctx_r21.addMoreButtonDisplayInColumns, " mdc-layout-grid__cell--align-middle");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r21.isAddMore);
} }
function FieldComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FieldComponent_ng_template_4_span_0_Template, 14, 20, "span", 16);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_4_span_1_Template, 2, 5, "span", 17);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_4_span_2_Template, 6, 5, "span", 18);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.form && !ctx_r3.fieldControl || ctx_r3.field.displayMode == "LABEL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.form && ctx_r3.fieldControl && ctx_r3.matcher && ctx_r3.field.displayMode != "LABEL" && !ctx_r3.isAddMore);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.form && ctx_r3.fieldControl && ctx_r3.matcher && ctx_r3.field.displayMode != "LABEL" && ctx_r3.isAddMore);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r124 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r124.field.help.message, " ");
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_span_4_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r106 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r106.field.key, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r106.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r106.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r106.field.help && ctx_r106.field.help.message && ctx_r106.field.help.displayType == "PLAIN_TEXT" && ctx_r106.field.help.withLabel);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 73);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r107 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r107.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r107.field.icon);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_3_Template(rf, ctx) { if (rf & 1) {
    const _r126 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "input", 74);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_span_3_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r126); const ctx_r125 = ɵngcc0.ɵɵnextContext(3); return ctx_r125.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r108 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-text mx-field-text-", ctx_r108.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r108.field.key)("formControl", ctx_r108.fieldControl)("errorStateMatcher", ctx_r108.matcher)("maxLength", ctx_r108.maxLength)("placeholder", ctx_r108.field.placeholder)("disabled", ctx_r108.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_textarea_4_Template(rf, ctx) { if (rf & 1) {
    const _r128 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "textarea", 75);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_textarea_4_Template_textarea_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r128); const ctx_r127 = ɵngcc0.ɵɵnextContext(3); return ctx_r127.onInputChange($event); });
    ɵngcc0.ɵɵtext(1, " \n      ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r109 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-textarea mx-field-textarea-", ctx_r109.field.key, "");
    ɵngcc0.ɵɵpropertyInterpolate("rows", ctx_r109.rows);
    ɵngcc0.ɵɵproperty("id", ctx_r109.field.key)("formControl", ctx_r109.fieldControl)("errorStateMatcher", ctx_r109.matcher)("maxLength", ctx_r109.maxLength)("placeholder", ctx_r109.field.placeholder)("disabled", ctx_r109.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_hint_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 76);
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r110 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r110.fieldControl.value.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" / ", ctx_r110.maxLength, " characters");
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_6_Template(rf, ctx) { if (rf & 1) {
    const _r130 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 77);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_6_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r130); const ctx_r129 = ɵngcc0.ɵɵnextContext(3); return ctx_r129.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r111 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-color mx-field-color-", ctx_r111.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r111.field.key)("formControl", ctx_r111.fieldControl)("errorStateMatcher", ctx_r111.matcher)("placeholder", ctx_r111.field.placeholder)("disabled", ctx_r111.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_7_Template(rf, ctx) { if (rf & 1) {
    const _r132 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 78);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_7_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r132); const ctx_r131 = ɵngcc0.ɵɵnextContext(3); return ctx_r131.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r112 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-email mx-field-email-", ctx_r112.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r112.field.key)("formControl", ctx_r112.fieldControl)("errorStateMatcher", ctx_r112.matcher)("maxLength", ctx_r112.maxLength)("placeholder", ctx_r112.field.placeholder)("disabled", ctx_r112.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_8_Template(rf, ctx) { if (rf & 1) {
    const _r134 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 79);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_8_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r134); const ctx_r133 = ɵngcc0.ɵɵnextContext(3); return ctx_r133.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r113 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-month mx-field-month-", ctx_r113.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r113.field.key)("formControl", ctx_r113.fieldControl)("errorStateMatcher", ctx_r113.matcher)("maxLength", ctx_r113.maxLength)("placeholder", ctx_r113.field.placeholder)("disabled", ctx_r113.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_9_Template(rf, ctx) { if (rf & 1) {
    const _r136 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 80);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_9_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r136); const ctx_r135 = ɵngcc0.ɵɵnextContext(3); return ctx_r135.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r114 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-number mx-field-number-", ctx_r114.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r114.field.key)("formControl", ctx_r114.fieldControl)("errorStateMatcher", ctx_r114.matcher)("min", ctx_r114.min)("max", ctx_r114.max)("placeholder", ctx_r114.field.placeholder)("disabled", ctx_r114.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_10_Template(rf, ctx) { if (rf & 1) {
    const _r138 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 81);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_10_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const ctx_r137 = ɵngcc0.ɵɵnextContext(3); return ctx_r137.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r115 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-password mx-field-password-", ctx_r115.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r115.field.key)("formControl", ctx_r115.fieldControl)("errorStateMatcher", ctx_r115.matcher)("maxLength", ctx_r115.maxLength)("placeholder", ctx_r115.field.placeholder)("disabled", ctx_r115.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_11_Template(rf, ctx) { if (rf & 1) {
    const _r140 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 82);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_11_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r140); const ctx_r139 = ɵngcc0.ɵɵnextContext(3); return ctx_r139.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r116 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-time mx-field-time-", ctx_r116.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r116.field.key)("formControl", ctx_r116.fieldControl)("errorStateMatcher", ctx_r116.matcher)("placeholder", ctx_r116.field.placeholder)("disabled", ctx_r116.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_input_12_Template(rf, ctx) { if (rf & 1) {
    const _r142 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 83);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_input_12_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r142); const ctx_r141 = ɵngcc0.ɵɵnextContext(3); return ctx_r141.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r117 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-week mx-field-week-", ctx_r117.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r117.field.key)("formControl", ctx_r117.fieldControl)("errorStateMatcher", ctx_r117.matcher)("placeholder", ctx_r117.field.placeholder)("disabled", ctx_r117.isFieldDisabled);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_13_mat_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 87);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r143 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r143.field["defaultOption"]);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_13_mat_option_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 88);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r145 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", option_r145.key)("disabled", option_r145.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r145.value);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_13_Template(rf, ctx) { if (rf & 1) {
    const _r147 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-select", 84);
    ɵngcc0.ɵɵlistener("selectionChange", function FieldComponent_ng_template_6_mat_form_field_1_span_13_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r147); const ctx_r146 = ɵngcc0.ɵɵnextContext(3); return ctx_r146.onChange($event); });
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_mat_form_field_1_span_13_mat_option_2_Template, 2, 1, "mat-option", 85);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_mat_form_field_1_span_13_mat_option_3_Template, 2, 3, "mat-option", 86);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r118 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-dropdown mx-field-dropdown-", ctx_r118.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r118.field.key)("formControl", ctx_r118.fieldControl)("errorStateMatcher", ctx_r118.matcher)("multiple", ctx_r118.field["multiselect"])("placeholder", ctx_r118.field.placeholder)("disabled", ctx_r118.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r118.field["defaultOption"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r118.field["options"]);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r149 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-option mx-field-autocomplete-option mx-field-autocomplete-option-", ctx_r149.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r149.field["defaultOption"], " ");
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 93);
    ɵngcc0.ɵɵelement(1, "span", 94);
    ɵngcc0.ɵɵpipe(2, "highlight");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r152 = ctx.$implicit;
    const ctx_r150 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-option mx-field-autocomplete-option mx-field-autocomplete-option-", ctx_r150.field.key, "");
    ɵngcc0.ɵɵproperty("value", option_r152)("disabled", option_r152.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind2(2, 6, option_r152.value, ctx_r150.highlightAutoCompleteText), ɵngcc0.ɵɵsanitizeHtml);
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r151 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r151.field["noRecordFound"] ? ctx_r151.field["noRecordFound"] : "No Result Found", " ");
} }
function FieldComponent_ng_template_6_mat_form_field_1_span_14_Template(rf, ctx) { if (rf & 1) {
    const _r154 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "input", 89);
    ɵngcc0.ɵɵlistener("input", function FieldComponent_ng_template_6_mat_form_field_1_span_14_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r154); const ctx_r153 = ɵngcc0.ɵɵnextContext(3); return ctx_r153.onInputChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "mat-autocomplete", 90, 91);
    ɵngcc0.ɵɵlistener("optionSelected", function FieldComponent_ng_template_6_mat_form_field_1_span_14_Template_mat_autocomplete_optionSelected_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r154); const ctx_r155 = ɵngcc0.ɵɵnextContext(3); return ctx_r155.onAutocompleteChange($event); });
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_4_Template, 2, 4, "mat-option", 20);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_5_Template, 3, 9, "mat-option", 92);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_mat_form_field_1_span_14_mat_option_6_Template, 2, 1, "mat-option", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r148 = ɵngcc0.ɵɵreference(3);
    const ctx_r119 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-autocomplete mx-field-autocomplete-", ctx_r119.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r119.field.key)("formControl", ctx_r119.fieldControl)("errorStateMatcher", ctx_r119.matcher)("placeholder", ctx_r119.field.placeholder)("matAutocomplete", _r148)("disabled", ctx_r119.isFieldDisabled);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r119.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("displayWith", ctx_r119.autocompleteDisplayFn);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r119.field["defaultOption"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r119.field["options"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r119.field["options"] == null ? null : ctx_r119.field["options"].length) == 0 && ctx_r119.autoCompleteInputHasValue);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mx_button_15_Template(rf, ctx) { if (rf & 1) {
    const _r157 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 95);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_6_mat_form_field_1_mx_button_15_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r157); const ctx_r156 = ɵngcc0.ɵɵnextContext(3); return ctx_r156.resolvedValue = ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r120 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r120.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r120.routeToButton);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_hint_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 96);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 97);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r121 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r121.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r121.field.help.icon ? ctx_r121.field.help.icon : "live_help", " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r121.field.help.message);
} }
function FieldComponent_ng_template_6_mat_form_field_1_mat_error_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 98);
} if (rf & 2) {
    const error_r158 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r158.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r158.message);
} }
const _c25 = function (a0, a1) { return { "mx-inbuild-type": a0, "mx-field-horizontal": a1 }; };
function FieldComponent_ng_template_6_mat_form_field_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 50);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_mat_form_field_1_mat_label_1_Template, 5, 6, "mat-label", 20);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_mat_form_field_1_mat_icon_2_Template, 2, 2, "mat-icon", 60);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_mat_form_field_1_span_3_Template, 2, 9, "span", 23);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_mat_form_field_1_textarea_4_Template, 2, 10, "textarea", 61);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_6_mat_form_field_1_mat_hint_5_Template, 4, 2, "mat-hint", 62);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_mat_form_field_1_input_6_Template, 1, 8, "input", 63);
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_6_mat_form_field_1_input_7_Template, 1, 9, "input", 64);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_6_mat_form_field_1_input_8_Template, 1, 9, "input", 65);
    ɵngcc0.ɵɵtemplate(9, FieldComponent_ng_template_6_mat_form_field_1_input_9_Template, 1, 10, "input", 66);
    ɵngcc0.ɵɵtemplate(10, FieldComponent_ng_template_6_mat_form_field_1_input_10_Template, 1, 9, "input", 67);
    ɵngcc0.ɵɵtemplate(11, FieldComponent_ng_template_6_mat_form_field_1_input_11_Template, 1, 8, "input", 68);
    ɵngcc0.ɵɵtemplate(12, FieldComponent_ng_template_6_mat_form_field_1_input_12_Template, 1, 8, "input", 69);
    ɵngcc0.ɵɵtemplate(13, FieldComponent_ng_template_6_mat_form_field_1_span_13_Template, 4, 11, "span", 23);
    ɵngcc0.ɵɵtemplate(14, FieldComponent_ng_template_6_mat_form_field_1_span_14_Template, 7, 14, "span", 23);
    ɵngcc0.ɵɵtemplate(15, FieldComponent_ng_template_6_mat_form_field_1_mx_button_15_Template, 1, 4, "mx-button", 70);
    ɵngcc0.ɵɵelement(16, "mx-tooltip", 26);
    ɵngcc0.ɵɵtemplate(17, FieldComponent_ng_template_6_mat_form_field_1_mat_hint_17_Template, 5, 3, "mat-hint", 71);
    ɵngcc0.ɵɵtemplate(18, FieldComponent_ng_template_6_mat_form_field_1_mat_error_18_Template, 1, 2, "mat-error", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r89 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(19, _c25, ctx_r89.field.type == "TIME" || ctx_r89.field.type == "COLOR" || ctx_r89.field.type == "WEEK" || ctx_r89.field.type == "MONTH" || ctx_r89.field.type == "NUMBER", ctx_r89.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r89.hideLabel == true) && ctx_r89.field.fieldDisplayType != "HORIZONTAL" && ctx_r89.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r89.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "TEXT");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "TEXTAREA");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r89.field.type == "TEXTAREA" && ctx_r89.maxLength && ctx_r89.maxLength > 0 && ctx_r89.maxLength != 1000000);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "COLOR");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "EMAIL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "MONTH");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "NUMBER");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "PASSWORD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "TIME");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "WEEK");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "DROPDOWN");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "AUTOCOMPLETE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r89.hasFieldNavigate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r89.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r89.field.help && ctx_r89.field.help.message && ctx_r89.field.help.displayType == "PLAIN_TEXT" && !ctx_r89.field.help.withLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r89.errors());
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r167 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r167.field.help.message, " ");
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label", 105);
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_span_4_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r161 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r161.field.key, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r161.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r161.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r161.field.help && ctx_r161.field.help.message && ctx_r161.field.help.displayType == "PLAIN_TEXT" && ctx_r161.field.help.withLabel);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mx_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r169 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 95);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_6_span_2_mat_form_field_1_mx_button_8_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r169); const ctx_r168 = ɵngcc0.ɵɵnextContext(4); return ctx_r168.resolvedValue = ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r163 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r163.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r163.routeToButton);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_hint_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 96);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 97);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r164 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r164.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r164.field.help.icon ? ctx_r164.field.help.icon : "live_help", " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r164.field.help.message);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_error_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 98);
} if (rf & 2) {
    const error_r170 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r170.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r170.message);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_1_Template(rf, ctx) { if (rf & 1) {
    const _r172 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 51);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_label_1_Template, 5, 6, "mat-label", 99);
    ɵngcc0.ɵɵelementStart(2, "mat-date-range-input", 100);
    ɵngcc0.ɵɵelementStart(3, "input", 101);
    ɵngcc0.ɵɵlistener("dateChange", function FieldComponent_ng_template_6_span_2_mat_form_field_1_Template_input_dateChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r172); const ctx_r171 = ɵngcc0.ɵɵnextContext(3); return ctx_r171.onDateChange($event, "startDate"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "input", 102);
    ɵngcc0.ɵɵlistener("dateChange", function FieldComponent_ng_template_6_span_2_mat_form_field_1_Template_input_dateChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r172); const ctx_r173 = ɵngcc0.ɵɵnextContext(3); return ctx_r173.onDateChange($event, "endDate"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "mat-datepicker-toggle", 103);
    ɵngcc0.ɵɵelement(6, "mat-date-range-picker", null, 104);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_6_span_2_mat_form_field_1_mx_button_8_Template, 1, 4, "mx-button", 70);
    ɵngcc0.ɵɵelement(9, "mx-tooltip", 26);
    ɵngcc0.ɵɵtemplate(10, FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_hint_10_Template, 5, 3, "mat-hint", 71);
    ɵngcc0.ɵɵtemplate(11, FieldComponent_ng_template_6_span_2_mat_form_field_1_mat_error_11_Template, 1, 2, "mat-error", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r162 = ɵngcc0.ɵɵreference(7);
    const ctx_r159 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r159.hideLabel == true) && ctx_r159.field.fieldDisplayType != "HORIZONTAL" && ctx_r159.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r159.fieldControl)("rangePicker", _r162);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r159.field.key)("min", ctx_r159.field["minDate"])("disabled", ctx_r159.isFieldDisabled)("errorStateMatcher", ctx_r159.matcher);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r159.field.key)("max", ctx_r159.field["maxDate"])("disabled", ctx_r159.isFieldDisabled)("errorStateMatcher", ctx_r159.matcher);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("for", _r162);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r159.hasFieldNavigate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r159.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r159.field.help && ctx_r159.field.help.message && ctx_r159.field.help.displayType == "PLAIN_TEXT" && !ctx_r159.field.help.withLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r159.errors());
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r180 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r180.field.help.message, " ");
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label", 105);
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_span_4_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r174 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r174.field.key, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r174.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r174.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r174.field.help && ctx_r174.field.help.message && ctx_r174.field.help.displayType == "PLAIN_TEXT" && ctx_r174.field.help.withLabel);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mx_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r182 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 95);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_6_span_2_mat_form_field_2_mx_button_6_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r182); const ctx_r181 = ɵngcc0.ɵɵnextContext(4); return ctx_r181.resolvedValue = ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r176 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r176.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r176.routeToButton);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_hint_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 96);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 97);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r177 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r177.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r177.field.help.icon ? ctx_r177.field.help.icon : "live_help", " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r177.field.help.message);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_error_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 98);
} if (rf & 2) {
    const error_r183 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r183.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r183.message);
} }
function FieldComponent_ng_template_6_span_2_mat_form_field_2_Template(rf, ctx) { if (rf & 1) {
    const _r185 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 51);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_label_1_Template, 5, 6, "mat-label", 99);
    ɵngcc0.ɵɵelementStart(2, "input", 106);
    ɵngcc0.ɵɵlistener("dateChange", function FieldComponent_ng_template_6_span_2_mat_form_field_2_Template_input_dateChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r185); const ctx_r184 = ɵngcc0.ɵɵnextContext(3); return ctx_r184.onDateChange($event, ""); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "mat-datepicker-toggle", 103);
    ɵngcc0.ɵɵelement(4, "mat-datepicker", null, 107);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_span_2_mat_form_field_2_mx_button_6_Template, 1, 4, "mx-button", 70);
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_hint_7_Template, 5, 3, "mat-hint", 71);
    ɵngcc0.ɵɵelement(8, "mx-tooltip", 26);
    ɵngcc0.ɵɵtemplate(9, FieldComponent_ng_template_6_span_2_mat_form_field_2_mat_error_9_Template, 1, 2, "mat-error", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r175 = ɵngcc0.ɵɵreference(5);
    const ctx_r160 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r160.hideLabel == true) && ctx_r160.field.fieldDisplayType != "HORIZONTAL" && ctx_r160.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-datepicker mx-field-datepicker-", ctx_r160.field.key, "");
    ɵngcc0.ɵɵproperty("matDatepicker", _r175)("id", ctx_r160.field.key)("formControl", ctx_r160.fieldControl)("matDatepickerFilter", ctx_r160.field["filter"])("min", ctx_r160.field["minDate"])("max", ctx_r160.field["maxDate"])("errorStateMatcher", ctx_r160.matcher)("disabled", ctx_r160.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("for", _r175);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r160.hasFieldNavigate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r160.field.help && ctx_r160.field.help.message && ctx_r160.field.help.displayType == "PLAIN_TEXT" && !ctx_r160.field.help.withLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r160.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r160.errors());
} }
function FieldComponent_ng_template_6_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_2_mat_form_field_1_Template, 12, 16, "mat-form-field", 18);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_2_mat_form_field_2_Template, 10, 17, "mat-form-field", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r90 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r90.dateRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r90.dateRange);
} }
function FieldComponent_ng_template_6_mat_label_3_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_mat_label_3_span_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_mat_label_3_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_mat_label_3_span_5_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(3);
    const _r8 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r8);
} }
function FieldComponent_ng_template_6_mat_label_3_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r188 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r188.field.help.message, " ");
} }
function FieldComponent_ng_template_6_mat_label_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_mat_label_3_span_3_Template, 2, 0, "span", 14);
    ɵngcc0.ɵɵelement(4, "mx-tooltip", 26);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_6_mat_label_3_span_5_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_mat_label_3_span_6_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r91 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r91.field.key, " mx-field-lbl-inline");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r91.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r91.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r91.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r91.field.help && ctx_r91.field.help.message && ctx_r91.field.help.displayType == "RIGHT_MODAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r91.field.help && ctx_r91.field.help.message && ctx_r91.field.help.displayType == "PLAIN_TEXT" && ctx_r91.field.help.withLabel);
} }
function FieldComponent_ng_template_6_span_4_span_3_mat_error_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 98);
} if (rf & 2) {
    const error_r193 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r193.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r193.message);
} }
function FieldComponent_ng_template_6_span_4_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 111);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_4_span_3_mat_error_1_Template, 1, 2, "mat-error", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r190 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r190.errors());
} }
function FieldComponent_ng_template_6_span_4_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c26 = function (a0, a1) { return { "mx-editor-invalid": a0, "mx-disable": a1 }; };
const _c27 = function (a0, a1) { return { height: a0, "margin-bottom": a1 }; };
function FieldComponent_ng_template_6_span_4_Template(rf, ctx) { if (rf & 1) {
    const _r195 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "div", 108);
    ɵngcc0.ɵɵelementStart(2, "quill-editor", 109);
    ɵngcc0.ɵɵlistener("onEditorChanged", function FieldComponent_ng_template_6_span_4_Template_quill_editor_onEditorChanged_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r195); const ctx_r194 = ɵngcc0.ɵɵnextContext(2); return ctx_r194.onHtmlEditorChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_4_span_3_Template, 2, 1, "span", 110);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_4_ng_container_4_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r92 = ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(10, _c26, ctx_r92.isEditorErrorState(), ctx_r92.isFieldDisabled))("styles", ɵngcc0.ɵɵpureFunction2(13, _c27, ctx_r92.height + "px", ctx_r92.isEditorErrorState() ? 0 : "1.25em"))("id", ctx_r92.field.key)("formControl", ctx_r92.fieldControl)("disabled", ctx_r92.isFieldDisabled)("placeholder", ctx_r92.field.placeholder)("readOnly", ctx_r92.isFieldDisabled)("modules", ctx_r92.editorOptions);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r92.isEditorErrorState());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
const _c28 = function (a0) { return { "mx-disabled": a0 }; };
function FieldComponent_ng_template_6_span_5_div_1_span_1_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r201 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r202 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-chk-desc mx-field-chk-desc-", ctx_r202.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c28, option_r201.disabled || ctx_r202.isFieldDisabled));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r201.description);
} }
const _c29 = function (a0) { return { "mx-field-checkbox-horizontal": a0 }; };
function FieldComponent_ng_template_6_span_5_div_1_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r205 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 116);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 117);
    ɵngcc0.ɵɵlistener("change", function FieldComponent_ng_template_6_span_5_div_1_span_1_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r205); const option_r201 = ctx.$implicit; const ctx_r204 = ɵngcc0.ɵɵnextContext(4); return ctx_r204.onCheckboxChange(option_r201, $event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_5_div_1_span_1_i_3_Template, 2, 7, "i", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r201 = ctx.$implicit;
    const ctx_r199 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-checkbox mat-accent mx-field-chk-inner mx-field-chk-inner-", ctx_r199.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c29, ctx_r199.field["displayType"] == "INLINE"))("formControl", ctx_r199.fieldControl["controls"][option_r201.key])("disabled", option_r201.disabled || ctx_r199.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r201.value, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r201.description);
} }
function FieldComponent_ng_template_6_span_5_div_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_5_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 114);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_5_div_1_span_1_Template, 4, 10, "span", 115);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_5_div_1_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r196 = ɵngcc0.ɵɵnextContext(3);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c29, ctx_r196.field["displayType"] == "INLINE"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r196.field["options"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_5_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_5_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FieldComponent_ng_template_6_span_5_ng_template_2_ng_container_0_Template, 1, 0, "ng-container", 12);
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(3);
    const _r10 = ɵngcc0.ɵɵreference(13);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r10);
} }
function FieldComponent_ng_template_6_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 112);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_5_div_1_Template, 3, 5, "div", 113);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_5_ng_template_2_Template, 1, 1, "ng-template", null, 35, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r197 = ɵngcc0.ɵɵreference(3);
    const ctx_r93 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r93.field["displayTemplate"] == "CLASSIC")("ngIfElse", _r197);
} }
function FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_br_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "br");
} }
function FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "i", 122);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r212 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r214 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c28, option_r212.disabled || ctx_r214.isFieldDisabled));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r212.description);
} }
const _c30 = function (a0) { return { "mx-field-radio-horizontal-padding": a0 }; };
function FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "mat-radio-button", 93);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_br_3_Template, 1, 0, "br", 1);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_i_4_Template, 2, 4, "i", 121);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r212 = ctx.$implicit;
    const ctx_r210 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c30, ctx_r210.field["displayType"] == "INLINE"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-radio-button mat-accent mx-field-radio mx-field-radio-", ctx_r210.field.key, "");
    ɵngcc0.ɵɵproperty("value", option_r212.key)("disabled", option_r212.disabled || ctx_r210.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r212.value, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r212.description);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r212.description);
} }
function FieldComponent_ng_template_6_span_6_mat_radio_group_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c31 = function (a0) { return { "mx-field-radio-horizontal": a0 }; };
function FieldComponent_ng_template_6_span_6_mat_radio_group_1_Template(rf, ctx) { if (rf & 1) {
    const _r217 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-radio-group", 119);
    ɵngcc0.ɵɵlistener("change", function FieldComponent_ng_template_6_span_6_mat_radio_group_1_Template_mat_radio_group_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r217); const ctx_r216 = ɵngcc0.ɵɵnextContext(3); return ctx_r216.onRadioChange($event); });
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_6_mat_radio_group_1_span_1_Template, 5, 11, "span", 120);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_6_mat_radio_group_1_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r207 = ɵngcc0.ɵɵnextContext(3);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-nm mx-field-radio-group mx-field-radio-group-", ctx_r207.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r207.field.key)("formControl", ctx_r207.fieldControl)("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c31, ctx_r207.field["displayType"] == "INLINE"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r207.field["options"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_6_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_6_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FieldComponent_ng_template_6_span_6_ng_template_2_ng_container_0_Template, 1, 0, "ng-container", 12);
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(3);
    const _r10 = ɵngcc0.ɵɵreference(13);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r10);
} }
function FieldComponent_ng_template_6_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_6_mat_radio_group_1_Template, 3, 10, "mat-radio-group", 118);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_6_ng_template_2_Template, 1, 1, "ng-template", null, 35, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r208 = ɵngcc0.ɵɵreference(3);
    const ctx_r94 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r94.field["displayTemplate"] == "CLASSIC")("ngIfElse", _r208);
} }
function FieldComponent_ng_template_6_span_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_7_Template(rf, ctx) { if (rf & 1) {
    const _r221 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-slider", 123);
    ɵngcc0.ɵɵlistener("change", function FieldComponent_ng_template_6_span_7_Template_mat_slider_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r221); const ctx_r220 = ɵngcc0.ɵɵnextContext(2); return ctx_r220.onSliderChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_7_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r95 = ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-slider mx-field-slider mx-field-slider-", ctx_r95.field.key, "");
    ɵngcc0.ɵɵproperty("id", ctx_r95.field.key)("formControl", ctx_r95.fieldControl)("invert", ctx_r95.field["invert"])("max", ctx_r95.field["max"])("min", ctx_r95.field["min"])("step", ctx_r95.field["step"])("thumbLabel", ctx_r95.field["thumbLabel"])("tickInterval", ctx_r95.field["tickInterval"])("vertical", ctx_r95.field["vertical"])("disabled", ctx_r95.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_8_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r222 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r222.field["description"]);
} }
function FieldComponent_ng_template_6_span_8_Template(rf, ctx) { if (rf & 1) {
    const _r224 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mat-slide-toggle", 124);
    ɵngcc0.ɵɵlistener("change", function FieldComponent_ng_template_6_span_8_Template_mat_slide_toggle_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r224); const ctx_r223 = ɵngcc0.ɵɵnextContext(2); return ctx_r223.onToggleChange($event); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_span_8_span_3_Template, 2, 1, "span", 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r96 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-slide-toggle mx-field-toggle mx-field-toggle-", ctx_r96.field.key, "");
    ɵngcc0.ɵɵproperty("formControl", ctx_r96.fieldControl)("color", ctx_r96.field["color"])("checked", ctx_r96.field["checked"])("disabled", ctx_r96.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r96.field["label"], " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r96.field["description"]);
} }
function FieldComponent_ng_template_6_span_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "mx-file-uploader", 42);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_9_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r97 = ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r97.field)("disabled", ctx_r97.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_10_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "mx-multi-image", 42);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_10_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r98 = ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r98.field)("disabled", ctx_r98.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelement(1, "img", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r99 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(7, _c22, ctx_r99.field.fieldDisplayType != "HORIZONTAL", ctx_r99.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-image mx-field-image-", ctx_r99.field.key, "");
    ɵngcc0.ɵɵstyleProp("width", ctx_r99.field["width"] ? ctx_r99.field["width"] : "auto", "px");
    ɵngcc0.ɵɵproperty("src", ctx_r99.imagePath, ɵngcc0.ɵɵsanitizeUrl);
} }
function FieldComponent_ng_template_6_span_12_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 30);
    ɵngcc0.ɵɵtext(1, "done");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_12_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 31);
    ɵngcc0.ɵɵtext(1, "close");
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_12_mat_icon_1_Template, 2, 0, "mat-icon", 28);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_12_mat_icon_2_Template, 2, 0, "mat-icon", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r100 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mat-input-element mx-field-boolean mx-field-boolean-", ctx_r100.field.key, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(6, _c22, ctx_r100.field.fieldDisplayType != "HORIZONTAL", ctx_r100.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r100.resolvedValue == true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r100.resolvedValue == false);
} }
function FieldComponent_ng_template_6_span_13_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r235 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 37);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_6_span_13_div_4_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r235); const ctx_r234 = ɵngcc0.ɵɵnextContext(3); return ctx_r234.displayFullText(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r229 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r229.getValue(ctx_r229.field, ctx_r229.value), "... ");
} }
function FieldComponent_ng_template_6_span_13_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    const _r237 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 38);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_6_span_13_ng_template_5_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r237); const ctx_r236 = ɵngcc0.ɵɵnextContext(3); return ctx_r236.displayShortText(); });
    ɵngcc0.ɵɵelementStart(1, "pre");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "json");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r231 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r231.getValue(ctx_r231.field, ctx_r231.value)));
} }
function FieldComponent_ng_template_6_span_13_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r239 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 39);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_6_span_13_div_7_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r239); const ctx_r238 = ɵngcc0.ɵɵnextContext(3); return ctx_r238.displayFullText(); });
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2, " Show More ");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_more");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_13_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r241 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 39);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_6_span_13_div_8_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r241); const ctx_r240 = ɵngcc0.ɵɵnextContext(3); return ctx_r240.displayShortText(); });
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2, " Show Less ");
    ɵngcc0.ɵɵelementStart(3, "mat-icon");
    ɵngcc0.ɵɵtext(4, "expand_less");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function FieldComponent_ng_template_6_span_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "div", 32);
    ɵngcc0.ɵɵelementStart(3, "div", 33);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_13_div_4_Template, 2, 1, "div", 34);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_6_span_13_ng_template_5_Template, 4, 3, "ng-template", null, 35, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_6_span_13_div_7_Template, 5, 0, "div", 36);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_6_span_13_div_8_Template, 5, 0, "div", 36);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r230 = ɵngcc0.ɵɵreference(6);
    const ctx_r101 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-json mx-field-json-", ctx_r101.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-", ctx_r101.field.key, "");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r101.displayEllipsis())("ngIfElse", _r230);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r101.displayEllipsis() && ctx_r101.ellipsisRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r101.displayEllipsis() && ctx_r101.ellipsisRequired);
} }
function FieldComponent_ng_template_6_span_14_Template(rf, ctx) { if (rf & 1) {
    const _r243 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mx-chips", 125);
    ɵngcc0.ɵɵlistener("onListChange", function FieldComponent_ng_template_6_span_14_Template_mx_chips_onListChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r243); const ctx_r242 = ɵngcc0.ɵɵnextContext(2); return ctx_r242.onChipsListChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r102 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r102.field)("formControl", ctx_r102.fieldControl)("disabled", ctx_r102.isFieldDisabled)("errorMatcher", ctx_r102.matcher);
} }
function FieldComponent_ng_template_6_span_15_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_6_span_15_Template(rf, ctx) { if (rf & 1) {
    const _r246 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 40);
    ɵngcc0.ɵɵelementStart(1, "mx-paragraph", 41);
    ɵngcc0.ɵɵlistener("onFieldChange", function FieldComponent_ng_template_6_span_15_Template_mx_paragraph_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r246); const ctx_r245 = ɵngcc0.ɵɵnextContext(2); return ctx_r245.onParagraphChange($event); })("onButtonClick", function FieldComponent_ng_template_6_span_15_Template_mx_paragraph_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r246); const ctx_r247 = ɵngcc0.ɵɵnextContext(2); return ctx_r247.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_15_ng_container_2_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r103 = ɵngcc0.ɵɵnextContext(2);
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r103.field)("sourceType", ctx_r103.sourceType)("sourceIdentifier", ctx_r103.sourceIdentifier)("sourceIndex", ctx_r103.sourceIndex)("widgetArrayIndex", ctx_r103.widgetArrayIndex)("form", ctx_r103.form)("keyMap", ctx_r103.keyMap)("field", ctx_r103.field)("displayMode", ctx_r103.displayMode)("originalData", ctx_r103.originalData)("fieldControl", ctx_r103.fieldControl)("dependencies", ctx_r103.dependencies);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function FieldComponent_ng_template_6_span_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "mx-toolbar", 126);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r104 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r104.field);
} }
function FieldComponent_ng_template_6_span_17_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "span", 127);
    ɵngcc0.ɵɵtext(2, " ... ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r248 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("text-align", ctx_r248.textAlign);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c22, ctx_r248.field.fieldDisplayType != "HORIZONTAL", ctx_r248.field.fieldDisplayType == "HORIZONTAL"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHtml", ctx_r248.resolvedValue, ɵngcc0.ɵɵsanitizeHtml);
} }
function FieldComponent_ng_template_6_span_17_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-chip-list");
    ɵngcc0.ɵɵelementStart(1, "mat-chip", 49);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r250 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r250.resolvedValue);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("color", ctx_r250.bubbleColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r250.resolvedValue);
} }
function FieldComponent_ng_template_6_span_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_span_17_span_1_Template, 3, 7, "span", 44);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_17_ng_template_2_Template, 3, 3, "ng-template", null, 45, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r249 = ɵngcc0.ɵɵreference(3);
    const ctx_r105 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r105.asBubble)("ngIfElse", _r249);
} }
function FieldComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 57);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_6_mat_form_field_1_Template, 19, 22, "mat-form-field", 17);
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_6_span_2_Template, 3, 2, "span", 23);
    ɵngcc0.ɵɵtemplate(3, FieldComponent_ng_template_6_mat_label_3_Template, 7, 8, "mat-label", 20);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_6_span_4_Template, 5, 16, "span", 23);
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_6_span_5_Template, 4, 2, "span", 58);
    ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_span_6_Template, 4, 2, "span", 23);
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_6_span_7_Template, 3, 14, "span", 23);
    ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_6_span_8_Template, 4, 9, "span", 23);
    ɵngcc0.ɵɵtemplate(9, FieldComponent_ng_template_6_span_9_Template, 3, 3, "span", 23);
    ɵngcc0.ɵɵtemplate(10, FieldComponent_ng_template_6_span_10_Template, 3, 3, "span", 23);
    ɵngcc0.ɵɵtemplate(11, FieldComponent_ng_template_6_span_11_Template, 2, 10, "span", 21);
    ɵngcc0.ɵɵtemplate(12, FieldComponent_ng_template_6_span_12_Template, 3, 9, "span", 22);
    ɵngcc0.ɵɵtemplate(13, FieldComponent_ng_template_6_span_13_Template, 9, 10, "span", 59);
    ɵngcc0.ɵɵtemplate(14, FieldComponent_ng_template_6_span_14_Template, 2, 4, "span", 23);
    ɵngcc0.ɵɵtemplate(15, FieldComponent_ng_template_6_span_15_Template, 3, 13, "span", 24);
    ɵngcc0.ɵɵtemplate(16, FieldComponent_ng_template_6_span_16_Template, 2, 1, "span", 23);
    ɵngcc0.ɵɵtemplate(17, FieldComponent_ng_template_6_span_17_Template, 4, 2, "span", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r5.field.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.field.type != "PARAGRAPH" && ctx_r5.field.type != "MULTI_IMAGE" && ctx_r5.field.type != "CHECKBOX" && ctx_r5.field.type != "TOOLBAR" && ctx_r5.field.type != "CHIPS" && ctx_r5.field.type != "HTML_EDITOR" && ctx_r5.field.type != "RADIO" && ctx_r5.field.type != "SLIDER" && ctx_r5.field.type != "TOGGLE_OPTION" && ctx_r5.field.type != "UPLOAD" && ctx_r5.field.type != "IMAGE" && ctx_r5.field.type != "BOOLEAN" && ctx_r5.field.type != "CALENDAR" && ctx_r5.field.type != "JSON" && ctx_r5.field.type != "LABEL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "CALENDAR");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r5.field.type != "MULTI_IMAGE" && ctx_r5.field.type != "TOOLBAR" && ctx_r5.field.type != "CHECKBOX" && ctx_r5.field.type != "HTML_EDITOR" && ctx_r5.field.type != "RADIO" && ctx_r5.field.type != "SLIDER" && ctx_r5.field.type != "UPLOAD" && ctx_r5.field.type != "IMAGE" && ctx_r5.field.type != "BOOLEAN" && ctx_r5.field.type != "JSON" && ctx_r5.field.type != "LABEL") && !(ctx_r5.hideLabel == true) && ctx_r5.field.fieldDisplayType != "HORIZONTAL" && ctx_r5.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "HTML_EDITOR");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "CHECKBOX");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "RADIO");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "SLIDER");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "TOGGLE_OPTION");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "UPLOAD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "MULTI_IMAGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "IMAGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "BOOLEAN");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "JSON");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "CHIPS");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "PARAGRAPH");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "TOOLBAR");
} }
function FieldComponent_ng_template_8_mat_hint_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 129);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 97);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r251 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r251.field.help && ctx_r251.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r251.field.help && ctx_r251.field.help.icon ? ctx_r251.field.help.icon : "live_help");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r251.field.help.message, " ");
} }
function FieldComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FieldComponent_ng_template_8_mat_hint_0_Template, 4, 3, "mat-hint", 128);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.field.help && ctx_r7.field.help.message && ctx_r7.field.help.displayType == "PLAIN_TEXT" && !ctx_r7.field.help.withLabel);
} }
function FieldComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    const _r255 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-sidenav", 130, 131);
    ɵngcc0.ɵɵlistener("keydown.escape", function FieldComponent_ng_template_10_Template_mat_sidenav_keydown_escape_0_listener() { ɵngcc0.ɵɵrestoreView(_r255); const ctx_r254 = ɵngcc0.ɵɵnextContext(); return ctx_r254.close(); });
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 132);
    ɵngcc0.ɵɵelementStart(5, "strong");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 133);
    ɵngcc0.ɵɵelementStart(8, "mx-button", 134);
    ɵngcc0.ɵɵlistener("onClick", function FieldComponent_ng_template_10_Template_mx_button_onClick_8_listener() { ɵngcc0.ɵɵrestoreView(_r255); const ctx_r256 = ɵngcc0.ɵɵnextContext(); return ctx_r256.close(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 135);
    ɵngcc0.ɵɵelementStart(10, "div", 33);
    ɵngcc0.ɵɵelement(11, "mat-divider", 136);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 137);
    ɵngcc0.ɵɵelementStart(13, "div", 33);
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "br");
    ɵngcc0.ɵɵelementStart(16, "mat-sidenav-content", 138, 139);
    ɵngcc0.ɵɵelementStart(18, "span", 140);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_10_Template_span_click_18_listener() { ɵngcc0.ɵɵrestoreView(_r255); const ctx_r257 = ɵngcc0.ɵɵnextContext(); return ctx_r257.open(); });
    ɵngcc0.ɵɵelementStart(19, "mat-icon", 141);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_10_Template_mat_icon_click_19_listener() { ɵngcc0.ɵɵrestoreView(_r255); const ctx_r258 = ɵngcc0.ɵɵnextContext(); return ctx_r258.open(); });
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("position", "end");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid mx-crud-search-modal mx-crud-search-modal-", ctx_r9.field.key, "");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r9.field.help.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("sourceIdentifier", ctx_r9.field.key)("sourceIndex", "0")("widgetArrayIndex", "0")("button", ctx_r9.helpModalButton);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r9.field.help.message, " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-hint mx-field-hint-", ctx_r9.field.key, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-hint-icon mx-field-hint-icon-", ctx_r9.field.key, "");
    ɵngcc0.ɵɵattribute("aria-label", ctx_r9.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r9.field.help.icon ? ctx_r9.field.help.icon : "live_help");
} }
function FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_img_1_Template(rf, ctx) { if (rf & 1) {
    const _r270 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 152);
    ɵngcc0.ɵɵlistener("error", function FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_img_1_Template_img_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r270); const ctx_r269 = ɵngcc0.ɵɵnextContext(4); return ctx_r269.onListImageLoadError($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r263 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("src", option_r263.image, ɵngcc0.ɵɵsanitizeUrl);
} }
function FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_mat_divider_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-option", 148);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_img_1_Template, 1, 1, "img", 149);
    ɵngcc0.ɵɵelementStart(2, "h3", 150);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 151);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_mat_divider_7_Template, 1, 0, "mat-divider", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r272 = ɵngcc0.ɵɵnextContext();
    const option_r263 = ctx_r272.$implicit;
    const last_r265 = ctx_r272.last;
    const ctx_r266 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("value", option_r263.key)("selected", ctx_r266.field.type == "CHECKBOX" ? option_r263.checked : option_r263.key == ctx_r266.fieldControl.value)("disabled", option_r263.disabled || ctx_r266.isFieldDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r263.image || ctx_r266.field["defaultImageUrl"]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r263.value, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(option_r263.description);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !last_r265);
} }
function FieldComponent_ng_template_12_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_template_12_ng_container_2_mat_list_option_1_Template, 8, 7, "mat-list-option", 147);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const index_r264 = ctx.index;
    const ctx_r260 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", index_r264 < ctx_r260.showLess);
} }
function FieldComponent_ng_template_12_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r274 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 153);
    ɵngcc0.ɵɵlistener("click", function FieldComponent_ng_template_12_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r274); const ctx_r273 = ɵngcc0.ɵɵnextContext(2); return ctx_r273.onShowAllOptions(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 154);
    ɵngcc0.ɵɵtext(3, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r261 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r261.field["showAllLabel"] ? ctx_r261.field["showAllLabel"] : "Show All", " ");
} }
function FieldComponent_ng_template_12_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function FieldComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    const _r276 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-selection-list", 142, 143);
    ɵngcc0.ɵɵlistener("selectionChange", function FieldComponent_ng_template_12_Template_mat_selection_list_selectionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r276); const ctx_r275 = ɵngcc0.ɵɵnextContext(); return ctx_r275.onOptionChange($event); });
    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_template_12_ng_container_2_Template, 2, 1, "ng-container", 144);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 145);
    ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_12_button_4_Template, 4, 1, "button", 146);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, FieldComponent_ng_template_12_ng_container_5_Template, 1, 0, "ng-container", 12);
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("multiple", ctx_r11.field.type == "CHECKBOX");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r11.field["options"]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r11.showLess < ctx_r11.field["options"].length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6);
} }
function StaticListComponent_mat_card_0_mat_card_header_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("margin-top", ctx_r23._listConfig.header.subtitle ? 8 : 0, "px");
    ɵngcc0.ɵɵattribute("aria-label", ctx_r23._listConfig.header.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r23._listConfig.header.icon.font, " ");
} }
function StaticListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r27._listConfig.header.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r27._listConfig.header.icon.font);
} }
function StaticListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-title");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_mat_icon_2_Template, 2, 2, "mat-icon", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r24._listConfig.header.title, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24._listConfig.header && ctx_r24._listConfig.header.icon && ctx_r24._listConfig.header.icon.font && ctx_r24.iconPosition == "AFTER_TITLE");
} }
function StaticListComponent_mat_card_0_mat_card_header_1_mat_card_subtitle_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle", 21);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r25._listConfig.header.subtitle);
} }
function StaticListComponent_mat_card_0_mat_card_header_1_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "mx-button-group", 23);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_mat_card_0_mat_card_header_1_div_4_Template_mx_button_group_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r28 = ɵngcc0.ɵɵnextContext(3); return ctx_r28.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r26._listConfig.header.actions)("sourceIdentifier", ctx_r26.sourceIdentifier)("sourceIndex", ctx_r26.sourceIndex)("widgetArrayIndex", ctx_r26.widgetArrayIndex)("originalData", ctx_r26.originalData);
} }
function StaticListComponent_mat_card_0_mat_card_header_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-header", 14);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_mat_card_0_mat_card_header_1_mat_icon_1_Template, 2, 4, "mat-icon", 15);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_Template, 3, 2, "mat-card-title", 12);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_mat_card_0_mat_card_header_1_mat_card_subtitle_3_Template, 2, 1, "mat-card-subtitle", 16);
    ɵngcc0.ɵɵtemplate(4, StaticListComponent_mat_card_0_mat_card_header_1_div_4_Template, 2, 5, "div", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("mx-table-hidden", !ctx_r17._listConfig || ctx_r17.hideHeader || !(ctx_r17._listConfig && ctx_r17._listConfig.header));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.icon && ctx_r17._listConfig.header.icon.font && ctx_r17.iconPosition == "BEFORE_TITLE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.subtitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.actions);
} }
function StaticListComponent_mat_card_0_div_3_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 29);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r30 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r30._listConfig.description.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r30._listConfig.description.icon);
} }
function StaticListComponent_mat_card_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "div", 25);
    ɵngcc0.ɵɵelementStart(2, "div", 26);
    ɵngcc0.ɵɵelementStart(3, "div", 27);
    ɵngcc0.ɵɵtemplate(4, StaticListComponent_mat_card_0_div_3_mat_icon_4_Template, 2, 2, "mat-icon", 28);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r18._listConfig.description.bgColor)("color", ctx_r18._listConfig.description.textColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r18._listConfig.description.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r18._listConfig.description.text);
} }
function StaticListComponent_mat_card_0_mat_divider_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider", 30);
} }
function StaticListComponent_mat_card_0_mat_card_subtitle_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r20._listConfig.description.text);
} }
function StaticListComponent_mat_card_0_span_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function StaticListComponent_mat_card_0_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_mat_card_0_span_6_ng_container_1_Template, 1, 0, "ng-container", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
const _c32 = function (a0) { return { "page-wise": a0 }; };
function StaticListComponent_mat_card_0_mat_card_actions_7_Template(rf, ctx) { if (rf & 1) {
    const _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 32);
    ɵngcc0.ɵɵelementStart(1, "mat-paginator", 33);
    ɵngcc0.ɵɵlistener("page", function StaticListComponent_mat_card_0_mat_card_actions_7_Template_mat_paginator_page_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r33); const ctx_r32 = ɵngcc0.ɵɵnextContext(2); return ctx_r32.onPage($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("length", ctx_r22._record.total)("pageSize", ctx_r22.limit)("pageSizeOptions", ctx_r22.pageSizeOptions)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c32, ctx_r22._listConfig.pagination == "NO_PAGE"))("hidePageSize", ctx_r22._listConfig.pagination == "NO_PAGE");
} }
function StaticListComponent_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card");
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_mat_card_0_mat_card_header_1_Template, 5, 6, "mat-card-header", 9);
    ɵngcc0.ɵɵelementStart(2, "mat-card-content");
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_mat_card_0_div_3_Template, 7, 6, "div", 10);
    ɵngcc0.ɵɵtemplate(4, StaticListComponent_mat_card_0_mat_divider_4_Template, 1, 0, "mat-divider", 11);
    ɵngcc0.ɵɵtemplate(5, StaticListComponent_mat_card_0_mat_card_subtitle_5_Template, 2, 1, "mat-card-subtitle", 12);
    ɵngcc0.ɵɵtemplate(6, StaticListComponent_mat_card_0_span_6_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(7, StaticListComponent_mat_card_0_mat_card_actions_7_Template, 2, 7, "mat-card-actions", 13);
    ɵngcc0.ɵɵpipe(8, "can");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("mx-hide-card", ctx_r0.hideCard);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hideHeader == false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.description && ctx_r0._listConfig.description.text && ctx_r0._listConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.header && (ctx_r0._listConfig.header.title || ctx_r0._listConfig.header.actions) || ctx_r0._listConfig.description && ctx_r0._listConfig.description.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.description && ctx_r0._listConfig.description.text && !ctx_r0._listConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hideFooter == false && ctx_r0._listConfig.pagination != "INFINIT_SCROLL" && (ctx_r0._listConfig || ctx_r0.hideFooter || !(ctx_r0._listConfig && (ctx_r0._listConfig.permission == null || ctx_r0._listConfig.permission && ɵngcc0.ɵɵpipeBind2(8, 8, ctx_r0._listConfig.permission["subject"], ctx_r0._listConfig.permission["action"])))));
} }
function StaticListComponent_ng_template_2_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function StaticListComponent_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_2_span_0_ng_container_1_Template, 1, 0, "ng-container", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r11 = ɵngcc0.ɵɵreference(13);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r11);
} }
const _c33 = function (a0) { return { layout: a0 }; };
function StaticListComponent_ng_template_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c33, ctx_r35._listConfig.row.template.layout));
} }
function StaticListComponent_ng_template_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r36 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c33, ctx_r36._listConfig.mobile));
} }
function StaticListComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_2_span_0_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_2_span_1_Template, 2, 4, "span", 12);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_2_span_2_Template, 2, 4, "span", 12);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.isCustomTemplate && !(ctx_r2.isMobile && ctx_r2._listConfig.mobile && ctx_r2._listConfig.mobile.rowHeight));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isCustomTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isMobile && ctx_r2._listConfig.mobile && ctx_r2._listConfig.mobile.rowHeight);
} }
function StaticListComponent_ng_template_4_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 40);
    ɵngcc0.ɵɵlistener("onFieldChange", function StaticListComponent_ng_template_4_div_1_div_1_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r43 = ɵngcc0.ɵɵnextContext(3); ctx_r43.updateFilter($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r41 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-mobile-search-field-cont mdc-layout-grid__cell--span-", ctx_r41._listConfig.staticList.hasOnPageFilter && !layout_r38.sorting ? 12 : 9, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r41.commonListForm)("fieldControl", ctx_r41.commonListForm != undefined && ctx_r41.commonListForm.controls["pageFilter"] ? ctx_r41.commonListForm.controls["pageFilter"] : null)("field", ctx_r41.filterField)("hideLabel", true)("displayMode", "EDIT");
} }
function StaticListComponent_ng_template_4_div_1_div_2_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r50 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 44);
    ɵngcc0.ɵɵlistener("click", function StaticListComponent_ng_template_4_div_1_div_2_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r50); const sorting_r48 = ctx.$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(4); return ctx_r49.onSort({ "action": sorting_r48.key, "direction": sorting_r48.direction }); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 45);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const sorting_r48 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", sorting_r48.label, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", sorting_r48.direction == "asc" ? "north" : "south", " ");
} }
const _c34 = function (a0) { return { "rote": a0 }; };
function StaticListComponent_ng_template_4_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 41);
    ɵngcc0.ɵɵtext(2, "filter_list");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-menu", null, 42);
    ɵngcc0.ɵɵtemplate(5, StaticListComponent_ng_template_4_div_1_div_2_button_5_Template, 4, 2, "button", 43);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r46 = ɵngcc0.ɵɵreference(4);
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r42 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-mobile-sort-field-cont mdc-layout-grid__cell--span-", !ctx_r42._listConfig.staticList.hasOnPageFilter && layout_r38.sorting ? 12 : 3, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c34, ctx_r42.sortDirection == "desc"))("matMenuTriggerFor", _r46);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r38.sorting);
} }
function StaticListComponent_ng_template_4_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_4_div_1_div_1_Template, 2, 11, "div", 39);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_4_div_1_div_2_Template, 6, 8, "div", 39);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext().layout;
    const ctx_r39 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r39._listConfig.staticList.hasOnPageFilter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", layout_r38.sorting);
} }
const _c35 = function (a0, a1, a2) { return { "mx-primary-text": a0, "mx-secondary-text": a1, "mx-tertiary-text": a2 }; };
const _c36 = function (a0, a1, a2) { return { cell: a0, row: a1, rowIndex: a2 }; };
function StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 55);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r63 = ɵngcc0.ɵɵnextContext();
    const row_r55 = ctx_r63.$implicit;
    const rowIndex_r56 = ctx_r63.index;
    ɵngcc0.ɵɵnextContext(3);
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r58.fieldStyle && cell_r58.fieldStyle.class == "PRIMARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "SECONDARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r58, row_r55, rowIndex_r56));
} }
function StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 56);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r65 = ɵngcc0.ɵɵnextContext();
    const row_r55 = ctx_r65.$implicit;
    const rowIndex_r56 = ctx_r65.index;
    ɵngcc0.ɵɵnextContext(3);
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r58.fieldStyle && cell_r58.fieldStyle.class == "PRIMARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "SECONDARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r58, row_r55, rowIndex_r56));
} }
function StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 52);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_div_1_Template, 2, 11, "div", 53);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_ng_template_2_Template, 2, 11, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ctx.$implicit;
    const _r60 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("colspan", cell_r58.cols)("rowspan", cell_r58.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(cell_r58.displayInline && cell_r58.displayInline.separator && cell_r58.controls && cell_r58.controls.length > 0))("ngIfElse", _r60);
} }
function StaticListComponent_ng_template_4_div_2_mat_card_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 49);
    ɵngcc0.ɵɵelementStart(1, "mat-card-content");
    ɵngcc0.ɵɵelementStart(2, "mat-grid-list", 50);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_Template, 4, 4, "mat-grid-tile", 51);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r54 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("cols", ctx_r54.cellCount)("rowHeight", layout_r38.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r38.cells);
} }
const _c37 = function (a0) { return { "mx-list-infinite-scroll": a0 }; };
function StaticListComponent_ng_template_4_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r68 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 46, 47);
    ɵngcc0.ɵɵlistener("scrolled", function StaticListComponent_ng_template_4_div_2_Template_div_scrolled_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ctx_r67.onPage($event); });
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_4_div_2_mat_card_2_Template, 4, 3, "mat-card", 48);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r53 = ɵngcc0.ɵɵreference(1);
    const ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c37, ctx_r40._listConfig.pagination == "INFINIT_SCROLL"))("infiniteScrollDistance", 2)("infiniteScrollThrottle", 1.5)("infiniteScrollContainer", _r53);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r40._record.rows);
} }
function StaticListComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_4_div_1_Template, 3, 2, "div", 36);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_4_div_2_Template, 3, 7, "div", 37);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ctx.layout;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4._listConfig.staticList.hasOnPageFilter || layout_r38.sorting);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", layout_r38 && layout_r38.rowHeight);
} }
const _c38 = function (a0, a1, a2) { return { layout: a0, row: a1, rowIndex: a2 }; };
function StaticListComponent_ng_template_6_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 49);
    ɵngcc0.ɵɵelementStart(1, "mat-card-content");
    ɵngcc0.ɵɵelementContainer(2, 34);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r75 = ɵngcc0.ɵɵnextContext();
    const layout_r69 = ctx_r75.layout;
    const row_r70 = ctx_r75.row;
    const rowIndex_r71 = ctx_r75.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c38, layout_r69, row_r70, rowIndex_r71));
} }
function StaticListComponent_ng_template_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 49);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r76 = ɵngcc0.ɵɵnextContext();
    const layout_r69 = ctx_r76.layout;
    const row_r70 = ctx_r76.row;
    const rowIndex_r71 = ctx_r76.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c38, layout_r69, row_r70, rowIndex_r71));
} }
function StaticListComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_6_mat_card_0_Template, 3, 6, "mat-card", 57);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_6_span_1_Template, 2, 6, "span", 57);
} if (rf & 2) {
    const withCard_r72 = ctx.withCard;
    ɵngcc0.ɵɵproperty("ngIf", withCard_r72);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !withCard_r72);
} }
function StaticListComponent_ng_template_8_mat_grid_tile_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 59);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r86 = ɵngcc0.ɵɵnextContext();
    const row_r78 = ctx_r86.row;
    const rowIndex_r79 = ctx_r86.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r81.fieldStyle && cell_r81.fieldStyle.class == "PRIMARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "SECONDARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r81, row_r78, rowIndex_r79));
} }
function StaticListComponent_ng_template_8_mat_grid_tile_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 56);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r88 = ɵngcc0.ɵɵnextContext();
    const row_r78 = ctx_r88.row;
    const rowIndex_r79 = ctx_r88.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r81.fieldStyle && cell_r81.fieldStyle.class == "PRIMARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "SECONDARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r81, row_r78, rowIndex_r79));
} }
function StaticListComponent_ng_template_8_mat_grid_tile_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 52);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_8_mat_grid_tile_1_div_1_Template, 2, 11, "div", 58);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_8_mat_grid_tile_1_ng_template_2_Template, 2, 11, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ctx.$implicit;
    const _r83 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("colspan", cell_r81.cols)("rowspan", cell_r81.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(cell_r81.displayInline && cell_r81.displayInline.separator && cell_r81.controls && cell_r81.controls.length > 0))("ngIfElse", _r83);
} }
function StaticListComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-list", 50);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_8_mat_grid_tile_1_Template, 4, 4, "mat-grid-tile", 51);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r77 = ctx.layout;
    ɵngcc0.ɵɵproperty("cols", layout_r77.cellCount)("rowHeight", layout_r77.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r77.cells);
} }
function StaticListComponent_ng_template_10_span_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 66);
} if (rf & 2) {
    const cell_r89 = ɵngcc0.ɵɵnextContext(2).cell;
    ɵngcc0.ɵɵproperty("innerHtml", cell_r89.displayInline.separator, ɵngcc0.ɵɵsanitizeHtml);
} }
const _c39 = function (a0, a1, a2, a3) { return { "mx-list-field-disabled": a0, "mx-primary-text": a1, "mx-secondary-text": a2, "mx-tertiary-text": a3 }; };
function StaticListComponent_ng_template_10_span_0_mx_field_2_Template(rf, ctx) { if (rf & 1) {
    const _r101 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 67);
    ɵngcc0.ɵɵlistener("onFieldChange", function StaticListComponent_ng_template_10_span_0_mx_field_2_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r101); const ctx_r100 = ɵngcc0.ɵɵnextContext(3); ctx_r100.fieldChange($event); return $event.event && $event.event.stopPropagation ? $event.event.stopPropagation() : ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r102 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r102.rowIndex;
    const row_r90 = ctx_r102.row;
    const ctx_r96 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("sourceType", "LIST")("sourceIdentifier", ctx_r96._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r96.widgetArrayIndex)("form", ctx_r96.formIndex == rowIndex_r91 && ctx_r96.form != undefined ? ctx_r96.form : null)("fieldControl", ctx_r96.formIndex == rowIndex_r91 && ctx_r96.form != undefined ? ctx_r96.form.controls[control_r93.control.key] : null)("field", control_r93.control)("displayMode", ctx_r96.displayModes[rowIndex_r91])("hideLabel", true)("value", ctx_r96.getValue(control_r93.colIndex, control_r93.cControlIndex, row_r90, control_r93.control.value))("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c39, ctx_r96._listConfig && row_r90 && ctx_r96._listConfig.disableRow && ctx_r96._listConfig.disableRow(row_r90) || ctx_r96.disabled, control_r93.fieldStyle && control_r93.fieldStyle.class == "PRIMARY", control_r93.fieldStyle && control_r93.fieldStyle.class == "SECONDARY", control_r93.fieldStyle && control_r93.fieldStyle.class == "TERTIARY"))("row", row_r90)("keyMap", ctx_r96.keyMap);
} }
function StaticListComponent_ng_template_10_span_0_mx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r105 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 68);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_ng_template_10_span_0_mx_button_3_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r105); const ctx_r104 = ɵngcc0.ɵɵnextContext(3); ctx_r104.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r106 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r106.rowIndex;
    const cell_r89 = ctx_r106.cell;
    const row_r90 = ctx_r106.row;
    const ctx_r97 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("identifier", "listFieldAsLink")("form", ctx_r97.formIndex == rowIndex_r91 && ctx_r97.form != undefined ? ctx_r97.form : null)("sourceIdentifier", ctx_r97._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r97.widgetArrayIndex)("button", cell_r89.link)("label", ctx_r97.getValue(control_r93.colIndex, control_r93.cControlIndex, row_r90, control_r93.control.value))("context", ctx_r97.formIndex == rowIndex_r91 && ctx_r97.form != undefined ? ctx_r97.form.value : null)("originalData", row_r90)("parentHierarchy", ctx_r97.parent)("disabled", ctx_r97._listConfig && row_r90 && ctx_r97._listConfig.disableRow && ctx_r97._listConfig.disableRow(row_r90) || ctx_r97.disabled);
} }
function StaticListComponent_ng_template_10_span_0_mx_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r110 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 69);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_ng_template_10_span_0_mx_button_4_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r110); const rowIndex_r91 = ɵngcc0.ɵɵnextContext(2).rowIndex; const ctx_r108 = ɵngcc0.ɵɵnextContext(); ctx_r108.setRowEditablity(rowIndex_r91); ctx_r108.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r111 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r111.rowIndex;
    const row_r90 = ctx_r111.row;
    const ctx_r98 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("form", ctx_r98.formIndex == rowIndex_r91 && ctx_r98.form != undefined ? ctx_r98.form : null)("sourceIdentifier", ctx_r98._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r98.widgetArrayIndex)("button", control_r93.control)("context", ctx_r98.formIndex == rowIndex_r91 && ctx_r98.form != undefined ? ctx_r98.form.value : null)("originalData", row_r90)("parentHierarchy", ctx_r98.parent)("disabled", ctx_r98._listConfig && row_r90 && ctx_r98._listConfig.disableRow && ctx_r98._listConfig.disableRow(row_r90) || ctx_r98.disabled);
} }
const _c40 = function (a0) { return { "fullwidth": a0 }; };
function StaticListComponent_ng_template_10_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 61);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_10_span_0_span_1_Template, 1, 1, "span", 62);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_10_span_0_mx_field_2_Template, 1, 18, "mx-field", 63);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_ng_template_10_span_0_mx_button_3_Template, 1, 11, "mx-button", 64);
    ɵngcc0.ɵɵtemplate(4, StaticListComponent_ng_template_10_span_0_mx_button_4_Template, 1, 9, "mx-button", 65);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ctx.$implicit;
    const cControlIndex_r94 = ctx.index;
    const cell_r89 = ɵngcc0.ɵɵnextContext().cell;
    ɵngcc0.ɵɵclassMapInterpolate2("", control_r93 == null ? null : control_r93.alignment == null ? null : control_r93.alignment.vertical, " ", control_r93 == null ? null : control_r93.alignment == null ? null : control_r93.alignment.horizontal, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c40, control_r93.fullWidth));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r89.displayInline && cell_r89.displayInline.separator && cControlIndex_r94 > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r93.control && (!cell_r89.link || cell_r89.link && cell_r89.linkKey && cell_r89.linkKey != control_r93.control.key) && control_r93.type == "FIELD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r89.link && (cell_r89.linkKey && cell_r89.linkKey == control_r93.control.key || !cell_r89.linkKey) && control_r93.type == "FIELD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r93.type == "BUTTON");
} }
function StaticListComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_10_span_0_Template, 5, 11, "span", 60);
} if (rf & 2) {
    const cell_r89 = ctx.cell;
    ɵngcc0.ɵɵproperty("ngForOf", cell_r89.controls);
} }
function StaticListComponent_ng_template_12_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r119 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 73);
    ɵngcc0.ɵɵlistener("onFieldChange", function StaticListComponent_ng_template_12_div_1_div_1_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r119); const ctx_r118 = ɵngcc0.ɵɵnextContext(3); ctx_r118.updateFilter($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r116 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r116._listConfig.staticList.hasOnPageFilter && !ctx_r116._listConfig.hasColumnSelection ? 12 : 9, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r116.commonListForm)("fieldControl", ctx_r116.commonListForm != undefined && ctx_r116.commonListForm.controls["pageFilter"] ? ctx_r116.commonListForm.controls["pageFilter"] : null)("field", ctx_r116.filterField)("hideLabel", true)("displayMode", "EDIT");
} }
function StaticListComponent_ng_template_12_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r121 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 74);
    ɵngcc0.ɵɵlistener("onFieldChange", function StaticListComponent_ng_template_12_div_1_div_2_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r121); const ctx_r120 = ɵngcc0.ɵɵnextContext(3); return ctx_r120.updateColumnDisplay($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r117 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", !ctx_r117._listConfig.staticList.hasOnPageFilter && ctx_r117._listConfig.hasColumnSelection ? 12 : 3, " mdc-layout-grid--align-right");
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r117.commonListForm)("fieldControl", ctx_r117.commonListForm != undefined && ctx_r117.commonListForm.controls["columnSelector"] ? ctx_r117.commonListForm.controls["columnSelector"] : null)("field", ctx_r117.columnSelectorField)("hideLabel", true)("displayMode", "EDIT");
} }
function StaticListComponent_ng_template_12_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_1_div_1_Template, 2, 11, "div", 39);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_1_div_2_Template, 2, 13, "div", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r114 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r114._listConfig.staticList.hasOnPageFilter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r114._listConfig.hasColumnSelection);
} }
function StaticListComponent_ng_template_12_div_3_tr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 88);
    ɵngcc0.ɵɵelementStart(1, "td", 89);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r122 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r122._listConfig.noRecordFound ? ctx_r122._listConfig.noRecordFound : "No data found", " ");
} }
function StaticListComponent_ng_template_12_div_3_th_4_Template(rf, ctx) { if (rf & 1) {
    const _r134 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 90);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 91);
    ɵngcc0.ɵɵlistener("change", function StaticListComponent_ng_template_12_div_3_th_4_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r134); const ctx_r133 = ɵngcc0.ɵɵnextContext(3); return $event ? ctx_r133.masterToggle() : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r123 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r123._listConfig.hideHeaderRow);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", ctx_r123.selection.hasValue() && ctx_r123.isAllSelected())("indeterminate", ctx_r123.selection.hasValue() && !ctx_r123.isAllSelected())("aria-label", ctx_r123.checkboxLabel());
} }
const _c41 = function (a0, a1) { return { "mx-row-editable": a0, "mx-row-non-editable": a1 }; };
function StaticListComponent_ng_template_12_div_3_td_5_Template(rf, ctx) { if (rf & 1) {
    const _r138 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 92);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 93);
    ɵngcc0.ɵɵlistener("change", function StaticListComponent_ng_template_12_div_3_td_5_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const row_r135 = ctx.$implicit; const ctx_r137 = ɵngcc0.ɵɵnextContext(3); return $event ? ctx_r137.selection.toggle(row_r135) : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r135 = ctx.$implicit;
    const rowIndex_r136 = ctx.dataIndex;
    const ctx_r124 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r124.rowColors && ctx_r124.rowColors[rowIndex_r136] ? ctx_r124.rowColors[rowIndex_r136].bgColor : "")("color", ctx_r124.rowColors && ctx_r124.rowColors[rowIndex_r136] ? ctx_r124.rowColors[rowIndex_r136].textColor : "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(8, _c41, ctx_r124.inlineEditButtons && ctx_r124.inlineEditButtons[rowIndex_r136] && ctx_r124.inlineEditButtons[rowIndex_r136].label == "Cancel", !(ctx_r124.inlineEditButtons && ctx_r124.inlineEditButtons[rowIndex_r136] && ctx_r124.inlineEditButtons[rowIndex_r136].label == "Cancel")));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r124._listConfig && row_r135 && ctx_r124._listConfig.disableRow && ctx_r124._listConfig.disableRow(row_r135) || ctx_r124.disabled)("checked", ctx_r124.selection.isSelected(row_r135))("aria-label", ctx_r124.checkboxLabel(row_r135));
} }
const _c42 = function (a0) { return { "mx-list-field-first": a0 }; };
function StaticListComponent_ng_template_12_div_3_ng_container_6_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 97);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r143 = ɵngcc0.ɵɵnextContext();
    const column_r139 = ctx_r143.$implicit;
    const colIndex_r140 = ctx_r143.index;
    const ctx_r141 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", ctx_r141.displayVertical ? "" : column_r139.width / ctx_r141.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r141._listConfig.hideHeaderRow);
    ɵngcc0.ɵɵproperty("disabled", !column_r139.sortable)("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c42, colIndex_r140 == 0));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r141.getColumnLabel(column_r139), " ");
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c43 = function (a0, a1) { return { row: a0, index: a1 }; };
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_ng_container_1_Template, 1, 0, "ng-container", 101);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r153 = ɵngcc0.ɵɵnextContext(2);
    const row_r144 = ctx_r153.$implicit;
    const rowIndex_r145 = ctx_r153.dataIndex;
    const column_r139 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cfTemplate", "<style>" + (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.css) + "</style>" + (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html))("cfTemplateContext", ɵngcc0.ɵɵpureFunction2(4, _c43, row_r144, rowIndex_r145));
} }
const _c44 = function (a0, a1, a2) { return { layout: a0, row: a1, rowIndex: a2, withCard: false }; };
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r155 = ɵngcc0.ɵɵnextContext(2);
    const row_r144 = ctx_r155.$implicit;
    const rowIndex_r145 = ctx_r155.dataIndex;
    const column_r139 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r5 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(4, _c44, column_r139.template.layout, row_r144, rowIndex_r145));
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_Template, 2, 7, "div", 100);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_2_Template, 2, 8, "div", 100);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.layout);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(4).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(column_r139.displayInline.separator);
} }
const _c45 = function (a0) { return { "mx-list-field-disabled": a0 }; };
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template(rf, ctx) { if (rf & 1) {
    const _r165 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 67);
    ɵngcc0.ɵɵlistener("onFieldChange", function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r165); const ctx_r164 = ɵngcc0.ɵɵnextContext(7); ctx_r164.fieldChange($event); return $event.event && $event.event.stopPropagation ? $event.event.stopPropagation() : ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r167 = ɵngcc0.ɵɵnextContext();
    const field_r158 = ctx_r167.$implicit;
    const cFieldIndex_r159 = ctx_r167.index;
    const ctx_r166 = ɵngcc0.ɵɵnextContext(2);
    const rowIndex_r145 = ctx_r166.dataIndex;
    const row_r144 = ctx_r166.$implicit;
    const colIndex_r140 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r161 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("sourceType", "LIST")("sourceIdentifier", ctx_r161._listConfig.identifier)("sourceIndex", rowIndex_r145)("widgetArrayIndex", ctx_r161.widgetArrayIndex)("form", ctx_r161.formIndex == rowIndex_r145 && ctx_r161.form != undefined ? ctx_r161.form : null)("fieldControl", ctx_r161.formIndex == rowIndex_r145 && ctx_r161.form != undefined ? ctx_r161.form.controls[field_r158.key] : null)("field", field_r158)("displayMode", ctx_r161.displayModes[rowIndex_r145])("hideLabel", true)("value", ctx_r161.getValue(colIndex_r140, cFieldIndex_r159, row_r144, field_r158.value))("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c45, ctx_r161._listConfig && row_r144 && ctx_r161._listConfig.disableRow && ctx_r161._listConfig.disableRow(row_r144) || ctx_r161.disabled))("row", row_r144)("keyMap", ctx_r161.keyMap);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r170 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 68);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r169 = ɵngcc0.ɵɵnextContext(7); ctx_r169.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r173 = ɵngcc0.ɵɵnextContext();
    const cFieldIndex_r159 = ctx_r173.index;
    const field_r158 = ctx_r173.$implicit;
    const ctx_r171 = ɵngcc0.ɵɵnextContext(2);
    const rowIndex_r145 = ctx_r171.dataIndex;
    const row_r144 = ctx_r171.$implicit;
    const ctx_r172 = ɵngcc0.ɵɵnextContext();
    const column_r139 = ctx_r172.$implicit;
    const colIndex_r140 = ctx_r172.index;
    const ctx_r162 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("identifier", "listFieldAsLink")("form", ctx_r162.formIndex == rowIndex_r145 && ctx_r162.form != undefined ? ctx_r162.form : null)("sourceIdentifier", ctx_r162._listConfig.identifier)("sourceIndex", rowIndex_r145)("widgetArrayIndex", ctx_r162.widgetArrayIndex)("button", column_r139.link)("label", ctx_r162.getValue(colIndex_r140, cFieldIndex_r159, row_r144, field_r158.value))("context", ctx_r162.formIndex == rowIndex_r145 && ctx_r162.form != undefined ? ctx_r162.form.value : null)("originalData", row_r144)("parentHierarchy", ctx_r162.parent)("disabled", ctx_r162._listConfig && row_r144 && ctx_r162._listConfig.disableRow && ctx_r162._listConfig.disableRow(row_r144) || ctx_r162.disabled);
} }
const _c46 = function (a0, a1) { return { "mx-list-field-not-first": a0, "mx-list-field-inline": a1 }; };
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 61);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_span_1_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template, 1, 15, "mx-field", 63);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template, 1, 11, "mx-button", 64);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r158 = ctx.$implicit;
    const cFieldIndex_r159 = ctx.index;
    const column_r139 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c46, cFieldIndex_r159 > 0, column_r139.displayInline && column_r139.displayInline.separator));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139.displayInline && column_r139.displayInline.separator && cFieldIndex_r159 > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !column_r139.link || column_r139.link && column_r139.linkKey && column_r139.linkKey != field_r158.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139.link && (column_r139.linkKey && column_r139.linkKey == field_r158.key || !column_r139.linkKey));
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_Template, 4, 7, "div", 102);
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngForOf", column_r139.fields);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r177 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 98);
    ɵngcc0.ɵɵlistener("click", function StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r177); const row_r144 = ctx.$implicit; const rowIndex_r145 = ctx.dataIndex; const ctx_r176 = ɵngcc0.ɵɵnextContext(4); return ctx_r176._listConfig.rowAction ? ctx_r176.rowClick(row_r144, rowIndex_r145, ctx_r176.formIndex == rowIndex_r145 && ctx_r176.form != undefined ? ctx_r176.form.value : null, $event) : ctx_r176._listConfig.rowAction; });
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_Template, 3, 2, "ng-container", 85);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_Template, 1, 1, "ng-template", null, 99, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r145 = ctx.dataIndex;
    const _r147 = ɵngcc0.ɵɵreference(3);
    const ctx_r178 = ɵngcc0.ɵɵnextContext();
    const colIndex_r140 = ctx_r178.index;
    const column_r139 = ctx_r178.$implicit;
    const ctx_r142 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r142.cellColors && ctx_r142.cellColors[rowIndex_r145] && ctx_r142.cellColors[rowIndex_r145][colIndex_r140] ? ctx_r142.cellColors[rowIndex_r145][colIndex_r140].bgColor : "")("color", ctx_r142.cellColors && ctx_r142.cellColors[rowIndex_r145] && ctx_r142.cellColors[rowIndex_r145][colIndex_r140] ? ctx_r142.cellColors[rowIndex_r145][colIndex_r140].textColor : "")("width", ctx_r142.displayVertical ? "" : column_r139.width / ctx_r142.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c41, ctx_r142.inlineEditButtons && ctx_r142.inlineEditButtons[rowIndex_r145] && ctx_r142.inlineEditButtons[rowIndex_r145].label == "Cancel", !(ctx_r142.inlineEditButtons && ctx_r142.inlineEditButtons[rowIndex_r145] && ctx_r142.inlineEditButtons[rowIndex_r145].label == "Cancel")));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html) || (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.layout))("ngIfElse", _r147);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 94);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_6_th_1_Template, 2, 9, "th", 95);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_6_td_2_Template, 4, 12, "td", 96);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r139 = ctx.$implicit;
    const ctx_r125 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("matColumnDef", ctx_r125.getColumnKey(column_r139));
} }
function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template(rf, ctx) { if (rf & 1) {
    const _r184 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-static-list", 107);
    ɵngcc0.ɵɵlistener("onFormChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r183 = ɵngcc0.ɵɵnextContext(4); return ctx_r183.formChange($event); })("onFieldChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r185 = ɵngcc0.ɵɵnextContext(4); ctx_r185.fieldChange($event); return $event.event.stopPropagation(); })("onButtonClick", function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r186 = ɵngcc0.ɵɵnextContext(4); ctx_r186.buttonClick($event); return $event.event.stopPropagation(); })("onPageChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r187 = ɵngcc0.ɵɵnextContext(4); return ctx_r187.onPage($event); })("onSortChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r188 = ɵngcc0.ɵɵnextContext(4); return ctx_r188.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r179 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r181 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("listConfig", ctx_r181._listConfig.child.record)("sourceIdentifier", ctx_r181.sourceIdentifier)("record", ctx_r181.getChildRows(ctx_r181.expandedRow))("keyMap", ctx_r181.keyMap)("expanded", ctx_r181._expanded)("listReset", ctx_r181.listReset)("parent", ctx_r181.getObjectTree(row_r179))("disabled", ctx_r181._listConfig && row_r179 && ctx_r181._listConfig.disableRow && ctx_r181._listConfig.disableRow(row_r179) || ctx_r181.disabled);
} }
function StaticListComponent_ng_template_12_div_3_td_8_mx_form_3_Template(rf, ctx) { if (rf & 1) {
    const _r191 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-form", 108);
    ɵngcc0.ɵɵlistener("onFormChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r190 = ɵngcc0.ɵɵnextContext(4); return ctx_r190.formChange($event); })("onFieldChange", function StaticListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r192 = ɵngcc0.ɵɵnextContext(4); return ctx_r192.fieldChange($event); })("onButtonClick", function StaticListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r193 = ɵngcc0.ɵɵnextContext(4); return ctx_r193.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r180 = ɵngcc0.ɵɵnextContext().dataIndex;
    const ctx_r182 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("formConfig", ctx_r182._listConfig.child.record)("sourceIdentifier", ctx_r182._listConfig.identifier)("sourceIndex", rowIndex_r180)("widgetArrayIndex", ctx_r182.widgetArrayIndex)("record", ctx_r182.getChildRows(ctx_r182.expandedRow))("keyMap", ctx_r182.keyMap)("reset", ctx_r182.listReset);
} }
function StaticListComponent_ng_template_12_div_3_td_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 103);
    ɵngcc0.ɵɵelementStart(1, "div", 104);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template, 1, 10, "mx-static-list", 105);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_ng_template_12_div_3_td_8_mx_form_3_Template, 1, 9, "mx-form", 106);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r179 = ctx.$implicit;
    const rowIndex_r180 = ctx.dataIndex;
    const ctx_r126 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c41, ctx_r126.inlineEditButtons && ctx_r126.inlineEditButtons[rowIndex_r180] && ctx_r126.inlineEditButtons[rowIndex_r180].label == "Cancel", !(ctx_r126.inlineEditButtons && ctx_r126.inlineEditButtons[rowIndex_r180] && ctx_r126.inlineEditButtons[rowIndex_r180].label == "Cancel")));
    ɵngcc0.ɵɵattribute("colspan", ctx_r126.childColumnCount);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("@detailExpand", row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true ? "expanded" : "collapsed");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r126._listConfig.child && ctx_r126._listConfig.child.type == "LIST" && ctx_r126._listConfig.child.record && (row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r126._listConfig.child && ctx_r126._listConfig.child.type == "FORM" && (row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true));
} }
function StaticListComponent_ng_template_12_div_3_ng_container_9_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 112);
    ɵngcc0.ɵɵtext(1, " Action ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r195 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵstyleProp("width", ctx_r195.displayVertical ? "" : ctx_r195._listConfig.actionWidth / ctx_r195.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r195._listConfig.hideHeaderRow);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r203 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 116);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r203); const rowIndex_r198 = ɵngcc0.ɵɵnextContext().dataIndex; const ctx_r201 = ɵngcc0.ɵɵnextContext(4); ctx_r201.setRowEditablity(rowIndex_r198); ctx_r201.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r204 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r198 = ctx_r204.dataIndex;
    const row_r197 = ctx_r204.$implicit;
    const ctx_r199 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("form", ctx_r199.formIndex == rowIndex_r198 && ctx_r199.form != undefined ? ctx_r199.form : null)("sourceIdentifier", ctx_r199._listConfig.identifier)("sourceIndex", rowIndex_r198)("widgetArrayIndex", ctx_r199.widgetArrayIndex)("button", ctx_r199.inlineEditButtons[rowIndex_r198])("context", ctx_r199.formIndex == rowIndex_r198 && ctx_r199.form != undefined ? ctx_r199.form.value : null)("originalData", row_r197)("parentHierarchy", ctx_r199.parent)("disabled", ctx_r199._listConfig && row_r197 && ctx_r199._listConfig.disableRow && ctx_r199._listConfig.disableRow(row_r197) || ctx_r199.disabled);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template(rf, ctx) { if (rf & 1) {
    const _r206 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button-group", 117);
    ɵngcc0.ɵɵlistener("onClick", function StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template_mx_button_group_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r206); const ctx_r205 = ɵngcc0.ɵɵnextContext(5); return ctx_r205.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r207 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r198 = ctx_r207.dataIndex;
    const row_r197 = ctx_r207.$implicit;
    const ctx_r200 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("buttons", ctx_r200._listConfig.actions)("form", ctx_r200.formIndex == rowIndex_r198 && ctx_r200.form != undefined ? ctx_r200.form : null)("sourceIdentifier", ctx_r200._listConfig.identifier)("sourceIndex", rowIndex_r198)("widgetArrayIndex", ctx_r200.widgetArrayIndex)("context", ctx_r200.formIndex == rowIndex_r198 && ctx_r200.form != undefined ? ctx_r200.form.value : null)("originalData", row_r197)("parentHierarchy", ctx_r200.parent)("disabled", ctx_r200._listConfig && row_r197 && ctx_r200._listConfig.disableRow && ctx_r200._listConfig.disableRow(row_r197) || ctx_r200.disabled);
} }
function StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 113);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template, 1, 9, "mx-button", 114);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template, 1, 9, "mx-button-group", 115);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r198 = ctx.dataIndex;
    const ctx_r196 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r196.rowColors && ctx_r196.rowColors[rowIndex_r198] ? ctx_r196.rowColors[rowIndex_r198].bgColor : "")("color", ctx_r196.rowColors && ctx_r196.rowColors[rowIndex_r198] ? ctx_r196.rowColors[rowIndex_r198].textColor : "")("width", ctx_r196.displayVertical ? "" : ctx_r196._listConfig.actionWidth / ctx_r196.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r196.isInlineEditable && ctx_r196.inlineEditButtons && ctx_r196.inlineEditButtons[rowIndex_r198] && ctx_r196.inlineEditButtons[rowIndex_r198].icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r196.isInlineEditable || ctx_r196.inlineEditButtons && ctx_r196.inlineEditButtons[rowIndex_r198] && ctx_r196.inlineEditButtons[rowIndex_r198].label == "Cancel");
} }
function StaticListComponent_ng_template_12_div_3_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 109);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_ng_container_9_th_1_Template, 2, 4, "th", 110);
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_ng_container_9_td_2_Template, 3, 8, "td", 111);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function StaticListComponent_ng_template_12_div_3_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 118);
} }
const _c47 = function (a0) { return { "without-hover": a0 }; };
function StaticListComponent_ng_template_12_div_3_div_11_tr_1_Template(rf, ctx) { if (rf & 1) {
    const _r212 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 120);
    ɵngcc0.ɵɵlistener("mouseenter", function StaticListComponent_ng_template_12_div_3_div_11_tr_1_Template_tr_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r212); const i_r210 = ctx.dataIndex; const row_r209 = ctx.$implicit; const ctx_r211 = ɵngcc0.ɵɵnextContext(4); return ctx_r211.onHover($event, i_r210, ctx_r211._listConfig && ctx_r211._listConfig.child && ctx_r211._listConfig.child.record && ctx_r211.expandedRow === row_r209 ? null : row_r209); })("click", function StaticListComponent_ng_template_12_div_3_div_11_tr_1_Template_tr_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r212); const row_r209 = ctx.$implicit; const ctx_r213 = ɵngcc0.ɵɵnextContext(4); return ctx_r213.expandedRow = ctx_r213._listConfig && ctx_r213._listConfig.child && ctx_r213._listConfig.child.record && ctx_r213.expandedRow === row_r209 ? null : row_r209; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r208 = ɵngcc0.ɵɵnextContext(4);
    const _r13 = ɵngcc0.ɵɵreference(15);
    ɵngcc0.ɵɵproperty("tooltip", _r13)("position", ctx_r208.tooltipPosition)("width", ctx_r208._listConfig == null ? null : ctx_r208._listConfig.row == null ? null : ctx_r208._listConfig.row.hover == null ? null : ctx_r208._listConfig.row.hover.width)("max-width", ctx_r208._listConfig == null ? null : ctx_r208._listConfig.row == null ? null : ctx_r208._listConfig.row.hover == null ? null : ctx_r208._listConfig.row.hover.width)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c47, !(ctx_r208._listConfig.row && ctx_r208._listConfig.row.hover)));
} }
function StaticListComponent_ng_template_12_div_3_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_3_div_11_tr_1_Template, 1, 7, "tr", 119);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r129 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r129.columnNames);
} }
function StaticListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template(rf, ctx) { if (rf & 1) {
    const _r218 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 122);
    ɵngcc0.ɵɵlistener("click", function StaticListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template_tr_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r218); const row_r215 = ctx.$implicit; const ctx_r217 = ɵngcc0.ɵɵnextContext(4); return ctx_r217.expandedRow = ctx_r217._listConfig && ctx_r217._listConfig.child && ctx_r217._listConfig.child.record && ctx_r217.expandedRow === row_r215 ? null : row_r215; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r214 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c47, !(ctx_r214._listConfig.row && ctx_r214._listConfig.row.hover)));
} }
function StaticListComponent_ng_template_12_div_3_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template, 1, 3, "tr", 121);
} if (rf & 2) {
    const ctx_r131 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r131.columnNames);
} }
const _c48 = function (a0) { return { "mx-detail-row-hide": a0 }; };
function StaticListComponent_ng_template_12_div_3_tr_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 123);
} if (rf & 2) {
    const ctx_r132 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c48, !ctx_r132._listConfig.child || !ctx_r132._listConfig.child.record));
} }
const _c49 = function (a0, a1, a2) { return { "mx-table-hover": a0, "mx-table-alternate": a1, "mx-table-without-header": a2 }; };
const _c50 = function () { return ["expandedRow"]; };
function StaticListComponent_ng_template_12_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r221 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "table", 75);
    ɵngcc0.ɵɵlistener("matSortChange", function StaticListComponent_ng_template_12_div_3_Template_table_matSortChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r221); const ctx_r220 = ɵngcc0.ɵɵnextContext(2); return ctx_r220.onSort($event); });
    ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_12_div_3_tr_2_Template, 3, 1, "tr", 76);
    ɵngcc0.ɵɵelementContainerStart(3, 77);
    ɵngcc0.ɵɵtemplate(4, StaticListComponent_ng_template_12_div_3_th_4_Template, 2, 5, "th", 78);
    ɵngcc0.ɵɵtemplate(5, StaticListComponent_ng_template_12_div_3_td_5_Template, 2, 11, "td", 79);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(6, StaticListComponent_ng_template_12_div_3_ng_container_6_Template, 3, 1, "ng-container", 80);
    ɵngcc0.ɵɵelementContainerStart(7, 81);
    ɵngcc0.ɵɵtemplate(8, StaticListComponent_ng_template_12_div_3_td_8_Template, 4, 8, "td", 82);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(9, StaticListComponent_ng_template_12_div_3_ng_container_9_Template, 3, 0, "ng-container", 83);
    ɵngcc0.ɵɵtemplate(10, StaticListComponent_ng_template_12_div_3_tr_10_Template, 1, 0, "tr", 84);
    ɵngcc0.ɵɵtemplate(11, StaticListComponent_ng_template_12_div_3_div_11_Template, 2, 1, "div", 85);
    ɵngcc0.ɵɵtemplate(12, StaticListComponent_ng_template_12_div_3_ng_template_12_Template, 1, 1, "ng-template", null, 86, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(14, StaticListComponent_ng_template_12_div_3_tr_14_Template, 1, 3, "tr", 87);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r130 = ɵngcc0.ɵɵreference(13);
    const ctx_r115 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", "100", "%");
    ɵngcc0.ɵɵproperty("dataSource", ctx_r115.dataSource)("ngClass", ɵngcc0.ɵɵpureFunction3(13, _c49, ctx_r115._listConfig.shade && ctx_r115._listConfig.shade.type == "HOVER", ctx_r115._listConfig.shade && ctx_r115._listConfig.shade.type == "ALTERNATE", ctx_r115._listConfig.hideHeaderRow))("matSortActive", ctx_r115._listConfig.defaultSort ? ctx_r115._listConfig.defaultSort.column : "")("matSortDirection", ctx_r115._listConfig.defaultSort ? ctx_r115._listConfig.defaultSort.order : "");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r115.columnConfigs);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r115._listConfig.actions && ctx_r115._listConfig.actions.length > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matHeaderRowDef", ctx_r115.columnNames)("matHeaderRowDefSticky", ctx_r115._listConfig.stickyHeader);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r115._listConfig.row && ctx_r115._listConfig.row.hover)("ngIfElse", _r130);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ɵngcc0.ɵɵpureFunction0(17, _c50));
} }
function StaticListComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 70);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_12_div_1_Template, 3, 2, "div", 36);
    ɵngcc0.ɵɵelementStart(2, "div", 25);
    ɵngcc0.ɵɵtemplate(3, StaticListComponent_ng_template_12_div_3_Template, 15, 18, "div", 71);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12._listConfig.staticList.hasOnPageFilter || ctx_r12._listConfig.hasColumnSelection);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.columnNames);
} }
function StaticListComponent_ng_template_14_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 126);
} if (rf & 2) {
    const ctx_r222 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c1, ctx_r222._listConfig.row.hover.width + "px"));
} }
function StaticListComponent_ng_template_14_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 127);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r223 = ɵngcc0.ɵɵnextContext(2);
    const _r5 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r223._listConfig.row.hover.width + "px"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(5, _c44, ctx_r223._listConfig.row.hover.template.layout, ctx_r223.hoverRowData, ctx_r223.hoverRowIndex));
} }
function StaticListComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_14_div_0_Template, 1, 3, "div", 124);
    ɵngcc0.ɵɵtemplate(1, StaticListComponent_ng_template_14_div_1_Template, 2, 9, "div", 125);
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r14._listConfig == null ? null : ctx_r14._listConfig.row == null ? null : ctx_r14._listConfig.row.hover) && ctx_r14._listConfig.row.hover.template && ctx_r14._listConfig.row.hover.template.component);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r14._listConfig == null ? null : ctx_r14._listConfig.row == null ? null : ctx_r14._listConfig.row.hover) && ctx_r14._listConfig.row.hover.template && ctx_r14._listConfig.row.hover.template.layout);
} }
function StaticListComponent_ng_template_16_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div");
} }
function StaticListComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, StaticListComponent_ng_template_16_div_0_Template, 1, 0, "div", 12);
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r16._listConfig == null ? null : ctx_r16._listConfig.row == null ? null : ctx_r16._listConfig.row.template);
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("margin-top", ctx_r23._listConfig.header.subtitle ? 8 : 0, "px");
    ɵngcc0.ɵɵattribute("aria-label", ctx_r23._listConfig.header.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r23._listConfig.header.icon.font, " ");
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r27._listConfig.header.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r27._listConfig.header.icon.font);
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-title");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_mat_icon_2_Template, 2, 2, "mat-icon", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r24._listConfig.header.title, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24._listConfig.header && ctx_r24._listConfig.header.icon && ctx_r24._listConfig.header.icon.font && ctx_r24.iconPosition == "AFTER_TITLE");
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_subtitle_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle", 21);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r25._listConfig.header.subtitle);
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "mx-button-group", 23);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_mat_card_0_mat_card_header_1_div_4_Template_mx_button_group_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r28 = ɵngcc0.ɵɵnextContext(3); return ctx_r28.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r26._listConfig.header.actions)("sourceIdentifier", ctx_r26.sourceIdentifier)("sourceIndex", ctx_r26.sourceIndex)("widgetArrayIndex", ctx_r26.widgetArrayIndex)("originalData", ctx_r26.originalData);
} }
function DynamicListComponent_mat_card_0_mat_card_header_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-header", 14);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_mat_card_0_mat_card_header_1_mat_icon_1_Template, 2, 4, "mat-icon", 15);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_title_2_Template, 3, 2, "mat-card-title", 12);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_mat_card_0_mat_card_header_1_mat_card_subtitle_3_Template, 2, 1, "mat-card-subtitle", 16);
    ɵngcc0.ɵɵtemplate(4, DynamicListComponent_mat_card_0_mat_card_header_1_div_4_Template, 2, 5, "div", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("mx-table-hidden", !ctx_r17._listConfig || ctx_r17.hideHeader || !(ctx_r17._listConfig && ctx_r17._listConfig.header));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.icon && ctx_r17._listConfig.header.icon.font && ctx_r17.iconPosition == "BEFORE_TITLE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.subtitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17._listConfig.header && ctx_r17._listConfig.header.actions);
} }
function DynamicListComponent_mat_card_0_div_3_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 29);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r30 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r30._listConfig.description.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r30._listConfig.description.icon);
} }
function DynamicListComponent_mat_card_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "div", 25);
    ɵngcc0.ɵɵelementStart(2, "div", 26);
    ɵngcc0.ɵɵelementStart(3, "div", 27);
    ɵngcc0.ɵɵtemplate(4, DynamicListComponent_mat_card_0_div_3_mat_icon_4_Template, 2, 2, "mat-icon", 28);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r18._listConfig.description.bgColor)("color", ctx_r18._listConfig.description.textColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r18._listConfig.description.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r18._listConfig.description.text);
} }
function DynamicListComponent_mat_card_0_mat_divider_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider", 30);
} }
function DynamicListComponent_mat_card_0_mat_card_subtitle_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r20._listConfig.description.text);
} }
function DynamicListComponent_mat_card_0_span_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DynamicListComponent_mat_card_0_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_mat_card_0_span_6_ng_container_1_Template, 1, 0, "ng-container", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function DynamicListComponent_mat_card_0_mat_card_actions_7_Template(rf, ctx) { if (rf & 1) {
    const _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 32);
    ɵngcc0.ɵɵelementStart(1, "mat-paginator", 33);
    ɵngcc0.ɵɵlistener("page", function DynamicListComponent_mat_card_0_mat_card_actions_7_Template_mat_paginator_page_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r33); const ctx_r32 = ɵngcc0.ɵɵnextContext(2); return ctx_r32.onPage($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("length", ctx_r22._record.total)("pageSize", ctx_r22.limit)("pageSizeOptions", ctx_r22.pageSizeOptions)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c32, ctx_r22._listConfig.pagination == "NO_PAGE"))("hidePageSize", ctx_r22._listConfig.pagination == "NO_PAGE");
} }
function DynamicListComponent_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card");
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_mat_card_0_mat_card_header_1_Template, 5, 6, "mat-card-header", 9);
    ɵngcc0.ɵɵelementStart(2, "mat-card-content");
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_mat_card_0_div_3_Template, 7, 6, "div", 10);
    ɵngcc0.ɵɵtemplate(4, DynamicListComponent_mat_card_0_mat_divider_4_Template, 1, 0, "mat-divider", 11);
    ɵngcc0.ɵɵtemplate(5, DynamicListComponent_mat_card_0_mat_card_subtitle_5_Template, 2, 1, "mat-card-subtitle", 12);
    ɵngcc0.ɵɵtemplate(6, DynamicListComponent_mat_card_0_span_6_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(7, DynamicListComponent_mat_card_0_mat_card_actions_7_Template, 2, 7, "mat-card-actions", 13);
    ɵngcc0.ɵɵpipe(8, "can");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("mx-hide-card", ctx_r0.hideCard);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hideHeader == false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.description && ctx_r0._listConfig.description.text && ctx_r0._listConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.header && (ctx_r0._listConfig.header.title || ctx_r0._listConfig.header.actions) || ctx_r0._listConfig.description && ctx_r0._listConfig.description.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig.description && ctx_r0._listConfig.description.text && !ctx_r0._listConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0._listConfig);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hideFooter == false && ctx_r0._listConfig.pagination != "INFINIT_SCROLL" && (ctx_r0._listConfig || ctx_r0.hideFooter || !(ctx_r0._listConfig && (ctx_r0._listConfig.permission == null || ctx_r0._listConfig.permission && ɵngcc0.ɵɵpipeBind2(8, 8, ctx_r0._listConfig.permission["subject"], ctx_r0._listConfig.permission["action"])))));
} }
function DynamicListComponent_ng_template_2_span_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DynamicListComponent_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_2_span_0_ng_container_1_Template, 1, 0, "ng-container", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r11 = ɵngcc0.ɵɵreference(13);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r11);
} }
function DynamicListComponent_ng_template_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c33, ctx_r35._listConfig.row.template.layout));
} }
function DynamicListComponent_ng_template_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r36 = ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c33, ctx_r36._listConfig.mobile));
} }
function DynamicListComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_2_span_0_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_2_span_1_Template, 2, 4, "span", 12);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_2_span_2_Template, 2, 4, "span", 12);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.isCustomTemplate && !(ctx_r2.isMobile && ctx_r2._listConfig.mobile && ctx_r2._listConfig.mobile.rowHeight));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isCustomTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.isMobile && ctx_r2._listConfig.mobile && ctx_r2._listConfig.mobile.rowHeight);
} }
function DynamicListComponent_ng_template_4_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 40);
    ɵngcc0.ɵɵlistener("onFieldChange", function DynamicListComponent_ng_template_4_div_1_div_1_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r43 = ɵngcc0.ɵɵnextContext(3); ctx_r43.updateFilter($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r41 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-mobile-search-field-cont mdc-layout-grid__cell--span-", ctx_r41._listConfig.staticList.hasOnPageFilter && !layout_r38.sorting ? 12 : 9, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r41.commonListForm)("fieldControl", ctx_r41.commonListForm != undefined && ctx_r41.commonListForm.controls["pageFilter"] ? ctx_r41.commonListForm.controls["pageFilter"] : null)("field", ctx_r41.filterField)("hideLabel", true)("displayMode", "EDIT");
} }
function DynamicListComponent_ng_template_4_div_1_div_2_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r50 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 44);
    ɵngcc0.ɵɵlistener("click", function DynamicListComponent_ng_template_4_div_1_div_2_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r50); const sorting_r48 = ctx.$implicit; const ctx_r49 = ɵngcc0.ɵɵnextContext(4); return ctx_r49.onSort({ "action": sorting_r48.key, "direction": sorting_r48.direction }); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 45);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const sorting_r48 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", sorting_r48.label, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", sorting_r48.direction == "asc" ? "north" : "south", " ");
} }
function DynamicListComponent_ng_template_4_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 41);
    ɵngcc0.ɵɵtext(2, "filter_list");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-menu", null, 42);
    ɵngcc0.ɵɵtemplate(5, DynamicListComponent_ng_template_4_div_1_div_2_button_5_Template, 4, 2, "button", 43);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r46 = ɵngcc0.ɵɵreference(4);
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r42 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("mx-mobile-sort-field-cont mdc-layout-grid__cell--span-", !ctx_r42._listConfig.staticList.hasOnPageFilter && layout_r38.sorting ? 12 : 3, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c34, ctx_r42.sortDirection == "desc"))("matMenuTriggerFor", _r46);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r38.sorting);
} }
function DynamicListComponent_ng_template_4_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_4_div_1_div_1_Template, 2, 11, "div", 39);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_4_div_1_div_2_Template, 6, 8, "div", 39);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext().layout;
    const ctx_r39 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r39._listConfig.staticList.hasOnPageFilter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", layout_r38.sorting);
} }
function DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 55);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r63 = ɵngcc0.ɵɵnextContext();
    const row_r55 = ctx_r63.$implicit;
    const rowIndex_r56 = ctx_r63.index;
    ɵngcc0.ɵɵnextContext(3);
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r58.fieldStyle && cell_r58.fieldStyle.class == "PRIMARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "SECONDARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r58, row_r55, rowIndex_r56));
} }
function DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 56);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r65 = ɵngcc0.ɵɵnextContext();
    const row_r55 = ctx_r65.$implicit;
    const rowIndex_r56 = ctx_r65.index;
    ɵngcc0.ɵɵnextContext(3);
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r58.fieldStyle && cell_r58.fieldStyle.class == "PRIMARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "SECONDARY", cell_r58.fieldStyle && cell_r58.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r58, row_r55, rowIndex_r56));
} }
function DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 52);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_div_1_Template, 2, 11, "div", 53);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_ng_template_2_Template, 2, 11, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r58 = ctx.$implicit;
    const _r60 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("colspan", cell_r58.cols)("rowspan", cell_r58.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(cell_r58.displayInline && cell_r58.displayInline.separator && cell_r58.controls && cell_r58.controls.length > 0))("ngIfElse", _r60);
} }
function DynamicListComponent_ng_template_4_div_2_mat_card_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 49);
    ɵngcc0.ɵɵelementStart(1, "mat-card-content");
    ɵngcc0.ɵɵelementStart(2, "mat-grid-list", 50);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_ng_template_4_div_2_mat_card_2_mat_grid_tile_3_Template, 4, 4, "mat-grid-tile", 51);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ɵngcc0.ɵɵnextContext(2).layout;
    const ctx_r54 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("cols", ctx_r54.cellCount)("rowHeight", layout_r38.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r38.cells);
} }
function DynamicListComponent_ng_template_4_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r68 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 46, 47);
    ɵngcc0.ɵɵlistener("scrolled", function DynamicListComponent_ng_template_4_div_2_Template_div_scrolled_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ctx_r67.onPage($event); });
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_4_div_2_mat_card_2_Template, 4, 3, "mat-card", 48);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r53 = ɵngcc0.ɵɵreference(1);
    const ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c37, ctx_r40._listConfig.pagination == "INFINIT_SCROLL"))("infiniteScrollDistance", 2)("infiniteScrollThrottle", 1.5)("infiniteScrollContainer", _r53);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r40._record.rows);
} }
function DynamicListComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_4_div_1_Template, 3, 2, "div", 36);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_4_div_2_Template, 3, 7, "div", 37);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r38 = ctx.layout;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4._listConfig.staticList.hasOnPageFilter || layout_r38.sorting);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", layout_r38 && layout_r38.rowHeight);
} }
function DynamicListComponent_ng_template_6_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 49);
    ɵngcc0.ɵɵelementStart(1, "mat-card-content");
    ɵngcc0.ɵɵelementContainer(2, 34);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r75 = ɵngcc0.ɵɵnextContext();
    const layout_r69 = ctx_r75.layout;
    const row_r70 = ctx_r75.row;
    const rowIndex_r71 = ctx_r75.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c38, layout_r69, row_r70, rowIndex_r71));
} }
function DynamicListComponent_ng_template_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 49);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r76 = ɵngcc0.ɵɵnextContext();
    const layout_r69 = ctx_r76.layout;
    const row_r70 = ctx_r76.row;
    const rowIndex_r71 = ctx_r76.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r7 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c38, layout_r69, row_r70, rowIndex_r71));
} }
function DynamicListComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_6_mat_card_0_Template, 3, 6, "mat-card", 57);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_6_span_1_Template, 2, 6, "span", 57);
} if (rf & 2) {
    const withCard_r72 = ctx.withCard;
    ɵngcc0.ɵɵproperty("ngIf", withCard_r72);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !withCard_r72);
} }
function DynamicListComponent_ng_template_8_mat_grid_tile_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 59);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r86 = ɵngcc0.ɵɵnextContext();
    const row_r78 = ctx_r86.row;
    const rowIndex_r79 = ctx_r86.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r81.fieldStyle && cell_r81.fieldStyle.class == "PRIMARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "SECONDARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r81, row_r78, rowIndex_r79));
} }
function DynamicListComponent_ng_template_8_mat_grid_tile_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 56);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r88 = ɵngcc0.ɵɵnextContext();
    const row_r78 = ctx_r88.row;
    const rowIndex_r79 = ctx_r88.rowIndex;
    ɵngcc0.ɵɵnextContext();
    const _r9 = ɵngcc0.ɵɵreference(11);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(3, _c35, cell_r81.fieldStyle && cell_r81.fieldStyle.class == "PRIMARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "SECONDARY", cell_r81.fieldStyle && cell_r81.fieldStyle.class == "TERTIARY"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(7, _c36, cell_r81, row_r78, rowIndex_r79));
} }
function DynamicListComponent_ng_template_8_mat_grid_tile_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 52);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_8_mat_grid_tile_1_div_1_Template, 2, 11, "div", 58);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_8_mat_grid_tile_1_ng_template_2_Template, 2, 11, "ng-template", null, 54, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r81 = ctx.$implicit;
    const _r83 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("colspan", cell_r81.cols)("rowspan", cell_r81.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(cell_r81.displayInline && cell_r81.displayInline.separator && cell_r81.controls && cell_r81.controls.length > 0))("ngIfElse", _r83);
} }
function DynamicListComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-list", 50);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_8_mat_grid_tile_1_Template, 4, 4, "mat-grid-tile", 51);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const layout_r77 = ctx.layout;
    ɵngcc0.ɵɵproperty("cols", layout_r77.cellCount)("rowHeight", layout_r77.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", layout_r77.cells);
} }
function DynamicListComponent_ng_template_10_span_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 66);
} if (rf & 2) {
    const cell_r89 = ɵngcc0.ɵɵnextContext(2).cell;
    ɵngcc0.ɵɵproperty("innerHtml", cell_r89.displayInline.separator, ɵngcc0.ɵɵsanitizeHtml);
} }
function DynamicListComponent_ng_template_10_span_0_mx_field_2_Template(rf, ctx) { if (rf & 1) {
    const _r101 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 67);
    ɵngcc0.ɵɵlistener("onFieldChange", function DynamicListComponent_ng_template_10_span_0_mx_field_2_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r101); const ctx_r100 = ɵngcc0.ɵɵnextContext(3); ctx_r100.fieldChange($event); return $event.event && $event.event.stopPropagation ? $event.event.stopPropagation() : ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r102 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r102.rowIndex;
    const row_r90 = ctx_r102.row;
    const ctx_r96 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("sourceType", "LIST")("sourceIdentifier", ctx_r96._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r96.widgetArrayIndex)("form", ctx_r96.formIndex == rowIndex_r91 && ctx_r96.form != undefined ? ctx_r96.form : null)("fieldControl", ctx_r96.formIndex == rowIndex_r91 && ctx_r96.form != undefined ? ctx_r96.form.controls[control_r93.control.key] : null)("field", control_r93.control)("displayMode", ctx_r96.displayModes[rowIndex_r91])("hideLabel", true)("value", ctx_r96.getValue(control_r93.colIndex, control_r93.cControlIndex, row_r90, control_r93.control.value))("ngClass", ɵngcc0.ɵɵpureFunction4(13, _c39, ctx_r96._listConfig && row_r90 && ctx_r96._listConfig.disableRow && ctx_r96._listConfig.disableRow(row_r90) || ctx_r96.disabled, control_r93.fieldStyle && control_r93.fieldStyle.class == "PRIMARY", control_r93.fieldStyle && control_r93.fieldStyle.class == "SECONDARY", control_r93.fieldStyle && control_r93.fieldStyle.class == "TERTIARY"))("row", row_r90)("keyMap", ctx_r96.keyMap);
} }
function DynamicListComponent_ng_template_10_span_0_mx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r105 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 68);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_ng_template_10_span_0_mx_button_3_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r105); const ctx_r104 = ɵngcc0.ɵɵnextContext(3); ctx_r104.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r106 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r106.rowIndex;
    const cell_r89 = ctx_r106.cell;
    const row_r90 = ctx_r106.row;
    const ctx_r97 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("identifier", "listFieldAsLink")("form", ctx_r97.formIndex == rowIndex_r91 && ctx_r97.form != undefined ? ctx_r97.form : null)("sourceIdentifier", ctx_r97._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r97.widgetArrayIndex)("button", cell_r89.link)("label", ctx_r97.getValue(control_r93.colIndex, control_r93.cControlIndex, row_r90, control_r93.control.value))("context", ctx_r97.formIndex == rowIndex_r91 && ctx_r97.form != undefined ? ctx_r97.form.value : null)("originalData", row_r90)("parentHierarchy", ctx_r97.parent)("disabled", ctx_r97._listConfig && row_r90 && ctx_r97._listConfig.disableRow && ctx_r97._listConfig.disableRow(row_r90) || ctx_r97.disabled);
} }
function DynamicListComponent_ng_template_10_span_0_mx_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r110 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 69);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_ng_template_10_span_0_mx_button_4_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r110); const rowIndex_r91 = ɵngcc0.ɵɵnextContext(2).rowIndex; const ctx_r108 = ɵngcc0.ɵɵnextContext(); ctx_r108.setRowEditablity(rowIndex_r91); ctx_r108.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r111 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r91 = ctx_r111.rowIndex;
    const row_r90 = ctx_r111.row;
    const ctx_r98 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("form", ctx_r98.formIndex == rowIndex_r91 && ctx_r98.form != undefined ? ctx_r98.form : null)("sourceIdentifier", ctx_r98._listConfig.identifier)("sourceIndex", rowIndex_r91)("widgetArrayIndex", ctx_r98.widgetArrayIndex)("button", control_r93.control)("context", ctx_r98.formIndex == rowIndex_r91 && ctx_r98.form != undefined ? ctx_r98.form.value : null)("originalData", row_r90)("parentHierarchy", ctx_r98.parent)("disabled", ctx_r98._listConfig && row_r90 && ctx_r98._listConfig.disableRow && ctx_r98._listConfig.disableRow(row_r90) || ctx_r98.disabled);
} }
function DynamicListComponent_ng_template_10_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 61);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_10_span_0_span_1_Template, 1, 1, "span", 62);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_10_span_0_mx_field_2_Template, 1, 18, "mx-field", 63);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_ng_template_10_span_0_mx_button_3_Template, 1, 11, "mx-button", 64);
    ɵngcc0.ɵɵtemplate(4, DynamicListComponent_ng_template_10_span_0_mx_button_4_Template, 1, 9, "mx-button", 65);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ctx.$implicit;
    const cControlIndex_r94 = ctx.index;
    const cell_r89 = ɵngcc0.ɵɵnextContext().cell;
    ɵngcc0.ɵɵclassMapInterpolate2("", control_r93 == null ? null : control_r93.alignment == null ? null : control_r93.alignment.vertical, " ", control_r93 == null ? null : control_r93.alignment == null ? null : control_r93.alignment.horizontal, "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c40, control_r93.fullWidth));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r89.displayInline && cell_r89.displayInline.separator && cControlIndex_r94 > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r93.control && (!cell_r89.link || cell_r89.link && cell_r89.linkKey && cell_r89.linkKey != control_r93.control.key) && control_r93.type == "FIELD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r89.link && (cell_r89.linkKey && cell_r89.linkKey == control_r93.control.key || !cell_r89.linkKey) && control_r93.type == "FIELD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r93.type == "BUTTON");
} }
function DynamicListComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_10_span_0_Template, 5, 11, "span", 60);
} if (rf & 2) {
    const cell_r89 = ctx.cell;
    ɵngcc0.ɵɵproperty("ngForOf", cell_r89.controls);
} }
function DynamicListComponent_ng_template_12_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r119 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 73);
    ɵngcc0.ɵɵlistener("onFieldChange", function DynamicListComponent_ng_template_12_div_1_div_1_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r119); const ctx_r118 = ɵngcc0.ɵɵnextContext(3); ctx_r118.updateFilter($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r116 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r116._listConfig.staticList.hasOnPageFilter && !ctx_r116._listConfig.hasColumnSelection ? 12 : 9, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r116.commonListForm)("fieldControl", ctx_r116.commonListForm != undefined && ctx_r116.commonListForm.controls["pageFilter"] ? ctx_r116.commonListForm.controls["pageFilter"] : null)("field", ctx_r116.filterField)("hideLabel", true)("displayMode", "EDIT");
} }
function DynamicListComponent_ng_template_12_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r121 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 74);
    ɵngcc0.ɵɵlistener("onFieldChange", function DynamicListComponent_ng_template_12_div_1_div_2_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r121); const ctx_r120 = ɵngcc0.ɵɵnextContext(3); return ctx_r120.updateColumnDisplay($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r117 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", !ctx_r117._listConfig.staticList.hasOnPageFilter && ctx_r117._listConfig.hasColumnSelection ? 12 : 3, " mdc-layout-grid--align-right");
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("form", ctx_r117.commonListForm)("fieldControl", ctx_r117.commonListForm != undefined && ctx_r117.commonListForm.controls["columnSelector"] ? ctx_r117.commonListForm.controls["columnSelector"] : null)("field", ctx_r117.columnSelectorField)("hideLabel", true)("displayMode", "EDIT");
} }
function DynamicListComponent_ng_template_12_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_1_div_1_Template, 2, 11, "div", 39);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_1_div_2_Template, 2, 13, "div", 72);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r114 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r114._listConfig.staticList.hasOnPageFilter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r114._listConfig.hasColumnSelection);
} }
function DynamicListComponent_ng_template_12_div_3_tr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 88);
    ɵngcc0.ɵɵelementStart(1, "td", 89);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r122 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r122._listConfig.noRecordFound ? ctx_r122._listConfig.noRecordFound : "No data found", " ");
} }
function DynamicListComponent_ng_template_12_div_3_th_4_Template(rf, ctx) { if (rf & 1) {
    const _r134 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 90);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 91);
    ɵngcc0.ɵɵlistener("change", function DynamicListComponent_ng_template_12_div_3_th_4_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r134); const ctx_r133 = ɵngcc0.ɵɵnextContext(3); return $event ? ctx_r133.masterToggle() : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r123 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r123._listConfig.hideHeaderRow);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", ctx_r123.selection.hasValue() && ctx_r123.isAllSelected())("indeterminate", ctx_r123.selection.hasValue() && !ctx_r123.isAllSelected())("aria-label", ctx_r123.checkboxLabel());
} }
function DynamicListComponent_ng_template_12_div_3_td_5_Template(rf, ctx) { if (rf & 1) {
    const _r138 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 92);
    ɵngcc0.ɵɵelementStart(1, "mat-checkbox", 93);
    ɵngcc0.ɵɵlistener("change", function DynamicListComponent_ng_template_12_div_3_td_5_Template_mat_checkbox_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const row_r135 = ctx.$implicit; const ctx_r137 = ɵngcc0.ɵɵnextContext(3); return $event ? ctx_r137.selection.toggle(row_r135) : null; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r135 = ctx.$implicit;
    const rowIndex_r136 = ctx.dataIndex;
    const ctx_r124 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r124.rowColors && ctx_r124.rowColors[rowIndex_r136] ? ctx_r124.rowColors[rowIndex_r136].bgColor : "")("color", ctx_r124.rowColors && ctx_r124.rowColors[rowIndex_r136] ? ctx_r124.rowColors[rowIndex_r136].textColor : "");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(8, _c41, ctx_r124.inlineEditButtons && ctx_r124.inlineEditButtons[rowIndex_r136] && ctx_r124.inlineEditButtons[rowIndex_r136].label == "Cancel", !(ctx_r124.inlineEditButtons && ctx_r124.inlineEditButtons[rowIndex_r136] && ctx_r124.inlineEditButtons[rowIndex_r136].label == "Cancel")));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", ctx_r124._listConfig && row_r135 && ctx_r124._listConfig.disableRow && ctx_r124._listConfig.disableRow(row_r135) || ctx_r124.disabled)("checked", ctx_r124.selection.isSelected(row_r135))("aria-label", ctx_r124.checkboxLabel(row_r135));
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 97);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r143 = ɵngcc0.ɵɵnextContext();
    const column_r139 = ctx_r143.$implicit;
    const colIndex_r140 = ctx_r143.index;
    const ctx_r141 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", ctx_r141.displayVertical ? "" : column_r139.width / ctx_r141.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r141._listConfig.hideHeaderRow);
    ɵngcc0.ɵɵproperty("disabled", !column_r139.sortable)("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c42, colIndex_r140 == 0));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r141.getColumnLabel(column_r139), " ");
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_ng_container_1_Template, 1, 0, "ng-container", 101);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r153 = ɵngcc0.ɵɵnextContext(2);
    const row_r144 = ctx_r153.$implicit;
    const rowIndex_r145 = ctx_r153.dataIndex;
    const column_r139 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cfTemplate", "<style>" + (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.css) + "</style>" + (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html))("cfTemplateContext", ɵngcc0.ɵɵpureFunction2(4, _c43, row_r144, rowIndex_r145));
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r155 = ɵngcc0.ɵɵnextContext(2);
    const row_r144 = ctx_r155.$implicit;
    const rowIndex_r145 = ctx_r155.dataIndex;
    const column_r139 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r5 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(4, _c44, column_r139.template.layout, row_r144, rowIndex_r145));
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_1_Template, 2, 7, "div", 100);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_div_2_Template, 2, 8, "div", 100);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.layout);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(4).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(column_r139.displayInline.separator);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template(rf, ctx) { if (rf & 1) {
    const _r165 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 67);
    ɵngcc0.ɵɵlistener("onFieldChange", function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r165); const ctx_r164 = ɵngcc0.ɵɵnextContext(7); ctx_r164.fieldChange($event); return $event.event && $event.event.stopPropagation ? $event.event.stopPropagation() : ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r167 = ɵngcc0.ɵɵnextContext();
    const field_r158 = ctx_r167.$implicit;
    const cFieldIndex_r159 = ctx_r167.index;
    const ctx_r166 = ɵngcc0.ɵɵnextContext(2);
    const rowIndex_r145 = ctx_r166.dataIndex;
    const row_r144 = ctx_r166.$implicit;
    const colIndex_r140 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r161 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("sourceType", "LIST")("sourceIdentifier", ctx_r161._listConfig.identifier)("sourceIndex", rowIndex_r145)("widgetArrayIndex", ctx_r161.widgetArrayIndex)("form", ctx_r161.formIndex == rowIndex_r145 && ctx_r161.form != undefined ? ctx_r161.form : null)("fieldControl", ctx_r161.formIndex == rowIndex_r145 && ctx_r161.form != undefined ? ctx_r161.form.controls[field_r158.key] : null)("field", field_r158)("displayMode", ctx_r161.displayModes[rowIndex_r145])("hideLabel", true)("value", ctx_r161.getValue(colIndex_r140, cFieldIndex_r159, row_r144, field_r158.value))("ngClass", ɵngcc0.ɵɵpureFunction1(13, _c45, ctx_r161._listConfig && row_r144 && ctx_r161._listConfig.disableRow && ctx_r161._listConfig.disableRow(row_r144) || ctx_r161.disabled))("row", row_r144)("keyMap", ctx_r161.keyMap);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r170 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 68);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r169 = ɵngcc0.ɵɵnextContext(7); ctx_r169.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r173 = ɵngcc0.ɵɵnextContext();
    const cFieldIndex_r159 = ctx_r173.index;
    const field_r158 = ctx_r173.$implicit;
    const ctx_r171 = ɵngcc0.ɵɵnextContext(2);
    const rowIndex_r145 = ctx_r171.dataIndex;
    const row_r144 = ctx_r171.$implicit;
    const ctx_r172 = ɵngcc0.ɵɵnextContext();
    const column_r139 = ctx_r172.$implicit;
    const colIndex_r140 = ctx_r172.index;
    const ctx_r162 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("identifier", "listFieldAsLink")("form", ctx_r162.formIndex == rowIndex_r145 && ctx_r162.form != undefined ? ctx_r162.form : null)("sourceIdentifier", ctx_r162._listConfig.identifier)("sourceIndex", rowIndex_r145)("widgetArrayIndex", ctx_r162.widgetArrayIndex)("button", column_r139.link)("label", ctx_r162.getValue(colIndex_r140, cFieldIndex_r159, row_r144, field_r158.value))("context", ctx_r162.formIndex == rowIndex_r145 && ctx_r162.form != undefined ? ctx_r162.form.value : null)("originalData", row_r144)("parentHierarchy", ctx_r162.parent)("disabled", ctx_r162._listConfig && row_r144 && ctx_r162._listConfig.disableRow && ctx_r162._listConfig.disableRow(row_r144) || ctx_r162.disabled);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 61);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_span_1_Template, 2, 1, "span", 12);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_field_2_Template, 1, 15, "mx-field", 63);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_mx_button_3_Template, 1, 11, "mx-button", 64);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r158 = ctx.$implicit;
    const cFieldIndex_r159 = ctx.index;
    const column_r139 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c46, cFieldIndex_r159 > 0, column_r139.displayInline && column_r139.displayInline.separator));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139.displayInline && column_r139.displayInline.separator && cFieldIndex_r159 > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !column_r139.link || column_r139.link && column_r139.linkKey && column_r139.linkKey != field_r158.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r139.link && (column_r139.linkKey && column_r139.linkKey == field_r158.key || !column_r139.linkKey));
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_div_0_Template, 4, 7, "div", 102);
} if (rf & 2) {
    const column_r139 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngForOf", column_r139.fields);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r177 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 98);
    ɵngcc0.ɵɵlistener("click", function DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r177); const row_r144 = ctx.$implicit; const rowIndex_r145 = ctx.dataIndex; const ctx_r176 = ɵngcc0.ɵɵnextContext(4); return ctx_r176._listConfig.rowAction ? ctx_r176.rowClick(row_r144, rowIndex_r145, ctx_r176.formIndex == rowIndex_r145 && ctx_r176.form != undefined ? ctx_r176.form.value : null, $event) : ctx_r176._listConfig.rowAction; });
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_container_1_Template, 3, 2, "ng-container", 85);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_ng_template_2_Template, 1, 1, "ng-template", null, 99, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r145 = ctx.dataIndex;
    const _r147 = ɵngcc0.ɵɵreference(3);
    const ctx_r178 = ɵngcc0.ɵɵnextContext();
    const colIndex_r140 = ctx_r178.index;
    const column_r139 = ctx_r178.$implicit;
    const ctx_r142 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r142.cellColors && ctx_r142.cellColors[rowIndex_r145] && ctx_r142.cellColors[rowIndex_r145][colIndex_r140] ? ctx_r142.cellColors[rowIndex_r145][colIndex_r140].bgColor : "")("color", ctx_r142.cellColors && ctx_r142.cellColors[rowIndex_r145] && ctx_r142.cellColors[rowIndex_r145][colIndex_r140] ? ctx_r142.cellColors[rowIndex_r145][colIndex_r140].textColor : "")("width", ctx_r142.displayVertical ? "" : column_r139.width / ctx_r142.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c41, ctx_r142.inlineEditButtons && ctx_r142.inlineEditButtons[rowIndex_r145] && ctx_r142.inlineEditButtons[rowIndex_r145].label == "Cancel", !(ctx_r142.inlineEditButtons && ctx_r142.inlineEditButtons[rowIndex_r145] && ctx_r142.inlineEditButtons[rowIndex_r145].label == "Cancel")));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.html) || (column_r139 == null ? null : column_r139.template == null ? null : column_r139.template.layout))("ngIfElse", _r147);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 94);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_6_th_1_Template, 2, 9, "th", 95);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_6_td_2_Template, 4, 12, "td", 96);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r139 = ctx.$implicit;
    const ctx_r125 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("matColumnDef", ctx_r125.getColumnKey(column_r139));
} }
function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template(rf, ctx) { if (rf & 1) {
    const _r184 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-static-list", 107);
    ɵngcc0.ɵɵlistener("onFormChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r183 = ɵngcc0.ɵɵnextContext(4); return ctx_r183.formChange($event); })("onFieldChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r185 = ɵngcc0.ɵɵnextContext(4); ctx_r185.fieldChange($event); return $event.event.stopPropagation(); })("onButtonClick", function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r186 = ɵngcc0.ɵɵnextContext(4); ctx_r186.buttonClick($event); return $event.event.stopPropagation(); })("onPageChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onPageChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r187 = ɵngcc0.ɵɵnextContext(4); return ctx_r187.onPage($event); })("onSortChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template_mx_static_list_onSortChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r184); const ctx_r188 = ɵngcc0.ɵɵnextContext(4); return ctx_r188.onSort($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r179 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r181 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("listConfig", ctx_r181._listConfig.child.record)("sourceIdentifier", ctx_r181.sourceIdentifier)("record", ctx_r181.getChildRows(ctx_r181.expandedRow))("keyMap", ctx_r181.keyMap)("expanded", ctx_r181._expanded)("listReset", ctx_r181.listReset)("parent", ctx_r181.getObjectTree(row_r179))("disabled", ctx_r181._listConfig && row_r179 && ctx_r181._listConfig.disableRow && ctx_r181._listConfig.disableRow(row_r179) || ctx_r181.disabled);
} }
function DynamicListComponent_ng_template_12_div_3_td_8_mx_form_3_Template(rf, ctx) { if (rf & 1) {
    const _r191 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-form", 108);
    ɵngcc0.ɵɵlistener("onFormChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r190 = ɵngcc0.ɵɵnextContext(4); return ctx_r190.formChange($event); })("onFieldChange", function DynamicListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r192 = ɵngcc0.ɵɵnextContext(4); return ctx_r192.fieldChange($event); })("onButtonClick", function DynamicListComponent_ng_template_12_div_3_td_8_mx_form_3_Template_mx_form_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r191); const ctx_r193 = ɵngcc0.ɵɵnextContext(4); return ctx_r193.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r180 = ɵngcc0.ɵɵnextContext().dataIndex;
    const ctx_r182 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵstyleProp("width", 100, "%");
    ɵngcc0.ɵɵproperty("formConfig", ctx_r182._listConfig.child.record)("sourceIdentifier", ctx_r182._listConfig.identifier)("sourceIndex", rowIndex_r180)("widgetArrayIndex", ctx_r182.widgetArrayIndex)("record", ctx_r182.getChildRows(ctx_r182.expandedRow))("keyMap", ctx_r182.keyMap)("reset", ctx_r182.listReset);
} }
function DynamicListComponent_ng_template_12_div_3_td_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 103);
    ɵngcc0.ɵɵelementStart(1, "div", 104);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_td_8_mx_static_list_2_Template, 1, 10, "mx-static-list", 105);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_ng_template_12_div_3_td_8_mx_form_3_Template, 1, 9, "mx-form", 106);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r179 = ctx.$implicit;
    const rowIndex_r180 = ctx.dataIndex;
    const ctx_r126 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(5, _c41, ctx_r126.inlineEditButtons && ctx_r126.inlineEditButtons[rowIndex_r180] && ctx_r126.inlineEditButtons[rowIndex_r180].label == "Cancel", !(ctx_r126.inlineEditButtons && ctx_r126.inlineEditButtons[rowIndex_r180] && ctx_r126.inlineEditButtons[rowIndex_r180].label == "Cancel")));
    ɵngcc0.ɵɵattribute("colspan", ctx_r126.childColumnCount);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("@detailExpand", row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true ? "expanded" : "collapsed");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r126._listConfig.child && ctx_r126._listConfig.child.type == "LIST" && ctx_r126._listConfig.child.record && (row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r126._listConfig.child && ctx_r126._listConfig.child.type == "FORM" && (row_r179 == ctx_r126.expandedRow || ctx_r126._expanded == true));
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_9_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 112);
    ɵngcc0.ɵɵtext(1, " Action ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r195 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵstyleProp("width", ctx_r195.displayVertical ? "" : ctx_r195._listConfig.actionWidth / ctx_r195.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵclassProp("mx-table-header-hidden", ctx_r195._listConfig.hideHeaderRow);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r203 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 116);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template_mx_button_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r203); const rowIndex_r198 = ɵngcc0.ɵɵnextContext().dataIndex; const ctx_r201 = ɵngcc0.ɵɵnextContext(4); ctx_r201.setRowEditablity(rowIndex_r198); ctx_r201.buttonClick($event); return $event.event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r204 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r198 = ctx_r204.dataIndex;
    const row_r197 = ctx_r204.$implicit;
    const ctx_r199 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("form", ctx_r199.formIndex == rowIndex_r198 && ctx_r199.form != undefined ? ctx_r199.form : null)("sourceIdentifier", ctx_r199._listConfig.identifier)("sourceIndex", rowIndex_r198)("widgetArrayIndex", ctx_r199.widgetArrayIndex)("button", ctx_r199.inlineEditButtons[rowIndex_r198])("context", ctx_r199.formIndex == rowIndex_r198 && ctx_r199.form != undefined ? ctx_r199.form.value : null)("originalData", row_r197)("parentHierarchy", ctx_r199.parent)("disabled", ctx_r199._listConfig && row_r197 && ctx_r199._listConfig.disableRow && ctx_r199._listConfig.disableRow(row_r197) || ctx_r199.disabled);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template(rf, ctx) { if (rf & 1) {
    const _r206 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button-group", 117);
    ɵngcc0.ɵɵlistener("onClick", function DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template_mx_button_group_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r206); const ctx_r205 = ɵngcc0.ɵɵnextContext(5); return ctx_r205.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r207 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r198 = ctx_r207.dataIndex;
    const row_r197 = ctx_r207.$implicit;
    const ctx_r200 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("buttons", ctx_r200._listConfig.actions)("form", ctx_r200.formIndex == rowIndex_r198 && ctx_r200.form != undefined ? ctx_r200.form : null)("sourceIdentifier", ctx_r200._listConfig.identifier)("sourceIndex", rowIndex_r198)("widgetArrayIndex", ctx_r200.widgetArrayIndex)("context", ctx_r200.formIndex == rowIndex_r198 && ctx_r200.form != undefined ? ctx_r200.form.value : null)("originalData", row_r197)("parentHierarchy", ctx_r200.parent)("disabled", ctx_r200._listConfig && row_r197 && ctx_r200._listConfig.disableRow && ctx_r200._listConfig.disableRow(row_r197) || ctx_r200.disabled);
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 113);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_1_Template, 1, 9, "mx-button", 114);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_mx_button_group_2_Template, 1, 9, "mx-button-group", 115);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r198 = ctx.dataIndex;
    const ctx_r196 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r196.rowColors && ctx_r196.rowColors[rowIndex_r198] ? ctx_r196.rowColors[rowIndex_r198].bgColor : "")("color", ctx_r196.rowColors && ctx_r196.rowColors[rowIndex_r198] ? ctx_r196.rowColors[rowIndex_r198].textColor : "")("width", ctx_r196.displayVertical ? "" : ctx_r196._listConfig.actionWidth / ctx_r196.totalDispalyableWidth * 100, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r196.isInlineEditable && ctx_r196.inlineEditButtons && ctx_r196.inlineEditButtons[rowIndex_r198] && ctx_r196.inlineEditButtons[rowIndex_r198].icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r196.isInlineEditable || ctx_r196.inlineEditButtons && ctx_r196.inlineEditButtons[rowIndex_r198] && ctx_r196.inlineEditButtons[rowIndex_r198].label == "Cancel");
} }
function DynamicListComponent_ng_template_12_div_3_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 109);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_ng_container_9_th_1_Template, 2, 4, "th", 110);
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_ng_container_9_td_2_Template, 3, 8, "td", 111);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DynamicListComponent_ng_template_12_div_3_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 118);
} }
function DynamicListComponent_ng_template_12_div_3_div_11_tr_1_Template(rf, ctx) { if (rf & 1) {
    const _r212 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 120);
    ɵngcc0.ɵɵlistener("mouseenter", function DynamicListComponent_ng_template_12_div_3_div_11_tr_1_Template_tr_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r212); const i_r210 = ctx.dataIndex; const row_r209 = ctx.$implicit; const ctx_r211 = ɵngcc0.ɵɵnextContext(4); return ctx_r211.onHover($event, i_r210, ctx_r211._listConfig && ctx_r211._listConfig.child && ctx_r211._listConfig.child.record && ctx_r211.expandedRow === row_r209 ? null : row_r209); })("click", function DynamicListComponent_ng_template_12_div_3_div_11_tr_1_Template_tr_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r212); const row_r209 = ctx.$implicit; const ctx_r213 = ɵngcc0.ɵɵnextContext(4); return ctx_r213.expandedRow = ctx_r213._listConfig && ctx_r213._listConfig.child && ctx_r213._listConfig.child.record && ctx_r213.expandedRow === row_r209 ? null : row_r209; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r208 = ɵngcc0.ɵɵnextContext(4);
    const _r13 = ɵngcc0.ɵɵreference(15);
    ɵngcc0.ɵɵproperty("tooltip", _r13)("position", ctx_r208.tooltipPosition)("width", ctx_r208._listConfig == null ? null : ctx_r208._listConfig.row == null ? null : ctx_r208._listConfig.row.hover == null ? null : ctx_r208._listConfig.row.hover.width)("max-width", ctx_r208._listConfig == null ? null : ctx_r208._listConfig.row == null ? null : ctx_r208._listConfig.row.hover == null ? null : ctx_r208._listConfig.row.hover.width)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c47, !(ctx_r208._listConfig.row && ctx_r208._listConfig.row.hover)));
} }
function DynamicListComponent_ng_template_12_div_3_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_3_div_11_tr_1_Template, 1, 7, "tr", 119);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r129 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r129.columnNames);
} }
function DynamicListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template(rf, ctx) { if (rf & 1) {
    const _r218 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 122);
    ɵngcc0.ɵɵlistener("click", function DynamicListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template_tr_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r218); const row_r215 = ctx.$implicit; const ctx_r217 = ɵngcc0.ɵɵnextContext(4); return ctx_r217.expandedRow = ctx_r217._listConfig && ctx_r217._listConfig.child && ctx_r217._listConfig.child.record && ctx_r217.expandedRow === row_r215 ? null : row_r215; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r214 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c47, !(ctx_r214._listConfig.row && ctx_r214._listConfig.row.hover)));
} }
function DynamicListComponent_ng_template_12_div_3_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_12_div_3_ng_template_12_tr_0_Template, 1, 3, "tr", 121);
} if (rf & 2) {
    const ctx_r131 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ctx_r131.columnNames);
} }
function DynamicListComponent_ng_template_12_div_3_tr_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 123);
} if (rf & 2) {
    const ctx_r132 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c48, !ctx_r132._listConfig.child || !ctx_r132._listConfig.child.record));
} }
function DynamicListComponent_ng_template_12_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r221 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "table", 75);
    ɵngcc0.ɵɵlistener("matSortChange", function DynamicListComponent_ng_template_12_div_3_Template_table_matSortChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r221); const ctx_r220 = ɵngcc0.ɵɵnextContext(2); return ctx_r220.onSort($event); });
    ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_12_div_3_tr_2_Template, 3, 1, "tr", 76);
    ɵngcc0.ɵɵelementContainerStart(3, 77);
    ɵngcc0.ɵɵtemplate(4, DynamicListComponent_ng_template_12_div_3_th_4_Template, 2, 5, "th", 78);
    ɵngcc0.ɵɵtemplate(5, DynamicListComponent_ng_template_12_div_3_td_5_Template, 2, 11, "td", 79);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(6, DynamicListComponent_ng_template_12_div_3_ng_container_6_Template, 3, 1, "ng-container", 80);
    ɵngcc0.ɵɵelementContainerStart(7, 81);
    ɵngcc0.ɵɵtemplate(8, DynamicListComponent_ng_template_12_div_3_td_8_Template, 4, 8, "td", 82);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵtemplate(9, DynamicListComponent_ng_template_12_div_3_ng_container_9_Template, 3, 0, "ng-container", 83);
    ɵngcc0.ɵɵtemplate(10, DynamicListComponent_ng_template_12_div_3_tr_10_Template, 1, 0, "tr", 84);
    ɵngcc0.ɵɵtemplate(11, DynamicListComponent_ng_template_12_div_3_div_11_Template, 2, 1, "div", 85);
    ɵngcc0.ɵɵtemplate(12, DynamicListComponent_ng_template_12_div_3_ng_template_12_Template, 1, 1, "ng-template", null, 86, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(14, DynamicListComponent_ng_template_12_div_3_tr_14_Template, 1, 3, "tr", 87);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r130 = ɵngcc0.ɵɵreference(13);
    const ctx_r115 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", "100", "%");
    ɵngcc0.ɵɵproperty("dataSource", ctx_r115.dataSource)("ngClass", ɵngcc0.ɵɵpureFunction3(13, _c49, ctx_r115._listConfig.shade && ctx_r115._listConfig.shade.type == "HOVER", ctx_r115._listConfig.shade && ctx_r115._listConfig.shade.type == "ALTERNATE", ctx_r115._listConfig.hideHeaderRow))("matSortActive", ctx_r115._listConfig.defaultSort ? ctx_r115._listConfig.defaultSort.column : "")("matSortDirection", ctx_r115._listConfig.defaultSort ? ctx_r115._listConfig.defaultSort.order : "");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r115.columnConfigs);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r115._listConfig.actions && ctx_r115._listConfig.actions.length > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("matHeaderRowDef", ctx_r115.columnNames)("matHeaderRowDefSticky", ctx_r115._listConfig.stickyHeader);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r115._listConfig.row && ctx_r115._listConfig.row.hover)("ngIfElse", _r130);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("matRowDefColumns", ɵngcc0.ɵɵpureFunction0(17, _c50));
} }
function DynamicListComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 70);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_12_div_1_Template, 3, 2, "div", 36);
    ɵngcc0.ɵɵelementStart(2, "div", 25);
    ɵngcc0.ɵɵtemplate(3, DynamicListComponent_ng_template_12_div_3_Template, 15, 18, "div", 71);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12._listConfig.staticList.hasOnPageFilter || ctx_r12._listConfig.hasColumnSelection);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.columnNames);
} }
function DynamicListComponent_ng_template_14_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 126);
} if (rf & 2) {
    const ctx_r222 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c1, ctx_r222._listConfig.row.hover.width + "px"));
} }
function DynamicListComponent_ng_template_14_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 127);
    ɵngcc0.ɵɵelementContainer(1, 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r223 = ɵngcc0.ɵɵnextContext(2);
    const _r5 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r223._listConfig.row.hover.width + "px"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(5, _c44, ctx_r223._listConfig.row.hover.template.layout, ctx_r223.hoverRowData, ctx_r223.hoverRowIndex));
} }
function DynamicListComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_14_div_0_Template, 1, 3, "div", 124);
    ɵngcc0.ɵɵtemplate(1, DynamicListComponent_ng_template_14_div_1_Template, 2, 9, "div", 125);
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r14._listConfig == null ? null : ctx_r14._listConfig.row == null ? null : ctx_r14._listConfig.row.hover) && ctx_r14._listConfig.row.hover.template && ctx_r14._listConfig.row.hover.template.component);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r14._listConfig == null ? null : ctx_r14._listConfig.row == null ? null : ctx_r14._listConfig.row.hover) && ctx_r14._listConfig.row.hover.template && ctx_r14._listConfig.row.hover.template.layout);
} }
function DynamicListComponent_ng_template_16_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div");
} }
function DynamicListComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DynamicListComponent_ng_template_16_div_0_Template, 1, 0, "div", 12);
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r16._listConfig == null ? null : ctx_r16._listConfig.row == null ? null : ctx_r16._listConfig.row.template);
} }
const _c51 = ".mx-list-header .mat-card-header-text{margin:0!important}.mx-list-header .mat-card-title{margin-top:6px}.mx-list-header .mat-card-avatar{font-size:40px;padding-right:8px}.mat-card-subtitle,.mx-list-header-subtitle .mat-card-subtitle{padding-top:8px}.mx-list-header-buttons{position:absolute;right:5px;top:5px}.mx-table-header-hidden,.mx-table-hidden{display:none!important}.mx-table-without-header thead,.mx-table-without-header tr.mat-header-row{height:0!important}table{width:100%}.mx-list-desc,.mx-table{padding:0!important}.mx-hide-card{padding:0}td,th{max-width:200px;white-space:normal;word-wrap:break-word}.mx-element-detail{border-left:2px groove #f5f5f5;display:flex;overflow:hidden;padding-right:3px;width:100%}.mx-list-action-col{text-align:right!important}tr.mx-detail-row{background-color:#f5f5f5;height:0!important}tr.mx-detail-row-hide{display:none!important}.sticky{position:-webkit-sticky;position:sticky}.selectable-column{padding-right:1%}.rote{transform:rotateX(180deg)}.mx-element-detail>th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:0!important}.mat-card-content{margin-bottom:0!important}.mx-list-header-desc{margin:5px 0;padding:5px 10px;width:auto}.mx-list-header-desc-icon{font-size:15px;height:15px;margin-top:0;padding:0 5px 0 0;width:15px}.mx-table-alternate tr.mat-row:nth-child(odd),.mx-table-hover tr.mat-row:hover{background:#f5f5f5}.mx-table-alternate tr.mat-row:not(:nth-child(4n+1)){background:#fff}.mx-list-field .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:0}.mx-list-field-not-first{padding-top:5px}.mx-list-field-disabled{color:rgba(0,0,0,.5411764705882353)}.mx-list-checkbox-selectable{padding-right:12px}.mx-list-field-inline{display:inline}@media screen and (max-width:599px){.mat-table{border:0;vertical-align:middle}.mat-table caption{font-size:1em}.mat-table .mat-header-row{display:none}.mat-table .mat-header-cell{border:10px solid;clip:rect(0 0 0 0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.mat-table .mat-row{border-bottom:5px solid #ddd;display:block;height:unset}.mat-table .mat-cell{display:block;font-size:1em;font-weight:700}.mat-table .mx-row-non-editable{border-bottom-width:1px;padding:12px 8px!important}.mat-table .mx-row-editable{border-bottom-width:0;padding:0 8px!important}.mat-table .mat-cell:before{content:attr(data-label);float:left;font-size:.85em;font-weight:400}.mat-table .mat-cell:last-child{border-bottom:0}.mat-table .mat-row td{max-width:unset}}.mx-card-list{padding:0}.mx-card-list mat-card{padding:8px}.mx-card-mobile{margin-bottom:12px;word-wrap:break-word}.mx-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.mx-card-mobile .mx-primary-text .mx-field-value{font-size:18px;font-weight:400;margin-bottom:none}.mx-card-mobile .mx-secondary-text .mx-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.mx-card-mobile .mx-tertiary-text .mx-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.mx-card-mobile .mx-card-mobile-cell{display:block;width:100%}.mx-card-mobile .mx-card-mobile-cell .fullwidth button{width:100%}.mx-card-mobile .mx-card-mobile-cell .mx-primary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-secondary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-tertiary-text .mx-field-value{display:block}.mx-card-mobile .mx-card-mobile-cell .fullwidth button,.mx-card-mobile .mx-card-mobile-cell .fullwidth mat-chip{width:100%}.mx-card-mobile .mx-card-mobile-cell-inline{display:inline-block;width:100%}.mx-card-mobile .mx-card-mobile-cell-inline .mx-card-mobile-control-separator{padding:4px}.hover-template{display:none;position:absolute;z-index:9999}.mx-row:hover .without-hover{pointer-events:none}.mx-list-infinite-scroll{height:69vh;overflow-y:auto}.search-mobile{margin-right:10px}.mx-mobile-search-field-cont,.mx-mobile-sort-field-cont{display:flex}.sticky{background:#fff;border-bottom:1px solid #d3cece;left:0;margin:0 auto;padding:10px 20px;position:fixed;right:0;top:0;width:88%;z-index:99}.sticky+.content{padding-top:102px}.mx-mobile-filter-icon{padding-top:8px}.mx-mobile-filter-link{text-align:end}.mx-list-hover-tooltip{padding:8px}.right-align-forced{text-align:right;width:100%}.width-100{height:100%;width:100%!important}.top{top:0}.middle{top:40%}.bottom{bottom:0}.left{left:0}.left,.right{display:block;position:absolute;width:auto}.right{right:0}.center{display:block;left:50%;position:absolute;width:auto}.mat-drawer-inner-container{overflow:hidden!important}.mx-material-icons{font-size:12px}";
function ModalComponent_mx_form_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-form", 1);
    ɵngcc0.ɵɵlistener("onFieldChange", function ModalComponent_mx_form_0_Template_mx_form_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.fieldChange($event); })("onFormChange", function ModalComponent_mx_form_0_Template_mx_form_onFormChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.formChange($event); })("onButtonClick", function ModalComponent_mx_form_0_Template_mx_form_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formConfig", ctx_r0.data.widgetConfig)("sourceIndex", ctx_r0.data.sourceIndex)("record", ctx_r0.data.context ? ctx_r0.data.context[ctx_r0.data.widgetConfig.identifier] : ctx_r0.data.context)("originalData", ctx_r0.data.originalData && ctx_r0.data.originalData.record ? ctx_r0.data.originalData.record[ctx_r0.data.widgetConfig.identifier] : ɵngcc0.ɵɵpureFunction0(6, _c9))("keyMap", ctx_r0.data.keyMap)("reset", ctx_r0.data.reset);
} }
function CrudHeaderComponent_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("margin-top", ctx_r0.subtitle ? 8 : 0, "px");
    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.icon.font);
} }
function CrudHeaderComponent_mat_icon_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.icon.font);
} }
function CrudHeaderComponent_mat_card_subtitle_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.subtitle);
} }
function CrudHeaderComponent_span_10_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵelementStart(1, "mx-button-group", 14);
    ɵngcc0.ɵɵlistener("onClick", function CrudHeaderComponent_span_10_Template_mx_button_group_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r3.badgeButtons)("sourceIdentifier", ctx_r3.identifier)("sourceIndex", "0");
} }
function CrudHeaderComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mx-button-group", 15);
    ɵngcc0.ɵɵlistener("onClick", function CrudHeaderComponent_div_11_Template_mx_button_group_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate3("mdc-layout-grid__cell--span-", ctx_r4.actions && ctx_r4.actions.length > 0 ? 6 : 0, "-desktop mdc-layout-grid__cell--span-", ctx_r4.actions && ctx_r4.actions.length > 0 ? 4 : 0, "-tablet mdc-layout-grid__cell--span-", ctx_r4.actions && ctx_r4.actions.length > 0 ? 1 : 0, "-phone mdc-layout-grid__cell--align-middle mdc-layout-grid--align-right mx-crud-header-button");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r4.actions)("sourceIdentifier", ctx_r4.identifier)("formDisplayMode", ctx_r4.formDisplayMode)("sourceIndex", "0")("originalData", ctx_r4.originalData)("context", ctx_r4.context);
} }
function CrudHeaderComponent_mat_divider_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider", 16);
} }
function FormHeaderComponent_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("margin-top", ctx_r0.subtitle ? 8 : 0, "px");
    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.formHeaderConfig.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.formHeaderConfig.icon.font);
} }
function FormHeaderComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.formHeaderConfig.icon.font);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.formHeaderConfig.icon.font, "");
} }
function FormHeaderComponent_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("matTooltip", ctx_r2.help.message)("matTooltipPosition", ctx_r2.help.position);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r2.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.help.icon ? ctx_r2.help.icon : "live_help", " ");
} }
function FormHeaderComponent_mat_card_subtitle_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.subtitle);
} }
function FormHeaderComponent_mx_field_8_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 14);
    ɵngcc0.ɵɵlistener("onFieldChange", function FormHeaderComponent_mx_field_8_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.fieldChange($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r6 = ctx.$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("sourceIdentifier", ctx_r4.formIdentifier)("sourceIndex", ctx_r4.sourceIndex)("widgetArrayIndex", ctx_r4.widgetArrayIndex)("form", ctx_r4.form)("fieldControl", ctx_r4.form.controls[field_r6.key])("field", field_r6)("displayMode", ctx_r4._formDisplayMode);
} }
function FormHeaderComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 15);
} }
function FormComponent_mat_card_0_mx_form_header_1_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-form-header", 9);
    ɵngcc0.ɵɵlistener("onFieldChange", function FormComponent_mat_card_0_mx_form_header_1_Template_mx_form_header_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.fieldChange($event); })("onButtonClick", function FormComponent_mat_card_0_mx_form_header_1_Template_mx_form_header_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("formHeaderConfig", ctx_r5.formConfig.header)("description", ctx_r5.formConfig.description)("help", ctx_r5.formConfig.help)("sourceIndex", ctx_r5.sourceIndex)("widgetArrayIndex", ctx_r5.widgetArrayIndex)("formIdentifier", ctx_r5.formConfig.identifier)("form", ctx_r5.form)("originalData", ctx_r5.originalData)("context", ctx_r5.getFormValue())("formActions", ctx_r5.formConfig.header.actions)("formDisplayMode", ctx_r5.formConfig.displayMode);
} }
function FormComponent_mat_card_0_mat_card_content_2_div_1_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r17.formConfig.description.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r17.formConfig.description.icon);
} }
function FormComponent_mat_card_0_mat_card_content_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵelementStart(3, "div", 16);
    ɵngcc0.ɵɵtemplate(4, FormComponent_mat_card_0_mat_card_content_2_div_1_mat_icon_4_Template, 2, 2, "mat-icon", 17);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r13.cellCount, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r13.formConfig.description.bgColor)("color", ctx_r13.formConfig.description.textColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r13.formConfig.description.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r13.formConfig.description.text);
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_divider_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider", 19);
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_card_subtitle_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-subtitle");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r15.formConfig.description.text);
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 28);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const formLayout_r18 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(formLayout_r18.sectionIcon);
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 29);
    ɵngcc0.ɵɵtext(1, "keyboard_arrow_down");
    ɵngcc0.ɵɵelementEnd();
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 29);
    ɵngcc0.ɵɵtext(1, "keyboard_arrow_up");
    ɵngcc0.ɵɵelementEnd();
} }
const _c52 = function (a0) { return { "mx-form-separator-expandable": a0 }; };
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 24);
    ɵngcc0.ɵɵlistener("click", function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_Template_mat_list_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const formLayout_r18 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r26 = ɵngcc0.ɵɵnextContext(3); return ctx_r26.toggleList(formLayout_r18); });
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_1_Template, 2, 1, "mat-icon", 25);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵelementStart(3, "span", 26);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_5_Template, 2, 0, "mat-icon", 27);
    ɵngcc0.ɵɵtemplate(6, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_mat_icon_6_Template, 2, 0, "mat-icon", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const formLayout_r18 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formLayout_r18.sectionIcon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c52, formLayout_r18.sectionExpandable && formLayout_r18.sectionExpandable.allowed));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", formLayout_r18.sectionLabel, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formLayout_r18.sectionExpandable && formLayout_r18.sectionExpandable.allowed && formLayout_r18.sectionExpandable.default == "COLLAPSE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formLayout_r18.sectionExpandable && formLayout_r18.sectionExpandable.allowed && formLayout_r18.sectionExpandable.default == "EXPAND");
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_divider_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider", 30);
} }
const _c53 = function (a0) { return { formField: a0 }; };
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_div_4_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementContainer(1, 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r33 = ctx.$implicit;
    const ctx_r32 = ɵngcc0.ɵɵnextContext(5);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵclassMapInterpolate1("mdc-layout-grid__cell--span-", ctx_r32.cellCount / ctx_r32.formConfig.displayInColumns * (column_r33.displayInColumns ? column_r33.displayInColumns : 1), " mdc-layout-grid__cell--align-top");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(5, _c53, column_r33));
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_div_4_div_1_Template, 2, 7, "div", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r30 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r30.columns);
} }
function FormComponent_mat_card_0_mat_card_content_2_mat_list_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list");
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_list_item_1_Template, 7, 7, "mat-list-item", 20);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_mat_divider_2_Template, 1, 0, "mat-divider", 21);
    ɵngcc0.ɵɵelementStart(3, "div", 22);
    ɵngcc0.ɵɵtemplate(4, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_div_4_Template, 2, 1, "div", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const formLayout_r18 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formLayout_r18.sectionLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formLayout_r18.sectionLabel && (!formLayout_r18.sectionExpandable || !formLayout_r18.sectionExpandable.allowed || formLayout_r18.sectionExpandable && formLayout_r18.sectionExpandable.allowed && formLayout_r18.sectionExpandable.default == "EXPAND"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("hidden", formLayout_r18.sectionExpandable && formLayout_r18.sectionExpandable.allowed && formLayout_r18.sectionExpandable.default == "COLLAPSE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", formLayout_r18.rows);
} }
function FormComponent_mat_card_0_mat_card_content_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-content");
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_2_div_1_Template, 7, 9, "div", 10);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_2_mat_divider_2_Template, 1, 0, "mat-divider", 11);
    ɵngcc0.ɵɵtemplate(3, FormComponent_mat_card_0_mat_card_content_2_mat_card_subtitle_3_Template, 2, 1, "mat-card-subtitle", 5);
    ɵngcc0.ɵɵelementStart(4, "div", 12);
    ɵngcc0.ɵɵtemplate(5, FormComponent_mat_card_0_mat_card_content_2_mat_list_5_Template, 5, 4, "mat-list", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.formConfig.description && ctx_r6.formConfig.description.text && ctx_r6.formConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.formConfig.formFields && ctx_r6.formConfig.formFields.length > 0 && (ctx_r6.formConfig.header && ctx_r6.formConfig.header.title) && (!ctx_r6.formConfig.description || !ctx_r6.formConfig.description.bgColor));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.formConfig.description && ctx_r6.formConfig.description.text && !ctx_r6.formConfig.description.bgColor);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r6.formLayouts);
} }
const _c54 = function (a0) { return { cell: a0 }; };
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 41);
    ɵngcc0.ɵɵelementContainer(1, 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r35 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c54, cell_r35));
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 42);
    ɵngcc0.ɵɵelementContainer(1, 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r35 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c54, cell_r35));
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 39);
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_div_1_Template, 2, 4, "div", 40);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_ng_template_2_Template, 2, 4, "ng-template", null, 38, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r40 = ɵngcc0.ɵɵreference(3);
    const cell_r35 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r35.displayInline && cell_r35.displayInline.separator)("ngIfElse", _r40);
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_span_0_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 28);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r35 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(cell_r35.separator.icon);
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 44);
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_span_0_mat_icon_1_Template, 2, 1, "mat-icon", 25);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r35 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r35.separator.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(cell_r35.separator.label);
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_span_0_Template, 4, 2, "span", 43);
} if (rf & 2) {
    const cell_r35 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngIf", cell_r35.separator && (cell_r35.separator.label || cell_r35.separator.icon));
} }
function FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 36);
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_span_1_Template, 4, 2, "span", 37);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_ng_template_2_Template, 1, 1, "ng-template", null, 38, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r35 = ctx.$implicit;
    const _r37 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵproperty("colspan", cell_r35.cols)("rowspan", cell_r35.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r35.controls && cell_r35.controls.length > 0)("ngIfElse", _r37);
} }
function FormComponent_mat_card_0_mat_card_content_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-content", 33);
    ɵngcc0.ɵɵelementStart(1, "mat-grid-list", 34);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_3_mat_grid_tile_2_Template, 4, 4, "mat-grid-tile", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cols", ctx_r7.formConfig.layout.cellCount)("rowHeight", ctx_r7.formConfig.layout.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r7.formConfig.layout.cells);
} }
function FormComponent_mat_card_0_mat_card_actions_4_Template(rf, ctx) { if (rf & 1) {
    const _r51 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 45);
    ɵngcc0.ɵɵelementStart(1, "mx-button-group", 46);
    ɵngcc0.ɵɵlistener("onClick", function FormComponent_mat_card_0_mat_card_actions_4_Template_mx_button_group_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r51); const ctx_r50 = ɵngcc0.ɵɵnextContext(2); return ctx_r50.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("text-align", ctx_r8.formButton.align);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("buttons", ctx_r8.formButton.buttons)("form", ctx_r8.form)("formDisplayMode", ctx_r8.formConfig.displayMode)("sourceIdentifier", ctx_r8.formConfig.identifier)("sourceIndex", ctx_r8.sourceIndex)("widgetArrayIndex", ctx_r8.widgetArrayIndex)("originalData", ctx_r8.originalData)("context", ctx_r8.getFormValue());
} }
function FormComponent_mat_card_0_mat_card_actions_5_mat_grid_tile_2_mx_button_group_2_Template(rf, ctx) { if (rf & 1) {
    const _r56 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button-group", 46);
    ɵngcc0.ɵɵlistener("onClick", function FormComponent_mat_card_0_mat_card_actions_5_mat_grid_tile_2_mx_button_group_2_Template_mx_button_group_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r56); const ctx_r55 = ɵngcc0.ɵɵnextContext(4); return ctx_r55.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r53 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r54 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("buttons", cell_r53.buttons.buttons)("form", ctx_r54.form)("formDisplayMode", ctx_r54.formConfig.displayMode)("sourceIdentifier", ctx_r54.formConfig.identifier)("sourceIndex", ctx_r54.sourceIndex)("widgetArrayIndex", ctx_r54.widgetArrayIndex)("originalData", ctx_r54.originalData)("context", ctx_r54.getFormValue());
} }
const _c55 = function (a0, a1, a2) { return { "mx-form-button-grid-cell-left": a0, "mx-form-button-grid-cell-right": a1, "mx-form-button-grid-cell-center": a2 }; };
function FormComponent_mat_card_0_mat_card_actions_5_mat_grid_tile_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-grid-tile", 36);
    ɵngcc0.ɵɵelementStart(1, "div", 26);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_actions_5_mat_grid_tile_2_mx_button_group_2_Template, 1, 8, "mx-button-group", 47);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r53 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("colspan", cell_r53.cols)("rowspan", cell_r53.rows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(4, _c55, cell_r53.buttons.align == "left", cell_r53.buttons.align == "right", cell_r53.buttons.align == "center"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r53 && cell_r53.buttons && cell_r53.buttons.buttons);
} }
function FormComponent_mat_card_0_mat_card_actions_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 45);
    ɵngcc0.ɵɵelementStart(1, "mat-grid-list", 34);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_actions_5_mat_grid_tile_2_Template, 3, 8, "mat-grid-tile", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cols", ctx_r9.cellCount)("rowHeight", ctx_r9.formButtonLayout.rowHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r9.formButtonLayout.cells);
} }
function FormComponent_mat_card_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 3);
    ɵngcc0.ɵɵtemplate(1, FormComponent_mat_card_0_mx_form_header_1_Template, 1, 11, "mx-form-header", 4);
    ɵngcc0.ɵɵtemplate(2, FormComponent_mat_card_0_mat_card_content_2_Template, 6, 4, "mat-card-content", 5);
    ɵngcc0.ɵɵtemplate(3, FormComponent_mat_card_0_mat_card_content_3_Template, 3, 3, "mat-card-content", 6);
    ɵngcc0.ɵɵtemplate(4, FormComponent_mat_card_0_mat_card_actions_4_Template, 2, 10, "mat-card-actions", 7);
    ɵngcc0.ɵɵtemplate(5, FormComponent_mat_card_0_mat_card_actions_5_Template, 3, 3, "mat-card-actions", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.formConfig.header && ctx_r0.formConfig.header.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.formConfig.showCustomLayout);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.formConfig.showCustomLayout);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.formButton && ctx_r0.showButtons);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.formButtonLayout && ctx_r0.showButtons);
} }
function FormComponent_ng_template_2_span_0_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 51);
} if (rf & 2) {
    const cell_r58 = ɵngcc0.ɵɵnextContext(2).cell;
    ɵngcc0.ɵɵproperty("innerHtml", cell_r58.displayInline.separator, ɵngcc0.ɵɵsanitizeHtml);
} }
function FormComponent_ng_template_2_span_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 32);
} if (rf & 2) {
    const control_r60 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵnextContext(2);
    const _r3 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c53, control_r60.control));
} }
function FormComponent_ng_template_2_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 26);
    ɵngcc0.ɵɵtemplate(1, FormComponent_ng_template_2_span_0_span_1_Template, 1, 1, "span", 49);
    ɵngcc0.ɵɵtemplate(2, FormComponent_ng_template_2_span_0_ng_container_2_Template, 1, 4, "ng-container", 50);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r60 = ctx.$implicit;
    const cControlIndex_r61 = ctx.index;
    const cell_r58 = ɵngcc0.ɵɵnextContext().cell;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c40, control_r60.fullWidth));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cell_r58.displayInline && cell_r58.displayInline.separator && cControlIndex_r61 > 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r60.type == "FIELD");
} }
function FormComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FormComponent_ng_template_2_span_0_Template, 3, 5, "span", 48);
} if (rf & 2) {
    const cell_r58 = ctx.cell;
    ɵngcc0.ɵɵproperty("ngForOf", cell_r58.controls);
} }
function FormComponent_ng_template_4_mx_field_0_Template(rf, ctx) { if (rf & 1) {
    const _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-field", 54);
    ɵngcc0.ɵɵlistener("onDependentFieldChange", function FormComponent_ng_template_4_mx_field_0_Template_mx_field_onDependentFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r70 = ɵngcc0.ɵɵnextContext(2); return ctx_r70.dependentFieldChange($event); })("onFieldChange", function FormComponent_ng_template_4_mx_field_0_Template_mx_field_onFieldChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r72 = ɵngcc0.ɵɵnextContext(2); return ctx_r72.fieldChange($event); })("onButtonClick", function FormComponent_ng_template_4_mx_field_0_Template_mx_field_onButtonClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r73 = ɵngcc0.ɵɵnextContext(2); return ctx_r73.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const formField_r67 = ɵngcc0.ɵɵnextContext().formField;
    const ctx_r68 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("sourceIdentifier", ctx_r68.formConfig.identifier)("sourceIndex", ctx_r68.sourceIndex)("widgetArrayIndex", ctx_r68.widgetArrayIndex)("form", ctx_r68.form)("keyMap", ctx_r68.keyMap)("fieldControl", ctx_r68.form.controls[formField_r67.field.key])("field", formField_r67.field)("originalData", ctx_r68.originalData)("displayMode", ctx_r68.formConfig.displayMode)("dependencies", ctx_r68.dependencies);
} }
function FormComponent_ng_template_4_ng_template_1_span_0_Template(rf, ctx) { if (rf & 1) {
    const _r79 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "mx-field", 55);
    ɵngcc0.ɵɵlistener("onDependentFieldChange", function FormComponent_ng_template_4_ng_template_1_span_0_Template_mx_field_onDependentFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r78 = ɵngcc0.ɵɵnextContext(3); return ctx_r78.dependentFieldChange($event); })("onFieldChange", function FormComponent_ng_template_4_ng_template_1_span_0_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r80 = ɵngcc0.ɵɵnextContext(3); return ctx_r80.fieldChange($event); })("onButtonClick", function FormComponent_ng_template_4_ng_template_1_span_0_Template_mx_field_onButtonClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r79); const ctx_r81 = ɵngcc0.ɵɵnextContext(3); return ctx_r81.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const fieldControl_r76 = ctx.$implicit;
    const i_r77 = ctx.index;
    const formField_r67 = ɵngcc0.ɵɵnextContext(2).formField;
    const ctx_r75 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("sourceType", "FORM")("sourceIdentifier", ctx_r75.formConfig.identifier)("sourceIndex", ctx_r75.sourceIndex)("widgetArrayIndex", ctx_r75.widgetArrayIndex)("fieldIndex", i_r77)("form", ctx_r75.form)("keyMap", ctx_r75.keyMap)("fieldControl", fieldControl_r76)("field", formField_r67.field)("originalData", ctx_r75.originalData)("displayMode", ctx_r75.formConfig.displayMode)("isAddMore", formField_r67.addMore)("addMorePermission", formField_r67.addMorePermission)("device", ctx_r75.isDesktop ? "desktop" : ctx_r75.isTablet ? "tablet" : "mobile")("displayInColumns", ctx_r75.cellCount / ctx_r75.formConfig.displayInColumns * (formField_r67.displayInColumns ? formField_r67.displayInColumns : 1))("dependencies", ctx_r75.dependencies);
} }
function FormComponent_ng_template_4_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FormComponent_ng_template_4_ng_template_1_span_0_Template, 2, 16, "span", 13);
} if (rf & 2) {
    const formField_r67 = ɵngcc0.ɵɵnextContext().formField;
    const ctx_r69 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r69.form.controls[formField_r67.field.key]["controls"]);
} }
function FormComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FormComponent_ng_template_4_mx_field_0_Template, 1, 11, "mx-field", 52);
    ɵngcc0.ɵɵtemplate(1, FormComponent_ng_template_4_ng_template_1_Template, 1, 1, "ng-template", 53);
} if (rf & 2) {
    const formField_r67 = ctx.formField;
    ɵngcc0.ɵɵproperty("ngIf", formField_r67 && !formField_r67.addMore);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", formField_r67 && formField_r67.addMore);
} }
const _c56 = ["input"];
const _c57 = ["auto"];
function ChipsComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ChipsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ChipsComponent_ng_container_0_ng_container_1_Template, 1, 0, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
} }
function ChipsComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ChipsComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ChipsComponent_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4);
} }
function ChipsComponent_ng_template_2_mat_label_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 17);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function ChipsComponent_ng_template_2_mat_label_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r18.field.help.message, " ");
} }
function ChipsComponent_ng_template_2_mat_label_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ChipsComponent_ng_template_2_mat_label_2_span_3_Template, 2, 0, "span", 16);
    ɵngcc0.ɵɵtemplate(4, ChipsComponent_ng_template_2_mat_label_2_span_4_Template, 2, 1, "span", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r8.field.key, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.field.help && ctx_r8.field.help.message && ctx_r8.field.help.displayType == "PLAIN_TEXT" && ctx_r8.field.help.withLabel);
} }
function ChipsComponent_ng_template_2_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r9.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r9.field.icon);
} }
function ChipsComponent_ng_template_2_mat_chip_6_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 21);
    ɵngcc0.ɵɵtext(1, "cancel");
    ɵngcc0.ɵɵelementEnd();
} }
function ChipsComponent_ng_template_2_mat_chip_6_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 19);
    ɵngcc0.ɵɵlistener("removed", function ChipsComponent_ng_template_2_mat_chip_6_Template_mat_chip_removed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const chip_r19 = ctx.$implicit; const i_r20 = ctx.index; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.removeItem($event, chip_r19, i_r20); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, ChipsComponent_ng_template_2_mat_chip_6_mat_icon_2_Template, 2, 0, "mat-icon", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const chip_r19 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("removable", chip_r19.removable || true)("disabled", chip_r19.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", chip_r19.value, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", chip_r19.removable);
} }
function ChipsComponent_ng_template_2_mx_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 22);
    ɵngcc0.ɵɵlistener("onClick", function ChipsComponent_ng_template_2_mx_button_9_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.cleanValue(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r13.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r13.textClearButton);
} }
function ChipsComponent_ng_template_2_mx_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 22);
    ɵngcc0.ɵɵlistener("onClick", function ChipsComponent_ng_template_2_mx_button_10_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.resolvedValue = ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r14.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r14.routeToButton);
} }
function ChipsComponent_ng_template_2_mat_hint_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 23);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 24);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r15.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r15.field.help.icon ? ctx_r15.field.help.icon : "live_help", " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r15.field.help.message, " ");
} }
function ChipsComponent_ng_template_2_mat_error_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 25);
} if (rf & 2) {
    const error_r28 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r28.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r28.message);
} }
const _c58 = function (a0) { return { "mat-chip-list-stacked": a0 }; };
function ChipsComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 4);
    ɵngcc0.ɵɵpipe(1, "lowercase");
    ɵngcc0.ɵɵtemplate(2, ChipsComponent_ng_template_2_mat_label_2_Template, 5, 6, "mat-label", 5);
    ɵngcc0.ɵɵtemplate(3, ChipsComponent_ng_template_2_mat_icon_3_Template, 2, 2, "mat-icon", 6);
    ɵngcc0.ɵɵelementStart(4, "mat-chip-list", 7, 8);
    ɵngcc0.ɵɵtemplate(6, ChipsComponent_ng_template_2_mat_chip_6_Template, 3, 4, "mat-chip", 9);
    ɵngcc0.ɵɵelementStart(7, "input", 10, 11);
    ɵngcc0.ɵɵlistener("matChipInputTokenEnd", function ChipsComponent_ng_template_2_Template_input_matChipInputTokenEnd_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.addItem($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, ChipsComponent_ng_template_2_mx_button_9_Template, 1, 4, "mx-button", 12);
    ɵngcc0.ɵɵtemplate(10, ChipsComponent_ng_template_2_mx_button_10_Template, 1, 4, "mx-button", 12);
    ɵngcc0.ɵɵelement(11, "mx-tooltip", 13);
    ɵngcc0.ɵɵtemplate(12, ChipsComponent_ng_template_2_mat_hint_12_Template, 4, 3, "mat-hint", 14);
    ɵngcc0.ɵɵtemplate(13, ChipsComponent_ng_template_2_mat_error_13_Template, 1, 2, "mat-error", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r10 = ɵngcc0.ɵɵreference(5);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("appearance", ɵngcc0.ɵɵpipeBind1(1, 17, ctx_r3.appearance));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r3.hideLabel == true) && ctx_r3.field.fieldDisplayType != "HORIZONTAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(19, _c58, ctx_r3.orientation === "VERTICAL"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.chips);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r3.field.key)("placeholder", ctx_r3.placeholder)("matChipInputFor", _r10)("errorStateMatcher", ctx_r3.errorMatcher)("disabled", ctx_r3.disabled)("matChipInputSeparatorKeyCodes", ctx_r3.separatorKeysCodes)("matChipInputAddOnBlur", ctx_r3.addOnBlur);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.hasClear && !ctx_r3.hasFieldNavigate && !(ctx_r3.field.help && ctx_r3.field.help.displayType == "TOOLTIP" && ctx_r3.field.help.message));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.hasFieldNavigate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r3.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.field.help && ctx_r3.field.help.message && ctx_r3.field.help.displayType == "PLAIN_TEXT" && !ctx_r3.field.help.withLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.errors());
} }
function ChipsComponent_ng_template_4_mat_label_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 17);
    ɵngcc0.ɵɵtext(1, "*");
    ɵngcc0.ɵɵelementEnd();
} }
function ChipsComponent_ng_template_4_mat_label_1_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r44 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r44.field.help.message, " ");
} }
function ChipsComponent_ng_template_4_mat_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-label");
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ChipsComponent_ng_template_4_mat_label_1_span_3_Template, 2, 0, "span", 16);
    ɵngcc0.ɵɵtemplate(4, ChipsComponent_ng_template_4_mat_label_1_span_4_Template, 2, 1, "span", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r31 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-lbl mx-field-lbl-", ctx_r31.field.key, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r31.field.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r31.isRequired);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r31.field.help && ctx_r31.field.help.message && ctx_r31.field.help.displayType == "PLAIN_TEXT" && ctx_r31.field.help.withLabel);
} }
function ChipsComponent_ng_template_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r32.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r32.field.icon);
} }
function ChipsComponent_ng_template_4_mat_chip_5_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 21);
    ɵngcc0.ɵɵtext(1, "cancel");
    ɵngcc0.ɵɵelementEnd();
} }
function ChipsComponent_ng_template_4_mat_chip_5_Template(rf, ctx) { if (rf & 1) {
    const _r49 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-chip", 19);
    ɵngcc0.ɵɵlistener("removed", function ChipsComponent_ng_template_4_mat_chip_5_Template_mat_chip_removed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r49); const chip_r45 = ctx.$implicit; const i_r46 = ctx.index; const ctx_r48 = ɵngcc0.ɵɵnextContext(2); return ctx_r48.removeItem($event, chip_r45, i_r46); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, ChipsComponent_ng_template_4_mat_chip_5_mat_icon_2_Template, 2, 0, "mat-icon", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const chip_r45 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("removable", chip_r45.removable || true)("disabled", chip_r45.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", chip_r45.value, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", chip_r45.removable);
} }
function ChipsComponent_ng_template_4_mat_error_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 25);
} if (rf & 2) {
    const error_r50 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r50.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r50.message);
} }
function ChipsComponent_ng_template_4_mat_option_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-option", 31);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r51 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", option_r51)("disabled", option_r51.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", option_r51.value, " ");
} }
function ChipsComponent_ng_template_4_mx_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r53 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 22);
    ɵngcc0.ɵɵlistener("onClick", function ChipsComponent_ng_template_4_mx_button_12_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r53); const ctx_r52 = ɵngcc0.ɵɵnextContext(2); return ctx_r52.cleanValue(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r39.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r39.textClearButton);
} }
function ChipsComponent_ng_template_4_mx_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mx-button", 22);
    ɵngcc0.ɵɵlistener("onClick", function ChipsComponent_ng_template_4_mx_button_13_Template_mx_button_onClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r55); const ctx_r54 = ɵngcc0.ɵɵnextContext(2); return ctx_r54.resolvedValue = ""; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-clr-btn mx-field-clr-btn-", ctx_r40.field.key, "");
    ɵngcc0.ɵɵproperty("button", ctx_r40.routeToButton);
} }
function ChipsComponent_ng_template_4_mat_hint_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-hint", 23);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 24);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r41 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r41.field.help.message);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r41.field.help.icon ? ctx_r41.field.help.icon : "live_help", " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r41.field.help.message, " ");
} }
function ChipsComponent_ng_template_4_mat_error_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-error", 25);
} if (rf & 2) {
    const error_r56 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("innerHtml", error_r56.message, ɵngcc0.ɵɵsanitizeHtml);
    ɵngcc0.ɵɵattribute("aria-label", error_r56.message);
} }
function ChipsComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    const _r58 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-form-field", 26);
    ɵngcc0.ɵɵtemplate(1, ChipsComponent_ng_template_4_mat_label_1_Template, 5, 6, "mat-label", 5);
    ɵngcc0.ɵɵtemplate(2, ChipsComponent_ng_template_4_mat_icon_2_Template, 2, 2, "mat-icon", 6);
    ɵngcc0.ɵɵelementStart(3, "mat-chip-list", 7, 8);
    ɵngcc0.ɵɵtemplate(5, ChipsComponent_ng_template_4_mat_chip_5_Template, 3, 4, "mat-chip", 9);
    ɵngcc0.ɵɵelement(6, "input", 27, 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, ChipsComponent_ng_template_4_mat_error_8_Template, 1, 2, "mat-error", 15);
    ɵngcc0.ɵɵelementStart(9, "mat-autocomplete", 28, 29);
    ɵngcc0.ɵɵlistener("optionSelected", function ChipsComponent_ng_template_4_Template_mat_autocomplete_optionSelected_9_listener($event) { ɵngcc0.ɵɵrestoreView(_r58); const ctx_r57 = ɵngcc0.ɵɵnextContext(); return ctx_r57.onSelected($event); });
    ɵngcc0.ɵɵtemplate(11, ChipsComponent_ng_template_4_mat_option_11_Template, 2, 3, "mat-option", 30);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, ChipsComponent_ng_template_4_mx_button_12_Template, 1, 4, "mx-button", 12);
    ɵngcc0.ɵɵtemplate(13, ChipsComponent_ng_template_4_mx_button_13_Template, 1, 4, "mx-button", 12);
    ɵngcc0.ɵɵelement(14, "mx-tooltip", 13);
    ɵngcc0.ɵɵtemplate(15, ChipsComponent_ng_template_4_mat_hint_15_Template, 4, 3, "mat-hint", 14);
    ɵngcc0.ɵɵtemplate(16, ChipsComponent_ng_template_4_mat_error_16_Template, 1, 2, "mat-error", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r33 = ɵngcc0.ɵɵreference(4);
    const _r37 = ɵngcc0.ɵɵreference(10);
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r5.hideLabel == true) && ctx_r5.field.fieldDisplayType != "HORIZONTAL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.field.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(19, _c58, ctx_r5.orientation === "VERTICAL"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.chips);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r5.field.key)("placeholder", ctx_r5.placeholder)("matChipInputFor", _r33)("errorStateMatcher", ctx_r5.errorMatcher)("disabled", ctx_r5.disabled)("matChipInputSeparatorKeyCodes", ctx_r5.separatorKeysCodes)("matChipInputAddOnBlur", ctx_r5.addOnBlur)("matAutocomplete", _r37);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.errors());
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.options);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.hasClear && !ctx_r5.hasFieldNavigate && !(ctx_r5.field.help && ctx_r5.field.help.displayType == "TOOLTIP" && ctx_r5.field.help.message));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.hasFieldNavigate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r5.field);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.field.help && ctx_r5.field.help.message && ctx_r5.field.help.displayType == "PLAIN_TEXT" && !ctx_r5.field.help.withLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.errors());
} }
function ToolbarComponent_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵlistener("click", function ToolbarComponent_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const item_r3 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onMenuClick(item_r3); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 5);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("fxShow", item_r3.showOnDesktop)("fxShow.xs", item_r3.showOnMobile)("fxShow.sm", item_r3.showOnTablet);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r3.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r3.label, " ");
} }
function ToolbarComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 6);
    ɵngcc0.ɵɵelementStart(2, "button", 7);
    ɵngcc0.ɵɵlistener("click", function ToolbarComponent_ng_container_7_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r8); const item_r6 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onMenuClick(item_r6); });
    ɵngcc0.ɵɵelementStart(3, "mat-icon", 5);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "mat-divider");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r6 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("fxShow", !item_r6.showOnDesktop)("fxShow.sm", !item_r6.showOnTablet)("fxShow.xs", !item_r6.showOnMobile);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(item_r6.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r6.label, " ");
} }
function MultiImageComponent_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelement(1, "img", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    const i_r3 = ctx_r6.index;
    const img_r2 = ctx_r6.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("margin-left", i_r3 == 0 ? 0 : -ctx_r5.radius / 2, "px")("z-index", 1000 - i_r3);
    ɵngcc0.ɵɵpropertyInterpolate("matTooltip", img_r2.name);
    ɵngcc0.ɵɵproperty("matTooltipDisabled", ctx_r5.hideTooltip);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r5.radius, "px")("height", ctx_r5.radius, "px");
    ɵngcc0.ɵɵpropertyInterpolate("src", img_r2.url || img_r2, ɵngcc0.ɵɵsanitizeUrl);
} }
function MultiImageComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, MultiImageComponent_ng_container_1_div_1_Template, 2, 11, "div", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const i_r3 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", i_r3 < ctx_r0.count);
} }
function MultiImageComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵelementStart(1, "button", 7);
    ɵngcc0.ɵɵlistener("click", function MultiImageComponent_span_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onShowAllClick(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("margin-left", -ctx_r1.radius / 2, "px")("width", ctx_r1.radius, "px");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("padding-left", ctx_r1.radius / 4, "px")("width", ctx_r1.radius, "px")("height", ctx_r1.radius, "px");
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.disabled || !ctx_r1.showAll);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.lastItemLabel, " ");
} }
function ParagraphComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 2);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const token_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", token_r1.value, " ");
} }
function ParagraphComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "mx-field", 3);
    ɵngcc0.ɵɵlistener("onFieldChange", function ParagraphComponent_ng_container_0_ng_container_2_Template_mx_field_onFieldChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.fieldChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const token_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("sourceType", ctx_r3.sourceType)("sourceIdentifier", ctx_r3.sourceIdentifier)("sourceIndex", ctx_r3.sourceIndex)("widgetArrayIndex", ctx_r3.widgetArrayIndex)("form", ctx_r3.form)("fieldControl", ctx_r3.fieldControl["controls"][token_r1.field.key])("keyMap", ctx_r3.keyMap)("field", token_r1.field)("displayMode", ctx_r3.displayMode);
} }
function ParagraphComponent_ng_container_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "mx-button", 4);
    ɵngcc0.ɵɵlistener("onClick", function ParagraphComponent_ng_container_0_ng_container_3_Template_mx_button_onClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.buttonClick($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const token_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("form", ctx_r4.form)("sourceIdentifier", ctx_r4.sourceIdentifier)("sourceIndex", ctx_r4.sourceIndex)("widgetArrayIndex", ctx_r4.widgetArrayIndex)("button", token_r1.button)("context", ctx_r4.getFormValue())("originalData", ctx_r4.originalData)("formDisplayMode", ctx_r4.displayMode)("disabled", ctx_r4.isButtonDisable());
} }
function ParagraphComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ParagraphComponent_ng_container_0_ng_container_1_Template, 3, 1, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(2, ParagraphComponent_ng_container_0_ng_container_2_Template, 2, 9, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(3, ParagraphComponent_ng_container_0_ng_container_3_Template, 2, 9, "ng-container", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const token_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", token_r1.type == "LABEL");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", token_r1.type == "FIELD");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", token_r1.type == "BUTTON");
} }
function TooltipComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵelementStart(1, "button", 3);
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 4);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵclassMapInterpolate1("mx-field-hint mx-field-hint-inline mx-field-hint-", ctx_r0.field.key, "");
    ɵngcc0.ɵɵproperty("tooltip", _r1)("placement", ctx_r0.placement);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.field.help.icon ? ctx_r0.field.help.icon : "live_help", "");
} }
function TooltipComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-card", 5);
    ɵngcc0.ɵɵelementStart(1, "mat-card-header");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-card-content");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.field.help.title, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.field.help.message, " ");
} }
function NavigationComponent_header_5_H3_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "H3", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r11.navigationPanel == null ? null : ctx_r11.navigationPanel.header == null ? null : ctx_r11.navigationPanel.header.logo == null ? null : ctx_r11.navigationPanel.header.logo.name);
} }
const _c59 = function (a0) { return { "image-icon": a0 }; };
function NavigationComponent_header_5_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "img", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c59, !(ctx_r13.isExpanded || ctx_r13.isShowing)))("src", ctx_r13.navigationPanel == null ? null : ctx_r13.navigationPanel.header == null ? null : ctx_r13.navigationPanel.header.logo == null ? null : ctx_r13.navigationPanel.header.logo.image, ɵngcc0.ɵɵsanitizeUrl);
} }
function NavigationComponent_header_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "header");
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_header_5_H3_1_Template, 2, 1, "H3", 10);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_header_5_ng_template_2_Template, 2, 4, "ng-template", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r12 = ɵngcc0.ɵɵreference(3);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.navigationPanel == null ? null : ctx_r1.navigationPanel.header == null ? null : ctx_r1.navigationPanel.header.logo == null ? null : ctx_r1.navigationPanel.header.logo.name)("ngIfElse", _r12);
} }
function NavigationComponent_div_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c60 = function (a0, a1) { return { menu: a0, index: a1 }; };
function NavigationComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_div_6_ng_container_1_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const data_r14 = ctx.$implicit;
    const i_r15 = ctx.index;
    ɵngcc0.ɵɵnextContext();
    const _r6 = ɵngcc0.ɵɵreference(12);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r6)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c60, data_r14, i_r15));
} }
function NavigationComponent_footer_7_mat_list_item_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementContainer(1, 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const tmpl_r19 = ctx.ngIf;
    const ctx_r18 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cfTemplate", "<style>" + (ctx_r18.navigationPanel.footer == null ? null : ctx_r18.navigationPanel.footer.template == null ? null : ctx_r18.navigationPanel.footer.template.css) + "</style>" + tmpl_r19);
} }
function NavigationComponent_footer_7_mat_list_item_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 17);
    ɵngcc0.ɵɵlistener("click", function NavigationComponent_footer_7_mat_list_item_2_Template_mat_list_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.logoutEvent(); });
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_footer_7_mat_list_item_2_ng_container_1_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    const _r8 = ɵngcc0.ɵɵreference(14);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17.navigationPanel.footer == null ? null : ctx_r17.navigationPanel.footer.template.content)("ngIfElse", _r8);
} }
function NavigationComponent_footer_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "footer");
    ɵngcc0.ɵɵelementStart(1, "mat-nav-list");
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_footer_7_mat_list_item_2_Template, 2, 2, "mat-list-item", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.navigationPanel.footer.logout);
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27.name);
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 32);
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("matBadge", item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.text);
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 33);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.text);
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 29);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_1_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_2_Template, 1, 1, "span", 30);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_span_3_Template, 2, 1, "span", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const _r35 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27.name)("ngIfElse", _r35);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.displayType) == "BADGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.displayType) == "PLAIN_TEXT");
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27.icon);
} }
const _c61 = function (a0) { return { rotated: a0 }; };
function NavigationComponent_ng_template_9_div_0_div_1_div_1_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 35);
    ɵngcc0.ɵɵtext(1, " expand_more");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const m_r28 = ɵngcc0.ɵɵnextContext(2).index;
    const j_r23 = ɵngcc0.ɵɵnextContext(2).mainindex;
    const ctx_r39 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c61, ctx_r39.showSubSubMenu[j_r23][m_r28]));
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c62 = function (a0, a1, a2) { return { menu: a0, mainindex: a1, subindex: a2 }; };
function NavigationComponent_ng_template_9_div_0_div_1_div_1_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_5_ng_container_1_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r52 = ɵngcc0.ɵɵnextContext(2);
    const item_r27 = ctx_r52.$implicit;
    const m_r28 = ctx_r52.index;
    const j_r23 = ɵngcc0.ɵɵnextContext(2).mainindex;
    ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c62, item_r27.children, j_r23, m_r28));
} }
function NavigationComponent_ng_template_9_div_0_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mat-list-item", 25);
    ɵngcc0.ɵɵlistener("click", function NavigationComponent_ng_template_9_div_0_div_1_div_1_Template_mat_list_item_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r55); const m_r28 = ɵngcc0.ɵɵnextContext().index; const j_r23 = ɵngcc0.ɵɵnextContext(2).mainindex; const ctx_r54 = ɵngcc0.ɵɵnextContext(); return (ctx_r54.showSubSubMenu[j_r23][m_r28] = !ctx_r54.showSubSubMenu[j_r23][m_r28]); });
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_2_Template, 4, 4, "span", 26);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_9_div_0_div_1_div_1_mat_icon_3_Template, 2, 1, "mat-icon", 27);
    ɵngcc0.ɵɵtemplate(4, NavigationComponent_ng_template_9_div_0_div_1_div_1_mat_icon_4_Template, 2, 3, "mat-icon", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, NavigationComponent_ng_template_9_div_0_div_1_div_1_span_5_Template, 2, 6, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r58 = ɵngcc0.ɵɵnextContext();
    const item_r27 = ctx_r58.$implicit;
    const m_r28 = ctx_r58.index;
    const _r33 = ɵngcc0.ɵɵreference(6);
    const j_r23 = ɵngcc0.ɵɵnextContext(2).mainindex;
    const ctx_r29 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r29.isExpanded || ctx_r29.isShowing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27.icon)("ngIfElse", _r33);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r29.isExpanded || ctx_r29.isShowing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r29.showSubSubMenu[j_r23][m_r28]);
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27.name);
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 32);
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("matBadge", item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.text);
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 33);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.text);
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r27.icon, "");
} }
const _c63 = function (a0) { return [a0]; };
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 36);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_1_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_2_Template, 1, 1, "span", 30);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_span_3_Template, 2, 1, "span", 31);
    ɵngcc0.ɵɵtemplate(4, NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_mat_icon_4_Template, 2, 1, "mat-icon", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext().$implicit;
    const _r35 = ɵngcc0.ɵɵreference(8);
    const _r33 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(7, _c63, item_r27 == null ? null : item_r27.route));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27.name)("ngIfElse", _r35);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.displayType) == "BADGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (item_r27 == null ? null : item_r27.subText == null ? null : item_r27.subText.displayType) == "PLAIN_TEXT");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27.icon)("ngIfElse", _r33);
} }
function NavigationComponent_ng_template_9_div_0_div_1_mat_divider_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 37);
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", item_r27.image, ɵngcc0.ɵɵsanitizeUrl);
} }
function NavigationComponent_ng_template_9_div_0_div_1_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 38);
} if (rf & 2) {
    const item_r27 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", item_r27.nameAsImage, ɵngcc0.ɵɵsanitizeUrl);
} }
function NavigationComponent_ng_template_9_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_9_div_0_div_1_div_1_Template, 6, 5, "div", 18);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_9_div_0_div_1_ng_template_2_Template, 5, 9, "ng-template", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, NavigationComponent_ng_template_9_div_0_div_1_mat_divider_4_Template, 1, 0, "mat-divider", 4);
    ɵngcc0.ɵɵtemplate(5, NavigationComponent_ng_template_9_div_0_div_1_ng_template_5_Template, 1, 1, "ng-template", null, 23, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(7, NavigationComponent_ng_template_9_div_0_div_1_ng_template_7_Template, 1, 1, "ng-template", null, 24, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r27 = ctx.$implicit;
    const _r30 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r27 == null ? null : item_r27.children)("ngIfElse", _r30);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", item_r27 == null ? null : item_r27.divider);
} }
const _c64 = function (a0) { return { expanded: a0 }; };
function NavigationComponent_ng_template_9_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_9_div_0_div_1_Template, 9, 3, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r71 = ɵngcc0.ɵɵnextContext();
    const s_r24 = ctx_r71.subindex;
    const j_r23 = ctx_r71.mainindex;
    const menu_r22 = ctx_r71.menu;
    const ctx_r25 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c64, s_r24 >= 0 ? ctx_r25.showSubSubMenu[j_r23][s_r24] : ctx_r25.showSubmenu[j_r23]));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", menu_r22);
} }
function NavigationComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, NavigationComponent_ng_template_9_div_0_Template, 2, 4, "div", 20);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.isShowing || ctx_r5.isExpanded);
} }
function NavigationComponent_ng_template_11_div_0_span_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(3).menu;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(menu_r72.name);
} }
function NavigationComponent_ng_template_11_div_0_span_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 32);
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(3).menu;
    ɵngcc0.ɵɵproperty("matBadge", menu_r72 == null ? null : menu_r72.subText == null ? null : menu_r72.subText.text);
} }
function NavigationComponent_ng_template_11_div_0_span_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 33);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(3).menu;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(menu_r72 == null ? null : menu_r72.subText == null ? null : menu_r72.subText.text);
} }
function NavigationComponent_ng_template_11_div_0_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 29);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_11_div_0_span_2_span_1_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_11_div_0_span_2_span_2_Template, 1, 1, "span", 30);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_11_div_0_span_2_span_3_Template, 2, 1, "span", 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(2).menu;
    const _r80 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72.name)("ngIfElse", _r80);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (menu_r72 == null ? null : menu_r72.subText == null ? null : menu_r72.subText.displayType) == "BADGE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (menu_r72 == null ? null : menu_r72.subText == null ? null : menu_r72.subText.displayType) == "PLAIN_TEXT");
} }
function NavigationComponent_ng_template_11_div_0_mat_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(2).menu;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", menu_r72.icon, " ");
} }
function NavigationComponent_ng_template_11_div_0_mat_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 35);
    ɵngcc0.ɵɵtext(1, " expand_more ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const i_r73 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r84 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c61, ctx_r84.showSubmenu[i_r73]));
} }
function NavigationComponent_ng_template_11_div_0_span_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c65 = function (a0, a1) { return { menu: a0, mainindex: a1 }; };
function NavigationComponent_ng_template_11_div_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_11_div_0_span_5_ng_container_1_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r96 = ɵngcc0.ɵɵnextContext(2);
    const menu_r72 = ctx_r96.menu;
    const i_r73 = ctx_r96.index;
    ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c65, menu_r72.children, i_r73));
} }
function NavigationComponent_ng_template_11_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r98 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "mat-list-item", 25);
    ɵngcc0.ɵɵlistener("click", function NavigationComponent_ng_template_11_div_0_Template_mat_list_item_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r98); const i_r73 = ɵngcc0.ɵɵnextContext().index; const ctx_r97 = ɵngcc0.ɵɵnextContext(); return (ctx_r97.showSubmenu[i_r73] = !ctx_r97.showSubmenu[i_r73]); });
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_11_div_0_span_2_Template, 4, 4, "span", 26);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_11_div_0_mat_icon_3_Template, 2, 1, "mat-icon", 27);
    ɵngcc0.ɵɵtemplate(4, NavigationComponent_ng_template_11_div_0_mat_icon_4_Template, 2, 3, "mat-icon", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, NavigationComponent_ng_template_11_div_0_span_5_Template, 2, 5, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r100 = ɵngcc0.ɵɵnextContext();
    const menu_r72 = ctx_r100.menu;
    const i_r73 = ctx_r100.index;
    const _r78 = ɵngcc0.ɵɵreference(5);
    const ctx_r74 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r74.isExpanded || ctx_r74.isShowing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72.icon)("ngIfElse", _r78);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r74.isExpanded || ctx_r74.isShowing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r74.showSubmenu[i_r73]);
} }
function NavigationComponent_ng_template_11_ng_template_1_span_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(3).menu;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(menu_r72.name);
} }
function NavigationComponent_ng_template_11_ng_template_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 29);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_11_ng_template_1_span_1_span_1_Template, 2, 1, "span", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(2).menu;
    const _r80 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72.name)("ngIfElse", _r80);
} }
function NavigationComponent_ng_template_11_ng_template_1_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 34);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext(2).menu;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", menu_r72.icon, "");
} }
function NavigationComponent_ng_template_11_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-list-item", 41);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_11_ng_template_1_span_1_Template, 2, 2, "span", 26);
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_11_ng_template_1_mat_icon_2_Template, 2, 1, "mat-icon", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext().menu;
    const _r78 = ɵngcc0.ɵɵreference(5);
    const ctx_r76 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(4, _c63, menu_r72 == null ? null : menu_r72.route));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r76.isExpanded || ctx_r76.isShowing);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72.icon)("ngIfElse", _r78);
} }
function NavigationComponent_ng_template_11_mat_divider_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function NavigationComponent_ng_template_11_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 37);
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext().menu;
    ɵngcc0.ɵɵproperty("src", menu_r72.image, ɵngcc0.ɵɵsanitizeUrl);
} }
function NavigationComponent_ng_template_11_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 38);
} if (rf & 2) {
    const menu_r72 = ɵngcc0.ɵɵnextContext().menu;
    ɵngcc0.ɵɵproperty("src", menu_r72.nameAsImage, ɵngcc0.ɵɵsanitizeUrl);
} }
function NavigationComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, NavigationComponent_ng_template_11_div_0_Template, 6, 5, "div", 18);
    ɵngcc0.ɵɵtemplate(1, NavigationComponent_ng_template_11_ng_template_1_Template, 3, 6, "ng-template", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(3, NavigationComponent_ng_template_11_mat_divider_3_Template, 1, 0, "mat-divider", 4);
    ɵngcc0.ɵɵtemplate(4, NavigationComponent_ng_template_11_ng_template_4_Template, 1, 1, "ng-template", null, 39, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(6, NavigationComponent_ng_template_11_ng_template_6_Template, 1, 1, "ng-template", null, 40, ɵngcc0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const menu_r72 = ctx.menu;
    const _r75 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72.children)("ngIfElse", _r75);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", menu_r72 == null ? null : menu_r72.divider);
} }
function NavigationComponent_ng_template_13_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, "Logout");
    ɵngcc0.ɵɵelementEnd();
} }
function NavigationComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-icon", 34);
    ɵngcc0.ɵɵtext(1, "power_settings_new");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, NavigationComponent_ng_template_13_span_2_Template, 2, 0, "span", 4);
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.isExpanded || ctx_r9.isShowing);
} }
const _c66 = function (a0) { return { minimize: a0 }; };
function NavigationComponent_button_15_Template(rf, ctx) { if (rf & 1) {
    const _r112 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 42);
    ɵngcc0.ɵɵlistener("click", function NavigationComponent_button_15_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r112); const ctx_r111 = ɵngcc0.ɵɵnextContext(); return ctx_r111.isExpanded = !ctx_r111.isExpanded; });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, " keyboard_arrow_left");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c66, !ctx_r10.isExpanded && !ctx_r10.isShowing));
} }
const _c67 = function (a0, a1, a2) { return { "side-width": a0, "mobile-side-remove": a1, "collaps-width": a2 }; };
const _c68 = ["*"];
class BadgeUitls {
}

class CollectionUtils {
    static isEmpty(value) {
        if (value == null || value == undefined || value == "" || value.length == 0) {
            return true;
        }
        else {
            return false;
        }
    }
}

class ButtonUtils {
    static instanceOfButton(object) {
        return 'type' in object &&
            //            !('groupIdentifier' in object) &&
            (object['type'] != "CHIP" /* CHIP */ && object['type'] != "GROUP" /* GROUP */ && object['type'] != "DROPDOWN" /* DROPDOWN */) &&
            (object['type'] == "FLAT" /* FLAT */ || object['type'] == "GHOST" /* GHOST */ || object['type'] == "RAISED" /* RAISED */ || object['type'] == "FAB" /* FAB */ || object['type'] == "STROKED" /* STROKED */);
    }
    static instanceOfChipButton(object) {
        return 'type' in object && 'groupIdentifier' in object && object['type'] == "CHIP" /* CHIP */;
    }
    static instanceOfButtonGroup(object) {
        return 'type' in object && 'groupIdentifier' in object && object['type'] == "GROUP" /* GROUP */;
    }
    static instanceOfHoverButton(object) {
        return 'type' in object && 'groupIdentifier' in object && object['type'] == "DROPDOWN" /* DROPDOWN */;
    }
    static instanceOfAnyButtonType(object) {
        let isButton = false;
        if (this.instanceOfButton(object) || this.instanceOfChipButton(object) || this.instanceOfButtonGroup(object) || this.instanceOfHoverButton(object)) {
            isButton = true;
        }
        return isButton;
    }
    static hasWidth(buttons) {
        let hasButtonWidth = false;
        if (!CollectionUtils.isEmpty(buttons) && buttons.filter(button => button.width != null && button.width != "").length > 0) {
            hasButtonWidth = true;
        }
        return hasButtonWidth;
    }
    static setEqualWidth(buttons) {
        if (!CollectionUtils.isEmpty(buttons)) {
            let buttonCount = buttons.length;
            let buttonWidth = 100 / buttonCount;
            buttons.forEach(button => {
                button.width = "" + buttonWidth;
            });
        }
    }
    static getAction(sourceIdentifier, sourceIndex, widgetArrayIndex, identifier, parentHierarchy, event, originalData, context, actionDialog) {
        let data = null;
        if (originalData) {
            data = Object.assign(Object.assign({}, originalData), context);
        }
        else {
            data = context;
            originalData = context;
        }
        let action = {
            sourceIdentifier: sourceIdentifier,
            sourceIndex: sourceIndex,
            widgetArrayIndex: widgetArrayIndex,
            action: identifier,
            actionData: actionDialog,
            data: data,
            originalData: originalData,
            parentHierarchy: parentHierarchy,
            event: event
        };
        return action;
    }
    static isDisable(displayMode) {
        if (displayMode == "BLOCKED" /* BLOCKED */ || displayMode == "VIEW" /* VIEW */) {
            return true;
        }
        else {
            return false;
        }
    }
}

class DependentUtils {
    static displayDependencyField(dependentOnFields, supportingRecord, record) {
        let displayDependencyField = true;
        let displaySupportingDependencyField = true;
        if (dependentOnFields && dependentOnFields.length > 0 && record) {
            for (let dependentField of dependentOnFields) {
                let dependencyValue = "";
                try {
                    dependencyValue = eval("record." + dependentField.key);
                }
                catch (e) {
                }
                if (dependencyValue != undefined) {
                    if (dependentField.condition instanceof Array) {
                        if (dependencyValue instanceof Array) {
                            let hasMatch = false;
                            dependencyValue.forEach(value => {
                                if (dependentField.condition.indexOf(value) > -1) {
                                    hasMatch = true;
                                }
                            });
                            if (hasMatch) {
                                displayDependencyField = false;
                            }
                        }
                        else {
                            if (dependentField.condition.indexOf(dependencyValue) <= -1) {
                                displayDependencyField = false;
                            }
                        }
                    }
                    else {
                        if (dependencyValue instanceof Array) {
                            if (dependencyValue.indexOf(dependentField.condition) <= -1) {
                                displayDependencyField = false;
                            }
                        }
                        else {
                            if (dependencyValue != dependentField.condition) {
                                displayDependencyField = false;
                            }
                        }
                    }
                }
            }
        }
        if (dependentOnFields && dependentOnFields.length > 0 && supportingRecord) {
            for (let dependentField of dependentOnFields) {
                let dependencyValue = "";
                try {
                    dependencyValue = eval("supportingRecord." + dependentField.key);
                }
                catch (e) {
                }
                if (dependencyValue != undefined) {
                    if (dependentField.condition instanceof Array) {
                        if (dependencyValue instanceof Array) {
                            let hasMatch = false;
                            dependencyValue.forEach(value => {
                                if (dependentField.condition.indexOf(value) > -1) {
                                    hasMatch = true;
                                }
                            });
                            if (!hasMatch) {
                                displaySupportingDependencyField = false;
                            }
                        }
                        else {
                            if (dependentField.condition.indexOf(dependencyValue) <= -1) {
                                displaySupportingDependencyField = false;
                            }
                        }
                    }
                    else {
                        if (dependencyValue instanceof Array) {
                            if (dependencyValue.indexOf(dependentField.condition) <= -1) {
                                displaySupportingDependencyField = false;
                            }
                        }
                        else {
                            if (dependencyValue != dependentField.condition) {
                                displaySupportingDependencyField = false;
                            }
                        }
                    }
                }
            }
        }
        return displayDependencyField && displaySupportingDependencyField;
    }
    static getDependencyTree(formFields) {
        let dependency = {};
        for (let formField of formFields) {
            if (formField.field.dependentOnFields && formField.field.dependentOnFields.length > 0) {
                for (let dependentField of formField.field.dependentOnFields) {
                    if (dependency[dependentField.key] == undefined || dependency[dependentField.key] == null) {
                        dependency[dependentField.key] = new Array();
                    }
                    dependency[dependentField.key].push(formField.field.key);
                }
            }
        }
        return dependency;
    }
    static getDependencyTreeForButton(buttonLayout) {
        let dependency = {};
        if (buttonLayout && !CollectionUtils.isEmpty(buttonLayout.buttons)) {
            for (let button of buttonLayout.buttons) {
                if (button.dependentOnFields && button.dependentOnFields.length > 0) {
                    for (let dependentField of button.dependentOnFields) {
                        if (dependency[dependentField.key] == undefined || dependency[dependentField.key] == null) {
                            dependency[dependentField.key] = new Array();
                        }
                        dependency[dependentField.key].push(button.identifier);
                    }
                }
            }
        }
        if (buttonLayout && !CollectionUtils.isEmpty(buttonLayout.cells)) {
            for (let cell of buttonLayout.cells) {
                if (cell.buttons && !CollectionUtils.isEmpty(cell.buttons.buttons)) {
                    for (let button of cell.buttons.buttons) {
                        if (button.dependentOnFields && button.dependentOnFields.length > 0) {
                            for (let dependentField of button.dependentOnFields) {
                                if (dependency[dependentField.key] == undefined || dependency[dependentField.key] == null) {
                                    dependency[dependentField.key] = new Array();
                                }
                                dependency[dependentField.key].push(button.identifier);
                            }
                        }
                    }
                }
            }
        }
        return dependency;
    }
}

class MasterDataUtils {
    static getMasterDataFromLocalStore(key) {
        let masterDataMap = JSON.parse(localStorage.getItem("masterData"));
        return masterDataMap[key];
    }
    static getMasterDataAsOptions(masterDataKey) {
        let masterData = MasterDataUtils.getMasterDataFromLocalStore(masterDataKey);
        let options = new Array();
        if (masterData && !CollectionUtils.isEmpty(masterData)) {
            masterData.items.forEach(record => {
                options.push({ key: record.key, value: record.label });
            });
        }
        return options;
    }
}

class StringUtils {
    static isEmpty(value) {
        if (value == null || value == undefined || value == "" || value.length == 0) {
            return true;
        }
        else {
            return false;
        }
    }
}

class FieldUtils {
    static isFormDisable(displayMode) {
        if (displayMode == "BLOCKED" /* BLOCKED */ || displayMode == "VIEW" /* VIEW */) {
            return true;
        }
        else {
            return false;
        }
    }
    static isFieldDisabled(field, currentDisplayMode, value) {
        let isDisabled = false;
        if (FieldUtils.isFormDisable(currentDisplayMode) || field.displayMode == "DISABLED" /* DISABLED */ || field.type == "HIDDEN" /* HIDDEN */ || field.isReadOnly || (field.isUnique && currentDisplayMode == "EDIT" /* EDIT */ && !StringUtils.isEmpty(value))) {
            isDisabled = true;
        }
        return isDisabled;
    }
    static displayEllipsis(charLimit, value) {
        let showEllipsis = false;
        let strValue = JSON.stringify(value);
        if (charLimit && charLimit > 0 && !StringUtils.isEmpty(strValue) && strValue.length > charLimit) {
            showEllipsis = true;
        }
        return showEllipsis;
    }
    static readOnlyField() {
        return ["IMAGE" /* IMAGE */, "IMAGE_AND_TEXT" /* IMAGE_AND_TEXT */, "JSON" /* JSON */, "LABEL" /* LABEL */, "BOOLEAN" /* BOOLEAN */];
    }
    static isEllipsisField(field) {
        let hasEllipsis;
        if ((field.type == "LABEL" /* LABEL */ || field.type == "TEXT" /* TEXT */ || field.type == "TEXTAREA" /* TEXTAREA */ || field.type == "EMAIL" /* EMAIL */ || field.type == "PASSWORD" /* PASSWORD */) && field.ellipsis > 0) {
            hasEllipsis = true;
        }
        return hasEllipsis;
    }
    static setOptionsUsingKey(field, masterDataKey) {
        if (!CollectionUtils.isEmpty(field)) {
            let options = MasterDataUtils.getMasterDataAsOptions(masterDataKey);
            field.options = options;
        }
    }
    static setOptionsUsingValues(field, keyMap) {
        if (!CollectionUtils.isEmpty(field)) {
            field.options = keyMap.options;
        }
    }
}

class ObjectUtils {
    static isEmpty(obj) {
        return obj == undefined || Object.keys(obj).length === 0;
    }
    static resolve(text, obj) {
        if (!this.isEmpty(obj)) {
            for (var key in obj) {
                text = text.replace('{' + key + '}', obj[key]);
            }
        }
        return text;
    }
    static unflatten(_json) {
        function jsonToObj(data, result) {
            return Object.keys(data).reduce((acc, current, index) => {
                const inlineKeys = current.split('.');
                let firstProp = inlineKeys.shift();
                const hasProps = inlineKeys.length >= 1;
                if (hasProps) {
                    const parsedKey = parseInt(inlineKeys[0], 10);
                    const isNextKeyNumber = !isNaN(parsedKey);
                    let _nextData = {};
                    if (!acc[firstProp]) {
                        acc[firstProp] = isNextKeyNumber ? [] : {};
                    }
                    if (isNextKeyNumber) {
                        const _index = parseInt(inlineKeys.shift(), 10);
                        const isValueInArray = acc[firstProp].length - 1 >= _index;
                        const currentValueObj = acc[firstProp][_index];
                        _nextData[inlineKeys.join('.')] = data[current];
                        acc[firstProp][_index] = isValueInArray
                            ? Object.assign(currentValueObj, jsonToObj(_nextData, currentValueObj))
                            : jsonToObj(_nextData, {});
                    }
                    else {
                        _nextData[inlineKeys.join('.')] = data[current];
                        Object.assign(acc[firstProp], jsonToObj(_nextData, acc[firstProp]));
                    }
                }
                else {
                    acc[firstProp] = data[current];
                }
                return acc;
            }, result);
        }
        return jsonToObj(_json, {});
    }
    ;
}

class FormUtils {
    static isFormDisable(displayMode) {
        if (displayMode == "BLOCKED" /* BLOCKED */ || displayMode == "VIEW" /* VIEW */) {
            return true;
        }
        else {
            return false;
        }
    }
    static disableField(form, field) {
        if (form && form.get(field.key)) {
            form.get(field.key).disable();
        }
    }
    static disableFieldControl(fieldControl) {
        if (fieldControl) {
            fieldControl.disable();
        }
    }
    static checkUniqueIdentifier(forms) {
        //  TODO: 
    }
    static getRawValue(form) {
        let formValue = {};
        if (form) {
            formValue = form.getRawValue();
        }
        return formValue;
    }
    static initFormGroup(formFields, supportingRecord, record, displayMode) {
        let fieldControls = {};
        let isFormDisabled = this.isFormDisable(displayMode);
        for (let formField of formFields) {
            // if (!CollectionUtils.isEmpty(record)) {
            FormUtils.initFieldGroup(fieldControls, formField, supportingRecord, record, displayMode);
            // }
        }
        return new FormGroup(fieldControls);
    }
    static getFieldValidation(field) {
        let validations = new Array();
        if (field.validations && field.validations.length > 0) {
            for (let val of field.validations) {
                validations.push(val.type);
            }
        }
        return validations;
    }
    static initFieldGroup(fieldControls, formField, supportingRecord, record, displayMode) {
        //        field.hide = false;
        if (!DependentUtils.displayDependencyField(formField.field.dependentOnFields, supportingRecord, record)) {
            if (record == null) {
                record = {};
            }
            if (formField.addMore) {
                record[formField.field.key] = [];
            }
            else {
                record[formField.field.key] = null;
            }
            //          field.hide = true;
            return;
        }
        let validations = this.getFieldValidation(formField.field);
        if (formField.field.type == "CHECKBOX" /* CHECKBOX */) {
            let fieldValue = FormUtils.getValueViaEval(record, formField.field.key);
            if (formField.addMore) {
                let options = record && fieldValue ? fieldValue : new Array();
                fieldControls[formField.field.key] = new FormArray([]);
                for (let vCnt = 0; vCnt < options.length; vCnt++) {
                    let opts = this.getCheckboxOption(displayMode, formField.field, options[vCnt]);
                    fieldControls[formField.field.key].push(this.setFormGroup(displayMode, formField.field, opts, validations));
                }
            }
            else {
                let option = record && fieldValue ? fieldValue : null;
                let opts = this.getCheckboxOption(displayMode, formField.field, option);
                fieldControls[formField.field.key] = this.setFormGroup(displayMode, formField.field, opts, validations);
            }
        }
        else if (formField.field.type == "CALENDAR" /* CALENDAR */ && formField.field.dateRange) {
            let controls = {};
            if (validations && validations.length > 0) {
                controls['startDate'] = new FormControl('', validations);
                controls['endDate'] = new FormControl('', validations);
            }
            else {
                controls['startDate'] = new FormControl('');
                controls['endDate'] = new FormControl('');
            }
            fieldControls[formField.field.key] = this.setFormGroup(displayMode, formField.field, controls, validations);
        }
        else if (formField.field.type == "PARAGRAPH" /* PARAGRAPH */ && !CollectionUtils.isEmpty(formField.field.fieldContexts)) {
            let fieldValue = FormUtils.getValueViaEval(record, formField.field.key);
            let controls = this.getParagraphFields(displayMode, formField.field, fieldValue);
            fieldControls[formField.field.key] = this.setFormGroup(displayMode, formField.field, controls, validations);
        }
        else {
            if (formField.addMore) {
                let values = this.getFormFieldValue(record, formField);
                fieldControls[formField.field.key] = new FormArray([]);
                if (CollectionUtils.isEmpty(values)) {
                    fieldControls[formField.field.key].push(this.setFormControl(displayMode, formField.field, "", validations));
                }
                else {
                    for (let vCnt = 0; vCnt < values.length; vCnt++) {
                        fieldControls[formField.field.key].push(this.setFormControl(displayMode, formField.field, values[vCnt], validations));
                    }
                }
            }
            else {
                let value = this.getFormFieldValue(record, formField);
                fieldControls[formField.field.key] = this.setFormControl(displayMode, formField.field, value, validations);
            }
        }
        return fieldControls;
    }
    static dateRangeValidation(g) {
        return g.get('startDate').value || g.get('endDate').value
            ? null : { 'mismatch': true };
    }
    static getCheckboxOption(displayMode, field, options) {
        let opts = {};
        if (field['options'] && field['options'].length > 0) {
            for (let opt of field['options']) {
                if (ObjectUtils.isEmpty(options)) {
                    if (opt['selected']) {
                        opt.checked = true;
                    }
                    else {
                        opt.checked = false;
                    }
                }
                else {
                    let optionSelected = options.indexOf(opt.key) > -1;
                    if (options && optionSelected) {
                        opt.checked = true;
                    }
                    else {
                        opt.checked = false;
                    }
                }
                opts[opt.key] = new FormControl(opt.checked);
                if (FieldUtils.isFieldDisabled(field, displayMode, "")) {
                    opts[opt.key].disable();
                }
            }
        }
        return opts;
    }
    static getParagraphFields(displayMode, field, fieldValues) {
        let fieldContexts = {};
        if (CollectionUtils.isEmpty(fieldValues)) {
            fieldValues = new Map();
        }
        if (field.fieldContexts && Object.keys(field.fieldContexts).length > 0) {
            for (let key of Object.keys(field.fieldContexts)) {
                let fieldContextKey = field.fieldContexts[key];
                let validations = this.getFieldValidation(fieldContextKey);
                fieldContexts[fieldContextKey.key] = new FormControl(fieldValues[fieldContextKey.key], validations);
                if (FieldUtils.isFieldDisabled(field, displayMode, "")) {
                    fieldContexts[fieldContextKey.key].disable();
                }
            }
        }
        return fieldContexts;
    }
    static setFormGroup(displayMode, field, value, validations) {
        let formGroup;
        if (field.validations && field.validations.length > 0) {
            formGroup = new FormGroup(value, validations);
        }
        else {
            formGroup = new FormGroup(value);
        }
        if ((FieldUtils.isFieldDisabled(field, displayMode, value) || field.isReadOnly || field.type == "HIDDEN" /* HIDDEN */) && !StringUtils.isEmpty(value)) {
            formGroup.disable();
        }
        return formGroup;
    }
    static setFormControl(displayMode, field, value, validations) {
        let formControl;
        if (field.validations && field.validations.length > 0) {
            formControl = new FormControl(value, validations);
        }
        else {
            formControl = new FormControl(value);
        }
        if (FieldUtils.isFieldDisabled(field, displayMode, value)) {
            formControl.disable();
        }
        else {
            formControl.enable();
        }
        return formControl;
    }
    static getFormFieldValue(record, formField) {
        let value;
        let fieldValue = FormUtils.getValueViaEval(record, formField.field.key);
        if (formField.addMore) {
            let elements = new Array();
            if (!ObjectUtils.isEmpty(record) && !CollectionUtils.isEmpty(fieldValue) && Array.isArray(fieldValue)) {
                elements = fieldValue;
            }
            else {
                elements.push("");
            }
            for (let cnt = 0; cnt < elements.length; cnt++) {
                elements[cnt] = this.getFieldValue(elements[cnt], formField.field);
            }
            value = elements;
        }
        else {
            let recordValue = "";
            if (record && fieldValue) {
                recordValue = fieldValue;
            }
            value = this.getFieldValue(recordValue, formField.field);
        }
        return value;
    }
    static getFieldValue(recordValue, field) {
        let value = null;
        if (field.value) {
            value = field.value;
        }
        if (!StringUtils.isEmpty(recordValue)) {
            value = recordValue;
        }
        if (value == undefined || JSON.stringify(value) === '{}') {
            value = "";
        }
        return value;
    }
    static reset(form, formConfig) {
        form.reset();
        if (formConfig != null) {
            for (let field of formConfig.formFields) {
                if (field.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */) {
                    field['default'] = null;
                }
            }
        }
    }
    static getValueViaEval(record, key) {
        let value = "";
        try {
            if (StringUtils.isEmpty(value)) {
                value = record[key];
            }
            value = eval("record." + key);
        }
        catch (e) { }
        return value;
    }
    static setOptionsUsingKey(form, fieldKey, masterDataKey) {
        if (!CollectionUtils.isEmpty(form) && !CollectionUtils.isEmpty(form.formFields)) {
            form.formFields.forEach(formField => {
                if (!CollectionUtils.isEmpty(formField) && !CollectionUtils.isEmpty(formField.field)) {
                    if (formField.field.key == fieldKey && (formField.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ || formField.field.type == "CHECKBOX" /* CHECKBOX */ || formField.field.type == "RADIO" /* RADIO */ || formField.field.type == "DROPDOWN" /* DROPDOWN */)) {
                        FieldUtils.setOptionsUsingKey(formField.field, masterDataKey);
                    }
                }
            });
        }
    }
    static setOptionsUsingValues(form, fieldKey, keyMap, relaodAll, record) {
        if (!CollectionUtils.isEmpty(form) && !CollectionUtils.isEmpty(form.formFields)) {
            form.formFields.forEach(formField => {
                if (!CollectionUtils.isEmpty(formField) && !CollectionUtils.isEmpty(formField.field)) {
                    let isMatchingDependendKeyMap = false;
                    if (!StringUtils.isEmpty(formField.field.optionDependsOn)) {
                        //  get optionDependsOn field value
                        let optionDependsOnValue = FormUtils.getValueViaEval(record, formField.field.optionDependsOn);
                        if (keyMap.optionDependsOnValue == optionDependsOnValue) {
                            isMatchingDependendKeyMap = true;
                        }
                    }
                    else {
                        isMatchingDependendKeyMap = true;
                    }
                    if (formField.field.key == fieldKey && (formField.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ || formField.field.type == "CHECKBOX" /* CHECKBOX */ || formField.field.type == "RADIO" /* RADIO */ || formField.field.type == "DROPDOWN" /* DROPDOWN */)) {
                        if (isMatchingDependendKeyMap) { //} || relaodAll) {
                            FieldUtils.setOptionsUsingValues(formField.field, keyMap);
                        }
                    }
                }
            });
        }
    }
    static changeButtonLabelIcon(form, buttonIdentifier, label, icon) {
        if (!CollectionUtils.isEmpty(form) && !CollectionUtils.isEmpty(form.action) && !CollectionUtils.isEmpty(form.action.buttons)) {
            form.action.buttons.forEach(button => {
                if (!CollectionUtils.isEmpty(button) && button.identifier == buttonIdentifier) {
                    if (!StringUtils.isEmpty(label)) {
                        button.label = label;
                    }
                    if (!StringUtils.isEmpty(icon)) {
                        button.icon = icon;
                    }
                }
            });
        }
    }
}

class FormCustomUtils {
    static setCustomLayout(formConfig, layout) {
        if (layout && !CollectionUtils.isEmpty(layout.cells)) {
            layout.cells.forEach(cell => {
                if (!CollectionUtils.isEmpty(cell.controls)) {
                    cell.controls.forEach(control => {
                        if (CollectionUtils.isEmpty(control.control)) {
                            let resolvedControl = {};
                            resolvedControl = this.getControl(formConfig, control);
                            control.control = resolvedControl;
                            // if (control.type == CellControllType.BUTTON && control.control['type'] == ButtonType.CHIP) {
                            //     control.control['groupIdentifier'] = control.control.identifier + cell.rows + cell.cols;
                            // }
                        }
                    });
                }
            });
        }
        console.log(formConfig.layout);
    }
    static getControl(formConfig, cellControl) {
        let control = {};
        if (cellControl.control) {
            control = cellControl.control;
        }
        else if (!CollectionUtils.isEmpty(formConfig) && !CollectionUtils.isEmpty(formConfig.formFields) && cellControl.type == "FIELD" /* FIELD */) {
            control = this.getFieldControl(formConfig.formFields, cellControl.key);
        }
        else if (!CollectionUtils.isEmpty(formConfig) && !CollectionUtils.isEmpty(formConfig.action) && cellControl.type == "BUTTON" /* BUTTON */) {
            control = this.getButtonControl(formConfig.action, cellControl.key);
        }
        return control;
    }
    static getFieldControl(formFields, controlKey) {
        let control = {};
        formFields.forEach(formField => {
            if (!CollectionUtils.isEmpty(formField.field) && formField.field.key == controlKey) {
                control = formField;
            }
        });
        return control;
    }
    static getButtonControl(action, controlKey) {
        let control;
        if (StringUtils.isEmpty(action['rowHeight'])) {
            action.buttons.forEach(button => {
                if (button.identifier == controlKey) {
                    control = button;
                }
            });
        }
        else {
            action.cells.forEach(cell => {
                cell.buttons.buttons.forEach(button => {
                    if (button.identifier == controlKey) {
                        control = button;
                    }
                });
            });
        }
        return control;
    }
}

class ListUtils {
    static addColoumn() {
    }
    static hideColoumn() {
    }
    static setOptionsUsingKey(list, fieldKey, masterDataKey) {
        if (!CollectionUtils.isEmpty(list) && !CollectionUtils.isEmpty(list.columns)) {
            list.columns.forEach(column => {
                if (!CollectionUtils.isEmpty(column) && !CollectionUtils.isEmpty(column.fields)) {
                    column.fields.forEach(field => {
                        if (!CollectionUtils.isEmpty(field) && field.key == fieldKey && (field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ || field.type == "CHECKBOX" /* CHECKBOX */ || field.type == "RADIO" /* RADIO */ || field.type == "DROPDOWN" /* DROPDOWN */)) {
                            FieldUtils.setOptionsUsingKey(field, masterDataKey);
                        }
                    });
                }
            });
        }
    }
    static setOptionsUsingValues(list, fieldKey, keyMap, relaodAll, record) {
        if (!CollectionUtils.isEmpty(list) && !CollectionUtils.isEmpty(list.columns)) {
            list.columns.forEach(column => {
                if (!CollectionUtils.isEmpty(column) && !CollectionUtils.isEmpty(column.fields)) {
                    column.fields.forEach(field => {
                        let isMatchingDependendKeyMap = false;
                        if (!StringUtils.isEmpty(field.optionDependsOn)) {
                            //  get optionDependsOn field value
                            let optionDependsOnValue = FormUtils.getValueViaEval(record, field.optionDependsOn);
                            if (keyMap.optionDependsOnValue == optionDependsOnValue) {
                                isMatchingDependendKeyMap = true;
                            }
                        }
                        else {
                            isMatchingDependendKeyMap = true;
                        }
                        if (!CollectionUtils.isEmpty(field) && field.key == fieldKey && (field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ || field.type == "CHECKBOX" /* CHECKBOX */ || field.type == "RADIO" /* RADIO */ || field.type == "DROPDOWN" /* DROPDOWN */)) {
                            if (isMatchingDependendKeyMap) { //} || relaodAll)   {
                                FieldUtils.setOptionsUsingValues(field, keyMap);
                            }
                        }
                    });
                }
            });
        }
    }
    static getColumnKey(column) {
        let key;
        if (column.key) {
            key = column.key;
        }
        else {
            if (column.fields && column.fields.length > 0) {
                key = column.fields[0].key;
            }
        }
        return key;
    }
    static getColumnLabel(column) {
        let label;
        if (column.label) {
            label = column.label;
        }
        else {
            if (column.fields && column.fields.length > 0) {
                label = column.fields[0].label;
            }
        }
        return label;
    }
    static getColumnSelectorField(listConfig) {
        let options = new Array();
        let values = new Array();
        for (let column of listConfig.columns) {
            let key = this.getColumnKey(column);
            let label = this.getColumnLabel(column);
            options.push({
                key: key,
                value: label,
                disabled: false,
                selected: column.show
            });
            if (column.show) {
                values.push(key);
            }
        }
        let columnSelectorField = {
            key: "columnSelector",
            label: "Display Column",
            type: "DROPDOWN" /* DROPDOWN */,
            appearance: "STANDARD" /* STANDARD */,
            isReadOnly: false,
            fieldDisplayType: "INLINE" /* INLINE */,
            placeholder: "Columns to display",
            options: options,
            multiselect: true,
            value: values
        };
        return columnSelectorField;
    }
    static getMobileConfig(listConfig) {
        if (!CollectionUtils.isEmpty(listConfig) && !CollectionUtils.isEmpty(listConfig.mobile) && !CollectionUtils.isEmpty(listConfig.mobile.cells)) {
            this.setCustomLayout(listConfig, listConfig.mobile);
        }
    }
    static setCustomLayouts(listConfig) {
        if (this.hasRowHover(listConfig)) {
            this.setCustomLayout(listConfig, listConfig.row.hover.template.layout);
        }
        if (this.hasCustomCellLayout(listConfig)) {
            listConfig.columns.forEach(column => {
                if (column.template && column.template.layout) {
                    this.setCustomLayout(listConfig, column.template.layout);
                }
            });
        }
        if (this.hasCustomRowLayout(listConfig)) {
            this.setCustomLayout(listConfig, listConfig.row.template.layout);
        }
    }
    static hasRowHover(listConfig) {
        let hasHoverConfig = false;
        if (listConfig && listConfig.row && listConfig.row.hover && listConfig.row.hover.template && listConfig.row.hover.template.layout) {
            hasHoverConfig = true;
        }
        return hasHoverConfig;
    }
    static hasCustomRowLayout(listConfig) {
        let hasCustomRowLayout = false;
        if (listConfig && listConfig.row && listConfig.row.template && listConfig.row.template.layout) {
            hasCustomRowLayout = true;
        }
        return hasCustomRowLayout;
    }
    static hasCustomCellLayout(listConfig) {
        let hasCustomCellLayout = false;
        if (listConfig && !CollectionUtils.isEmpty(listConfig.columns)) {
            listConfig.columns.forEach(column => {
                if (column.template && column.template.layout) {
                    hasCustomCellLayout = true;
                }
            });
        }
        return hasCustomCellLayout;
    }
    static setCustomLayout(listConfig, layout) {
        if (layout && !CollectionUtils.isEmpty(layout.cells)) {
            layout.cells.forEach(cell => {
                if (!CollectionUtils.isEmpty(cell.controls)) {
                    cell.controls.forEach(control => {
                        if (CollectionUtils.isEmpty(control.control)) {
                            let resolvedControl = {};
                            resolvedControl = this.getControl(listConfig, control);
                            control.control = resolvedControl.control;
                            control.colIndex = resolvedControl.colIndex;
                            control.cControlIndex = resolvedControl.cControlIndex;
                            // if (control.type == CellControllType.BUTTON && control.control['type'] == ButtonType.CHIP) {
                            //     control.control['groupIdentifier'] = control.control.identifier + cell.rows + cell.cols;
                            // }
                        }
                    });
                }
            });
        }
    }
    static getControl(listConfig, cellControl) {
        let control = {};
        if (cellControl.control) {
            control = { control: cellControl.control, colIndex: 0, cControlIndex: 0 };
        }
        else if (!CollectionUtils.isEmpty(listConfig) && !CollectionUtils.isEmpty(listConfig.columns) && cellControl.type == "FIELD" /* FIELD */) {
            control = this.getColumnControl(listConfig.columns, cellControl.key);
        }
        else if (!CollectionUtils.isEmpty(listConfig) && !CollectionUtils.isEmpty(listConfig.actions) && cellControl.type == "BUTTON" /* BUTTON */) {
            control.control = this.getButtonControl(listConfig.actions, cellControl.key);
            control.colIndex = listConfig.columns.length;
        }
        return control;
    }
    static getColumnControl(columns, controlKey) {
        let control = {};
        let colIndex = 0;
        columns.forEach(column => {
            if (!CollectionUtils.isEmpty(column.fields) && CollectionUtils.isEmpty(control.control)) {
                let cControlIndex = 0;
                column.fields.forEach(field => {
                    if (CollectionUtils.isEmpty(control.control)) {
                        control = ListUtils.getFieldControl(field, controlKey, colIndex, cControlIndex);
                        cControlIndex++;
                    }
                });
            }
            colIndex++;
        });
        return control;
    }
    static getFieldControl(field, controlKey, colIndex, cControlIndex) {
        let control = {};
        if (field.key == controlKey) {
            control.control = field;
            control.colIndex = colIndex;
            control.cControlIndex = cControlIndex;
            console.log("1111111");
            console.log(control);
        }
        return control;
    }
    static getButtonControl(buttons, controlKey) {
        let control;
        buttons.forEach(button => {
            if (button.identifier == controlKey) {
                control = button;
            }
        });
        return control;
    }
}

class PropertyUtils {
    static getPropertyFromLocalStore(key) {
        let propertiesMap = JSON.parse(localStorage.getItem("properties"));
        return propertiesMap[key];
    }
}

class SecurityUtils {
    static encrypt(data) {
        try {
            // return '';
            return AES.encrypt(JSON.stringify(data), 'key').toString();
        }
        catch (e) {
            Error(e);
        }
    }
    static decrypt(data) {
        try {
            //      const bytes = '';
            const bytes = AES.decrypt(data, 'key');
            if (bytes.toString()) {
                return JSON.parse(bytes.toString(enc.Utf8));
                return "1";
            }
            return data;
        }
        catch (e) {
            Error(e);
        }
    }
}

class DropdownUtils {
    static getValue(key, options) {
        let value;
        if (!CollectionUtils.isEmpty(options)) {
            options.forEach(option => {
                if (option.key == key) {
                    value = option.value;
                }
            });
        }
        return value;
    }
}

class CrudUtils {
    static setOptionsUsingKey(crud, fieldKey, masterDataKey) {
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.form) && !CollectionUtils.isEmpty(crud.form.tabs)) {
            crud.form.tabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.setOptionsUsingKey(widget.widget, fieldKey, masterDataKey);
                        }
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "LIST" /* LIST */) {
                            ListUtils.setOptionsUsingKey(widget.widget, fieldKey, masterDataKey);
                        }
                    });
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.list) && !CollectionUtils.isEmpty(crud.list.lists)) {
            crud.list.lists.forEach(list => {
                if (!CollectionUtils.isEmpty(list)) {
                    ListUtils.setOptionsUsingKey(list, fieldKey, masterDataKey);
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.search) && !CollectionUtils.isEmpty(crud.search.form)) {
            FormUtils.setOptionsUsingKey(crud.search.form, fieldKey, masterDataKey);
        }
    }
    static setOptionsUsingValues(crud, fieldKey, keyMap, relaodAll, record) {
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.form) && !CollectionUtils.isEmpty(crud.form.tabs)) {
            crud.form.tabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.setOptionsUsingValues(widget.widget, fieldKey, keyMap, relaodAll, record);
                        }
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "LIST" /* LIST */) {
                            ListUtils.setOptionsUsingValues(widget.widget, fieldKey, keyMap, relaodAll, record);
                        }
                    });
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.list) && !CollectionUtils.isEmpty(crud.list.lists)) {
            crud.list.lists.forEach(list => {
                if (!CollectionUtils.isEmpty(list)) {
                    ListUtils.setOptionsUsingValues(list, fieldKey, keyMap, relaodAll, record);
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.search) && !CollectionUtils.isEmpty(crud.search.form)) {
            FormUtils.setOptionsUsingValues(crud.search.form, fieldKey, keyMap, relaodAll, record);
        }
    }
    static setDisplayType(crudTabs, formDisplayMode) {
        if (!CollectionUtils.isEmpty(crudTabs)) {
            crudTabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            widget.widget.displayMode = formDisplayMode;
                        }
                    });
                }
            });
        }
    }
    static changeButtonLabelIcon(crudTabs, buttonIdentifier, label, icon) {
        if (!CollectionUtils.isEmpty(crudTabs)) {
            crudTabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.changeButtonLabelIcon(widget.widget, buttonIdentifier, label, icon);
                        }
                    });
                }
            });
        }
    }
}

class KeyMapUtils {
    static push(keyMaps, associations, options, optionType, optionComponent, optionDependsOnValue, record) {
        // if (CollectionUtils.isEmpty(keyMaps)) {
        //   keyMaps = new Array<KeyMap>();
        // }
        let optionsDD;
        if (!(options instanceof Array)) {
            optionsDD = MasterDataUtils.getMasterDataAsOptions(options);
        }
        else {
            optionsDD = options;
        }
        if (!CollectionUtils.isEmpty(associations)) {
            keyMaps.push(KeyMapUtils.generateKeyMap(associations, options, optionDependsOnValue));
            KeyMapUtils.setOptionssUsingValues(keyMaps, true, optionType, optionComponent, record);
        }
        return keyMaps;
    }
    static generateKeyMap(associations, options, optionDependsOnValue) {
        // if (CollectionUtils.isEmpty(keyMaps)) {
        //   keyMaps = new Array<KeyMap>();
        // }
        let optionsDD;
        if (!(options instanceof Array)) {
            optionsDD = MasterDataUtils.getMasterDataAsOptions(options);
        }
        else {
            optionsDD = options;
        }
        let keyMap;
        if (!CollectionUtils.isEmpty(associations)) {
            keyMap = { associations: associations, options: optionsDD, optionDependsOnValue: optionDependsOnValue };
        }
        return keyMap;
    }
    static setOptionssUsingValues(keyMaps, relaodAll, optionType, optionComponent, record) {
        if (!CollectionUtils.isEmpty(keyMaps)) {
            keyMaps.forEach(keyMap => {
                if (!CollectionUtils.isEmpty(keyMap.associations)) {
                    keyMap.associations.forEach(association => {
                        if (optionType != null && "CRUD" /* CRUD */ == optionType) {
                            CrudUtils.setOptionsUsingValues(optionComponent, association.fieldKey, keyMap, relaodAll, record);
                        }
                        if ("FORM" /* FORM */ == optionType) {
                            FormUtils.setOptionsUsingValues(optionComponent, association.fieldKey, keyMap, relaodAll, record);
                        }
                        if ("LIST" /* LIST */ == optionType) {
                            ListUtils.setOptionsUsingValues(optionComponent, association.fieldKey, keyMap, relaodAll, record);
                        }
                    });
                }
            });
        }
    }
    static getValue(keyMaps, fieldKey, valueAsKey) {
        let value = "";
        if (!CollectionUtils.isEmpty(keyMaps)) {
            keyMaps.forEach(keyMap => {
                if (!CollectionUtils.isEmpty(keyMap.associations)) {
                    keyMap.associations.forEach(association => {
                        if (association.fieldKey == fieldKey && !CollectionUtils.isEmpty(keyMap.options)) {
                            keyMap.options.forEach(option => {
                                if (option.key == valueAsKey) {
                                    value = option.value;
                                }
                            });
                        }
                    });
                }
            });
        }
        return value;
    }
}

class AbilityUtils {
    static setAbility(ability) {
        let user = JSON.parse(localStorage.getItem("user"));
        if (user && user['permissions']) {
            let rules = user['permissions'];
            ability.update(rules);
        }
    }
}

// export * from './crud.utility';

class ButtonDeleteConfirmationComponent {
    constructor(dialogRef, data, ability) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.ability = ability;
        AbilityUtils.setAbility(this.ability);
    }
    ngOnInit() {
        this.title = this.resolve(this.data.confirmationConfig.title);
        this.message = this.resolve(this.data.confirmationConfig.message);
    }
    displayOnlyIcon(button) {
        return button && !StringUtils.isEmpty(button.icon) && StringUtils.isEmpty(button.label) ? true : false;
    }
    displayIcon(button) {
        return button && !StringUtils.isEmpty(button.icon) ? true : false;
    }
    resolve(text) {
        return ObjectUtils.resolve(text, this.data.originalData);
    }
    click(event) {
        this.dialogRef.close(event);
    }
}
ButtonDeleteConfirmationComponent.ɵfac = function ButtonDeleteConfirmationComponent_Factory(t) { return new (t || ButtonDeleteConfirmationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ButtonDeleteConfirmationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonDeleteConfirmationComponent, selectors: [["mx-button-delete-confirmation"]], decls: 4, vars: 5, consts: [["mat-dialog-title", "", 4, "ngIf"], ["mat-dialog-content", "", 4, "ngIf"], ["mat-dialog-actions", "", 1, "mx-dialog-action"], ["class", "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "onClick", 4, "ngFor", "ngForOf"], ["mat-dialog-title", ""], ["mat-dialog-content", ""], [1, "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "onClick"]], template: function ButtonDeleteConfirmationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ButtonDeleteConfirmationComponent_h1_0_Template, 2, 1, "h1", 0);
        ɵngcc0.ɵɵtemplate(1, ButtonDeleteConfirmationComponent_div_1_Template, 3, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, ButtonDeleteConfirmationComponent_mx_button_3_Template, 1, 9, "mx-button", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.message);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("text-align", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.data.confirmationConfig.buttons);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc1.MatDialogActions, ɵngcc3.NgForOf, ɵngcc1.MatDialogTitle, ɵngcc1.MatDialogContent, ButtonComponent]; }, styles: [".mx-dialog-action[_ngcontent-%COMP%]{text-align:right}.mx-dialog-action[_ngcontent-%COMP%] > .mx-button[_ngcontent-%COMP%]{margin-right:8px}"] });
ButtonDeleteConfirmationComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
    { type: Ability }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ButtonDeleteConfirmationComponent, [{
        type: Component,
        args: [{
                selector: 'mx-button-delete-confirmation',
                template: "<h1 mat-dialog-title *ngIf=\"title\">{{title}}</h1>\n<div mat-dialog-content *ngIf=\"message\">\n  <p>{{message}}</p>\n</div>\n<div \n  mat-dialog-actions \n  [style.text-align]=\"'right'\"\n  class=\"mx-dialog-action\">\n    <!-- <button mat-flat-button *ngFor=\"let dialogButton of data.confirmationConfig.buttons\" \n        [color]=\"dialogButton.color\" [mat-dialog-close]=\"dialogButton.type\" cdkFocusInitial>\n        <mat-icon aria-hidden=\"true\" [attr.aria-label]=\"dialogButton.label\" [ngClass]=\"{'button-icon-text-padding': dialogButton.icon && dialogButton.label}\" *ngIf=\"displayIcon(dialogButton)\">{{dialogButton.icon}}</mat-icon>\n        <span *ngIf=\"!displayOnlyIcon(dialogButton)\">{{ dialogButton.label }}</span>\n    </button> -->\n    <!-- <pre>{{data | json}}</pre>  -->\n    <mx-button *ngFor=\"let button of data.confirmationConfig.buttons\"\n      [form]=\"data.form\"\n      [sourceIdentifier]=\"data.sourceIdentifier\"\n      [sourceIndex]=\"data.sourceIndex\"\n      [widgetArrayIndex]=\"data.widgetArrayIndex\"\n      [button]=\"button\"\n      [context]=\"data.context\"\n      [originalData]=\"data.originalData\"\n      [buttonRoute]=\"data.buttonRoute\"\n      [parentHierarchy]=\"data.parentHierarchy\"\n      class=\"mx-button\"\n      (onClick)=\"click($event)\"\n    ></mx-button>\n</div>",
                styles: [".mx-dialog-action{text-align:right}.mx-dialog-action>.mx-button{margin-right:8px}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }, { type: ɵngcc2.Ability }]; }, null); })();

//export { Button, ObjectTree, ReservedButton, Action, ButtonType, HoverButton, ButtonGroup, IconPosition } from '../../model';
class ButtonComponent {
    constructor(dialog, router, route, ability) {
        this.dialog = dialog;
        this.router = router;
        this.route = route;
        this.ability = ability;
        this.onClick = new EventEmitter();
        this.onIconClick = new EventEmitter();
        this.routerLink = [];
        this.displayButton = true;
        this.isButtonDisabled = false;
        this.isDisplayOnlyIcon = false;
        this.hasIconDisplay = false;
        this.isFlatButton = false;
        this.isGhostButton = false;
        this.isRaisedButton = false;
        this.isStrokedButton = false;
        this.isFabButton = false;
        this.isChip = false;
        this.isLink = false;
        this.isGroupButton = false;
        this.isMenuButton = false;
        this.buttonWithoutPadding = false;
        this.state = true;
        AbilityUtils.setAbility(this.ability);
    }
    get button() {
        return this._button;
    }
    set button(_button) {
        this._button = _button;
        if (StringUtils.isEmpty(this.label) || !StringUtils.isEmpty(this._button.label)) {
            this.label = this._button.label;
        }
        if (StringUtils.isEmpty(this._button.width)) {
            this._button.width = '';
        }
        else {
            this._button.width = this._button.width + '%';
            document.documentElement.style.setProperty('--width', this._button.width + '%');
        }
        if (StringUtils.isEmpty(this._button.iconPosition)) {
            this._button.iconPosition = "LEFT" /* LEFT */;
        }
    }
    ngOnInit() {
        if (this.displayButton) {
            this.setLabel();
            this.setButtonEnable();
            if (this.form) {
                this.formSubscription = this.form.valueChanges.subscribe(obj => {
                    this.setButtonEnable();
                });
            }
            this.setButtonDisplay();
            this.setOnlyIconDisplay();
            this.setIconDisplay();
            this.setLink();
            this.setGroupButton();
            this.setFlatButton();
            this.setGhostButton();
            this.setRaisedButton();
            this.setStrokedButton();
            this.setFabButton();
            this.setChip();
            this.setButtonWithoutPadding();
            this.setMenuButton();
        }
    }
    setButtonDisplay() {
        if ((!CollectionUtils.isEmpty(this._button.displayInFormModes) && this._button.displayInFormModes.indexOf(this.formDisplayMode) <= -1) || !DependentUtils.displayDependencyField(this._button.dependentOnFields, null, this.context ? this.context : this.originalData)) {
            this.displayButton = false;
        }
    }
    setButtonWithoutPadding() {
        if (this._button.identifier == "fieldTextClearBtn" || this._button.identifier == "fieldRouteToBtn" || this._button.identifier == "listFieldAsLink" || this.identifier == "listFieldAsLink") {
            this.buttonWithoutPadding = true;
        }
    }
    setLabel() {
        if (StringUtils.isEmpty(this.label)) {
            this.label = this._button.label;
        }
    }
    click(event) {
        if (!CollectionUtils.isEmpty(this._button.confirmationConfiguration)) {
            this.openDialog(event);
        }
        else {
            this.invokeAction(null, event);
        }
    }
    openDialog(event) {
        const dialogRef = this.dialog.open(ButtonDeleteConfirmationComponent, {
            width: this._button.confirmationConfiguration.width ? this._button.confirmationConfiguration.width : '250px',
            data: {
                form: this.form,
                sourceIdentifier: this.sourceIdentifier,
                sourceIndex: this.sourceIndex,
                widgetArrayIndex: this.widgetArrayIndex,
                context: this.context,
                originalData: this.originalData,
                buttonRoute: this.buttonRoute,
                parentHierarchy: this.parentHierarchy,
                confirmationConfig: this._button.confirmationConfiguration,
            }
        });
        dialogRef.afterClosed().subscribe(result => {
            console.log('The dialog was closed');
            this.invokeAction(result, event);
        });
    }
    invokeAction(actionDialog, event) {
        if (this._button.identifier == "crudBackButton" && this.buttonRoute && this.buttonRoute.length > 0) {
            this.router.navigate(this.buttonRoute, { skipLocationChange: false, replaceUrl: true });
            return;
        }
        if (this._button.identifier == "reset" /* RESET */) {
            FormUtils.reset(this.form);
            this.context = {};
        }
        let action = ButtonUtils.getAction(this.sourceIdentifier, this.sourceIndex, this.widgetArrayIndex, this._button.identifier, this.parentHierarchy, event, this.originalData, this.context, actionDialog);
        if (this._button.identifier == "search" /* SEARCH */ || this._button.identifier == "reset" /* RESET */) {
            this.addSearchParamsInUrl(action.data);
        }
        else {
            this.onClick.emit(action);
        }
    }
    iconClick(event) {
        let action = ButtonUtils.getAction(this.sourceIdentifier, this.sourceIndex, this.widgetArrayIndex, this._button.identifier, this.parentHierarchy, event, this.originalData, this.context, null);
        if (this._button['groupIdentifier'] == "clearFilterField" /* CLEAR_FILTER_FIELD */) {
            delete action.data[action.action];
            this.addSearchParamsInUrl(action.data);
        }
        else {
            this.onIconClick.emit(action);
        }
    }
    addSearchParamsInUrl(filterData) {
        const queryParams = { filter: SecurityUtils.encrypt(filterData) };
        this.router.navigate([], {
            relativeTo: this.route,
            queryParams: queryParams,
            queryParamsHandling: 'merge',
            skipLocationChange: false,
            replaceUrl: true
        });
    }
    setButtonEnable() {
        let isButtonDisabled = false;
        if (this.form) {
            isButtonDisabled = !this.form.valid;
        }
        if (this.form && this.form.disabled) {
            isButtonDisabled = false;
        }
        if (this._button.identifier == "search" /* SEARCH */ || this._button.identifier == "cancel" /* CANCEL */ || this._button.identifier == "reset" /* RESET */ || this._button.identifier == "add_field" /* ADD_FIELD */ || this._button.identifier == "remove_field" /* REMOVE_FIELD */ || this._button.alwaysEnable == true) {
            isButtonDisabled = false;
        }
        if (this.disabled) {
            isButtonDisabled = this.disabled;
        }
        this.isButtonDisabled = isButtonDisabled;
    }
    setOnlyIconDisplay() {
        this.isDisplayOnlyIcon = this._button && this._button.onlyIcon && !StringUtils.isEmpty(this._button.icon) ? true : false;
    }
    setIconDisplay() {
        this.hasIconDisplay = this._button && this._button.icon ? true : false;
    }
    setFlatButton() {
        this.isFlatButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "FLAT" /* FLAT */ && !this.isGroupButton && !this.isLink : false;
    }
    setGhostButton() {
        this.isGhostButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "GHOST" /* GHOST */ && !this.isGroupButton && !this.isLink : false;
    }
    setRaisedButton() {
        this.isRaisedButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "RAISED" /* RAISED */ && !this.isGroupButton && !this.isLink : false;
    }
    setStrokedButton() {
        this.isStrokedButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "STROKED" /* STROKED */ && !this.isGroupButton && !this.isLink : false;
    }
    setFabButton() {
        this.isFabButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "FAB" /* FAB */ && !this.isGroupButton && !this.isLink : false;
    }
    setChip() {
        this.isChip = this._button && ButtonUtils.instanceOfChipButton(this._button) && !StringUtils.isEmpty(this._button.groupIdentifier) ? true : false;
    }
    setLink() {
        this.isLink = this._button && !StringUtils.isEmpty(this.label) ? !CollectionUtils.isEmpty(this._button.routerLink) : false;
        this.routerLink = this._button.routerLink;
    }
    setGroupButton() {
        this.isGroupButton = this._button && ButtonUtils.instanceOfButtonGroup(this._button) && !StringUtils.isEmpty(this._button.groupIdentifier) ? true : false;
    }
    setMenuButton() {
        this.isMenuButton = this._button && ButtonUtils.instanceOfHoverButton(this._button) ? true : false;
    }
    ngOnDestroy() {
        if (this.formSubscription) {
            this.formSubscription.unsubscribe();
        }
    }
}
ButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonComponent, selectors: [["mx-button"]], inputs: { button: "button", _button: "_button", label: "label", context: "context", form: "form", formDisplayMode: "formDisplayMode", sourceIdentifier: "sourceIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", identifier: "identifier", originalData: "originalData", buttonRoute: "buttonRoute", parentHierarchy: "parentHierarchy", disabled: "disabled" }, outputs: { onClick: "onClick", onIconClick: "onIconClick" }, decls: 4, vars: 4, consts: [["class", "mx-button-wrapper", 3, "width", 4, "ngIf"], ["cfButtonIcon", ""], [1, "mx-button-wrapper"], ["mat-menu-item", "", 3, "disabled", "ngClass", "class", "ngStyle", "click", 4, "ngIf"], ["mat-flat-button", "", 3, "color", "disabled", "ngClass", "class", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], ["mat-button", "", 3, "color", "disabled", "ngClass", "class", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], ["mat-raised-button", "", 3, "color", "ngClass", "class", "ngStyle", "disabled", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], ["mat-stroked-button", "", 3, "color", "disabled", "ngClass", "class", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], ["mat-fab", "", 3, "color", "disabled", "ngClass", "class", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], [3, "selected", "ngClass", "class", "ngStyle", "color", "disabled", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click", 4, "ngIf"], ["mat-button", "", 3, "color", "disabled", "ngClass", "class", "ngStyle", "routerLink", "matTooltip", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", 4, "ngIf"], [3, "value", "disabled", "ngClass", "class", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "change", 4, "ngIf"], ["mat-menu-item", "", 3, "disabled", "ngClass", "ngStyle", "click"], [4, "ngTemplateOutlet"], ["mat-flat-button", "", 3, "color", "disabled", "ngClass", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], ["mat-button", "", 3, "color", "disabled", "ngClass", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], ["mat-raised-button", "", 3, "color", "ngClass", "ngStyle", "disabled", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], ["mat-stroked-button", "", 3, "color", "disabled", "ngClass", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], ["mat-fab", "", 3, "color", "disabled", "ngClass", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], [3, "selected", "ngClass", "ngStyle", "color", "disabled", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "click"], ["mat-button", "", 3, "color", "disabled", "ngClass", "ngStyle", "routerLink", "matTooltip", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden"], [3, "value", "disabled", "ngClass", "ngStyle", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden", "change"], ["aria-hidden", "true", 3, "ngClass", "class", "padding-right", "click", 4, "ngIf"], [4, "ngIf"], [3, "class", 4, "ngIf"], ["aria-hidden", "true", 3, "ngClass", "class", "padding-left", "click", 4, "ngIf"], ["aria-hidden", "true", 3, "ngClass", "click"]], template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ButtonComponent_span_0_Template, 10, 11, "span", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, ButtonComponent_ng_template_2_Template, 5, 5, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._button && ctx.displayButton && (ctx._button.permission == null || ctx._button.permission && ɵngcc0.ɵɵpipeBind2(1, 1, ctx._button.permission["subject"], ctx._button.permission["action"])));
    } }, directives: [ɵngcc3.NgIf, ɵngcc5.MatMenuItem, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc3.NgStyle, ɵngcc6.DefaultStyleDirective, ɵngcc3.NgTemplateOutlet, ɵngcc7.MatButton, ɵngcc8.MatBadge, ɵngcc9.MatChip, ɵngcc7.MatAnchor, ɵngcc4.RouterLinkWithHref, ɵngcc10.MatTooltip, ɵngcc11.MatButtonToggle, ɵngcc12.MatIcon], pipes: [ɵngcc13.CanPipe], styles: [".mx-small-btn[_ngcontent-%COMP%]{box-sizing:border-box;line-height:30px;min-width:unset}.mx-small-icon[_ngcontent-%COMP%]{font-size:12px;height:12px;width:12px}.mx-small-btn[_ngcontent-%COMP%]     .mat-button-toggle-label-content, .mx-small-btn[_ngcontent-%COMP%]     .mx-button-label{line-height:30px}.mx-small-btn.mat-standard-chip[_ngcontent-%COMP%]{min-height:30px}.mx-tiny-btn[_ngcontent-%COMP%]{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.mx-tiny-icon[_ngcontent-%COMP%]{font-size:10px;height:10px;width:10px}.mx-tiny-btn[_ngcontent-%COMP%]     .mat-button-toggle-label-content, .mx-tiny-btn[_ngcontent-%COMP%]     .mx-button-label{line-height:24px}.mx-tiny-btn.mat-standard-chip[_ngcontent-%COMP%]{min-height:26px}.mx-micro-btn[_ngcontent-%COMP%]{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.mx-micro-icon[_ngcontent-%COMP%]{font-size:8px;height:8px;width:8px}.mx-micro-btn[_ngcontent-%COMP%]     .mat-button-toggle-label-content, .mx-micro-btn[_ngcontent-%COMP%]     .mx-button-label{line-height:18px}.mx-micro-btn.mat-standard-chip[_ngcontent-%COMP%]{min-height:20px}.mx-toggle-default-btn[_ngcontent-%COMP%]     .mat-button-toggle-label-content, .mx-toggle-default-btn[_ngcontent-%COMP%]     .mx-button-label{line-height:36px}.mx-chip-button[_ngcontent-%COMP%]{justify-content:center}.mx-chip-button[_ngcontent-%COMP%]   .mat-standard-chip[_ngcontent-%COMP%]{margin:unset}.mx-button-wt-padding[_ngcontent-%COMP%], .mx-button-wt-padding[_ngcontent-%COMP%]   .mat-button[_ngcontent-%COMP%]{min-width:0!important;padding:0!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{padding:0 5px!important}"] });
ButtonComponent.ctorParameters = () => [
    { type: MatDialog },
    { type: Router },
    { type: ActivatedRoute },
    { type: Ability }
];
ButtonComponent.propDecorators = {
    form: [{ type: Input }],
    formDisplayMode: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    identifier: [{ type: Input }],
    context: [{ type: Input }],
    originalData: [{ type: Input }],
    label: [{ type: Input }],
    buttonRoute: [{ type: Input }],
    parentHierarchy: [{ type: Input }],
    disabled: [{ type: Input }],
    onClick: [{ type: Output }],
    onIconClick: [{ type: Output }],
    _button: [{ type: Input }],
    button: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ButtonComponent, [{
        type: Component,
        args: [{
                selector: 'mx-button',
                template: "<!-- <pre>{{ displayButton | json }}</pre> -->\n<span \n    [style.width]=\"_button.width\"\n    class=\"mx-button-wrapper\" \n    *ngIf=\"_button && displayButton && (_button.permission == null || (_button.permission && (_button.permission['subject'] | can: _button.permission['action'])))\">\n    <button \n        mat-menu-item  \n        *ngIf=\"isMenuButton\"\n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-menu-button mx-menu-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': 'calc(' + _button.width + ' - 8px)'}\"\n        [attr.color]=\"_button.color\"  \n        (click)=\"click($event)\" \n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-flat-button\n        *ngIf=\"isFlatButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-flat-button mx-flat-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\"  \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button> \n\n    <button \n        mat-button \n        *ngIf=\"isGhostButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default', 'mx-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"mx-ghost-button mx-ghost-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>    \n    </button>\n    \n    <button \n        mat-raised-button \n        *ngIf=\"isRaisedButton\"\n        [color]=\"_button.color\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-raised-button mx-raised-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-stroked-button \n        *ngIf=\"isStrokedButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-stroked-button mx-stroked-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-fab \n        *ngIf=\"isFabButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-fab-button mx-fab-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n \n    <mat-chip \n        [selected]=\"state\" \n        *ngIf=\"isChip\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-chip-button mx-chip-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-chip>\n    <!-- {{_button | json}} -->\n    <a \n        mat-button \n        *ngIf=\"isLink\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default', 'mx-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"mx-link mx-link-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [routerLink]=\"routerLink\" \n        [matTooltip]=\"_button.label\"\n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </a>\n\n    <!-- appearance=\"legacy\"  -->\n    <mat-button-toggle \n        *ngIf=\"isGroupButton\" \n        [value]=\"_button.identifier\" \n        [disabled]=\"isButtonDisabled\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-toggle-default-btn': _button.size == 'default'}\" \n        class=\"mx-toggle-button mx-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (change)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\"  \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-button-toggle>\n</span>\n\n<ng-template #cfButtonIcon>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-icon': _button.size == 'small', 'mx-tiny-icon': _button.size == 'tiny', 'mx-micro-icon': _button.size == 'micro'}\"  \n        class=\"mx-button-icon mx-button-icon-{{_button.identifier}}\"\n        [style.padding-right.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'LEFT' || _button.iconPosition == 'TOP')\">\n            {{_button.icon}}\n    </mat-icon>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'TOP' && !isDisplayOnlyIcon\"/>\n    <span class=\"mx-button-label mx-button-label-{{_button.identifier}}\" *ngIf=\"!isDisplayOnlyIcon\">{{ label }}</span>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'BOTTOM' && !isDisplayOnlyIcon\"/>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-icon': _button.size == 'small', 'mx-tiny-icon': _button.size == 'tiny', 'mx-micro-icon': _button.size == 'micro'}\"  \n        class=\"mx-button-icon mx-button-icon-{{_button.identifier}}\"\n        [style.padding-left.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'RIGHT' || _button.iconPosition == 'BOTTOM')\">\n            {{_button.icon}}\n    </mat-icon>\n</ng-template>",
                styles: [".mx-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.mx-small-icon{font-size:12px;height:12px;width:12px}.mx-small-btn ::ng-deep .mat-button-toggle-label-content,.mx-small-btn ::ng-deep .mx-button-label{line-height:30px}.mx-small-btn.mat-standard-chip{min-height:30px}.mx-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.mx-tiny-icon{font-size:10px;height:10px;width:10px}.mx-tiny-btn ::ng-deep .mat-button-toggle-label-content,.mx-tiny-btn ::ng-deep .mx-button-label{line-height:24px}.mx-tiny-btn.mat-standard-chip{min-height:26px}.mx-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.mx-micro-icon{font-size:8px;height:8px;width:8px}.mx-micro-btn ::ng-deep .mat-button-toggle-label-content,.mx-micro-btn ::ng-deep .mx-button-label{line-height:18px}.mx-micro-btn.mat-standard-chip{min-height:20px}.mx-toggle-default-btn ::ng-deep .mat-button-toggle-label-content,.mx-toggle-default-btn ::ng-deep .mx-button-label{line-height:36px}.mx-chip-button{justify-content:center}.mx-chip-button .mat-standard-chip{margin:unset}.mx-button-wt-padding,.mx-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatDialog }, { type: ɵngcc4.Router }, { type: ɵngcc4.ActivatedRoute }, { type: ɵngcc2.Ability }]; }, { onClick: [{
            type: Output
        }], onIconClick: [{
            type: Output
        }], button: [{
            type: Input
        }], _button: [{
            type: Input
        }], label: [{
            type: Input
        }], context: [{
            type: Input
        }], form: [{
            type: Input
        }], formDisplayMode: [{
            type: Input
        }], sourceIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], identifier: [{
            type: Input
        }], originalData: [{
            type: Input
        }], buttonRoute: [{
            type: Input
        }], parentHierarchy: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();

//export { Button, ObjectTree, ButtonGroup, HoverButton, Badge, ButtonType } from '../../model';
class ButtonGroupComponent {
    constructor(ability) {
        this.ability = ability;
        this.onClick = new EventEmitter();
        this.onIconClick = new EventEmitter();
        this.buttonLists = new Array();
        this.buttonListsType = new Array();
        this.displayDesktopDD = false;
        this.displayTabletDD = false;
        this.displayMobileDD = false;
        this.hoverButtonLists = new Array();
        AbilityUtils.setAbility(this.ability);
    }
    get buttons() {
        return this._buttons;
    }
    set buttons(_buttons) {
        if (!(_buttons instanceof Array)) {
            let btns = new Array();
            btns.push(_buttons);
            _buttons = btns;
        }
        this._buttons = _buttons;
        this.getButtonList();
        this.getButtonType();
        this.displayDesktopDD = this.hasMobileButton('showOnDesktop');
        this.displayTabletDD = this.hasMobileButton('showOnTablet');
        this.displayMobileDD = this.hasMobileButton('showOnMobile');
        if (this.displayDesktopDD || this.displayMobileDD || this.displayTabletDD) {
            this.changeButtonTypeToGhost();
        }
    }
    ngOnInit() {
        // this.getButtonList();
        // this.getButtonType();
    }
    hasMobileButton(displayIn) {
        let hasButtonsForDropdown = false;
        if (!CollectionUtils.isEmpty(this.buttonLists)) {
            this.buttonLists.forEach(buttons => {
                if (!CollectionUtils.isEmpty(buttons) && buttons instanceof Array) {
                    buttons.forEach(button => {
                        if (button['showOnDesktop'] == null && button['showOnTablet'] == null && button['showOnMobile'] == null) {
                            button['showOnDesktop'] = true;
                            button['showOnTablet'] = true;
                            button['showOnMobile'] = true;
                        }
                        if (button[displayIn]) {
                            hasButtonsForDropdown = true;
                        }
                    });
                }
            });
        }
        return hasButtonsForDropdown;
    }
    changeButtonTypeToGhost() {
        this.hoverButtonLists = JSON.parse(JSON.stringify(this.buttonLists));
        if (!CollectionUtils.isEmpty(this.hoverButtonLists)) {
            this.hoverButtonLists.forEach(buttons => {
                if (!CollectionUtils.isEmpty(buttons) && buttons instanceof Array) {
                    buttons.forEach(button => {
                        button.type = "GHOST" /* GHOST */;
                    });
                }
            });
        }
    }
    getButtonList() {
        this.buttonLists = new Array();
        let buttonArray = new Array();
        let buttonArrayIndex = 0;
        if (this._buttons) {
            for (let index = 0; index < this._buttons.length; index++) {
                if (ButtonUtils.instanceOfButton(this._buttons[index])) {
                    if (ObjectUtils.isEmpty(buttonArray[buttonArrayIndex])) {
                        buttonArray[buttonArrayIndex] = new Array();
                        this.buttonLists.push(buttonArray[buttonArrayIndex]);
                    }
                    buttonArray[buttonArrayIndex].push(this._buttons[index]);
                }
                if (ButtonUtils.instanceOfButtonGroup(this._buttons[index]) || ButtonUtils.instanceOfChipButton(this._buttons[index])) {
                    let bgAdded = this.getGroupButton(this._buttons[index].groupIdentifier, this.buttonLists);
                    if (bgAdded) {
                        buttonArrayIndex++;
                    }
                }
            }
            let hoverButton = this.getHoverButtons();
            if (hoverButton && hoverButton.hoverButtons && hoverButton.hoverButtons.length > 0) {
                this.buttonLists.push(hoverButton);
                buttonArrayIndex++;
            }
        }
    }
    isGroupAdded(groupIdentifier, buttonLists) {
        let groupAdded = false;
        if (buttonLists) {
            groupAdded = buttonLists.filter(buttonList => buttonList && buttonList.groupIdentifier == groupIdentifier).length > 0;
        }
        return groupAdded;
    }
    getGroupButton(groupIdentifier, buttonLists) {
        let bgAdded = false;
        let gButtons = new Array();
        if (this._buttons && this.isGroupAdded(groupIdentifier, buttonLists) == false) {
            gButtons = this._buttons.filter(button => button.groupIdentifier == groupIdentifier).map(button => {
                button.width = '100';
                return button;
            });
            // To check if any button is fullwidth
            let width = gButtons.filter(gButton => gButton.fullWidth == true).length > 0 ? '100' : 'auto';
            let buttonWidth = 'auto';
            if (width != 'auto') {
                buttonWidth = (+width / gButtons.length);
            }
            buttonLists.push({
                groupIdentifier: groupIdentifier,
                width: width,
                buttonWidth: buttonWidth,
                groupButtons: gButtons
            });
            bgAdded = true;
        }
        return bgAdded;
    }
    getHoverButtons() {
        let hoverButtons = new Array();
        let groupIdentifier;
        let groupLabel;
        let groupIcon;
        let badge;
        let width = 'auto';
        if (this._buttons) {
            this._buttons.filter(button => ButtonUtils.instanceOfHoverButton(button)).forEach(button => {
                if (StringUtils.isEmpty(groupIdentifier)) {
                    groupIdentifier = button.groupIdentifier;
                }
                if (StringUtils.isEmpty(groupLabel)) {
                    groupLabel = button.groupLabel;
                }
                if (StringUtils.isEmpty(groupIcon)) {
                    groupIcon = button.groupIcon;
                }
                if (CollectionUtils.isEmpty(badge)) {
                    badge = button.badge;
                }
                if (button.fullWidth) {
                    width = '100';
                    button.width = '100';
                }
                hoverButtons.push(button);
            });
        }
        return { groupIdentifier: groupIdentifier, groupLabel: groupLabel, groupIcon: groupIcon, badge: badge, width: width, hoverButtons: hoverButtons };
    }
    getButtonType() {
        this.buttonListsType = new Array();
        if (this.buttonLists && this.buttonLists.length > 0) {
            for (let buttonList of this.buttonLists) {
                let buttonType = "";
                if (this.isButtonGroup(buttonList)) {
                    buttonType = 'ButtonGroup';
                }
                else if (this.isChipGroup(buttonList)) {
                    buttonType = 'ChipGroup';
                }
                else if (this.isButtonHover(buttonList)) {
                    buttonType = 'ButtonHover';
                }
                else if (this.isButtonArray(buttonList)) {
                    buttonType = 'ButtonArray';
                }
                this.buttonListsType.push(buttonType);
            }
        }
    }
    isButtonGroup(buttonList) {
        let isButtonGroup = false;
        if (buttonList && buttonList.groupButtons && buttonList.groupButtons.length > 0 && !StringUtils.isEmpty(buttonList.groupIdentifier)) {
            isButtonGroup = buttonList.groupButtons.filter(button => ButtonUtils.instanceOfButtonGroup(button)).length > 0;
        }
        return isButtonGroup;
    }
    isChipGroup(buttonList) {
        let isChipGroup = false;
        if (buttonList && buttonList.groupButtons && buttonList.groupButtons.length > 0 && !StringUtils.isEmpty(buttonList.groupIdentifier)) {
            isChipGroup = buttonList.groupButtons.filter(button => ButtonUtils.instanceOfChipButton(button)).length > 0;
            if (isChipGroup) {
                buttonList.groupButtons.forEach(button => ButtonUtils.instanceOfChipButton(button));
            }
        }
        return isChipGroup;
    }
    isButtonHover(buttonList) {
        return buttonList && buttonList.hoverButtons && buttonList.hoverButtons.length > 0;
    }
    isButtonArray(buttonList) {
        return buttonList instanceof Array;
    }
    click(event) {
        this.onClick.emit(event);
    }
    iconClick(event) {
        this.onIconClick.emit(event);
    }
}
ButtonGroupComponent.ɵfac = function ButtonGroupComponent_Factory(t) { return new (t || ButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ButtonGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonGroupComponent, selectors: [["mx-button-group"]], inputs: { buttons: "buttons", _buttons: "_buttons", form: "form", formDisplayMode: "formDisplayMode", sourceIdentifier: "sourceIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", context: "context", originalData: "originalData", buttonRoute: "buttonRoute", parentHierarchy: "parentHierarchy", disabled: "disabled" }, outputs: { onClick: "onClick", onIconClick: "onIconClick" }, decls: 1, vars: 1, consts: [["class", "mx-button-group", 4, "ngFor", "ngForOf"], [1, "mx-button-group"], ["aria-label", "Chip Selection", 3, "width", "ngClass", "class", 4, "ngIf"], ["multiple", "false", 3, "name", "ngClass", "class", "width", 4, "ngIf"], [3, "ngClass", "class", "width", 4, "ngIf"], ["class", "mx-buttons-group", 3, "ngClass", 4, "ngIf"], ["aria-label", "Chip Selection", 3, "ngClass"], [3, "form", "ngClass", "width", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "onClick", "onIconClick", 4, "ngFor", "ngForOf"], [3, "form", "ngClass", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "onClick", "onIconClick"], ["multiple", "false", 3, "name", "ngClass"], ["group", "matButtonToggleGroup"], [3, "form", "width", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "onClick", "onIconClick", 4, "ngFor", "ngForOf"], [3, "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "onClick", "onIconClick"], [3, "ngClass"], ["mat-raised-button", "", 3, "matMenuTriggerFor", "ngClass", "matBadge", "matBadgeColor", "matBadgePosition", "matBadgeSize", "matBadgeHidden"], [3, "class", 4, "ngIf"], [1, "mx-button-icon", 3, "ngClass"], ["menu", "matMenu"], [3, "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "onClick", "onIconClick", 4, "ngFor", "ngForOf"], [1, "mx-buttons-group", 3, "ngClass"], [3, "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "ngClass", "fxShow", "fxShow.xs", "fxShow.sm", "onClick", "onIconClick", 4, "ngFor", "ngForOf"], ["mat-icon-button", "", 3, "matMenuTriggerFor", "fxShow", "fxShow.sm", "fxShow.xs"], [1, "mx-button-tooltip"], ["dropMenu", "matMenu"], [4, "ngFor", "ngForOf"], [3, "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "parentHierarchy", "disabled", "ngClass", "fxShow", "fxShow.xs", "fxShow.sm", "onClick", "onIconClick"], [3, "fxShow", "fxShow.sm", "fxShow.xs"], [3, "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "buttonRoute", "disabled", "onClick", "onIconClick"], [4, "ngIf"]], template: function ButtonGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ButtonGroupComponent_span_0_Template, 5, 4, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.buttonLists);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc9.MatChipList, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ButtonComponent, ɵngcc11.MatButtonToggleGroup, ɵngcc7.MatButton, ɵngcc5.MatMenuTrigger, ɵngcc8.MatBadge, ɵngcc12.MatIcon, ɵngcc5._MatMenu, ɵngcc6.DefaultShowHideDirective, ɵngcc14.MatDivider], styles: [".mx-button-group{vertical-align:middle}.mx-chip-group{display:inline-flex}.mx-button{margin-right:8px}.mx-chip-group .mat-chip-list-wrapper .mat-standard-chip{margin:unset}.mx-chip-group .mat-chip-list-wrapper{width:inherit}.mx-button-tooltip.mat-menu-panel{min-height:auto}", ".mx-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.mx-small-icon{font-size:12px;height:12px;width:12px}.mx-small-btn ::ng-deep .mat-button-toggle-label-content,.mx-small-btn ::ng-deep .mx-button-label{line-height:30px}.mx-small-btn.mat-standard-chip{min-height:30px}.mx-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.mx-tiny-icon{font-size:10px;height:10px;width:10px}.mx-tiny-btn ::ng-deep .mat-button-toggle-label-content,.mx-tiny-btn ::ng-deep .mx-button-label{line-height:24px}.mx-tiny-btn.mat-standard-chip{min-height:26px}.mx-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.mx-micro-icon{font-size:8px;height:8px;width:8px}.mx-micro-btn ::ng-deep .mat-button-toggle-label-content,.mx-micro-btn ::ng-deep .mx-button-label{line-height:18px}.mx-micro-btn.mat-standard-chip{min-height:20px}.mx-toggle-default-btn ::ng-deep .mat-button-toggle-label-content,.mx-toggle-default-btn ::ng-deep .mx-button-label{line-height:36px}.mx-chip-button{justify-content:center}.mx-chip-button .mat-standard-chip{margin:unset}.mx-button-wt-padding,.mx-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"], encapsulation: 2 });
ButtonGroupComponent.ctorParameters = () => [
    { type: Ability }
];
ButtonGroupComponent.propDecorators = {
    form: [{ type: Input }],
    formDisplayMode: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    _buttons: [{ type: Input }],
    buttons: [{ type: Input }],
    context: [{ type: Input }],
    originalData: [{ type: Input }],
    buttonRoute: [{ type: Input }],
    parentHierarchy: [{ type: Input }],
    disabled: [{ type: Input }],
    onClick: [{ type: Output }],
    onIconClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ButtonGroupComponent, [{
        type: Component,
        args: [{
                selector: 'mx-button-group',
                template: "<!-- <pre>{{formDisplayMode | json}}</pre> -->\n<span class=\"mx-button-group\" *ngFor=\"let buttonList of buttonLists; let bIndex = index;\">\n    <mat-chip-list \n        *ngIf=\"buttonListsType[bIndex] == 'ChipGroup'\"\n        [style.width.%]=\"buttonList.width\" \n        [ngClass]=\"{'mx-button': bIndex < buttonLists.length - 1 }\"\n        class=\"mx-chip-group mx-chip-group-{{buttonList.groupIdentifier}}\"\n        aria-label=\"Chip Selection\">\n        <mx-button *ngFor=\"let button of buttonList.groupButtons\"\n            [form]=\"form\"\n            [ngClass]=\"{'mx-button': (bIndex + 1) != buttonList.length}\"\n            [style.width]=\"'calc(' + buttonList.buttonWidth + '% - 8px)'\"\n            [formDisplayMode]=\"formDisplayMode\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"button\"\n            [context]=\"context\" \n            [originalData]=\"originalData\"\n            [buttonRoute]=\"buttonRoute\"\n            [parentHierarchy]=\"parentHierarchy\"\n            [disabled]=\"disabled\"\n            (onClick)=\"click($event)\"\n            (onIconClick)=\"iconClick($event)\"\n        ></mx-button>\n    </mat-chip-list>\n    \n    <!-- appearance=\"legacy\" -->\n    <mat-button-toggle-group \n        *ngIf=\"buttonListsType[bIndex] == 'ButtonGroup'\"\n        [name]=\"buttonList.groupIdentifier\" \n        multiple=\"false\" \n        [ngClass]=\"{'mx-button': bIndex < buttonLists.length - 1 }\"\n        class=\"mx-toggle-group mx-toggle-group-{{buttonList.groupIdentifier}}\" \n        [style.width.%]=\"buttonList.width\"\n        #group=\"matButtonToggleGroup\">\n        <mx-button *ngFor=\"let button of buttonList.groupButtons\"\n            [form]=\"form\"\n            [style.width.%]=\"buttonList.buttonWidth\"\n            [formDisplayMode]=\"formDisplayMode\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"button\"\n            [context]=\"context\"\n            [originalData]=\"originalData\"\n            [buttonRoute]=\"buttonRoute\"\n            [parentHierarchy]=\"parentHierarchy\"\n            [disabled]=\"disabled\"\n            (onClick)=\"click($event)\"\n            (onIconClick)=\"iconClick($event)\"\n        ></mx-button>\n    </mat-button-toggle-group>\n\n    <span \n        *ngIf=\"buttonListsType[bIndex] == 'ButtonHover'\"\n        [ngClass]=\"{'mx-button': bIndex < buttonLists.length - 1}\"\n        class=\"mx-hover-group mx-hover-group-{{buttonList.groupIdentifier}}\"\n        [style.width.%]=\"100\">\n        <button \n            mat-raised-button \n            [matMenuTriggerFor]=\"menu\" \n            [ngClass]=\"{'mx-small-btn': buttonList.hoverButtons[0].size == 'small', 'mx-tiny-btn': buttonList.hoverButtons[0].size == 'tiny', 'mx-micro-btn': buttonList.hoverButtons[0].size == 'micro', 'mx-default-btn': buttonList.hoverButtons[0].size == 'default'}\"\n            [style.width.%]=\"buttonList.width\"\n            [attr.aria-label]=\"buttonList.groupLabel\"\n            [matBadge]=\"buttonList.badge ? buttonList.badge.content : ''\" \n            [matBadgeColor]=\"buttonList.badge ? buttonList.badge.color : ''\" \n            [matBadgePosition]=\"buttonList.badge ? buttonList.badge.position : ''\" \n            [matBadgeSize]=\"buttonList.badge ? buttonList.badge.size : ''\" \n            [matBadgeHidden]=\"buttonList.badge ? buttonList.badge.hide : false\">\n            <span class=\"mx-button-label mx-button-label-{{buttonList.groupIdentifier}}\" *ngIf=\"buttonList.groupLabel\">{{ buttonList.groupLabel }}</span>\n            <mat-icon\n                [ngClass]=\"{'mx-small-icon': buttonList.hoverButtons[0].size == 'small', 'mx-tiny-icon': buttonList.hoverButtons[0].size == 'tiny', 'mx-micro-icon': buttonList.hoverButtons[0].size == 'micro', 'mx-default-icon': buttonList.hoverButtons[0].size == 'default'}\"\n                class=\"mx-button-icon\"\n            >{{buttonList.groupIcon}}</mat-icon>\n        </button> \n        <mat-menu #menu=\"matMenu\">\n            <mx-button *ngFor=\"let button of buttonList.hoverButtons\"\n                [form]=\"form\" \n                [formDisplayMode]=\"formDisplayMode\"\n                [sourceIdentifier]=\"sourceIdentifier\"\n                [sourceIndex]=\"sourceIndex\"\n                [widgetArrayIndex]=\"widgetArrayIndex\"\n                [button]=\"button\"\n                [context]=\"context\"\n                [originalData]=\"originalData\"\n                [buttonRoute]=\"buttonRoute\"\n                [parentHierarchy]=\"parentHierarchy\"\n                [disabled]=\"disabled\"\n                (onClick)=\"click($event)\"\n                (onIconClick)=\"iconClick($event)\"\n                ></mx-button> \n        </mat-menu>\n    </span>\n    <span \n        [ngClass]=\"{'mx-button': bIndex < buttonLists.length - 1 }\"\n        class=\"mx-buttons-group\" \n        *ngIf=\"buttonListsType[bIndex] == 'ButtonArray'\">\n        <mx-button *ngFor=\"let button of buttonList; let index = index;\"\n            [form]=\"form\"\n            [formDisplayMode]=\"formDisplayMode\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"button\"\n            [context]=\"context\"\n            [originalData]=\"originalData\"\n            [buttonRoute]=\"buttonRoute\"\n            [parentHierarchy]=\"parentHierarchy\"\n            [disabled]=\"disabled\"\n            [ngClass]=\"{'mx-button': (index + 1) != buttonList.length}\"\n            (onClick)=\"click($event)\"\n            (onIconClick)=\"iconClick($event)\"\n            [fxShow]=\"button.showOnDesktop\" \n            [fxShow.xs]=\"button.showOnMobile\" \n            [fxShow.sm]=\"button.showOnTablet\"\n        ></mx-button> \n        <button \n            mat-icon-button \n            [matMenuTriggerFor]=\"dropMenu\" \n            [fxShow]=\"!displayDesktopDD\"\n            [fxShow.sm]=\"!displayTabletDD\"\n            [fxShow.xs]=\"!displayMobileDD\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu class=\"mx-button-tooltip\" #dropMenu=\"matMenu\">\n            <ng-container *ngFor=\"let button of hoverButtonLists[bIndex]; let index = index;let last = last;\">\n                <div [fxShow]=\"!button.showOnDesktop\" \n                    [fxShow.sm]=\"!button.showOnTablet\" \n                    [fxShow.xs]=\"!button.showOnMobile\">\n                    <!-- <button mat-menu-item (onClick)=\"click($event)\">\n                        <mat-icon class=\"mr\">{{item.icon}}</mat-icon>\n                        {{item.label}}\n                    </button> -->\n                    <mx-button\n                        [form]=\"form\"\n                        [formDisplayMode]=\"formDisplayMode\"\n                        [sourceIdentifier]=\"sourceIdentifier\"\n                        [sourceIndex]=\"sourceIndex\"\n                        [widgetArrayIndex]=\"widgetArrayIndex\"\n                        [button]=\"button\"\n                        [context]=\"context\"\n                        [originalData]=\"originalData\"\n                        [buttonRoute]=\"buttonRoute\"\n                        [disabled]=\"disabled\"\n                        (onClick)=\"click($event)\"\n                        (onIconClick)=\"iconClick($event)\"\n                    ></mx-button>\n                    <mat-divider *ngIf=\"!last\"></mat-divider>\n                </div>\n            </ng-container>\n        </mat-menu>\n    </span>\n</span>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-button-group{vertical-align:middle}.mx-chip-group{display:inline-flex}.mx-button{margin-right:8px}.mx-chip-group .mat-chip-list-wrapper .mat-standard-chip{margin:unset}.mx-chip-group .mat-chip-list-wrapper{width:inherit}.mx-button-tooltip.mat-menu-panel{min-height:auto}", ".mx-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.mx-small-icon{font-size:12px;height:12px;width:12px}.mx-small-btn ::ng-deep .mat-button-toggle-label-content,.mx-small-btn ::ng-deep .mx-button-label{line-height:30px}.mx-small-btn.mat-standard-chip{min-height:30px}.mx-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.mx-tiny-icon{font-size:10px;height:10px;width:10px}.mx-tiny-btn ::ng-deep .mat-button-toggle-label-content,.mx-tiny-btn ::ng-deep .mx-button-label{line-height:24px}.mx-tiny-btn.mat-standard-chip{min-height:26px}.mx-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.mx-micro-icon{font-size:8px;height:8px;width:8px}.mx-micro-btn ::ng-deep .mat-button-toggle-label-content,.mx-micro-btn ::ng-deep .mx-button-label{line-height:18px}.mx-micro-btn.mat-standard-chip{min-height:20px}.mx-toggle-default-btn ::ng-deep .mat-button-toggle-label-content,.mx-toggle-default-btn ::ng-deep .mx-button-label{line-height:36px}.mx-chip-button{justify-content:center}.mx-chip-button .mat-standard-chip{margin:unset}.mx-button-wt-padding,.mx-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }]; }, { onClick: [{
            type: Output
        }], onIconClick: [{
            type: Output
        }], buttons: [{
            type: Input
        }], _buttons: [{
            type: Input
        }], form: [{
            type: Input
        }], formDisplayMode: [{
            type: Input
        }], sourceIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], context: [{
            type: Input
        }], originalData: [{
            type: Input
        }], buttonRoute: [{
            type: Input
        }], parentHierarchy: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();

class CrudFormComponent {
    constructor(ability) {
        this.ability = ability;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.onSortClick = new EventEmitter();
        this.onPageClick = new EventEmitter();
        this.formsConfigToDisplay = new Array();
        this.rowsInTab = new Array();
        this.formTabLength = 0;
        this.filteredTabs = new Array();
        AbilityUtils.setAbility(this.ability);
    }
    ngOnInit() {
        //    this.filterForms();
        this.drawTabs();
        this.setConfigAsPerTab();
        this.setFormTitle();
        this.addWidget = this.addWidgetButton("addWidget", "Add", "add", "primary" /* PRIMARY */);
    }
    setFormTitle() {
        if (this.form && !CollectionUtils.isEmpty(this.form.tabs)) {
            this.form.tabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (widget.widget && widget.widget.displayMode) {
                            let displayMode = widget.widget.displayMode;
                            if (this.displayMode) {
                                displayMode = this.displayMode;
                            }
                            this.setFormHeader(this.header, displayMode);
                        }
                    });
                }
            });
        }
    }
    setFormHeader(header, displayMode) {
        let title = header.title;
        switch (displayMode) {
            case "SEARCH" /* SEARCH */: {
                title = header.searchModeTitle ? header.searchModeTitle : title;
                break;
            }
            case "ADD" /* ADD */: {
                title = header.addModeTitle ? header.addModeTitle : title;
                break;
            }
            case "EDIT" /* EDIT */: {
                title = header.editModeTitle ? header.editModeTitle : title;
                break;
            }
            case "VIEW" /* VIEW */: {
                title = header.viewModeTitle ? header.viewModeTitle : title;
                break;
            }
            default: {
                title = header.title;
            }
        }
        this.title = title;
    }
    setConfigAsPerTab(tabIdentifier) {
        if (this.configData) {
            this.badges = this.configData.badges;
            this.pageBackRoute = this.configData.pageBackRoute;
            this.record = this.configData.record;
            if (this.configData.configPerTabs) {
                let tabIndex = 0;
                this.configData.configPerTabs.forEach((tabConfigData, tabKey) => {
                    if ((tabKey == tabIdentifier || (tabIndex == 0 && tabIdentifier == null)) && tabConfigData) {
                        if (tabConfigData.badges) {
                            this.badges = tabConfigData.badges;
                        }
                        if (tabConfigData.pageBackRoute) {
                            this.pageBackRoute = tabConfigData.pageBackRoute;
                        }
                        if (tabConfigData.record) {
                            this.record = this.configData.record;
                        }
                    }
                    tabIndex++;
                });
            }
        }
    }
    getTabIdentifier(tabTitle) {
        let tabIdentifier = '';
        if (this.form && this.form.tabs) {
            for (let tab of this.form.tabs) {
                if (tab.label == tabTitle) {
                    tabIdentifier = tab.identifier;
                    break;
                }
            }
        }
        return tabIdentifier;
    }
    drawTabs() {
        if (this.form && this.form.tabs && this.form.tabs.length > 0) {
            let widgetIdentifiers = null;
            if (!CollectionUtils.isEmpty(this.actionPages)) {
                for (let actionPage of this.actionPages) {
                    if (actionPage.buttonIdentifier == this.onAction) {
                        widgetIdentifiers = actionPage.associatedWidgetIdentifiers;
                    }
                }
            }
            for (let tIndex = 0; tIndex < this.form.tabs.length; tIndex++) {
                if (this.form.tabs[tIndex] &&
                    (this.form.tabs[tIndex].permission == null || (this.form.tabs[tIndex].permission && (this.ability.can(this.form.tabs[tIndex].permission['action'], this.form.tabs[tIndex].permission['subject']))))) {
                    let tabRows = this.drawTab(tIndex, widgetIdentifiers);
                    if (!CollectionUtils.isEmpty(tabRows)) {
                        this.rowsInTab.push(tabRows);
                        this.formTabLength++;
                        this.filteredTabs.push(this.form.tabs[tIndex]);
                    }
                }
            }
        }
    }
    drawTab(tabIndex, widgetIdentifiers) {
        let rows = new Array();
        let rIndex = 0;
        if (this.form && this.form.tabs && this.form.tabs.length > 0) {
            for (let tIndex = 0; tIndex < this.form.tabs.length; tIndex++) {
                if (this.form.tabs[tIndex].widgets && this.form.tabs[tIndex].widgets.length > 0 && tIndex == tabIndex) {
                    for (let widget of this.form.tabs[tIndex].widgets) {
                        if (widget &&
                            (widget.permission == null ||
                                (widget.permission && (this.ability.can(widget.permission['action'], widget.permission['subject'])))) &&
                            (widgetIdentifiers == null ||
                                widgetIdentifiers.includes(widget.widget.identifier))) {
                            if (CollectionUtils.isEmpty(rows[rIndex])) {
                                rows[rIndex] = new Array();
                            }
                            let colCount = 0;
                            rows[rIndex].forEach(row => colCount += row.colSpan);
                            if (colCount < 2) {
                                rows[rIndex].push(widget);
                            }
                            else {
                                rIndex++;
                                rows[rIndex] = new Array();
                                rows[rIndex].push(widget);
                            }
                        }
                    }
                }
            }
        }
        console.log(rows);
        return rows;
    }
    displayWidget(widget, supportingRecord, record) {
        return DependentUtils.displayDependencyField(widget.dependentOnFields, supportingRecord, record);
    }
    // filterForms() {
    //   let formIdentifiers: Array<string>;
    //   //    let mappedFormDisplayMode: FormDiaplyMode;
    //   if (this.actionPages && this.actions) {
    //     for (let actionPage of this.actionPages) {
    //       for (let action of this.actions) {
    //         if (actionPage.buttonIdentifier == action.identifier) {
    //           formIdentifiers = actionPage.associatedFormIdentifiers;
    //           //            mappedFormDisplayMode = actionPage.formDisplayMode;
    //         }
    //       }
    //     }
    //     if (this.form && this.form.tabs && !CollectionUtils.isEmpty(formIdentifiers)) {
    //       for (let tab of this.form.tabs) {
    //         for (let widget of tab.widgets) {
    //           if (
    //             formIdentifiers.indexOf((<Form>widget.widget).identifier) > -1 &&
    //             (this.displayMode == null || this.displayMode == (<Form>widget.widget).displayMode)
    //           ) {
    //             widget.widget['display'] = true;
    //           }
    //         }
    //       }
    //     } else {
    //       this.form.tabs.forEach(tab => tab.widgets.forEach(widget => widget.widget['display'] = true));
    //     }
    //   } else {
    //     this.form.tabs.forEach(tab => tab.widgets.forEach(widget => widget.widget['display'] = true));
    //   }
    //   this.form.tabs.forEach(tab => {
    //     let display: boolean = false;
    //     tab.widgets.forEach(widget => {
    //       if (widget.widget['display']) {
    //         display = true;
    //       }
    //       tab['display'] = display;
    //     });
    //     if (tab['display']) {
    //       this.formTabLength++;
    //       this.filteredTabs.push(tab);
    //     }
    //   });
    // }
    addWidgetButton(identifier, label, icon, color) {
        let buttonConfig = {
            identifier: identifier,
            type: "GHOST" /* GHOST */,
            label: label,
            color: color,
            size: "small" /* SMALL */,
            icon: icon,
            onlyIcon: false,
            alwaysEnable: true
        };
        return buttonConfig;
    }
    fieldChange(fieldChange) {
        console.log(fieldChange);
        this.onFieldChange.emit(fieldChange);
    }
    formChange(form) {
        this.onFormChange.emit(form);
    }
    buttonClick(action) {
        console.log(action);
        if (action.action == "addWidget") {
            if (this.record[action.sourceIdentifier] && this.record[action.sourceIdentifier] instanceof Array) {
                this.record[action.sourceIdentifier].push({});
            }
            else {
                this.record[action.sourceIdentifier] = new Array();
                this.record[action.sourceIdentifier].push({});
            }
        }
        this.onButtonClick.emit(action);
    }
    onTabChange(event) {
        console.log(event);
        this.setConfigAsPerTab(this.getTabIdentifier(event.tab.textLabel));
    }
    onAccordianChange(event) {
        console.log(event);
    }
    onSort(event) {
        console.log(event);
        this.onSortClick.emit(event);
    }
    onPage(event) {
        console.log(event);
        this.onPageClick.emit(event);
    }
}
CrudFormComponent.ɵfac = function CrudFormComponent_Factory(t) { return new (t || CrudFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
CrudFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudFormComponent, selectors: [["mx-crud-form"]], inputs: { identifier: "identifier", header: "header", actions: "actions", actionPages: "actionPages", onAction: "onAction", displayMode: "displayMode", form: "form", reset: "reset", configData: "configData", keyMap: "keyMap" }, outputs: { onFormChange: "onFormChange", onFieldChange: "onFieldChange", onButtonClick: "onButtonClick", onSortClick: "onSortClick", onPageClick: "onPageClick" }, decls: 12, vars: 17, consts: [[1, "mx-crud-card"], [1, "mx-list-header"], [3, "identifier", "title", "subtitle", "description", "badges", "icon", "pageBackRoute", "formDisplayMode", "actions", "originalData", "context", "onButtonClick"], [1, "mx-crud-content"], ["class", "mdc-layout-grid mx-crud-header", 4, "ngIf"], [4, "ngIf"], ["cfTab", ""], ["cfWidget", ""], [1, "mdc-layout-grid", "mx-crud-header"], [1, "mdc-layout-grid__inner"], [1, "mdc-layout-grid__cell--span-12"], [1, "mx-crud-header-desc"], ["class", "mx-crud-header-desc-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-crud-header-desc-icon"], [3, "selectedTabChange"], [3, "label", 4, "ngFor", "ngForOf"], [3, "label"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "expanded", "opened", 4, "ngFor", "ngForOf"], [3, "expanded", "opened"], [4, "ngFor", "ngForOf"], ["class", "mdc-layout-grid mx-crud-tab", 4, "ngIf"], [1, "mdc-layout-grid", "mx-crud-tab"], ["class", "mdc-layout-grid__inner mx-crud-tab-header", 4, "ngIf"], ["class", "mdc-layout-grid__inner", 4, "ngIf"], ["class", "mdc-layout-grid__inner mx-crud-tab-form", 4, "ngFor", "ngForOf"], [1, "mdc-layout-grid__inner", "mx-crud-tab-header"], [1, "mdc-layout-grid__inner", "mx-crud-tab-form"], [3, "class", 4, "ngFor", "ngForOf"], [4, "ngIf", "ngIfElse"], ["singleCell", ""], ["class", "mx-crud-child-widgets", 4, "ngIf"], [1, "mx-crud-child-widgets"], [1, "mx-crud-widget-addmore", 3, "sourceIdentifier", "sourceIndex", "context", "originalData", "button", "onClick"], [1, "mx-crud-form-header-divider"], [1, "mx-crud-child-widgets-content"], ["newCellAtIndex", ""], [3, "formConfig", "sourceIndex", "widgetArrayIndex", "record", "originalData", "keyMap", "reset", "onFieldChange", "onFormChange", "onButtonClick", 4, "ngIf"], [3, "listConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "originalData", "keyMap", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange", 4, "ngIf"], [3, "formConfig", "sourceIndex", "widgetArrayIndex", "record", "originalData", "keyMap", "reset", "onFieldChange", "onFormChange", "onButtonClick"], [3, "listConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "originalData", "keyMap", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange"]], template: function CrudFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-card-header", 1);
        ɵngcc0.ɵɵelementStart(2, "mx-crud-header", 2);
        ɵngcc0.ɵɵlistener("onButtonClick", function CrudFormComponent_Template_mx_crud_header_onButtonClick_2_listener($event) { return ctx.buttonClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-card-content", 3);
        ɵngcc0.ɵɵtemplate(4, CrudFormComponent_div_4_Template, 7, 6, "div", 4);
        ɵngcc0.ɵɵtemplate(5, CrudFormComponent_span_5_Template, 3, 1, "span", 5);
        ɵngcc0.ɵɵtemplate(6, CrudFormComponent_span_6_Template, 3, 1, "span", 5);
        ɵngcc0.ɵɵtemplate(7, CrudFormComponent_span_7_Template, 2, 1, "span", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, CrudFormComponent_ng_template_8_Template, 2, 4, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(10, CrudFormComponent_ng_template_10_Template, 3, 3, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("width", 100, "%");
        ɵngcc0.ɵɵproperty("identifier", ctx.identifier)("title", ctx.title)("subtitle", ctx.header.subtitle)("description", ctx.header.description)("badges", ctx.badges)("icon", ctx.header.icon)("pageBackRoute", ctx.pageBackRoute)("formDisplayMode", "CRUD_FORM")("actions", ctx.actions)("originalData", ctx.configData.originalData)("context", ctx.record);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header.description && ctx.header.description.text && ctx.header.description.bgColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form && ctx.form.displayType == "TAB" && ctx.filteredTabs && ctx.formTabLength > 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form && ctx.form.displayType == "ACCORDIAN" && ctx.filteredTabs && ctx.formTabLength > 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.form && ctx.filteredTabs && ctx.formTabLength == 1);
    } }, directives: function () { return [ɵngcc15.MatCard, ɵngcc15.MatCardHeader, CrudHeaderComponent, ɵngcc15.MatCardContent, ɵngcc3.NgIf, ɵngcc12.MatIcon, ɵngcc16.MatTabGroup, ɵngcc3.NgForOf, ɵngcc16.MatTab, ɵngcc3.NgTemplateOutlet, ɵngcc17.MatAccordion, ɵngcc17.MatExpansionPanel, ɵngcc17.MatExpansionPanelHeader, ɵngcc17.MatExpansionPanelTitle, ɵngcc15.MatCardTitle, ButtonComponent, ɵngcc14.MatDivider, FormComponent, StaticListComponent, DynamicListComponent]; }, pipes: function () { return [ɵngcc13.CanPipe]; }, styles: ["[_ngcontent-%COMP%]:root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid[_ngcontent-%COMP%]{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid[_ngcontent-%COMP%]{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid[_ngcontent-%COMP%]{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner[_ngcontent-%COMP%]{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner[_ngcontent-%COMP%]{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner[_ngcontent-%COMP%]{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner[_ngcontent-%COMP%]{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner[_ngcontent-%COMP%]{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner[_ngcontent-%COMP%]{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell[_ngcontent-%COMP%]{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-desktop[_ngcontent-%COMP%]{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-desktop[_ngcontent-%COMP%]{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-desktop[_ngcontent-%COMP%]{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-desktop[_ngcontent-%COMP%]{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-desktop[_ngcontent-%COMP%]{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-desktop[_ngcontent-%COMP%]{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-desktop[_ngcontent-%COMP%]{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-desktop[_ngcontent-%COMP%]{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-desktop[_ngcontent-%COMP%]{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-desktop[_ngcontent-%COMP%]{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-desktop[_ngcontent-%COMP%]{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-desktop[_ngcontent-%COMP%]{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-desktop[_ngcontent-%COMP%]{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell[_ngcontent-%COMP%]{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-tablet[_ngcontent-%COMP%]{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-tablet[_ngcontent-%COMP%]{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-tablet[_ngcontent-%COMP%]{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-tablet[_ngcontent-%COMP%]{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-tablet[_ngcontent-%COMP%]{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-tablet[_ngcontent-%COMP%]{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-tablet[_ngcontent-%COMP%]{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-tablet[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-tablet[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-tablet[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-tablet[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-tablet[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-tablet[_ngcontent-%COMP%]{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell[_ngcontent-%COMP%]{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-phone[_ngcontent-%COMP%]{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-1-phone[_ngcontent-%COMP%]{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-phone[_ngcontent-%COMP%]{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-2-phone[_ngcontent-%COMP%]{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-phone[_ngcontent-%COMP%]{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-3-phone[_ngcontent-%COMP%]{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-4-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-5-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-6-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-7-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-8-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-9-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-10-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-11-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-phone[_ngcontent-%COMP%]{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12[_ngcontent-%COMP%], .mdc-layout-grid__cell--span-12-phone[_ngcontent-%COMP%]{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1[_ngcontent-%COMP%]{order:1}.mdc-layout-grid__cell--order-2[_ngcontent-%COMP%]{order:2}.mdc-layout-grid__cell--order-3[_ngcontent-%COMP%]{order:3}.mdc-layout-grid__cell--order-4[_ngcontent-%COMP%]{order:4}.mdc-layout-grid__cell--order-5[_ngcontent-%COMP%]{order:5}.mdc-layout-grid__cell--order-6[_ngcontent-%COMP%]{order:6}.mdc-layout-grid__cell--order-7[_ngcontent-%COMP%]{order:7}.mdc-layout-grid__cell--order-8[_ngcontent-%COMP%]{order:8}.mdc-layout-grid__cell--order-9[_ngcontent-%COMP%]{order:9}.mdc-layout-grid__cell--order-10[_ngcontent-%COMP%]{order:10}.mdc-layout-grid__cell--order-11[_ngcontent-%COMP%]{order:11}.mdc-layout-grid__cell--order-12[_ngcontent-%COMP%]{order:12}.mdc-layout-grid__cell--align-top[_ngcontent-%COMP%]{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top[_ngcontent-%COMP%]{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle[_ngcontent-%COMP%]{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom[_ngcontent-%COMP%]{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom[_ngcontent-%COMP%]{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width[_ngcontent-%COMP%]{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width[_ngcontent-%COMP%]{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width[_ngcontent-%COMP%]{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left[_ngcontent-%COMP%]{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right[_ngcontent-%COMP%]{margin-left:auto;margin-right:0}.mx-crud-card[_ngcontent-%COMP%]{background-color:transparent}.mx-crud-form[_ngcontent-%COMP%]{padding-bottom:20px}.mx-crud-tab[_ngcontent-%COMP%]{padding:0!important}.mx-crud-tab-header[_ngcontent-%COMP%]{padding:20px 0!important}.mx-crud-tab-form[_ngcontent-%COMP%]{margin:1px}.mx-crud-header[_ngcontent-%COMP%]{padding:0}.mx-crud-header-desc[_ngcontent-%COMP%]{padding:5px 10px;width:auto}.mx-crud-header-desc-icon[_ngcontent-%COMP%]{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mx-crud-child-widgets[_ngcontent-%COMP%]{background-color:#f5f5f5}.mx-crud-child-widgets-content[_ngcontent-%COMP%]{padding-top:20px}.mx-crud-widget-addmore[_ngcontent-%COMP%]{margin-top:-8px}.mx-crud-content[_ngcontent-%COMP%]{padding-top:16px}"] });
CrudFormComponent.ctorParameters = () => [
    { type: Ability }
];
CrudFormComponent.propDecorators = {
    identifier: [{ type: Input }],
    header: [{ type: Input }],
    actions: [{ type: Input }],
    actionPages: [{ type: Input }],
    onAction: [{ type: Input }],
    displayMode: [{ type: Input }],
    form: [{ type: Input }],
    reset: [{ type: Input }],
    configData: [{ type: Input }],
    keyMap: [{ type: Input }],
    onFormChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    onSortClick: [{ type: Output }],
    onPageClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudFormComponent, [{
        type: Component,
        args: [{
                selector: 'mx-crud-form',
                template: "<mat-card class=\"mx-crud-card\">\n    <!-- {{configData | json}} -->\n    <mat-card-header class=\"mx-list-header\">\n        <mx-crud-header\n            [identifier]=\"identifier\"\n            [title]=\"title\"\n            [subtitle]=\"header.subtitle\"\n            [description]=\"header.description\"\n            [badges]=\"badges\"\n            [icon]=\"header.icon\"\n            [pageBackRoute]=\"pageBackRoute\"\n            [formDisplayMode]=\"'CRUD_FORM'\"\n            [actions]=\"actions\"\n            [originalData]=\"configData.originalData\"   \n            [context]=\"record\"\n            [style.width.%]=\"100\"\n            (onButtonClick)=\"buttonClick($event)\"\n        ></mx-crud-header>\n    </mat-card-header> \n  \n    <mat-card-content class=\"mx-crud-content\">\n        <div class=\"mdc-layout-grid mx-crud-header\" *ngIf=\"header.description && header.description.text && header.description.bgColor\">\n            <div class=\"mdc-layout-grid__inner\">\n                <div class=\"mdc-layout-grid__cell--span-12\">\n                    <div \n                        class=\"mx-crud-header-desc\"\n                        [style.background-color]=\"header.description.bgColor\"\n                        [style.color]=\"header.description.textColor\"\n                    >\n                        <mat-icon class=\"mx-crud-header-desc-icon\" aria-hidden=\"true\" [attr.aria-label]=\"header.description.icon\" *ngIf=\"header.description.icon\">{{header.description.icon}}</mat-icon>\n                        <span>{{ header.description.text }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <mx-error></mx-error> -->\n\n        <span *ngIf=\"form && form.displayType == 'TAB' && filteredTabs && formTabLength > 1\">\n            <mat-tab-group (selectedTabChange)=\"onTabChange($event)\">\n              <mat-tab \n                *ngFor=\"let tab of filteredTabs; let tIndex=index\"\n                [label]=\"tab.label\">\n                <ng-container *ngTemplateOutlet=\"cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}\"></ng-container>\n              </mat-tab>\n            </mat-tab-group>\n        </span>\n        <span *ngIf=\"form && form.displayType == 'ACCORDIAN' && filteredTabs && formTabLength > 1\">\n            <mat-accordion>\n                <mat-expansion-panel\n                  *ngFor=\"let tab of filteredTabs; let tIndex=index\"\n                  [expanded]=\"tIndex === 0\"\n                  (opened)=\"onAccordianChange(tIndex)\">\n                  <mat-expansion-panel-header>\n                    <mat-panel-title>\n                      {{tab.label}}\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <ng-container *ngTemplateOutlet=\"cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}\"></ng-container>\n                </mat-expansion-panel>\n            </mat-accordion>\n        </span>\n        <span *ngIf=\"form && filteredTabs && formTabLength == 1\">\n            <span \n                *ngFor=\"let tab of filteredTabs; let tIndex=index\">\n                <ng-container *ngTemplateOutlet=\"cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}\"></ng-container>\n            </span>\n        </span>\n    </mat-card-content>\n</mat-card>\n  \n<ng-template #cfTab let-tab=\"tab\" let-record=\"record\" let-formRows=\"formRows\" let-tIndex=\"tIndex\">\n    <!-- {{record | json}} -->\n    <div \n        class=\"mdc-layout-grid mx-crud-tab\"\n        *ngIf=\"tab && (tab.permission == null || (tab.permission && (tab.permission['subject'] | can: tab.permission['action'])))\"\n    >\n        <div class=\"mdc-layout-grid__inner mx-crud-tab-header\" *ngIf=\"tab.description && tab.description.text\">\n            <div class=\"mdc-layout-grid__cell--span-12\">\n                {{tab.description.text}} \n            </div>\n        </div>\n\n        <div class=\"mdc-layout-grid__inner\" *ngIf=\"tab.customPlugin && tab.customPlugin.component\">\n            <div class=\"mdc-layout-grid__cell--span-12\">\n                <!-- <ndc-dynamic\n                    [ndcDynamicComponent]=\"tab.customPlugin.component\"\n                ></ndc-dynamic> -->\n            </div>\n        </div>\n\n        <div \n            *ngFor=\"let row of formRows; let rIndex = index;\" \n            class=\"mdc-layout-grid__inner mx-crud-tab-form\"> \n            <div\n                *ngFor=\"let cell of row\" \n                class=\"mdc-layout-grid__cell--span-{{cell.colSpan * 6}} mx-crud-form\">\n                <!-- <pre>--{{configData.record[cell.widget.identifier] | json}}--</pre> -->\n\n                <span *ngIf=\"cell.multiple && cell.multiple.addMore; else singleCell\">\n                    <mat-card  *ngIf=\"displayWidget(cell, record, record[cell.widget.identifier] && record[cell.widget.identifier][0] ? record[cell.widget.identifier][0] : {})\" class=\"mx-crud-child-widgets\">\n                        <!-- {{configData | json}} -->\n                        <mat-card-header class=\"mx-list-header\"> \n                            <mat-card-title>{{ cell.multiple.sectionTitle }}</mat-card-title>\n                            <mx-button \n                                class=\"mx-crud-widget-addmore\"\n                                [sourceIdentifier]=\"cell.widget.identifier\"\n                                [sourceIndex]=\"rIndex\" \n                                [context]=\"record\"\n                                [originalData]=\"configData.record[cell.widget.identifier]\"\n                                [button]=\"addWidget\"\n                                (onClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n                            ></mx-button> \n                        </mat-card-header> \n                        <mat-divider class=\"mx-crud-form-header-divider\"></mat-divider>\n                        <mat-card-content class=\"mx-crud-child-widgets-content\">\n                            <span *ngIf=\"record[cell.widget.identifier] && record[cell.widget.identifier].length > 0; else newCellAtIndex;\">\n                                <span *ngFor=\"let cellAtIndex of record[cell.widget.identifier]; let cellArrayIndex = index;\">\n                                    <ng-container *ngTemplateOutlet=\"cfWidget; context: {\n                                        cell: cell, \n                                        supportingRecord: record,\n                                        record: record[cell.widget.identifier][cellArrayIndex], \n                                        configData: configData.record[cell.widget.identifier][cellArrayIndex], \n                                        multiple: true,\n                                        cellArrayIndex: cellArrayIndex,\n                                        tIndex: tIndex\n                                    }\"></ng-container>\n                                </span>\n                            </span>\n                            <ng-template #newCellAtIndex>\n                                <ng-container *ngTemplateOutlet=\"cfWidget; context: {\n                                    cell: cell, \n                                    supportingRecord: {},\n                                    record: {}, \n                                    configData: {}, \n                                    multiple: true,\n                                    cellArrayIndex: 0,\n                                    tIndex: tIndex\n                                }\"></ng-container>\n                            </ng-template>\n                        </mat-card-content>\n                    </mat-card>\n                </span>\n                <ng-template #singleCell>\n                    <span *ngIf=\"displayWidget(cell, record, record[cell.widget.identifier])\">\n                        <ng-container *ngTemplateOutlet=\"cfWidget; context: {\n                            cell: cell, \n                            supportingRecord: record,\n                            record: record[cell.widget.identifier], \n                            configData: configData.record[cell.widget.identifier], \n                            multiple: false,\n                            cellArrayIndex: null,\n                            tIndex: tIndex\n                        }\"></ng-container>\n                    </span>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #cfWidget let-cell=\"cell\" let-supportingRecord=\"supportingRecord\" let-record=\"record\" let-configData=\"configData\" let-multiple=\"multiple\" let-cellArrayIndex=\"cellArrayIndex\" let-tIndex=\"tIndex\">\n    <mx-form \n        *ngIf=\"cell.widgetType == 'FORM'\"\n        [formConfig]=\"cell.widget\"\n        [sourceIndex]=\"tIndex\"\n        [widgetArrayIndex]=\"cellArrayIndex\"\n        [record]=\"record\"\n        [originalData]=\"configData\"  \n        [keyMap]=\"keyMap\"\n        [reset]=\"reset\" \n        (onFieldChange)=\"fieldChange($event)\"\n        (onFormChange)=\"formChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n    ></mx-form>\n\n    <mx-static-list\n        *ngIf=\"cell.widgetType == 'LIST' && cell.widget.listType == 'STATIC'\"\n        [listConfig]=\"cell.widget\"\n        [sourceIdentifier]=\"identifier\"\n        [sourceIndex]=\"tIndex\"\n        [widgetArrayIndex]=\"cellArrayIndex\"\n        [record]=\"record\"\n        [originalData]=\"configData\"  \n        [keyMap]=\"keyMap\"\n        (onFormChange)=\"formChange($event)\"\n        (onFieldChange)=\"fieldChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n        (onPageChange)=\"onPage($event)\"\n        (onSortChange)=\"onSort($event)\"  \n    ></mx-static-list>\n    <!-- [expanded]=\"_expanded\" -->\n\n    <mx-dynamic-list\n        *ngIf=\"cell.widgetType == 'LIST' && cell.widget.listType == 'DYNAMIC'\"\n        [listConfig]=\"cell.widget\"\n        [sourceIdentifier]=\"identifier\"\n        [sourceIndex]=\"tIndex\"\n        [widgetArrayIndex]=\"cellArrayIndex\"\n        [record]=\"record\"\n        [originalData]=\"configData\"  \n        [keyMap]=\"keyMap\"\n        (onFormChange)=\"formChange($event)\"\n        (onFieldChange)=\"fieldChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n        (onPageChange)=\"onPage($event)\"\n        (onSortChange)=\"onSort($event)\"  \n    ></mx-dynamic-list>\n</ng-template>",
                styles: [":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.mx-crud-card{background-color:transparent}.mx-crud-form{padding-bottom:20px}.mx-crud-tab{padding:0!important}.mx-crud-tab-header{padding:20px 0!important}.mx-crud-tab-form{margin:1px}.mx-crud-header{padding:0}.mx-crud-header-desc{padding:5px 10px;width:auto}.mx-crud-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mx-crud-child-widgets{background-color:#f5f5f5}.mx-crud-child-widgets-content{padding-top:20px}.mx-crud-widget-addmore{margin-top:-8px}.mx-crud-content{padding-top:16px}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }]; }, { onFormChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], onSortClick: [{
            type: Output
        }], onPageClick: [{
            type: Output
        }], identifier: [{
            type: Input
        }], header: [{
            type: Input
        }], actions: [{
            type: Input
        }], actionPages: [{
            type: Input
        }], onAction: [{
            type: Input
        }], displayMode: [{
            type: Input
        }], form: [{
            type: Input
        }], reset: [{
            type: Input
        }], configData: [{
            type: Input
        }], keyMap: [{
            type: Input
        }] }); })();

class CrudListComponent {
    constructor(_bottomSheet, ability) {
        this._bottomSheet = _bottomSheet;
        this.ability = ability;
        this._expanded = false;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.onButtonIconClick = new EventEmitter();
        this.onSortClick = new EventEmitter();
        this.onPageClick = new EventEmitter();
        this.onTabClick = new EventEmitter();
        this.showSearchForm = false;
        this.listHeaders = new Array();
        this.searchOnFieldsCount = 0;
        this.searchOnFieldsButtons = new Array();
        AbilityUtils.setAbility(this.ability);
    }
    get configData() {
        return this._configData;
    }
    set configData(_configData) {
        this._configData = _configData;
        this.setConfigAsPerTab();
    }
    get expanded() {
        return this._expanded;
    }
    set expanded(_expanded) {
        this._expanded = _expanded;
    }
    ngOnInit() {
        this.searchButton = this.setSearchButton('searchButton', 'Search', 'search');
        this.searchModalButton = this.setSearchButton('searchCloseButton', 'Close', 'close');
        this.displaySearchForm();
        this.setListHeaders();
        this.setCrudHeader();
        if (this.searchConfig && this.searchConfig.displayType != "ABOVE_LIST" /* ABOVE_LIST */) {
            this.searchConfig.form.displayInColumns = 1;
        }
        this.setConfigAsPerTab();
    }
    setConfigAsPerTab(tabIdentifier) {
        if (this._configData) {
            this.badges = this._configData.badges;
            this.pageBackRoute = this._configData.pageBackRoute;
            this.records = this._configData.records;
            this.searchData = this._configData.searchData;
            this.searchOnFieldsCount = 0;
            this.searchOnFieldsButtons = new Array();
            if (this.searchData && !CollectionUtils.isEmpty(this.searchData)) {
                for (let cnt = 0; cnt < Object.keys(this.searchData).length; cnt++) {
                    if (!StringUtils.isEmpty(this.searchData[Object.keys(this.searchData)[cnt]])) {
                        this.searchOnFieldsCount++;
                        let filterButton = this.setSelectedFilterButton(Object.keys(this.searchData)[cnt], this.searchData[Object.keys(this.searchData)[cnt]]);
                        this.searchOnFieldsButtons.push(filterButton);
                    }
                }
            }
            if (this._configData.configPerTabs) {
                let tabIndex = 0;
                this._configData.configPerTabs.forEach((tabConfigData, tabKey) => {
                    if ((tabKey == tabIdentifier || (tabIndex == 0 && tabIdentifier == null)) && tabConfigData) {
                        if (tabConfigData.badges) {
                            this.badges = tabConfigData.badges;
                        }
                        if (tabConfigData.pageBackRoute) {
                            this.pageBackRoute = tabConfigData.pageBackRoute;
                        }
                        if (tabConfigData.records && tabConfigData.records.length > 0) {
                            this.records = this._configData.records;
                        }
                    }
                    tabIndex++;
                });
            }
        }
    }
    getTabIdentifier(tabTitle) {
        let tabIdentifier = '';
        if (this.listConfig && this.listConfig.displayType == "TAB" /* TAB */) {
            for (let index = 0; index < this.listConfig.lists.length; index++) {
                if (this.listHeaders[index].title == tabTitle) {
                    tabIdentifier = this.listConfig.lists[index].identifier;
                    break;
                }
            }
        }
        return tabIdentifier;
    }
    setListHeaders() {
        if (this.listConfig.lists) {
            for (let index = 0; index < this.listConfig.lists.length; index++) {
                this.listHeaders.push(this.listConfig.lists[index].header);
                // this.listConfig.lists[index].header = "";
            }
        }
    }
    setCrudHeader() {
        let title = "";
        if (this.header) {
            title = this.header.title;
        }
        if (this.listConfig.lists && this.listConfig.lists.length == 1 && this.listConfig.lists[0].header && this.listConfig.lists[0].header.title) {
            title = this.listConfig.lists[0].header.title;
            this.listConfig.lists[0].header.title = "";
        }
        this.title = title;
    }
    displaySearchForm() {
        if (this.listConfig && this.listConfig.lists && this.listConfig.lists.length > 0) {
            for (let lConfig of this.listConfig.lists) {
                if (lConfig.listType == "DYNAMIC" /* DYNAMIC */ && this.searchConfig) {
                    this.showSearchForm = true;
                    break;
                }
            }
        }
    }
    setSearchButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "GHOST" /* GHOST */,
            onlyIcon: true,
        };
    }
    setSelectedFilterButton(identifier, label) {
        return {
            identifier: identifier,
            groupIdentifier: "clearFilterField" /* CLEAR_FILTER_FIELD */,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "tiny" /* TINY */,
            icon: "close",
            iconPosition: "RIGHT" /* RIGHT */,
            type: "STROKED" /* STROKED */,
        };
    }
    close() {
        this.sidenav.close();
    }
    fieldChange(fieldChange) {
        console.log(fieldChange);
        this.onFieldChange.emit(fieldChange);
    }
    formChange(form) {
        this.onFormChange.emit(form);
    }
    buttonClick(event) {
        console.log(event);
        this.onButtonClick.emit(event);
    }
    buttonIconClick(event) {
        this.onButtonIconClick.emit(event);
    }
    onSort(event) {
        console.log(event);
        this.onSortClick.emit(event);
    }
    onPage(event) {
        console.log(event);
        this.onPageClick.emit(event);
    }
    onAccordianChange(event) {
        console.log(event);
    }
    onTabChange(event) {
        console.log(event);
        this.setConfigAsPerTab(this.getTabIdentifier(event.tab.textLabel));
    }
    openBottomSheet() {
        let dialogRef = this._bottomSheet.open(BottomSearchSheet, {
            data: { searchConfig: this.searchConfig, searchData: this.searchData, reset: this.formReset },
        });
        this.buttonSubscriber = dialogRef.instance.onButtonClick.subscribe(event => this.buttonClick(event));
        this.fieldSubscriber = dialogRef.instance.onFieldChange.subscribe(event => this.fieldChange(event));
        this.formSubscriber = dialogRef.instance.onFormChange.subscribe(event => this.formChange(event));
        this.dialogRefSubscriber = dialogRef.afterDismissed().subscribe(() => {
            this.bottomUnsubscribe();
        });
    }
    ngOnDestroy() {
        this.bottomUnsubscribe();
        if (this.dialogRefSubscriber) {
            this.dialogRefSubscriber.unsubscribe();
        }
    }
    bottomUnsubscribe() {
        if (this.buttonSubscriber) {
            this.buttonSubscriber.unsubscribe();
        }
        if (this.fieldSubscriber) {
            this.fieldSubscriber.unsubscribe();
        }
        if (this.formSubscriber) {
            this.formSubscriber.unsubscribe();
        }
    }
}
CrudListComponent.ɵfac = function CrudListComponent_Factory(t) { return new (t || CrudListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.MatBottomSheet), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
CrudListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudListComponent, selectors: [["mx-crud-list"]], viewQuery: function CrudListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c12, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);
    } }, inputs: { configData: "configData", _configData: "_configData", expanded: "expanded", identifier: "identifier", header: "header", actions: "actions", actionPages: "actionPages", quickLinks: "quickLinks", searchConfig: "searchConfig", listConfig: "listConfig", formReset: "formReset", originalData: "originalData", keyMap: "keyMap", listReset: "listReset", expandRowIndex: "expandRowIndex" }, outputs: { onFormChange: "onFormChange", onFieldChange: "onFieldChange", onButtonClick: "onButtonClick", onButtonIconClick: "onButtonIconClick", onSortClick: "onSortClick", onPageClick: "onPageClick", onTabClick: "onTabClick" }, decls: 10, vars: 4, consts: [["class", "mx-crud-card", 3, "padding", 4, "ngIf"], ["cfsearchlayout", ""], ["cfsearch", ""], ["cftablegroup", ""], ["cftable", ""], [1, "mx-crud-card"], [3, "identifier", "title", "subtitle", "description", "badges", "icon", "pageBackRoute", "formDisplayMode", "actions", "context", "originalData", "onButtonClick"], ["class", "mdc-layout-grid mx-crud-header-desc", 3, "margin", 4, "ngIf"], [1, "mdc-layout-grid", "mx-crud-body"], [1, "mdc-layout-grid__inner"], ["class", "mdc-layout-grid__cell--span-12", 4, "ngIf"], ["class", "mdc-layout-grid__inner mx-crud-search-inline", 4, "ngIf"], ["class", "mdc-layout-grid__inner mx-crud-list", 4, "ngIf"], [1, "mdc-layout-grid__inner", "mx-crud-list"], [1, "mdc-layout-grid__cell--span-12"], [4, "ngTemplateOutlet"], [1, "mdc-layout-grid", "mx-crud-header-desc"], [3, "ngClass"], ["class", "mx-crud-header-desc-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-crud-header-desc-icon"], [1, "mx-quicklinks"], [3, "buttons", "sourceIdentifier", "sourceIndex", "context", "originalData", "onClick"], [1, "mdc-layout-grid__inner", "mx-crud-search-inline"], [4, "ngIf"], ["class", "", 4, "ngIf"], [1, ""], [1, "mx-crud-search-modal"], ["searchSideNav", ""], [3, "sourceIdentifier", "sourceIndex", "button", "context", "originalData", "onClick"], [1, "mx-crud-search-applied"], ["class", "mx-crud-search-label", 4, "ngIf"], [3, "buttons", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "originalData", "onIconClick"], [3, "position", "disableClose", "keydown.escape", "backdropClick"], ["sidenav", ""], [1, "mdc-layout-grid", "mx-crud-search-modal"], [1, "mx-crud-search-label"], [3, "sourceIdentifier", "sourceIndex", "button", "onClick"], [1, "mx-crud-search", 3, "formConfig", "sourceIndex", "reset", "record", "keyMap", "onFieldChange", "onFormChange", "onButtonClick"], ["class", "mx-crud-list-accordian", 4, "ngIf"], [4, "ngFor", "ngForOf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "selectedTabChange"], [3, "label", 4, "ngFor", "ngForOf"], [3, "label"], [1, "mx-crud-list-accordian"], [3, "expanded", "opened", 4, "ngFor", "ngForOf"], [3, "expanded", "opened"], [3, "listConfig", "sourceIdentifier", "sourceIndex", "record", "originalData", "listReset", "expanded", "expandRowIndex", "keyMap", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange", 4, "ngIf"], [3, "listConfig", "sourceIdentifier", "sourceIndex", "record", "originalData", "listReset", "expanded", "expandRowIndex", "keyMap", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange"]], template: function CrudListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CrudListComponent_mat_card_0_Template, 13, 23, "mat-card", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, CrudListComponent_ng_template_2_Template, 3, 3, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, CrudListComponent_ng_template_4_Template, 2, 5, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, CrudListComponent_ng_template_6_Template, 3, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, CrudListComponent_ng_template_8_Template, 2, 2, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.listConfig && (ctx.listConfig.permission == null || ctx.listConfig.permission && ɵngcc0.ɵɵpipeBind2(1, 1, ctx.listConfig.permission["subject"], ctx.listConfig.permission["action"])));
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc15.MatCard, CrudHeaderComponent, ɵngcc15.MatCardContent, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc12.MatIcon, ButtonGroupComponent, ɵngcc19.MatSidenavContent, ButtonComponent, ɵngcc19.MatSidenav, FormComponent, ɵngcc3.NgForOf, ɵngcc16.MatTabGroup, ɵngcc16.MatTab, ɵngcc17.MatAccordion, ɵngcc17.MatExpansionPanel, ɵngcc17.MatExpansionPanelHeader, ɵngcc17.MatExpansionPanelTitle, StaticListComponent, DynamicListComponent]; }, pipes: function () { return [ɵngcc13.CanPipe]; }, styles: [".mx-crud-card[_ngcontent-%COMP%]{background-color:transparent}.mx-crud-search-strip-modal[_ngcontent-%COMP%]{padding:0 0 0 8px}.mx-list-search-btn[_ngcontent-%COMP%]{text-align:right}.mx-crud-search-applied[_ngcontent-%COMP%]{color:rgba(0,0,0,.54);font-size:12px}.mx-crud-search-applied[_ngcontent-%COMP%]   .mx-crud-search-label[_ngcontent-%COMP%]{padding-right:8px}.mdc-layout-grid[_ngcontent-%COMP%]{padding-left:0!important;padding-right:0!important}.mx-crud-search-modal[_ngcontent-%COMP%]{padding-bottom:0!important;padding-right:8px;padding-top:0!important}.mx-crud-search-modal[_ngcontent-%COMP%]   mat-sidenav-content[_ngcontent-%COMP%]{margin-left:0!important}.mx-crud-list[_ngcontent-%COMP%]{padding-bottom:20px!important;padding-top:10px!important}  .mat-expansion-panel-header{padding:0 16px!important}  .mat-expansion-panel-body{padding:0!important}.mx-crud-header-desc[_ngcontent-%COMP%]{margin-left:5px;padding:0}.mx-crud-header-desc-without-bg[_ngcontent-%COMP%]{padding:10px 0;width:auto}.mx-crud-header-desc-with-bg[_ngcontent-%COMP%]{padding:10px;width:auto}.mx-crud-header-desc-icon[_ngcontent-%COMP%]{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mx-crud-body[_ngcontent-%COMP%]{padding:0}"] });
CrudListComponent.ctorParameters = () => [
    { type: MatBottomSheet },
    { type: Ability }
];
CrudListComponent.propDecorators = {
    identifier: [{ type: Input }],
    header: [{ type: Input }],
    actions: [{ type: Input }],
    actionPages: [{ type: Input }],
    quickLinks: [{ type: Input }],
    searchConfig: [{ type: Input }],
    listConfig: [{ type: Input }],
    formReset: [{ type: Input }],
    originalData: [{ type: Input }],
    _configData: [{ type: Input }],
    configData: [{ type: Input }],
    keyMap: [{ type: Input }],
    listReset: [{ type: Input }],
    expanded: [{ type: Input }],
    expandRowIndex: [{ type: Input }],
    onFormChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    onButtonIconClick: [{ type: Output }],
    onSortClick: [{ type: Output }],
    onPageClick: [{ type: Output }],
    onTabClick: [{ type: Output }],
    sidenav: [{ type: ViewChild, args: ['sidenav',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudListComponent, [{
        type: Component,
        args: [{
                selector: 'mx-crud-list',
                template: "<mat-card \n  [style.padding.px]=\"listConfig && listConfig.style && listConfig.style.hideCard ? 0 : 'auto'\"\n  class=\"mx-crud-card\"\n  *ngIf=\"listConfig && (listConfig.permission == null || (listConfig.permission && (listConfig.permission['subject'] | can: listConfig.permission['action'])))\">\n  <mx-crud-header\n    [identifier]=\"identifier\"\n    [title]=\"title\"\n    [subtitle]=\"header.subtitle\"\n    [description]=\"header.description\"\n    [style]=\"listConfig.style\"\n    [badges]=\"badges\"\n    [icon]=\"header.icon\"\n    [pageBackRoute]=\"pageBackRoute\"\n    [formDisplayMode]=\"'CRUD_LIST'\"\n    [actions]=\"actions\" \n    [context]=\"records\"\n    [originalData]=\"_configData.originalData\"  \n    [style.width.%]=\"100\"\n    (onButtonClick)=\"buttonClick($event)\"\n  ></mx-crud-header>\n\n  <mat-card-content>  \n    <div \n      [style.margin]=\"listConfig && listConfig.style && listConfig.style.hideCard ? '0px 16px' : 'auto'\"\n      class=\"mdc-layout-grid mx-crud-header-desc\" \n      *ngIf=\"header.description && header.description.text\">\n      <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n              <div \n              [ngClass]=\"{'mx-crud-header-desc-without-bg': !header.description.bgColor, 'mx-crud-header-desc-with-bg': header.description.bgColor}\"\n              [style.background-color]=\"header.description.bgColor\"\n              [style.color]=\"header.description.textColor\"\n                  >\n                  <mat-icon class=\"mx-crud-header-desc-icon\" aria-hidden=\"true\" [attr.aria-label]=\"header.description.icon\" *ngIf=\"header.description.icon\">{{header.description.icon}}</mat-icon>\n                  <span>{{ header.description.text }}</span>\n              </div>\n          </div>\n      </div>\n    </div>\n    <!-- <mx-error></mx-error> -->\n    <div class=\"mdc-layout-grid mx-crud-body\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-12\" *ngIf=\"quickLinks && quickLinks.length > 0\">\n          <span class=\"mx-quicklinks\">\n            <mx-button-group\n              [buttons]=\"quickLinks\"\n              [sourceIdentifier]=\"identifier\"\n              [sourceIndex]=\"'0'\"\n              [context]=\"records\"\n              [originalData]=\"configData.originalData\"  \n              (onClick)=\"buttonClick($event)\"\n            ></mx-button-group>\n          </span>  \n        </div>\n      </div>\n      <div class=\"mdc-layout-grid__inner mx-crud-search-inline\" *ngIf=\"showSearchForm\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <ng-container *ngTemplateOutlet=\"cfsearchlayout\"></ng-container>\n        </div>\n      </div>\n\n      <div class=\"mdc-layout-grid__inner mx-crud-list\" *ngIf=\"listConfig.customPlugin && listConfig.customPlugin.placement == 'ABOVE' && listConfig.customPlugin.component\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <!-- <ndc-dynamic\n            [ndcDynamicComponent]=\"listConfig.customPlugin.component\"\n          ></ndc-dynamic> -->\n        </div>\n      </div>\n\n      <div class=\"mdc-layout-grid__inner mx-crud-list\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <ng-container *ngTemplateOutlet=\"cftablegroup\"></ng-container>\n        </div>\n      </div>\n      \n      <div class=\"mdc-layout-grid__inner mx-crud-list\" *ngIf=\"listConfig.customPlugin && listConfig.customPlugin.placement == 'BELOW' && listConfig.customPlugin.component\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <!-- <ndc-dynamic\n            [ndcDynamicComponent]=\"listConfig.customPlugin.component\"\n          ></ndc-dynamic> -->\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<ng-template #cfsearchlayout>\n  <span *ngIf=\"searchConfig.displayType == 'ABOVE_LIST'\">\n    <ng-container *ngTemplateOutlet=\"cfsearch\"></ng-container>\n  </span>\n  <span class=\"\" *ngIf=\"searchConfig.displayType == 'LEFT_MODAL' || searchConfig.displayType == 'RIGHT_MODAL'\">\n    <!-- <mat-sidenav-container (backdropClick)=\"close('backdrop')\"> -->\n    <!-- <span class=\"mx-crud-search-strip-modal\"> -->\n      1<span class=\"mx-crud-search-modal\">\n        <mat-sidenav-content #searchSideNav>\n          <mx-button\n            [sourceIdentifier]=\"identifier\"\n            [sourceIndex]=\"'0'\"\n            [button]=\"searchButton\"\n            [context]=\"records\"\n            [originalData]=\"configData.originalData\"  \n            (onClick)=\"sidenav.open()\"\n          ></mx-button>\n\n          <span class=\"mx-crud-search-applied\">\n            <span class=\"mx-crud-search-label\" *ngIf=\"searchOnFieldsCount == null || searchOnFieldsCount == 0\">Apply Filter</span>\n            <span class=\"mx-crud-search-label\" *ngIf=\"searchOnFieldsCount && searchOnFieldsCount > 0\">Filters (<strong>{{ searchOnFieldsCount }}</strong>)</span>\n            <!-- {{searchOnFieldsButtons | json}} -->\n            <mx-button-group \n              [buttons]=\"searchOnFieldsButtons\" \n              [formDisplayMode]=\"'ADD'\"\n              [sourceIdentifier]=\"'searchFields'\"\n              [sourceIndex]=\"0\" \n              [widgetArrayIndex]=\"0\"\n              [originalData]=\"searchData\"\n              (onIconClick)=\"buttonIconClick\"\n            >\n            </mx-button-group>\n            <!-- <span *ngFor=\"let fButton of searchOnFieldsButtons\">\n              <mx-button\n                [sourceIdentifier]=\"fButton.identifier\"\n                [sourceIndex]=\"'0'\"\n                [button]=\"fButton\"\n              ></mx-button>\n            </span> -->\n          </span>\n        </mat-sidenav-content>\n      </span>\n    <!-- </span> -->\n\n    <mat-sidenav #sidenav [position]=\"searchConfig.displayType == 'LEFT_MODAL' ? 'start': 'end'\" (keydown.escape)=\"close()\" (backdropClick)=\"close()\" [disableClose]=\"false\">\n      <div class=\"mdc-layout-grid mx-crud-search-modal\">\n        <!-- <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-12 mdc-layout-grid--align-right\">\n            <mx-button\n              [sourceIdentifier]=\"identifier\"\n              [sourceIndex]=\"'0'\"\n              [button]=\"searchModalButton\"\n              align = \"right\"\n              (onClick)=\"close()\"\n            ></mx-button>\n          </div>\n        </div> -->\n        <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <ng-container *ngTemplateOutlet=\"cfsearch\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n  </span>\n  <span *ngIf=\"searchConfig.displayType == 'BOTTOM_MODAL'\">\n    <mx-button\n      [sourceIdentifier]=\"identifier\"\n      [sourceIndex]=\"'0'\"\n      [button]=\"searchButton\"\n      (onClick)=\"openBottomSheet()\"\n    ></mx-button>\n  </span>\n</ng-template>\n\n<ng-template #cfsearch>\n  <span>\n    <!-- {{searchData | json}}-- -->\n    <mx-form\n      [formConfig]=\"searchConfig.form\"\n      [sourceIndex]=\"'0'\"\n      [reset]=\"formReset\"\n      [record]=\"searchData\"\n      [keyMap]=\"keyMap\"\n      class=\"mx-crud-search\"\n      (onFieldChange)=\"fieldChange($event)\"\n      (onFormChange)=\"formChange($event)\"\n      (onButtonClick)=\"buttonClick($event)\"\n    ></mx-form>\n  </span>\n</ng-template>\n\n<ng-template #cftablegroup>\n  <span *ngIf=\"(listConfig.lists.length == 1) || (listConfig.lists.length > 1 && listConfig.displayType == 'LIST')\">\n    <span *ngFor=\"let lConfig of listConfig.lists\">\n      <ng-container *ngTemplateOutlet=\"cftable; context: {lConfig: lConfig, rIndex: 0}\"></ng-container>\n    </span>\n  </span>\n\n  <span *ngIf=\"listConfig.lists.length > 1 && listConfig.displayType == 'TAB'\">\n    <mat-tab-group (selectedTabChange)=\"onTabChange($event)\">\n      <mat-tab \n        *ngFor=\"let lConfig of listConfig.lists; let rIndex=index\"\n        [label]=\"listHeaders[rIndex].title\">\n        <ng-container *ngTemplateOutlet=\"cftable; context: {lConfig: lConfig, rIndex: rIndex}\"></ng-container>\n      </mat-tab>\n    </mat-tab-group>\n  </span>\n\n  <span class=\"mx-crud-list-accordian\" *ngIf=\"listConfig.lists.length > 1 && listConfig.displayType == 'ACCORDIAN'\">\n    <mat-accordion>\n      <mat-expansion-panel\n        *ngFor=\"let lConfig of listConfig.lists; let rIndex=index\"\n        [expanded]=\"rIndex === 0\"\n        (opened)=\"onAccordianChange(rIndex)\"> \n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{listHeaders[rIndex].title}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ng-container *ngTemplateOutlet=\"cftable; context: {lConfig: lConfig, rIndex: rIndex}\"></ng-container>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </span>\n</ng-template>\n\n<ng-template #cftable let-lConfig=\"lConfig\" let-rIndex=\"rIndex\">\n  <!-- <pre>\n    {{records | json}}\n    {{lConfig | json}}\n    CRUD _listReset: {{listReset}}<br/>\n  </pre> -->\n  <mx-static-list\n    *ngIf=\"lConfig.listType == 'STATIC'\"\n    [listConfig]=\"lConfig\"\n    [sourceIdentifier]=\"identifier\"\n    [sourceIndex]=\"rIndex\"\n    [record]=\"records && records[rIndex] ? records[rIndex] : []\"\n    [originalData]=\"configData.originalData\"  \n    [listReset]=\"listReset\"\n    [expanded]=\"_expanded\"\n    [expandRowIndex]=\"expandRowIndex\"\n    [keyMap]=\"keyMap\"\n    (onFormChange)=\"formChange($event)\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n    (onPageChange)=\"onPage($event)\"\n    (onSortChange)=\"onSort($event)\"  \n  ></mx-static-list>  \n\n  <mx-dynamic-list\n    *ngIf=\"lConfig.listType == 'DYNAMIC'\"\n    [listConfig]=\"lConfig\"\n    [sourceIdentifier]=\"identifier\"\n    [sourceIndex]=\"rIndex\"\n    [record]=\"records && records[rIndex] ? records[rIndex] : []\"\n    [originalData]=\"configData.originalData\"  \n    [listReset]=\"listReset\"\n    [expanded]=\"_expanded\"\n    [expandRowIndex]=\"expandRowIndex\"\n    [keyMap]=\"keyMap\"\n    (onFormChange)=\"formChange($event)\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n    (onPageChange)=\"onPage($event)\"\n    (onSortChange)=\"onSort($event)\"  \n  ></mx-dynamic-list>\n</ng-template>",
                styles: [".mx-crud-card{background-color:transparent}.mx-crud-search-strip-modal{padding:0 0 0 8px}.mx-list-search-btn{text-align:right}.mx-crud-search-applied{color:rgba(0,0,0,.54);font-size:12px}.mx-crud-search-applied .mx-crud-search-label{padding-right:8px}.mdc-layout-grid{padding-left:0!important;padding-right:0!important}.mx-crud-search-modal{padding-bottom:0!important;padding-right:8px;padding-top:0!important}.mx-crud-search-modal mat-sidenav-content{margin-left:0!important}.mx-crud-list{padding-bottom:20px!important;padding-top:10px!important}::ng-deep .mat-expansion-panel-header{padding:0 16px!important}::ng-deep .mat-expansion-panel-body{padding:0!important}.mx-crud-header-desc{margin-left:5px;padding:0}.mx-crud-header-desc-without-bg{padding:10px 0;width:auto}.mx-crud-header-desc-with-bg{padding:10px;width:auto}.mx-crud-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mx-crud-body{padding:0}"]
            }]
    }], function () { return [{ type: ɵngcc18.MatBottomSheet }, { type: ɵngcc2.Ability }]; }, { onFormChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], onButtonIconClick: [{
            type: Output
        }], onSortClick: [{
            type: Output
        }], onPageClick: [{
            type: Output
        }], onTabClick: [{
            type: Output
        }], configData: [{
            type: Input
        }], _configData: [{
            type: Input
        }], expanded: [{
            type: Input
        }], identifier: [{
            type: Input
        }], header: [{
            type: Input
        }], actions: [{
            type: Input
        }], actionPages: [{
            type: Input
        }], quickLinks: [{
            type: Input
        }], searchConfig: [{
            type: Input
        }], listConfig: [{
            type: Input
        }], formReset: [{
            type: Input
        }], originalData: [{
            type: Input
        }], keyMap: [{
            type: Input
        }], listReset: [{
            type: Input
        }], expandRowIndex: [{
            type: Input
        }], sidenav: [{
            type: ViewChild,
            args: ['sidenav']
        }] }); })();
class BottomSearchSheet {
    constructor(_bottomSheetRef, data) {
        this._bottomSheetRef = _bottomSheetRef;
        this.data = data;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        console.log(this.data);
    }
    openLink(event) {
        this._bottomSheetRef.dismiss();
        event.preventDefault();
    }
    fieldChange(fieldChange) {
        this.onFieldChange.emit(fieldChange);
    }
    formChange(form) {
        this.onFormChange.emit(form);
    }
    buttonClick(event) {
        console.log(event);
        this.onButtonClick.emit(event);
    }
}
BottomSearchSheet.ɵfac = function BottomSearchSheet_Factory(t) { return new (t || BottomSearchSheet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.MatBottomSheetRef), ɵngcc0.ɵɵdirectiveInject(MAT_BOTTOM_SHEET_DATA)); };
BottomSearchSheet.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BottomSearchSheet, selectors: [["bottom-search-sheet"]], outputs: { onFieldChange: "onFieldChange", onButtonClick: "onButtonClick" }, decls: 1, vars: 1, consts: [["class", "mx-crud-bottom-search", 4, "ngIf"], [1, "mx-crud-bottom-search"], [3, "formConfig", "sourceIndex", "record", "reset", "onFieldChange", "onFormChange", "onButtonClick"]], template: function BottomSearchSheet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BottomSearchSheet_span_0_Template, 2, 4, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.data);
    } }, directives: function () { return [ɵngcc3.NgIf, FormComponent]; }, styles: [".mx-crud-bottom-search[_ngcontent-%COMP%] > .mat-bottom-sheet-container[_ngcontent-%COMP%]{padding:0!important}mat-sidenav-content[_ngcontent-%COMP%]{margin-left:16px}"] });
BottomSearchSheet.ctorParameters = () => [
    { type: MatBottomSheetRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_BOTTOM_SHEET_DATA,] }] }
];
BottomSearchSheet.propDecorators = {
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BottomSearchSheet, [{
        type: Component,
        args: [{
                selector: 'bottom-search-sheet',
                template: "<span class=\"mx-crud-bottom-search\" *ngIf=\"data\">\n  <mx-form\n    [formConfig]=\"data.searchConfig.form\"\n    [sourceIndex]=\"'0'\"\n    [record]=\"data.searchData\"\n    [reset]=\"data.reset\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onFormChange)=\"formChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n  ></mx-form>\n</span>",
                styles: [".mx-crud-bottom-search>.mat-bottom-sheet-container{padding:0!important}mat-sidenav-content{margin-left:16px}"]
            }]
    }], function () { return [{ type: ɵngcc18.MatBottomSheetRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_BOTTOM_SHEET_DATA]
            }] }]; }, { onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }] }); })();

class FileUploaderComponent {
    constructor(_http) {
        this._http = _http;
        this.field = null;
        this.isFieldDisabled = false;
        this.param = 'file';
        this.fileList = [];
        this.multiple = false;
        this.fileType = "*.*";
        this.fileIcon = "";
        this.hideDownloadButton = false;
        this.hideDeleteFileButton = false;
        this.hideUploadButton = false;
        this.hideFileIconButton = false;
        this.hideDeleteAllButton = false;
        this.hideActionStrip = false;
        this.isUploaded = false;
        this.isUploadingInProgress = false;
        this.isFileImageType = false;
        this.setFileTypeAndIcon = (type) => {
            switch (type) {
                case "PDF" /* PDF */:
                    this.fileType = ".pdf";
                    this.fileIcon = "picture_as_pdf";
                    break;
                case "WORD" /* WORD */:
                    this.fileType = ".doc, .docx";
                    this.fileIcon = "attach_file";
                    break;
                case "IMAGE" /* IMAGE */:
                    this.fileType = this.getImageFileType();
                    this.fileIcon = "image";
                    this.isFileImageType = true;
                    break;
                case "VIDEO" /* VIDEO */:
                    this.fileType = "video/*";
                    this.fileIcon = "video_call";
                    break;
                case "EXCEL" /* EXCEL */:
                    this.fileType = ".xlsx, .xls, .csv";
                    this.fileIcon = "attach_file";
                    break;
                default:
                    this.fileType = ".*";
                    this.fileIcon = "attach_file";
                    break;
            }
        };
        this.onUploadClick = () => {
            const fileInput = this.fileInput.nativeElement;
            fileInput.onchange = () => {
                this.fileList = [];
                this.isUploadingInProgress = true;
                console.log(fileInput.files);
                for (let index = 0; index < fileInput.files.length; index++) {
                    const file = fileInput.files[index];
                    this.fileList.push({
                        data: file,
                        size: file.size,
                        name: file.name
                    });
                }
                this.field.onUploadClick(this.fileList).subscribe(result => {
                    this.isUploadingInProgress = false;
                    this.fileList = result;
                });
            };
            fileInput.click();
        };
        this.onDeleteAllClick = () => {
            if (this.isFunctionDefined(this.field.onDeleteAllClick)) {
                this.isUploadingInProgress = true;
                this.field.onDeleteAllClick(this.fileList).subscribe(result => {
                    this.isUploadingInProgress = false;
                    if (result) {
                        this.fileList = [];
                    }
                });
            }
        };
        this.onDeleteFileClick = (delFile) => {
            if (this.isFunctionDefined(this.field.onDeleteFileClick)) {
                this.isUploadingInProgress = true;
                this.field.onDeleteFileClick(delFile).subscribe(result => {
                    this.isUploadingInProgress = false;
                    if (result) {
                        this.fileList = this.fileList.filter(file => file !== delFile);
                    }
                });
            }
        };
        this.onShowAllItems = () => {
            this.showLess = this.fileList.length;
        };
        this.isFunctionDefined = (func) => {
            return typeof func == 'function';
        };
        this.getImageFileType = () => {
            if (this.field.subFileType) {
                return this.field.subFileType.map(x => 'image/' + x.toLowerCase()).join(',');
            }
            else {
                return "image/*";
            }
        };
    }
    ngOnInit() {
        var defaultUploadBtnText = this.field.multiple ? "Upload Files" : "Upload File";
        this.multiple = this.field.multiple;
        this.uploadButtonText = this.field.uploadButtonText || defaultUploadBtnText;
        this.setFileTypeAndIcon(this.field.fileType);
        this.fileList = this.field.value || [];
        if (this.field.displayMode == "LABEL" /* LABEL */) {
            this.hideDeleteFileButton = true;
            this.hideUploadButton = true;
            this.hideFileIconButton = true;
        }
        else {
            this.hideDeleteFileButton = this.field.hideDeleteFileButton !== undefined ? this.field.hideDeleteFileButton : false;
            this.hideUploadButton = this.field.hideUploadButton !== undefined ? this.field.hideUploadButton : false;
            this.hideFileIconButton = this.field.hideFileIconButton !== undefined ? this.field.hideFileIconButton : false;
        }
        this.hideDownloadButton = this.field.hideDownloadButton !== undefined ? this.field.hideDownloadButton : false;
        this.showLess = this.field.showLess || this.fileList.length;
        this.setFieldDisabled();
        this.setHideDeleteAllButton();
        this.setHideActionStrip();
    }
    setFieldDisabled() {
        if (this.isFieldDisabled) {
            this.hideDeleteAllButton = true;
            this.hideDeleteFileButton = true;
            this.hideUploadButton = true;
        }
    }
    setHideDeleteAllButton() {
        if (this.field.hideDeleteAllButton === undefined) {
            this.hideDeleteAllButton = false;
        }
        if (this.fileList.length <= 1 || this.field.displayMode == "LABEL" /* LABEL */) {
            this.hideDeleteAllButton = true;
        }
    }
    setHideActionStrip() {
        if (this.hideDeleteAllButton && this.hideUploadButton && this.showLess <= this.fileList.length) {
            this.hideActionStrip = true;
        }
    }
}
FileUploaderComponent.ɵfac = function FileUploaderComponent_Factory(t) { return new (t || FileUploaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc20.HttpClient)); };
FileUploaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FileUploaderComponent, selectors: [["mx-file-uploader"]], viewQuery: function FileUploaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c17, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);
    } }, inputs: { field: "field", isFieldDisabled: "isFieldDisabled", disabled: "disabled" }, decls: 6, vars: 4, consts: [[1, "mx-field-nm"], ["class", "card-content", 3, "ngClass", 4, "ngIf"], ["class", "file-actions", 3, "ngClass", 4, "ngIf"], ["type", "file", "id", "fileUpload", "name", "fileUpload", 2, "display", "none", 3, "multiple", "accept"], ["fileInput", ""], [1, "card-content", 3, "ngClass"], [1, "file-list"], [4, "ngFor", "ngForOf"], ["class", "file-item", 4, "ngIf"], [1, "file-item"], ["matListAvatar", "", "alt", "", "class", "image", 3, "src", 4, "ngIf"], ["mat-icon-button", "", "download", "", "target", "_blank", 3, "href", "disabled", 4, "ngIf"], ["mat-icon-button", "", 3, "disabled", "click", 4, "ngIf"], ["matListAvatar", "", "alt", "", 1, "image", 3, "src"], ["mat-icon-button", "", "download", "", "target", "_blank", 3, "href", "disabled"], [1, "mat-24"], ["mat-icon-button", "", 3, "disabled", "click"], [1, "mat-24", 3, "color"], [1, "file-actions", 3, "ngClass"], ["class", "mat-mini-fab file-icon", 3, "ngClass", 4, "ngIf"], ["mat-stroked-button", "", "color", "primary", 3, "disabled", "click", 4, "ngIf"], ["mat-button", "", 3, "ngClass", "disabled", "click", 4, "ngIf"], ["class", "spinner", 3, "diameter", 4, "ngIf"], ["mat-icon-button", "", 3, "disabled", "ngClass", "click", 4, "ngIf"], [1, "mat-mini-fab", "file-icon", 3, "ngClass"], ["mat-stroked-button", "", "color", "primary", 3, "disabled", "click"], ["mat-button", "", 3, "ngClass", "disabled", "click"], [1, "spinner", 3, "diameter"], ["mat-icon-button", "", 3, "disabled", "ngClass", "click"], [3, "color"]], template: function FileUploaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-card");
        ɵngcc0.ɵɵtemplate(2, FileUploaderComponent_mat_card_content_2_Template, 3, 4, "mat-card-content", 1);
        ɵngcc0.ɵɵtemplate(3, FileUploaderComponent_mat_card_actions_3_Template, 7, 8, "mat-card-actions", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "input", 3, 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.fileList.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideActionStrip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("multiple", ctx.multiple)("accept", ctx.fileType);
    } }, directives: [ɵngcc15.MatCard, ɵngcc3.NgIf, ɵngcc15.MatCardContent, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc3.NgForOf, ɵngcc21.MatListAvatarCssMatStyler, ɵngcc7.MatAnchor, ɵngcc12.MatIcon, ɵngcc7.MatButton, ɵngcc15.MatCardActions, ɵngcc22.MatSpinner], styles: ["li,ul{list-style:none;margin:0;padding:0}#file-label{display:inline-flex;font-size:12px;line-height:18px;vertical-align:middle}#file-label mat-icon{font-size:18px;text-align:center}#file-label a{cursor:pointer}.file-icon{box-shadow:none}.file-icon .material-icons,.file-list .image{vertical-align:middle}.file-list .image{border:1px solid #4d4d4d;height:30px!important;margin-right:9px;width:30px!important}.file-list .file-item{align-items:center;border-bottom:1px solid #efeded;box-sizing:border-box;display:flex;flex-direction:row;height:40px;justify-content:space-between;padding:0;position:relative;width:100%}.file-list .file-item>span{padding-left:10px}.file-list .file-item:last-child{border-bottom:none;margin-bottom:5px}.file-list .mat-button-base:hover:not([disabled]){background:#efeded}.card-content{margin-bottom:0}.file-actions{border-top:1px solid #efeded;display:flex;justify-content:space-between;margin:0 -16px -8px;padding-top:11px}.file-actions .mat-mini-fab{box-shadow:none!important}.file-actions .spinner{float:right;margin-top:10px}.file-actions .mat-button-base,.file-actions>button,.file-actions>div{margin:0 16px}.file-actions .mat-button-base:hover:not([disabled]){background:#efeded}.file-actions.empty-list{border-top:none;justify-content:space-around;padding:0}.mat-card{margin-bottom:.25em}"], encapsulation: 2 });
FileUploaderComponent.ctorParameters = () => [
    { type: HttpClient }
];
FileUploaderComponent.propDecorators = {
    field: [{ type: Input }],
    isFieldDisabled: [{ type: Input }],
    fileInput: [{ type: ViewChild, args: ["fileInput", { static: false },] }],
    disabled: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploaderComponent, [{
        type: Component,
        args: [{
                selector: 'mx-file-uploader',
                template: "<div class=\"mx-field-nm\">\n  <mat-card>\n    <mat-card-content *ngIf=\"fileList.length > 0\"  class=\"card-content\" \n      [ngClass]=\"{'mx-disable': disabled}\" >\n      <ul class=\"file-list\">\n        <ng-container *ngFor=\"let file of fileList; let index=index\">\n          <li class=\"file-item\" *ngIf=\"index < showLess\">\n            <span>\n                <img *ngIf=\"isFileImageType\" matListAvatar [src]=\"file.url\" alt=\"\" class=\"image\" />\n                <span>{{file.name}}</span>\n            </span>\n            <span>\n              <a mat-icon-button [href]=\"file.url\" download target=\"_blank\" [disabled]=\"disabled\" *ngIf=\"!hideDownloadButton\">\n                <mat-icon class=\"mat-24\">file_download</mat-icon>\n              </a>\n              <button mat-icon-button (click)=\"onDeleteFileClick(file)\" *ngIf=\"!hideDeleteFileButton\"\n                [disabled]=\"disabled || isUploadingInProgress\">\n                <mat-icon class=\"mat-24\" [color]=\"isUploadingInProgress? '' : 'warn'\">delete</mat-icon>\n              </button>\n            </span>\n          </li>\n        </ng-container>\n      </ul>\n    </mat-card-content>\n    <mat-card-actions \n      class=\"file-actions\"\n      [ngClass]=\"{'empty-list':fileList.length == 0}\"\n      *ngIf=\"!hideActionStrip\">\n      <div>\n        <div class=\"mat-mini-fab file-icon\" \n        [ngClass]=\"{'mx-disable': disabled}\"\n        *ngIf=\"!hideFileIconButton\">\n          <mat-icon>{{fileIcon}}</mat-icon>\n        </div>\n        <button mat-stroked-button color=\"primary\" (click)=\"onUploadClick()\"\n          [disabled]=\"disabled || isUploadingInProgress\"\n          *ngIf=\"!hideUploadButton\">\n          <mat-icon>file_upload</mat-icon>\n          {{uploadButtonText}}\n        </button>\n        <button  mat-button (click)=\"onShowAllItems()\"\n          [ngClass]=\"{'mx-disable': disabled}\"\n          [disabled]=\"disabled || isUploadingInProgress\"\n          *ngIf=\"showLess<fileList.length\">\n            Show All\n        </button>\n\n        <mat-spinner *ngIf=\"isUploadingInProgress\" [diameter]=\"18\" class=\"spinner\">\n        </mat-spinner>\n      </div>\n\n      <button mat-icon-button (click)=\"onDeleteAllClick()\"\n        [disabled]=\"disabled || isUploadingInProgress\"\n        [ngClass]=\"{'mx-disable': disabled}\"\n        *ngIf=\"!hideDeleteAllButton && fileList.length > 1\">\n        <mat-icon [color]=\"isUploadingInProgress? '' : 'warn'\">delete</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n  <input type=\"file\" #fileInput\n    id=\"fileUpload\"\n    name=\"fileUpload\"\n    [multiple]=\"multiple\"\n    [accept]=\"fileType\"\n    style=\"display:none;\"\n  />\n</div>",
                encapsulation: ViewEncapsulation.None,
                styles: ["li,ul{list-style:none;margin:0;padding:0}#file-label{display:inline-flex;font-size:12px;line-height:18px;vertical-align:middle}#file-label mat-icon{font-size:18px;text-align:center}#file-label a{cursor:pointer}.file-icon{box-shadow:none}.file-icon .material-icons,.file-list .image{vertical-align:middle}.file-list .image{border:1px solid #4d4d4d;height:30px!important;margin-right:9px;width:30px!important}.file-list .file-item{align-items:center;border-bottom:1px solid #efeded;box-sizing:border-box;display:flex;flex-direction:row;height:40px;justify-content:space-between;padding:0;position:relative;width:100%}.file-list .file-item>span{padding-left:10px}.file-list .file-item:last-child{border-bottom:none;margin-bottom:5px}.file-list .mat-button-base:hover:not([disabled]){background:#efeded}.card-content{margin-bottom:0}.file-actions{border-top:1px solid #efeded;display:flex;justify-content:space-between;margin:0 -16px -8px;padding-top:11px}.file-actions .mat-mini-fab{box-shadow:none!important}.file-actions .spinner{float:right;margin-top:10px}.file-actions .mat-button-base,.file-actions>button,.file-actions>div{margin:0 16px}.file-actions .mat-button-base:hover:not([disabled]){background:#efeded}.file-actions.empty-list{border-top:none;justify-content:space-around;padding:0}.mat-card{margin-bottom:.25em}"]
            }]
    }], function () { return [{ type: ɵngcc20.HttpClient }]; }, { field: [{
            type: Input
        }], isFieldDisabled: [{
            type: Input
        }], fileInput: [{
            type: ViewChild,
            args: ["fileInput", { static: false }]
        }], disabled: [{
            type: Input
        }] }); })();

const quillConfiguration = {
    formula: true,
    toolbar: [
        //      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        [{ 'font': [] }],
        ['bold', 'italic', 'underline', 'strike'],
        ['blockquote'],
        //      ['blockquote', 'code-block'],
        //      [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'align': [] }, { 'indent': '-1' }],
        [{ 'indent': '+1' }],
        [{ 'color': [] }, { 'background': [] }],
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'script': 'sub' }, { 'script': 'super' }, 'formula'],
        //      ['formula'],
        //      [{ 'direction': 'rtl' }],                         // text direction
        ['link', 'image', 'video'] // link and image, video
    ]
};

class FieldErrorStateMatcher {
    isErrorState(control, form) {
        //    console.log("111");
        return !!(control && control.invalid && (control.dirty || control.touched));
    }
}
class FieldComponent {
    constructor(router, ability) {
        this.router = router;
        this.ability = ability;
        this.onDependentFieldChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onFormChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.ellipsisRequired = false;
        this.editorOptions = quillConfiguration;
        this.onListSelectionFuc = null;
        this.listOptions = null;
        this.dateRange = false;
        this.minLengthForTrigger = 3;
        this.highlightAutoCompleteText = '';
        this.onShowAllOptions = () => {
            this.showLess = this.field.options.length;
        };
        this.autoCompleteInputHasValue = false;
        this.onListImageLoadError = ($event) => {
            $event.target.src = this.field.defaultImageUrl;
        };
        AbilityUtils.setAbility(this.ability);
    }
    get displayMode() {
        return this._displayMode;
    }
    set displayMode(_displayMode) {
        this._displayMode = _displayMode;
        this.isFieldDisabled = this.fieldDisabled();
    }
    isEditorErrorState() {
        return !!(this.fieldControl && this.fieldControl.invalid && (this.fieldControl.dirty || this.fieldControl.touched));
    }
    ngOnInit() {
        if (this.field.placeholder == undefined) {
            this.field.placeholder = "";
        }
        if (this.field.ellipsis && this.field.ellipsis > 0) {
            this.charLimit = this.field.ellipsis;
        }
        this.matcher = new FieldErrorStateMatcher();
        this.getValue(this.field, this.value);
        this.isRequired = this.required();
        this.isFieldDisabled = this.fieldDisabled();
        this.hasFieldNavigate = this.fieldNavigate();
        this.hasHintIcon = this.displayHintIcon();
        this.setMaxLength();
        this.setNumberMinMax();
        this.setAppearance();
        this.setOptionInDisplay();
        this.getImagePath(this.field);
        this.setRows();
        this.setHeight();
        this.setClear();
        this.setAsBubble();
        this.setTextAlign();
        this.setAddMoreDisplayInColumn();
        this.setMinLengthForTrigger();
        //    this.autocompleteInit();
        this.setDisplayTemplate();
        this.setCalendar();
        this.setShowLess();
        this.textClearButton = this.setTextClearButton('fieldTextClearBtn', "Clear Text", "cancel", null);
        if (this.field.navigate) {
            this.routeToButton = this.setTextClearButton('fieldRouteToBtn', this.field.navigate.text, this.field.navigate.icon ? this.field.navigate.icon : "call_made", this.field.navigate.routeTo);
        }
        this.helpModalButton = this.setHelpButton('helpCloseButton', 'Close', 'close');
        this.plusButton = this.addRemoveButton("add_field" /* ADD_FIELD */, "Add", "add");
        this.minusButton = this.addRemoveButton("remove_field" /* REMOVE_FIELD */, "Minus", "remove");
    }
    setDisplayTemplate() {
        if ((this.field.type == "RADIO" /* RADIO */ || this.field.type == "CHECKBOX" /* CHECKBOX */) && StringUtils.isEmpty(this.field.displayTemplate)) {
            this.field.displayTemplate = "CLASSIC" /* CLASSIC */;
        }
    }
    setAddMoreDisplayInColumn() {
        if (this.isAddMore) {
            if (this.device == 'desktop') {
                if (this.displayInColumns < 6) {
                    this.addMoreFieldDisplayInColumns = 10;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 11;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
            if (this.device == 'tablet') {
                if (this.displayInColumns < 6) {
                    this.addMoreFieldDisplayInColumns = 6;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 7;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
            if (this.device == 'mobile') {
                if (this.displayInColumns < 3) {
                    this.addMoreFieldDisplayInColumns = 3;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 3;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
        }
    }
    setMinLengthForTrigger() {
        this.minLengthForTrigger = this.field.minLengthForTrigger ? this.field.minLengthForTrigger : 3;
    }
    setRows() {
        this.rows = this.field.rows ? this.field.rows : 1;
    }
    setHeight() {
        this.height = this.field.height ? this.field.height : 300;
    }
    setAppearance() {
        this.appearance = this.field.appearance ? this.field.appearance : 'standard';
    }
    setAsBubble() {
        this.asBubble = this.field.asBubble ? this.field.asBubble : false;
        this.bubbleColor = this.field.bubbleColor ? this.field.bubbleColor : "" /* DEFAULT */;
    }
    setTextAlign() {
        this.textAlign = this.field.textAlign ? this.field.textAlign : "left" /* LEFT */;
    }
    setMaxLength() {
        this.maxLength = this.field.maxLength ? this.field.maxLength : 1000000;
    }
    setNumberMinMax() {
        this.min = this.field.min ? this.field.min : null;
        this.max = this.field.max ? this.field.max : null;
    }
    displayHintIcon() {
        return this.field.help && this.field.help.icon ? true : false;
    }
    close() {
        this.sidenav.close();
    }
    open() {
        this.sidenav.open();
    }
    setHelpButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "GHOST" /* GHOST */,
            onlyIcon: true,
        };
    }
    required() {
        let isRequired = false;
        if (this.field.validations && this.field.validations.length > 0) {
            for (let validation of this.field.validations) {
                if (validation.message.key == "required") {
                    isRequired = true;
                }
            }
        }
        if (StringUtils.isEmpty(this.field.label)) {
            isRequired = false;
        }
        return isRequired;
    }
    fieldNavigate() {
        let hasFieldNavigate = false;
        if (this.field.navigate &&
            (!StringUtils.isEmpty(this.field.navigate.icon) || !StringUtils.isEmpty(this.field.navigate.text)) &&
            !CollectionUtils.isEmpty(this.field.navigate.routeTo)) {
            hasFieldNavigate = true;
        }
        return hasFieldNavigate;
    }
    fieldDisabled() {
        let isDisabled = false;
        if (this.field.alwaysEnable) { }
        else {
            isDisabled = FieldUtils.isFieldDisabled(this.field, this._displayMode, this.resolvedValue);
            if (isDisabled) {
                FormUtils.disableFieldControl(this.fieldControl);
            }
        }
        return isDisabled;
    }
    getValue(field, txt) {
        let value = "";
        let initialLength = 0;
        let finalLength = 0;
        if (this.fieldControl != undefined) {
            value = this.fieldControl.value;
        }
        else {
            value = txt;
        }
        if (field.type != "DROPDOWN" /* DROPDOWN */) {
            if (this.keyMap && this.keyMap.length > 0) {
                this.keyMap
                    .filter(objs => {
                    let hasAssociation = false;
                    if (!CollectionUtils.isEmpty(objs) && !CollectionUtils.isEmpty(objs.associations)) {
                        objs.associations.forEach(element => {
                            if (element.fieldKey == field.key && element.componentIdentifier == this.sourceIdentifier) {
                                hasAssociation = true;
                            }
                        });
                    }
                    return hasAssociation;
                })
                    .forEach(field => {
                    if (field['options'] && field['options'].length > 0) {
                        for (let index = 0; index < field['options'].length; index++) {
                            if (field['options'][index].key == value) {
                                value = field['options'][index].value;
                                break;
                            }
                        }
                    }
                });
            }
        }
        this.resolvedValue = value;
        if (FieldUtils.isEllipsisField(this.field) && FieldUtils.displayEllipsis(this.charLimit, this.resolvedValue)) {
            value = JSON.stringify(value);
            initialLength = value.length;
            value = value.substr(0, this.field.ellipsis);
            finalLength = value.length;
            value += "...";
            if (initialLength > finalLength) {
                this.ellipsisRequired = true;
            }
        }
        return value;
    }
    displayFullText() {
        let resolvedValueStr = JSON.stringify(this.resolvedValue);
        if (!StringUtils.isEmpty(resolvedValueStr)) {
            this.charLimit = resolvedValueStr.length;
        }
    }
    displayShortText() {
        if (this.field.ellipsis && this.field.ellipsis > 0) {
            this.charLimit = this.field.ellipsis;
            this.displayEllipsis();
        }
    }
    displayEllipsis() {
        return FieldUtils.displayEllipsis(this.charLimit, this.resolvedValue);
    }
    setCalendar() {
        if (this.field.type === "CALENDAR" /* CALENDAR */) {
            this.dateRange = this.field.dateRange;
        }
    }
    ///////////////////////////// AUTOCOMPLETE - START ///////////////////////////
    invokeOnChangeOnField(value, input) {
        let invokeOnChange = false;
        if (this.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */) {
            this.autoCompleteInputHasValue = !!value;
            if (value.length >= this.minLengthForTrigger) {
                this.autoCompleteInputHasValue = !!value;
                this.highlightAutoCompleteText = value;
            }
            else {
                this.autoCompleteInputHasValue = false;
                this.highlightAutoCompleteText = '';
            }
            invokeOnChange = true;
        }
        else {
            invokeOnChange = true;
        }
        return invokeOnChange;
    }
    autocompleteDisplayFn(option) {
        let value;
        if (option != null && option.key != null) {
            value = option.value;
        }
        else {
            value = option;
        }
        return value;
    }
    _filter(value) {
        const filterValue = value.toLowerCase();
        var result = this.field.options.filter(option => option.value.toLowerCase().includes(filterValue));
        this.autoCompleteResultCount = result.length;
        return result;
    }
    ///////////////////////////// AUTOCOMPLETE - END ///////////////////////////
    ///////////////////////////// DROPDOWN OPTION - START ///////////////////////////
    setOptionInDisplay() {
        if (this.field['options'] && this.fieldControl) {
            let key = this.fieldControl.value;
            for (let cnt = 0; cnt < this.field['options'].length; cnt++) {
                if (this.field['options'][cnt].key === key) {
                    this.field['options'][cnt].checked = true;
                }
            }
        }
    }
    setClear() {
        let hasClear = false;
        if (this.resolvedValue && this.field.hasClear && (this.field.type == "TEXT" /* TEXT */ ||
            this.field.type == "TEXTAREA" /* TEXTAREA */ ||
            this.field.type == "EMAIL" /* EMAIL */ ||
            this.field.type == "PASSWORD" /* PASSWORD */ ||
            this.field.type == "COLOR" /* COLOR */ ||
            this.field.type == "MONTH" /* MONTH */ ||
            this.field.type == "WEEK" /* WEEK */ ||
            this.field.type == "NUMBER" /* NUMBER */ ||
            this.field.type == "DROPDOWN" /* DROPDOWN */ ||
            this.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ ||
            this.field.type == "CHIPS" /* CHIPS */ ||
            this.field.type == "TIME" /* TIME */ ||
            this.field.type == "CALENDAR" /* CALENDAR */)) {
            hasClear = true;
        }
        this.hasClear = hasClear;
    }
    cleanValue() {
        this.resolvedValue = "";
        this.fieldControl.setValue("");
        this.setClear();
    }
    getResolveTextWithKey(field) {
        let value = "";
        if (this.row != undefined) {
            if (this.row[field['resolveOptionWithKey']]) {
                value = this.row[field['resolveOptionWithKey']];
            }
        }
        return value;
    }
    getDropdownValue(field, txt) {
        let value = "";
        if (this.fieldControl != undefined) {
            if (this.fieldControl.value) {
                value = this.fieldControl.value;
            }
        }
        else {
            value = txt;
        }
        if (field['options'] && field['options'].length > 0) {
            for (let index = 0; index < field['options'].length; index++) {
                let isSelected = false;
                if (value instanceof Array) {
                    if (value.indexOf(field['options'][index].key) > -1) {
                        isSelected = true;
                    }
                }
                else if (value instanceof String) {
                    if (field['options'][index].key == value) {
                        isSelected = true;
                    }
                }
                else if (value instanceof Object) {
                    if (value[field['options'][index].key]) {
                        isSelected = true;
                    }
                }
                if (isSelected) {
                    value = field['options'][index].value;
                    break;
                }
            }
        }
        return value;
    }
    ///////////////////////////// DROPDOWN OPTION - END ///////////////////////////
    ///////////////////////////// UPLOAD - START ///////////////////////////
    // imgURL: any;
    // onUpload(event) {
    //   let file: File = {
    //     'source': this.sourceIdentifier,
    //     'index': this.index,
    //     'field': this.field.key,
    //     'files': event.target.files
    //   };
    //   this.field['onUpload'](file);
    //   var reader = new FileReader();
    //   reader.readAsDataURL(file.files[0]);
    //   reader.onload = (_event) => {
    //     this.imgURL = reader.result;
    //   }
    // }
    ///////////////////////////// UPLOAD - END ///////////////////////////
    ///////////////////////////// IMAGE - START ///////////////////////////
    getImagePath(field) {
        //    console.log(path);
        if (!StringUtils.isEmpty(this.resolvedValue) && this.resolvedValue instanceof String && this.resolvedValue.indexOf("http://") <= -1) {
            // if (this.resolvedValue.startsWith("/")) {
            //   this.resolvedValue = Properties.contentUrl + this.resolvedValue;
            // } else {
            //   this.resolvedValue = Properties.contentUrl + "/" + this.resolvedValue;
            // }
        }
        this.imagePath = this.resolvedValue;
    }
    ///////////////////////////// IMAGE - END ///////////////////////////
    ///////////////////////////// SLIDER - START ///////////////////////////
    //   getSliderTickInterval(): number | 'auto' {
    // //    if ((<SliderField>this.field)..showTicks) {
    //       return (<SliderField>this.field).autoTicks ? 'auto' : this.tickInterval;
    // //    }
    //     return 0;
    //   }
    ///////////////////////////// SLIDER - END ///////////////////////////
    ///////////////////////////// EVENTS - START ///////////////////////////
    onAutocompleteChange(autocomplate) {
        let value = autocomplate.option.value;
        // console.log(value);
        this.onChangeEvent(this.field.key, value, autocomplate);
    }
    onToggleChange(toggle) {
        console.log(toggle);
        let value = toggle.checked;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, toggle);
    }
    onSliderChange(slider) {
        //    console.log(slider);
        let value = slider.value;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, slider);
    }
    onRadioChange(radio) {
        //    console.log(radio);
        let value = radio.value;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, radio);
    }
    onCheckboxChange(option, checkbox) {
        let key = option.key;
        let value = checkbox.checked;
        // console.log(key + ": " + value);
        this.onChangeEvent(key, value, checkbox);
    }
    setShowLess() {
        if (this.field.type === "RADIO" /* RADIO */ || this.field.type === "CHECKBOX" /* CHECKBOX */) {
            this.showLess = this.field.showLess || this.field.options.length;
        }
    }
    onOptionChange(options) {
        let value = this.listView.selectedOptions.selected.map(x => x.value);
        if (this.field.type == 'CHECKBOX') {
            let selectedOptions = options.source._value;
            let currentOptions = this.fieldControl.value;
            for (let key in currentOptions) {
                if (selectedOptions.indexOf(key) > -1) {
                    currentOptions[key] = true;
                }
                else {
                    currentOptions[key] = false;
                }
            }
            this.fieldControl.setValue(currentOptions);
        }
        else if (this.field.type == 'RADIO') {
            let selectedOptions = options.source._value;
            if (CollectionUtils.isEmpty(selectedOptions)) {
                this.fieldControl.setValue(null);
                value = null;
            }
            else {
                this.fieldControl.setValue(selectedOptions[0]);
                value = value[0];
            }
        }
        this.onChangeEvent(this.field.key, value, options);
    }
    onHtmlEditorChange($event) {
        // console.log($event);
        //    console.log(value);
        this.onChangeEvent(this.field.key, $event.html, $event);
    }
    onChipsListChange($event) {
        this.onChangeEvent(this.field.key, $event.values, $event);
    }
    onInputChange(input) {
        console.log(input);
        let value = input.target.value;
        //    console.log(value);
        if (this.invokeOnChangeOnField(value, input)) {
            this.onChangeEvent(this.field.key, value, input);
        }
    }
    onDateChange(date, type) {
        let key = this.field.key;
        if (!StringUtils.isEmpty(type)) {
            key = this.field.key + "." + type;
        }
        //    console.log(date.value);
        let value = date.value;
        //    console.log(value);
        this.onChangeEvent(key, value, date);
    }
    onChange(dropdown) {
        //    console.log(dropdown.value);
        let value = dropdown.value;
        this.onChangeEvent(this.field.key, value, dropdown);
    }
    onFileChange(event) {
        // console.log(event);
        this.onChangeEvent(this.field.key, event, event);
        var reader = new FileReader();
        reader.readAsDataURL(event[0]);
        reader.onload = (_event) => {
            this.imgURL = reader.result;
        };
    }
    onParagraphChange(event) {
        //    console.log(event); 
        this.onChangeEvent(this.field.key, event, event);
    }
    buttonClick(event) {
        this.onButtonClick.emit(event);
    }
    onChangeEvent(key, value, event) {
        this.resolvedValue = value;
        this.setClear();
        setTimeout(() => {
            //      if ((this.dependencies && this.dependencies[this.field.key]) || this.field.type == FieldType.CHECKBOX || this.field.type == FieldType.DROPDOWN) {
            if ((this.dependencies && this.dependencies[this.field.key])) {
                let action = {
                    sourceIdentifier: this.sourceIdentifier,
                    sourceIndex: this.sourceIndex,
                    widgetArrayIndex: this.widgetArrayIndex,
                    fieldIndex: this.fieldIndex,
                    action: this.field.key,
                    data: this.form.getRawValue(),
                    parentHierarchy: null,
                    event: event
                };
                this.onDependentFieldChange.emit(action);
            }
        }, 200);
        let fieldChange = {
            sourceIdentifier: this.sourceIdentifier,
            sourceIndex: this.sourceIndex,
            widgetArrayIndex: this.widgetArrayIndex,
            fieldIndex: this.fieldIndex,
            fieldKey: key,
            value: value,
            event: event
        };
        this.onFieldChange.emit(fieldChange);
    }
    // onChangeSearch(val: string) {
    //   console.log("onChangeSearch");
    //   let autocomplete: Autocomplete = {
    //     'source': this.sourceIdentifier,
    //     'index': this.index,
    //     'field': this.field.key,
    //     'searchText': val
    //   };
    //   this.autocompleteService.invoke(autocomplete);
    // }
    ///////////////////////////// EVENTS - END ///////////////////////////
    ///////////////////////////// ERROR - START ///////////////////////////
    errors() {
        let errors = [];
        if (this.fieldControl != undefined) {
            if (this.fieldControl && this.fieldControl.errors) {
                Object.keys(this.fieldControl.errors).forEach(keyError => {
                    if (this.field.validations) {
                        for (let validation of this.field.validations) {
                            if (keyError === validation.message.key) {
                                errors[errors.length] = { error: keyError, message: validation.message.message };
                            }
                            else {
                                //errors[errors.length] = {error: keyError, message: this.fieldControl.errors[keyError]};
                            }
                        }
                    }
                });
            }
            else if (this.fieldControl instanceof FormGroup) {
                if (this.fieldControl.controls && this.fieldControl.controls['startDate'] && this.fieldControl.controls['startDate'].errors) {
                    Object.keys(this.fieldControl.controls['startDate'].errors).forEach(keyError => {
                        if (this.field.validations) {
                            for (let validation of this.field.validations) {
                                if (keyError === validation.message.key) {
                                    errors[errors.length] = { error: keyError, message: validation.message.message };
                                }
                            }
                        }
                    });
                }
            }
        }
        return errors;
    }
    ///////////////////////////// ERROR - END ///////////////////////////
    setTextClearButton(identifier, label, icon, routeTo) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "GHOST" /* GHOST */,
            onlyIcon: true,
            routerLink: routeTo
        };
    }
    addField(field) {
        let validations = FormUtils.getFieldValidation(field);
        this.form.controls[field.key].push(FormUtils.setFormControl(this.displayMode, field, null, validations));
        this.onFormChange.emit(this.form);
    }
    removeField(field, index) {
        this.form.controls[field.key].controls.splice(index, 1);
        this.onFormChange.emit(this.form);
    }
    addRemoveButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "FLAT" /* FLAT */,
            onlyIcon: true
        };
    }
    onFileComplete(data) {
        // console.log(data); // We just print out data bubbled up from event emitter.
    }
}
FieldComponent.ɵfac = function FieldComponent_Factory(t) { return new (t || FieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
FieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FieldComponent, selectors: [["mx-field"]], viewQuery: function FieldComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c20, true);
        ɵngcc0.ɵɵviewQuery(_c12, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listView = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);
    } }, inputs: { displayMode: "displayMode", _displayMode: "_displayMode", sourceType: "sourceType", sourceIdentifier: "sourceIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", form: "form", fieldControl: "fieldControl", fieldIndex: "fieldIndex", field: "field", originalData: "originalData", hideLabel: "hideLabel", value: "value", isAddMore: "isAddMore", addMorePermission: "addMorePermission", device: "device", displayInColumns: "displayInColumns", dependencies: "dependencies", row: "row", keyMap: "keyMap" }, outputs: { onDependentFieldChange: "onDependentFieldChange", onFieldChange: "onFieldChange", onFormChange: "onFormChange", onButtonClick: "onButtonClick" }, decls: 14, vars: 8, consts: [["class", "mdc-layout-grid mx-field-horizontal-container", 4, "ngIf"], [4, "ngIf"], ["cffield", ""], ["cffieldeditable", ""], ["cfhelplaintext", ""], ["cfhelpmodal", ""], ["cfoptiontemplate", ""], [1, "mdc-layout-grid", "mx-field-horizontal-container"], [1, "mdc-layout-grid__inner"], [1, "mdc-layout-grid__cell--span-3"], [3, "class", "ngClass", 4, "ngIf"], [1, "mdc-layout-grid__cell--span-9", "mdc-layout-grid--align-right"], [4, "ngTemplateOutlet"], [3, "ngClass"], ["class", "mx-field-lbl-req", 4, "ngIf"], [1, "mx-field-lbl-req"], [3, "ngSwitch", "class", "ngClass", 4, "ngIf"], ["class", "mx-field", 3, "ngClass", 4, "ngIf"], ["class", "mx-field", 4, "ngIf"], [3, "ngSwitch", "ngClass"], [3, "class", 4, "ngIf"], [3, "ngClass", 4, "ngSwitchCase"], [3, "ngClass", "class", 4, "ngSwitchCase"], [4, "ngSwitchCase"], ["class", "mx-field-paragraph", 4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["matSuffix", "", 3, "field"], [3, "src"], ["class", "mx-field-boolean-success", "aria-hidden", "true", 4, "ngIf"], ["class", "mx-field-boolean-failure", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-field-boolean-success"], ["aria-hidden", "true", 1, "mx-field-boolean-failure"], [1, "mdc-layout-grid__inner", "mx-field-showmore-pannel-content"], [1, "mdc-layout-grid__cell--span-12"], ["class", "mx-field-short-value", 3, "click", 4, "ngIf", "ngIfElse"], ["elseValue", ""], ["class", "mdc-layout-grid__inner mx-field-showmore-pannel-action", 3, "click", 4, "ngIf"], [1, "mx-field-short-value", 3, "click"], [1, "mx-field-value", 3, "click"], [1, "mdc-layout-grid__inner", "mx-field-showmore-pannel-action", 3, "click"], [1, "mx-field-paragraph"], [3, "field", "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "keyMap", "displayMode", "originalData", "fieldControl", "dependencies", "onFieldChange", "onButtonClick"], [3, "field", "disabled"], [3, "href"], [3, "ngClass", "text-align", 4, "ngIf", "ngIfElse"], ["elseAsBubble", ""], ["class", "mx-field-short-value", 3, "innerHtml", "click", 4, "ngIf", "ngIfElse"], [1, "mx-field-short-value", 3, "innerHtml", "click"], [1, "mx-field-value", 3, "innerHtml", "click"], ["selected", "", 1, "mx-small-bubble", 3, "color"], [1, "mx-field", 3, "ngClass"], [1, "mx-field"], [1, "mdc-layout-grid", "mx-form-add-more-row"], [3, "disabled", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "class", "onClick", 4, "ngIf"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "class", "onClick", 4, "ngIf"], [3, "disabled", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "onClick"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "onClick"], [3, "ngSwitch"], ["class", "mat-input-element mx-field-chk-group", 4, "ngSwitchCase"], [3, "class", 4, "ngSwitchCase"], ["matPrefix", "", "aria-hidden", "true", "class", "mx-field-icon", 4, "ngIf"], ["matInput", "", 3, "id", "formControl", "errorStateMatcher", "maxLength", "rows", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["hintLabel", "end", 4, "ngIf"], ["matInput", "", "type", "color", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "email", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "month", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "number", 3, "id", "formControl", "errorStateMatcher", "min", "max", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "password", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "time", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matInput", "", "type", "week", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "class", "input", 4, "ngSwitchCase"], ["matSuffix", "", 3, "button", "class", "onClick", 4, "ngIf"], ["class", "mx-field-hint", 4, "ngIf"], ["aria-hidden", "true", 3, "innerHtml", 4, "ngFor", "ngForOf"], ["matPrefix", "", "aria-hidden", "true", 1, "mx-field-icon"], ["matInput", "", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "input"], ["matInput", "", 3, "id", "formControl", "errorStateMatcher", "maxLength", "rows", "placeholder", "disabled", "input"], ["hintLabel", "end"], ["matInput", "", "type", "color", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "input"], ["matInput", "", "type", "email", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "input"], ["matInput", "", "type", "month", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "input"], ["matInput", "", "type", "number", 3, "id", "formControl", "errorStateMatcher", "min", "max", "placeholder", "disabled", "input"], ["matInput", "", "type", "password", 3, "id", "formControl", "errorStateMatcher", "maxLength", "placeholder", "disabled", "input"], ["matInput", "", "type", "time", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "input"], ["matInput", "", "type", "week", 3, "id", "formControl", "errorStateMatcher", "placeholder", "disabled", "input"], [3, "id", "formControl", "errorStateMatcher", "multiple", "placeholder", "disabled", "selectionChange"], ["class", "mat-option", 4, "ngIf"], ["class", "mat-option", 3, "value", "disabled", 4, "ngFor", "ngForOf"], [1, "mat-option"], [1, "mat-option", 3, "value", "disabled"], ["matInput", "", 3, "id", "formControl", "errorStateMatcher", "placeholder", "matAutocomplete", "disabled", "input"], [3, "displayWith", "optionSelected"], ["auto", "matAutocomplete"], [3, "class", "value", "disabled", 4, "ngFor", "ngForOf"], [3, "value", "disabled"], [3, "innerHTML"], ["matSuffix", "", 3, "button", "onClick"], [1, "mx-field-hint"], ["aria-hidden", "true", 1, "mx-field-hint-icon"], ["aria-hidden", "true", 3, "innerHtml"], ["class", "mx-field-label", 3, "class", 4, "ngIf"], [3, "formGroup", "rangePicker"], ["matStartDate", "", "matInput", "", "formControlName", "startDate", "placeholder", "Start date", 3, "id", "min", "disabled", "errorStateMatcher", "dateChange"], ["matEndDate", "", "matInput", "", "formControlName", "endDate", "placeholder", "End date", 3, "id", "max", "disabled", "errorStateMatcher", "dateChange"], ["matSuffix", "", 3, "for"], ["datePicker", ""], [1, "mx-field-label"], ["matInput", "", 3, "matDatepicker", "id", "formControl", "matDatepickerFilter", "min", "max", "errorStateMatcher", "disabled", "dateChange"], ["picker", ""], [1, "mx-field-nm"], [1, "mx-field-nm", 3, "ngClass", "styles", "id", "formControl", "disabled", "placeholder", "readOnly", "modules", "onEditorChanged"], ["class", "mx-field-editor-error", 4, "ngIf"], [1, "mx-field-editor-error"], [1, "mat-input-element", "mx-field-chk-group"], ["class", "mx-field-nm", 3, "ngClass", 4, "ngIf", "ngIfElse"], [1, "mx-field-nm", 3, "ngClass"], ["class", "mx-field-chk", 4, "ngFor", "ngForOf"], [1, "mx-field-chk"], [3, "ngClass", "formControl", "disabled", "change"], [3, "id", "formControl", "class", "ngClass", "change", 4, "ngIf", "ngIfElse"], [3, "id", "formControl", "ngClass", "change"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["class", "mx-field-radio-desc", 3, "ngClass", 4, "ngIf"], [1, "mx-field-radio-desc", 3, "ngClass"], [3, "id", "formControl", "invert", "max", "min", "step", "thumbLabel", "tickInterval", "vertical", "disabled", "change"], [3, "formControl", "color", "checked", "disabled", "change"], [3, "field", "formControl", "disabled", "errorMatcher", "onListChange"], [3, "field"], [1, "mx-field-short-value", 3, "innerHtml"], ["class", "mx-field-hint mx-field-hint-nm", 4, "ngIf"], [1, "mx-field-hint", "mx-field-hint-nm"], ["disableClose", "", 3, "position", "keydown.escape"], ["sidenav", ""], [1, "mdc-layout-grid__cell--span-9", "mx-field-help-modal-header"], [1, "mdc-layout-grid__cell--span-3", "mdc-layout-grid--align-right"], ["align", "right", 3, "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "onClick"], [1, "mdc-layout-grid__inner", "mx-field-help-modal-divider"], [1, "mx-field-help-divider"], [1, "mdc-layout-grid__inner", "mx-field-help-modal-description"], [1, "mx-field-help-modal"], ["helpSideNav", ""], ["matTooltip", "Click for help", "matTooltipPosition", "above", 3, "click"], ["aria-hidden", "true", 3, "click"], [1, "mx-field-list", "mx-field-nm", 3, "multiple", "selectionChange"], ["listView", ""], [4, "ngFor", "ngForOf"], [1, "mx-show-all-btn"], ["mat-button", "", 3, "click", 4, "ngIf"], ["class", "mx-field-list-option", 3, "value", "selected", "disabled", 4, "ngIf"], [1, "mx-field-list-option", 3, "value", "selected", "disabled"], ["matListAvatar", "", "alt", "", "class", "mx-field-list-image", 3, "src", "error", 4, "ngIf"], ["matLine", "", 1, "primary"], ["matLine", "", 1, "secondary"], ["matListAvatar", "", "alt", "", 1, "mx-field-list-image", 3, "src", "error"], ["mat-button", "", 3, "click"], ["aria-hidden", "true"]], template: function FieldComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FieldComponent_div_0_Template, 6, 4, "div", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, FieldComponent_span_2_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵpipe(3, "can");
        ɵngcc0.ɵɵtemplate(4, FieldComponent_ng_template_4_Template, 3, 3, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, FieldComponent_ng_template_6_Template, 18, 17, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, FieldComponent_ng_template_8_Template, 1, 1, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(10, FieldComponent_ng_template_10_Template, 21, 18, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(12, FieldComponent_ng_template_12_Template, 6, 4, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.hideLabel == true) && ctx.field.fieldDisplayType == "HORIZONTAL" && (ctx.field && (ctx.field.permission == null || ctx.field.permission && ɵngcc0.ɵɵpipeBind2(1, 2, ctx.field.permission["subject"], ctx.field.permission["action"]))));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.field.fieldDisplayType != "HORIZONTAL" && (ctx.field && (ctx.field.permission == null || ctx.field.permission && ɵngcc0.ɵɵpipeBind2(3, 5, ctx.field.permission["subject"], ctx.field.permission["action"]))));
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc23.MatLabel, TooltipComponent, ɵngcc23.MatSuffix, ɵngcc12.MatIcon, ParagraphComponent, MultiImageComponent, FileUploaderComponent, ɵngcc9.MatChipList, ɵngcc9.MatChip, ButtonComponent, ɵngcc23.MatFormField, ɵngcc3.NgForOf, ɵngcc23.MatPrefix, ɵngcc24.MatInput, ɵngcc25.DefaultValueAccessor, ɵngcc25.NgControlStatus, ɵngcc25.FormControlDirective, ɵngcc23.MatHint, ɵngcc25.NumberValueAccessor, ɵngcc26.MatSelect, ɵngcc27.MatOption, ɵngcc28.MatAutocompleteTrigger, ɵngcc28.MatAutocomplete, ɵngcc23.MatError, ɵngcc29.MatDateRangeInput, ɵngcc25.NgControlStatusGroup, ɵngcc25.FormGroupDirective, ɵngcc29.MatStartDate, ɵngcc25.FormControlName, ɵngcc29.MatEndDate, ɵngcc29.MatDatepickerToggle, ɵngcc29.MatDateRangePicker, ɵngcc29.MatDatepickerInput, ɵngcc29.MatDatepicker, ɵngcc30.QuillEditorComponent, ɵngcc31.MatCheckbox, ɵngcc32.MatRadioGroup, ɵngcc32.MatRadioButton, ɵngcc33.MatSlider, ɵngcc34.MatSlideToggle, ChipsComponent, ToolbarComponent, ɵngcc19.MatSidenav, ɵngcc14.MatDivider, ɵngcc19.MatSidenavContent, ɵngcc10.MatTooltip, ɵngcc21.MatSelectionList, ɵngcc21.MatListOption, ɵngcc27.MatLine, ɵngcc21.MatListAvatarCssMatStyler, ɵngcc7.MatButton]; }, pipes: function () { return [ɵngcc13.CanPipe, ɵngcc3.JsonPipe, HighlightPipe]; }, styles: [".mx-field-lbl,.mx-field-lbl-for-label{display:block}.mx-field-lbl-horizontal{padding-top:20px}.mx-field-lbl-horizontal-premitive{padding-top:13px}.mx-field-hint-inline{text-align:right}.mx-field-hint-nm{font-size:75%}.mx-field-hint-nm .mx-field-hint-icon{height:1em;width:1em}.mx-field-hint-icon{font-size:100%!important}.mx-field-hint .mat-icon{margin-right:4px!important;vertical-align:middle!important}.mx-field{width:100%}.mx-field-chk-group{padding-top:24px}.mx-field-chk{display:flex;flex-direction:column;margin:0}.mx-field-chk-inner{margin:5px 0}.mx-field-chk-desc{padding-left:22px}.mx-field-radio-group{display:flex;flex-direction:column;margin:0}.mx-field-radio{margin:5px 0}.mx-field-radio-desc{padding-left:26px}.mx-disabled{color:rgba(0,0,0,.54)}.mx-field-slider{width:100%}.mx-field-slider .mat-slider-wrapper{top:16px!important}.mx-field-toggle{height:48px!important}.mx-field-help-modal{margin-left:0!important;width:20px}.mx-field-help-modal-header{font-size:20px;font-weight:500;padding:16px 16px 8px}.mx-field-help-modal-divider{padding:12px 16px 0}.mx-field-help-modal-description{padding:16px 16px 8px}.mx-form-add-more-row{padding:0!important}.mx-field-upload{vertical-align:middle}.mx-field-upload .file-input-text{display:none!important}.mx-field-img{padding-top:5px}.mx-field-showmore-pannel{background-color:#eff0f1;border-radius:3px;margin-bottom:1em!important;overflow:auto;padding:0 8px!important;width:auto}.mx-field-showmore-pannel-content{padding-bottom:5px}.mx-field-showmore-pannel-action{border-top:1px solid #d3d3d3;color:grey;padding-top:5px;text-align:center}.mx-field-horizontal-container{padding:0!important}.mx-field-horizontal-container label#mat-form-field-label-1{color:transparent}.mx-field-horizontal-container .mx-field-nm{margin-top:6px}.mx-field-boolean-success,.mx-success{color:green}.mx-failure,.mx-field-boolean-failure{color:red}.mx-field-boolean{margin-bottom:1.25em!important}.mat-flat-button,.mat-icon-button,.mat-stroked-button,.mx-field-addmore .mat-button{min-width:30px!important}.mx-small-bubble{box-sizing:border-box!important;font-size:10px;line-height:24px;margin-top:12px!important;min-height:24px!important;min-width:unset;padding:0 8px!important}.mx-field-value-wrapper-horizontal{padding-top:8px}.mx-field-value-wrapper-vertical{display:block;padding-bottom:12px}.mx-field-list{padding-bottom:8px}.mx-field-list>div{margin-bottom:1.25em;text-align:center}.mx-field-list .mx-field-list-option[aria-selected=true]{background:rgba(203,197,197,.2)!important}.mx-field-list .mx-field-list-option .mx-field-list-image{border:1px solid #4d4d4d;height:30px!important;width:30px!important}.mx-field-list .mx-field-list-option .primary{margin:5px 0}.mx-field-list .mx-field-list-option .secondary{font-style:italic}.mx-field-list .mx-field-list-option:not(:last-child){border-bottom:1px solid #ebebeb}.mx-field-list .mx-field-list-option:nth-last-child(2){border-bottom:none}.highlight{font-weight:700}.mx-show-all-btn{display:block}.mx-field-paragraph .mx-field{width:auto!important}.mx-field-paragraph .mx-field .mx-field-lbl,.mx-field-paragraph .mx-field .mx-field-value-wrapper-horizontal{display:inline;width:auto!important}.mx-field-lbl-inline{color:rgba(0,0,0,.54);font-size:10px;height:10px;line-height:10px;margin-bottom:8px}.mx-field-lbl-inline .mat-icon-button{color:rgba(0,0,0,.54);height:10px;line-height:8px;width:30px}.mat-slide-toggle{line-height:unset;margin-top:4px}.ql-toolbar.ql-snow{border:none;border-radius:4px 4px 0 0;box-shadow:0 0 1px -1px rgba(0,0,0,.2),0 0 1px 0 rgba(0,0,0,.14),0 0 3px 0 rgba(0,0,0,.12)}.ql-container.ql-snow{border:none;border-radius:0 0 4px 4px;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)!important}.mx-field-editor-error{font-size:75%}.mx-field-editor-error .mat-error{margin-bottom:1.25em;margin-top:.5416666667em}.mx-editor-invalid .ql-toolbar.ql-snow{border:1px solid #f44336;border-bottom:none}.mx-editor-invalid .ql-container.ql-snow{border:1px solid #f44336}.mx-field-chk-group .mx-field-chk:last-child,.mx-field-radio-group{margin-bottom:1.25em!important}.mx-field-radio-horizontal{display:inline-block}.mx-field-radio-horizontal-padding{padding-right:10px}.mx-field-checkbox-horizontal{display:flex;padding-right:10px}.mx-disable,.mx-disable .ql-container,.mx-disable .ql-toolbar{opacity:.38}.mx-disable .mat-list-item-disabled{background:none}.mx-disable.mx-field-list:hover{outline:none}input[type=color],input[type=month],input[type=number],input[type=time],input[type=week]{-webkit-appearance:none;border:none;height:16px}input[type=color]::-webkit-color-swatch-wrapper{padding:0}input[type=color]::-webkit-color-swatch{border:none}"], encapsulation: 2 });
FieldComponent.ctorParameters = () => [
    { type: Router },
    { type: Ability }
];
FieldComponent.propDecorators = {
    sourceType: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    form: [{ type: Input }],
    fieldControl: [{ type: Input }],
    fieldIndex: [{ type: Input }],
    field: [{ type: Input }],
    originalData: [{ type: Input }],
    _displayMode: [{ type: Input }],
    displayMode: [{ type: Input }],
    hideLabel: [{ type: Input }],
    value: [{ type: Input }],
    isAddMore: [{ type: Input }],
    addMorePermission: [{ type: Input }],
    device: [{ type: Input }],
    displayInColumns: [{ type: Input }],
    dependencies: [{ type: Input }],
    row: [{ type: Input }],
    keyMap: [{ type: Input }],
    onDependentFieldChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onFormChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    listView: [{ type: ViewChild, args: ['listView',] }],
    sidenav: [{ type: ViewChild, args: ['sidenav',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FieldComponent, [{
        type: Component,
        args: [{
                selector: 'mx-field',
                template: "<!-- {{field.fieldDisplayType}} -->\n<div \n  class=\"mdc-layout-grid mx-field-horizontal-container\" \n  *ngIf=\"(!(hideLabel == true) && field.fieldDisplayType == 'HORIZONTAL') && (field && (field.permission == null || (field.permission && (field.permission['subject'] | can: field.permission['action']))))\"\n> \n  <div class=\"mdc-layout-grid__inner\">\n    <div class=\"mdc-layout-grid__cell--span-3\">\n      <span \n        *ngIf=\"!isAddMore || (isAddMore && (fieldIndex == 0  || fieldIndex == null)) && field.label\"\n        class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" \n        [ngClass]=\"{'mx-field-lbl-horizontal': (field.type != 'CHECKBOX' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON'), 'mx-field-lbl-horizontal-premitive': !(field.type != 'CHECKBOX' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON')}\">\n        <strong>{{field.label}}</strong>\n        <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n        <!-- <span   \n          *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n          matTooltip=\"{{field.help.message}}\"\n          matTooltipPosition=\"above\"\n          class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n          <mat-icon   \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n          >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n        </span>   -->\n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n          <ng-container \n            *ngTemplateOutlet=\"cfhelpmodal\" \n          ></ng-container>\n        </span>  \n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n          {{field.help.message}}\n        </span>\n      </span>\n    </div> \n    <div class=\"mdc-layout-grid__cell--span-9 mdc-layout-grid--align-right\" [style.width.%]=\"100\">\n      <ng-container *ngTemplateOutlet=\"cffield\"></ng-container>\n    </div>\n  </div>\n</div>\n<span \n  *ngIf=\"(field.fieldDisplayType != 'HORIZONTAL') && (field && (field.permission == null || (field.permission && (field.permission['subject'] | can: field.permission['action']))))\"\n>\n  <ng-container *ngTemplateOutlet=\"cffield\"></ng-container>\n</span>\n\n<ng-template #cffield>\n  <!-- {{field.type}} -->\n  <span *ngIf=\"(!form && !fieldControl) || field.displayMode == 'LABEL'\" [ngSwitch]=\"field.type\" class=\"mx-field mx-field-key-{{field.key}}\" [ngClass]=\"{'mx-field-lbl-horizontal': (field.type == 'LABEL' || field.type == 'BOOLEAN') && field.fieldDisplayType == 'HORIZONTAL', 'mx-field-lbl': (field.type == 'LABEL' || field.type == 'BOOLEAN') && sourceType == 'FORM'}\">\n    <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}} mx-field-lbl-inline\" \n      *ngIf=\"field.fieldDisplayType != 'HORIZONTAL' && field.type != 'PARAGRAPH' && field.type != 'TOGGLE_OPTION' && !hideLabel && field.label\">\n      <strong>{{field.label}}</strong>\n      <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n      <!-- <span  \n        *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n        matTooltip=\"{{field.help.message}}\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n        <mat-icon  \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>   -->\n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n        <ng-container \n          *ngTemplateOutlet=\"cfhelpmodal\" \n        ></ng-container>\n      </span>  \n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n\n    <span *ngSwitchCase=\"'IMAGE'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\">\n      <img \n        class=\"mx-field-image mx-field-image-{{field.key}}\" \n        [src]=\"imagePath\"\n        [style.width.px]=\"field['width'] ? field['width'] : 'auto'\">\n    </span>\n    <span *ngSwitchCase=\"'BOOLEAN'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-input-element mx-field-boolean mx-field-boolean-{{field.key}}\">\n      <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n      <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n    </span>\n    <span *ngSwitchCase=\"'DROPDOWN'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'CHECKBOX'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'RADIO'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'AUTOCOMPLETE'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-form-field mx-field-value mx-field-value-{{field.key}}\">\n      {{field['resolveTextWithKey'] ? getResolveTextWithKey(field) : resolvedValue}}\n    </span>\n    <span *ngSwitchCase=\"'JSON'\">\n      <div class=\"mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-content\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <div *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue> \n              <span (click)=\"displayShortText()\" class=\"mx-field-value\">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayFullText()\" *ngIf=\"displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayShortText()\" *ngIf=\"!displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>\n    <span *ngSwitchCase=\"'PARAGRAPH'\" class=\"mx-field-paragraph\">\n      <!-- <span class=\"mx-field\"> -->\n        <mx-paragraph [field]=\"field\"\n          [sourceType]=\"sourceType\"\n          [sourceIdentifier]=\"sourceIdentifier\"\n          [sourceIndex]=\"sourceIndex\" \n          [widgetArrayIndex]=\"widgetArrayIndex\" \n          [form]=\"form\" \n          [keyMap]=\"keyMap\"\n          [field]=\"field\"\n          [displayMode]=\"displayMode\"\n          [originalData]=\"originalData\"\n          [fieldControl]=\"fieldControl\"\n          [dependencies]=\"dependencies\"\n          (onFieldChange)=\"onParagraphChange($event)\"\n          (onButtonClick)=\"buttonClick($event)\"\n          ></mx-paragraph>\n        <!-- </span> -->\n    </span>\n    <span *ngSwitchCase=\"'MULTI_IMAGE'\">\n      <mx-multi-image [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-multi-image>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'UPLOAD'\">\n      <mx-file-uploader [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-file-uploader>\n    </span>\n    <span *ngSwitchCase=\"'EMAIL'\">\n      <a href=\"mailto:{{getValue(field, value)}}\">{{getValue(field, value)}}</a>\n    </span>\n    <span *ngSwitchDefault>\n      <!-- displayFullText(value) -->\n      <span [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\" [style.text-align]=\"textAlign\" *ngIf=\"!asBubble; else elseAsBubble\">\n        <span *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\" [innerHtml]=\"getValue(field, value)\">\n          ...\n        </span>\n        <ng-template #elseValue>\n          <span (click)=\"displayShortText()\" class=\"mx-field-value\" [innerHtml]=\"getValue(field, value)\">\n          </span>\n        </ng-template> \n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]=\"getValue(field, value)\">\n          <mat-chip class=\"mx-small-bubble\" [color]=\"bubbleColor\" selected>{{getValue(field, value)}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>\n  </span>\n\n  <span *ngIf=\"form && fieldControl && matcher && field.displayMode != 'LABEL' && !isAddMore\" class=\"mx-field\" [ngClass]=\"{'mx-field-lbl-horizontal': (field.type == 'LABEL' || field.type == 'BOOLEAN') && field.fieldDisplayType == 'HORIZONTAL', 'mx-field-lbl-for-label': (field.type == 'LABEL' || field.type == 'BOOLEAN') && sourceType == 'FORM'}\">\n    <ng-container *ngTemplateOutlet=\"cffieldeditable\"></ng-container>\n  </span>\n\n  <span *ngIf=\"form && fieldControl && matcher && field.displayMode != 'LABEL' && isAddMore\" class=\"mx-field\">\n    <div class=\"mdc-layout-grid mx-form-add-more-row\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-{{isAddMore ? addMoreFieldDisplayInColumns : (addMoreFieldDisplayInColumns + addMoreButtonDisplayInColumns)}} mdc-layout-grid__cell--align-middle\">\n          <ng-container *ngTemplateOutlet=\"cffieldeditable\"></ng-container>\n        </div>\n        <div class=\"mdc-layout-grid__cell--span-{{addMoreButtonDisplayInColumns}} mdc-layout-grid__cell--align-middle\" *ngIf=\"isAddMore\">\n          <mx-button\n            *ngIf=\"fieldIndex != form.controls[field.key]['controls'].length - 1\"\n            [disabled]=\"!(addMorePermission == null || (addMorePermission && (addMorePermission['subject'] | can: addMorePermission['action'])))\"\n            [form]=\"form\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"minusButton\"\n            class=\"mx-field-addmore mx-field-addmore-{{field.key}}\"\n            (onClick)=\"removeField(field, fieldIndex)\"\n          ></mx-button>\n          <mx-button\n            *ngIf=\"fieldIndex == form.controls[field.key]['controls'].length - 1\"\n            [form]=\"form\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"plusButton\"\n            class=\"mx-field-addmore mx-field-addmore-{{field.key}}\"\n            (onClick)=\"addField(field)\"\n          ></mx-button>\n        </div>\n      </div>\n    </div>\n  </span>\n</ng-template>\n\n<ng-template #cffieldeditable>\n  <span [ngSwitch]=\"field.type\">\n    <!-- [appearance]=\"appearance | lowercase\"  -->\n    <!-- [appearance]=\"appearance | lowercase\" -->\n    <mat-form-field \n      class=\"mx-field\"\n      [ngClass]=\"{'mx-inbuild-type': (field.type== 'TIME' || field.type== 'COLOR' || field.type== 'WEEK' || field.type== 'MONTH'|| field.type== 'NUMBER'), 'mx-field-horizontal': field.fieldDisplayType == 'HORIZONTAL'}\" \n      *ngIf=\"field.type != 'PARAGRAPH' && field.type != 'MULTI_IMAGE' && field.type != 'CHECKBOX' && field.type != 'TOOLBAR' && field.type != 'CHIPS' && field.type != 'HTML_EDITOR' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'CALENDAR' && field.type != 'JSON' && field.type != 'LABEL'\">\n      <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\">\n        <strong>{{field.label}}</strong>\n        <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n          {{field.help.message}}\n        </span>\n      </mat-label>\n      <!-- <mat-label class=\"mx-field-lbl\" *ngIf=\"(hideLabel == true)\"> \n      </mat-label> -->\n\n      <mat-icon \n        *ngIf=\"field.icon\" \n        matPrefix\n        aria-hidden=\"true\" \n        [attr.aria-label]=\"field.icon\" \n        class=\"mx-field-icon\" \n      >{{field.icon}}</mat-icon>\n\n      <span *ngSwitchCase=\"'TEXT'\">\n        <input  \n          matInput \n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\" \n          [errorStateMatcher]=\"matcher\" \n          [maxLength]=\"maxLength\"\n          [placeholder]=\"field.placeholder\"\n          [disabled]=\"isFieldDisabled\"\n          class=\"mat-input-element mx-field-text mx-field-text-{{field.key}}\"\n          (input)=\"onInputChange($event)\"/>\n      </span>\n      <!-- <input  \n        *ngSwitchCase=\"'HIDDEN'\" \n        matInput \n        type=\"hidden\"\n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n      > -->\n\n      <!-- [mat-autosize]=\"'true'\" -->\n      <textarea\n        *ngSwitchCase=\"'TEXTAREA'\" \n        matInput \n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        rows=\"{{rows}}\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-textarea mx-field-textarea-{{field.key}}\"\n        (input)=\"onInputChange($event)\"> \n      </textarea>\n      <!-- <br/> -->  \n      <mat-hint hintLabel=\"end\" *ngIf=\"field.type == 'TEXTAREA' && maxLength && maxLength > 0 && maxLength != 1000000\"><strong>{{fieldControl.value.length}}</strong> / {{maxLength}} characters</mat-hint>\n\n      <input \n        *ngSwitchCase=\"'COLOR'\" \n        matInput \n        type=\"color\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-color mx-field-color-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'EMAIL'\" \n        matInput \n        type=\"email\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-email mx-field-email-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'MONTH'\" \n        matInput \n        type=\"month\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-month mx-field-month-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'NUMBER'\" \n        matInput \n        type=\"number\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-number mx-field-number-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'PASSWORD'\" \n        matInput \n        type=\"password\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-password mx-field-password-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'TIME'\" \n        matInput \n        type=\"time\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-time mx-field-time-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'WEEK'\" \n        matInput \n        type=\"week\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-week mx-field-week-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <span *ngSwitchCase=\"'DROPDOWN'\">\n        <mat-select\n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\"\n          [errorStateMatcher]=\"matcher\"\n          [multiple]=\"field['multiselect']\"\n          [placeholder]=\"field.placeholder\"\n          [disabled]=\"isFieldDisabled\"\n          class=\"mat-input-element mx-field-dropdown mx-field-dropdown-{{field.key}}\"\n          (selectionChange)=\"onChange($event)\">\n          <mat-option class=\"mat-option\" *ngIf=\"field['defaultOption']\">{{field['defaultOption']}}</mat-option>\n          <mat-option class=\"mat-option\" *ngFor=\"let option of field['options']\" [value]=\"option.key\" [disabled]=\"option.disabled\" >{{option.value}}</mat-option>\n        </mat-select>\n      </span>\n      <span *ngSwitchCase=\"'AUTOCOMPLETE'\"> \n        <input \n          matInput \n          [id]=\"field.key\"  \n          [formControl]=\"fieldControl\" \n          [errorStateMatcher]=\"matcher\"\n          [attr.aria-label]=\"field.label\" \n          [placeholder]=\"field.placeholder\"\n          [matAutocomplete]=\"auto\"\n          class=\"mat-input-element mx-field-autocomplete mx-field-autocomplete-{{field.key}}\"\n          [disabled]=\"isFieldDisabled\"\n          (input)=\"onInputChange($event)\"/>\n        <mat-autocomplete \n          #auto=\"matAutocomplete\"\n          [displayWith]=\"autocompleteDisplayFn\"\n          (optionSelected)=\"onAutocompleteChange($event)\">\n          <mat-option \n            class=\"mat-option mx-field-autocomplete-option mx-field-autocomplete-option-{{field.key}}\" \n            *ngIf=\"field['defaultOption']\">\n            {{field['defaultOption']}}\n          </mat-option>\n          <mat-option \n            class=\"mat-option mx-field-autocomplete-option mx-field-autocomplete-option-{{field.key}}\" \n            *ngFor=\"let option of field['options']\" \n            [value]=\"option\" \n            [disabled]=\"option.disabled\" >\n            <span [innerHTML]=\"option.value | highlight: highlightAutoCompleteText\"></span>\n          </mat-option>\n          <mat-option *ngIf=\"(field['options'])?.length==0 && autoCompleteInputHasValue\">\n            {{field['noRecordFound'] ? field['noRecordFound'] : 'No Result Found'}}\n          </mat-option>\n        </mat-autocomplete>\n      </span> \n      <!-- <mx-button\n        matSuffix\n        *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n        [button]=\"textClearButton\"\n        class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n        (onClick)=\"cleanValue()\"\n      ></mx-button> -->\n      <mx-button\n        matSuffix\n        *ngIf=\"hasFieldNavigate\"\n        [button]=\"routeToButton\"\n        class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n        (onClick)=\"resolvedValue = ''\"\n      ></mx-button> \n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n      <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n      <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n        <mat-icon \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon\">\n          {{field.help.icon ? field.help.icon : 'live_help'}}\n        </mat-icon>\n        <span>{{field.help.message}}</span>\n      </mat-hint>\n\n      <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n    </mat-form-field>\n\n    <span *ngSwitchCase=\"'CALENDAR'\">\n      <!-- [appearance]=\"appearance | lowercase\" -->\n      <mat-form-field \n        class=\"mx-field\" \n        *ngIf=\"dateRange\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\" class=\"mx-field-label\">\n          <strong>{{field.label}}</strong>\n          <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n          <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n            {{field.help.message}}\n          </span>\n        </mat-label>\n        <mat-date-range-input [formGroup]=\"fieldControl\" [rangePicker]=\"datePicker\" >\n          <input \n            matStartDate\n            matInput\n            [id]=\"field.key\" \n            formControlName=\"startDate\" \n            [min]=\"field['minDate']\"\n            [disabled]=\"isFieldDisabled\"\n            [errorStateMatcher]=\"matcher\"\n            placeholder=\"Start date\"\n            (dateChange)=\"onDateChange($event, 'startDate')\">\n          <input \n            matEndDate\n            matInput\n            [id]=\"field.key\" \n            [max]=\"field['maxDate']\"\n            [disabled]=\"isFieldDisabled\"\n            [errorStateMatcher]=\"matcher\"\n            formControlName=\"endDate\" \n            placeholder=\"End date\"\n            (dateChange)=\"onDateChange($event, 'endDate')\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"datePicker\" ></mat-datepicker-toggle>\n        <mat-date-range-picker #datePicker ></mat-date-range-picker>\n\n        <!-- <mx-button\n          matSuffix\n          *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n          [button]=\"textClearButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"cleanValue()\"\n        ></mx-button> -->\n        <mx-button\n          matSuffix\n          *ngIf=\"hasFieldNavigate\"\n          [button]=\"routeToButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"resolvedValue = ''\"\n        ></mx-button> \n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n          <mat-icon \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n      </mat-form-field>\n      <!-- [appearance]=\"appearance | lowercase\" -->\n      <mat-form-field \n        class=\"mx-field\" \n        *ngIf=\"!dateRange\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\" class=\"mx-field-label\">\n          <strong>{{field.label}}</strong>\n          <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n          <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n            {{field.help.message}}\n          </span>  \n        </mat-label>      \n        <input \n            matInput \n            [matDatepicker]=\"picker\"\n            [id]=\"field.key\" \n            [formControl]=\"fieldControl\" \n            [matDatepickerFilter]=\"field['filter']\"\n            [min]=\"field['minDate']\"\n            [max]=\"field['maxDate']\"\n            [errorStateMatcher]=\"matcher\"\n            [disabled]=\"isFieldDisabled\"\n            class=\"mat-input-element mx-field-datepicker mx-field-datepicker-{{field.key}}\" \n            (dateChange)=\"onDateChange($event, '')\" />\n        <mat-datepicker-toggle   matSuffix [for]=\"picker\" ></mat-datepicker-toggle>\n        <mat-datepicker #picker ></mat-datepicker>\n        <!-- <mx-button\n          matSuffix\n          *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n          [button]=\"textClearButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"cleanValue()\"\n        ></mx-button> -->\n        <mx-button\n          matSuffix\n          *ngIf=\"hasFieldNavigate\"\n          [button]=\"routeToButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"resolvedValue = ''\"\n        ></mx-button>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n          <mat-icon \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n      </mat-form-field>\n    </span>\n\n    <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}} mx-field-lbl-inline\" \n      *ngIf=\"!(field.type != 'MULTI_IMAGE' && field.type != 'TOOLBAR' && field.type != 'CHECKBOX' && field.type != 'HTML_EDITOR' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON' && field.type != 'LABEL') && !(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\">\n      <strong>{{field.label}}</strong>\n      <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n      <!-- <span  \n        *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n        matTooltip=\"{{field.help.message}}\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n        <mat-icon  \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>   -->\n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n        <ng-container \n          *ngTemplateOutlet=\"cfhelpmodal\" \n        ></ng-container>\n      </span>  \n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n    <span *ngSwitchCase=\"'HTML_EDITOR'\" >\n      <div class=\"mx-field-nm\">\n        <quill-editor \n          [ngClass]=\"{'mx-editor-invalid': isEditorErrorState(), 'mx-disable': isFieldDisabled}\"  \n          class=\"mx-field-nm\"\n          [styles]=\"{height: height + 'px','margin-bottom': isEditorErrorState() ? 0 : '1.25em'}\"\n          (onEditorChanged)=\"onHtmlEditorChange($event)\"\n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\" \n          [disabled]=\"isFieldDisabled\"\n          [placeholder]=\"field.placeholder\"\n          [readOnly]=\"isFieldDisabled\"\n          [modules]=\"editorOptions\" \n        >\n        </quill-editor>\n        <span *ngIf=\"isEditorErrorState()\" class=\"mx-field-editor-error\">\n          <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n        </span> \n        <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n      </div>\n    </span>\n\n    <span *ngSwitchCase=\"'CHECKBOX'\" class=\"mat-input-element mx-field-chk-group\">\n      <div \n        [ngClass]=\"{'mx-field-checkbox-horizontal': field['displayType'] == 'INLINE'}\"\n        class=\"mx-field-nm\"\n        *ngIf=\"field['displayTemplate'] == 'CLASSIC'; else elseValue\">\n        <span \n          *ngFor=\"let option of field['options']\" \n          class=\"mx-field-chk\">\n          <mat-checkbox \n              class=\"mat-checkbox mat-accent mx-field-chk-inner mx-field-chk-inner-{{field.key}}\"\n              [ngClass]=\"{'mx-field-checkbox-horizontal': field['displayType'] == 'INLINE'}\"\n              [formControl]=\"fieldControl['controls'][option.key]\" \n              [disabled]=\"option.disabled || isFieldDisabled\"\n              (change)=\"onCheckboxChange(option, $event)\">\n            {{option.value}}\n          </mat-checkbox>\n          <i *ngIf=\"option.description\" class=\"mx-field-chk-desc mx-field-chk-desc-{{field.key}}\" [ngClass]=\"{'mx-disabled': option.disabled || isFieldDisabled}\">{{option.description}}</i>\n        </span>\n        <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n      </div>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet=\"cfoptiontemplate\"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase=\"'RADIO'\">\n      <!-- =={{field | json}} -->\n      <mat-radio-group \n        *ngIf=\"field['displayTemplate'] == 'CLASSIC'; else elseValue\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        class=\"mx-field-nm mx-field-radio-group mx-field-radio-group-{{field.key}}\"\n        [ngClass]=\"{'mx-field-radio-horizontal': field['displayType'] == 'INLINE'}\"\n        (change)=\"onRadioChange($event)\"> \n          <span \n          [ngClass]=\"{'mx-field-radio-horizontal-padding': field['displayType'] == 'INLINE'}\"\n          *ngFor=\"let option of field['options']\">\n            <mat-radio-button \n              class=\"mat-radio-button mat-accent mx-field-radio mx-field-radio-{{field.key}}\"\n              [value]=\"option.key\" \n              [disabled]=\"option.disabled || isFieldDisabled\">\n              {{option.value}}\n            </mat-radio-button>\n            <br *ngIf=\"option.description\"/><i *ngIf=\"option.description\" class=\"mx-field-radio-desc\" [ngClass]=\"{'mx-disabled': option.disabled || isFieldDisabled}\">{{option.description}}</i>\n          </span>\n          <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n        </mat-radio-group>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet=\"cfoptiontemplate\"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase=\"'SLIDER'\">\n      <mat-slider\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\"\n        [invert]=\"field['invert']\"\n        [max]=\"field['max']\"\n        [min]=\"field['min']\"\n        [step]=\"field['step']\"\n        [thumbLabel]=\"field['thumbLabel']\"\n        [tickInterval]=\"field['tickInterval']\"\n        [vertical]=\"field['vertical']\"\n        class=\"mat-slider mx-field-slider mx-field-slider-{{field.key}}\"\n        [disabled]=\"isFieldDisabled\"\n        (change)=\"onSliderChange($event)\">\n      </mat-slider>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'TOGGLE_OPTION'\">\n      <mat-slide-toggle \n        [formControl]=\"fieldControl\"\n        [color]=\"field['color']\" \n        [checked]=\"field['checked']\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-slide-toggle mx-field-toggle mx-field-toggle-{{field.key}}\"\n        (change)=\"onToggleChange($event)\">\n        {{field['label']}}\n        <span *ngIf=\"field['description']\">{{field['description']}}</span>\n      </mat-slide-toggle>\n    </span>\n    <span *ngSwitchCase=\"'UPLOAD'\">\n      <mx-file-uploader [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-file-uploader>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'MULTI_IMAGE'\">\n      <mx-multi-image [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-multi-image>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'IMAGE'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\">\n      <img class=\"mx-field-image mx-field-image-{{field.key}}\" [src]=\"imagePath\" \n        [style.width.px]=\"field['width'] ? field['width'] : 'auto'\">\n    </span>\n    <span *ngSwitchCase=\"'BOOLEAN'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-input-element mx-field-boolean mx-field-boolean-{{field.key}}\">\n      <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n      <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n    </span>\n    <span *ngSwitchCase=\"'JSON'\" class=\"mx-field-json mx-field-json-{{field.key}}\">\n      <div class=\"mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-content\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <div *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue>\n              <span (click)=\"displayShortText()\" class=\"mx-field-value\">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayFullText()\" *ngIf=\"displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayShortText()\" *ngIf=\"!displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>  \n    <span *ngSwitchCase=\"'CHIPS'\">\n      <mx-chips [field]=\"field\"  \n        [formControl]=\"fieldControl\"\n        [disabled]=\"isFieldDisabled\"\n        [errorMatcher]=\"matcher\"\n        (onListChange)=\"onChipsListChange($event)\"\n      ></mx-chips>\n    </span>\n    <span *ngSwitchCase=\"'PARAGRAPH'\" class=\"mx-field-paragraph\">\n      <!-- [sourceType]=\"'FORM'\" -->\n      <mx-paragraph [field]=\"field\"\n        [sourceType]=\"sourceType\"\n        [sourceIdentifier]=\"sourceIdentifier\"\n        [sourceIndex]=\"sourceIndex\" \n        [widgetArrayIndex]=\"widgetArrayIndex\"\n        [form]=\"form\" \n        [keyMap]=\"keyMap\"\n        [field]=\"field\"\n        [displayMode]=\"displayMode\"\n        [originalData]=\"originalData\"\n        [fieldControl]=\"fieldControl\"\n        [dependencies]=\"dependencies\"\n        (onFieldChange)=\"onParagraphChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n        ></mx-paragraph>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'TOOLBAR'\">\n      <mx-toolbar [field]=\"field\"></mx-toolbar>\n    </span>\n    <span *ngSwitchDefault>\n      <!-- displayFullText(value) -->\n      <span [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\" [style.text-align]=\"textAlign\" *ngIf=\"!asBubble; else elseAsBubble\">\n        <span class=\"mx-field-short-value\" [innerHtml]=\"resolvedValue\">\n          ...\n        </span>\n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]=\"resolvedValue\">\n          <mat-chip class=\"mx-small-bubble\" [color]=\"bubbleColor\" selected>{{resolvedValue}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>    \n  </span>\n</ng-template>\n\n<ng-template #cfhelplaintext>\n  <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint mx-field-hint-nm\">\n    <mat-icon \n      aria-hidden=\"true\" \n      [attr.aria-label]=\"field.help && field.help.message\" \n      class=\"mx-field-hint-icon\">{{field.help && field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n    {{field.help.message}}\n  </mat-hint>\n</ng-template>\n\n<ng-template #cfhelpmodal>\n    <mat-sidenav #sidenav [position]=\"'end'\" (keydown.escape)=\"close()\" disableClose>\n      <div class=\"mdc-layout-grid mx-crud-search-modal mx-crud-search-modal-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-9 mx-field-help-modal-header\">\n            <strong>{{field.help.title}}</strong>\n          </div>\n          <div class=\"mdc-layout-grid__cell--span-3 mdc-layout-grid--align-right\">\n            <mx-button\n              [sourceIdentifier]=\"field.key\"\n              [sourceIndex]=\"'0'\"\n              [widgetArrayIndex]=\"'0'\"\n              [button]=\"helpModalButton\"\n              align = \"right\"\n              (onClick)=\"close()\"\n            ></mx-button>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-help-modal-divider\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <mat-divider class=\"mx-field-help-divider\"></mat-divider>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-help-modal-description\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            {{field.help.message}}\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n    <br/>\n    <mat-sidenav-content #helpSideNav class=\"mx-field-help-modal\">\n      <span \n        matTooltip=\"Click for help\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\"\n        (click)=\"open()\"\n        >\n        <mat-icon \n          aria-hidden=\"true\"  \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n          (click)=\"open()\"\n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>  \n    </mat-sidenav-content>\n</ng-template>\n\n<ng-template #cfoptiontemplate> \n  <mat-selection-list \n    #listView \n    [multiple]=\"field.type == 'CHECKBOX'\" \n    (selectionChange)=\"onOptionChange($event)\"\n    class=\"mx-field-list mx-field-nm\">\n    <ng-container \n      *ngFor=\"let option of field['options']; let index=index,let last = last\">\n      <mat-list-option \n        *ngIf=\"index < showLess\" \n        [value]=\"option.key\" \n        [selected]=\"field.type == 'CHECKBOX' ? option.checked : option.key == fieldControl.value\"\n        [disabled]=\"option.disabled || isFieldDisabled\"\n        class=\"mx-field-list-option\">\n        <img \n          *ngIf=\"option.image || field['defaultImageUrl']\" \n          matListAvatar \n          [src]=\"option.image\" \n          (error)=\"onListImageLoadError($event)\"  \n          alt=\"\" \n          class=\"mx-field-list-image\"/>\n          <h3 matLine class=\"primary\">\n            {{option.value}}\n          </h3>\n          <p matLine class=\"secondary\">\n            <span>{{option.description}}</span>\n          </p>\n        <mat-divider *ngIf=\"!last\"></mat-divider>\n      </mat-list-option>\n    </ng-container>\n  </mat-selection-list>\n  <span class=\"mx-show-all-btn\">\n    <button  mat-button (click)=\"onShowAllOptions()\" *ngIf=\"showLess < field['options'].length\">\n      {{field['showAllLabel'] ? field['showAllLabel'] : 'Show All'}}\n      <mat-icon aria-hidden=\"true\">keyboard_arrow_down</mat-icon>\n    </button>\n  </span>\n  <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-field-lbl,.mx-field-lbl-for-label{display:block}.mx-field-lbl-horizontal{padding-top:20px}.mx-field-lbl-horizontal-premitive{padding-top:13px}.mx-field-hint-inline{text-align:right}.mx-field-hint-nm{font-size:75%}.mx-field-hint-nm .mx-field-hint-icon{height:1em;width:1em}.mx-field-hint-icon{font-size:100%!important}.mx-field-hint .mat-icon{margin-right:4px!important;vertical-align:middle!important}.mx-field{width:100%}.mx-field-chk-group{padding-top:24px}.mx-field-chk{display:flex;flex-direction:column;margin:0}.mx-field-chk-inner{margin:5px 0}.mx-field-chk-desc{padding-left:22px}.mx-field-radio-group{display:flex;flex-direction:column;margin:0}.mx-field-radio{margin:5px 0}.mx-field-radio-desc{padding-left:26px}.mx-disabled{color:rgba(0,0,0,.54)}.mx-field-slider{width:100%}.mx-field-slider .mat-slider-wrapper{top:16px!important}.mx-field-toggle{height:48px!important}.mx-field-help-modal{margin-left:0!important;width:20px}.mx-field-help-modal-header{font-size:20px;font-weight:500;padding:16px 16px 8px}.mx-field-help-modal-divider{padding:12px 16px 0}.mx-field-help-modal-description{padding:16px 16px 8px}.mx-form-add-more-row{padding:0!important}.mx-field-upload{vertical-align:middle}.mx-field-upload .file-input-text{display:none!important}.mx-field-img{padding-top:5px}.mx-field-showmore-pannel{background-color:#eff0f1;border-radius:3px;margin-bottom:1em!important;overflow:auto;padding:0 8px!important;width:auto}.mx-field-showmore-pannel-content{padding-bottom:5px}.mx-field-showmore-pannel-action{border-top:1px solid #d3d3d3;color:grey;padding-top:5px;text-align:center}.mx-field-horizontal-container{padding:0!important}.mx-field-horizontal-container label#mat-form-field-label-1{color:transparent}.mx-field-horizontal-container .mx-field-nm{margin-top:6px}.mx-field-boolean-success,.mx-success{color:green}.mx-failure,.mx-field-boolean-failure{color:red}.mx-field-boolean{margin-bottom:1.25em!important}.mat-flat-button,.mat-icon-button,.mat-stroked-button,.mx-field-addmore .mat-button{min-width:30px!important}.mx-small-bubble{box-sizing:border-box!important;font-size:10px;line-height:24px;margin-top:12px!important;min-height:24px!important;min-width:unset;padding:0 8px!important}.mx-field-value-wrapper-horizontal{padding-top:8px}.mx-field-value-wrapper-vertical{display:block;padding-bottom:12px}.mx-field-list{padding-bottom:8px}.mx-field-list>div{margin-bottom:1.25em;text-align:center}.mx-field-list .mx-field-list-option[aria-selected=true]{background:rgba(203,197,197,.2)!important}.mx-field-list .mx-field-list-option .mx-field-list-image{border:1px solid #4d4d4d;height:30px!important;width:30px!important}.mx-field-list .mx-field-list-option .primary{margin:5px 0}.mx-field-list .mx-field-list-option .secondary{font-style:italic}.mx-field-list .mx-field-list-option:not(:last-child){border-bottom:1px solid #ebebeb}.mx-field-list .mx-field-list-option:nth-last-child(2){border-bottom:none}.highlight{font-weight:700}.mx-show-all-btn{display:block}.mx-field-paragraph .mx-field{width:auto!important}.mx-field-paragraph .mx-field .mx-field-lbl,.mx-field-paragraph .mx-field .mx-field-value-wrapper-horizontal{display:inline;width:auto!important}.mx-field-lbl-inline{color:rgba(0,0,0,.54);font-size:10px;height:10px;line-height:10px;margin-bottom:8px}.mx-field-lbl-inline .mat-icon-button{color:rgba(0,0,0,.54);height:10px;line-height:8px;width:30px}.mat-slide-toggle{line-height:unset;margin-top:4px}.ql-toolbar.ql-snow{border:none;border-radius:4px 4px 0 0;box-shadow:0 0 1px -1px rgba(0,0,0,.2),0 0 1px 0 rgba(0,0,0,.14),0 0 3px 0 rgba(0,0,0,.12)}.ql-container.ql-snow{border:none;border-radius:0 0 4px 4px;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)!important}.mx-field-editor-error{font-size:75%}.mx-field-editor-error .mat-error{margin-bottom:1.25em;margin-top:.5416666667em}.mx-editor-invalid .ql-toolbar.ql-snow{border:1px solid #f44336;border-bottom:none}.mx-editor-invalid .ql-container.ql-snow{border:1px solid #f44336}.mx-field-chk-group .mx-field-chk:last-child,.mx-field-radio-group{margin-bottom:1.25em!important}.mx-field-radio-horizontal{display:inline-block}.mx-field-radio-horizontal-padding{padding-right:10px}.mx-field-checkbox-horizontal{display:flex;padding-right:10px}.mx-disable,.mx-disable .ql-container,.mx-disable .ql-toolbar{opacity:.38}.mx-disable .mat-list-item-disabled{background:none}.mx-disable.mx-field-list:hover{outline:none}input[type=color],input[type=month],input[type=number],input[type=time],input[type=week]{-webkit-appearance:none;border:none;height:16px}input[type=color]::-webkit-color-swatch-wrapper{padding:0}input[type=color]::-webkit-color-swatch{border:none}"]
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: ɵngcc2.Ability }]; }, { onDependentFieldChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onFormChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], displayMode: [{
            type: Input
        }], _displayMode: [{
            type: Input
        }], sourceType: [{
            type: Input
        }], sourceIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], form: [{
            type: Input
        }], fieldControl: [{
            type: Input
        }], fieldIndex: [{
            type: Input
        }], field: [{
            type: Input
        }], originalData: [{
            type: Input
        }], hideLabel: [{
            type: Input
        }], value: [{
            type: Input
        }], isAddMore: [{
            type: Input
        }], addMorePermission: [{
            type: Input
        }], device: [{
            type: Input
        }], displayInColumns: [{
            type: Input
        }], dependencies: [{
            type: Input
        }], row: [{
            type: Input
        }], keyMap: [{
            type: Input
        }], listView: [{
            type: ViewChild,
            args: ['listView']
        }], sidenav: [{
            type: ViewChild,
            args: ['sidenav']
        }] }); })();

// export * from './field-layout/field-layout.component';
// export * from './field-layout/field-horizontal-layout/field-horizontal-layout.component';
// export * from './field-layout/field-inline-layout/field-inline-layout.component';
// export * from './field-layout/field-vertical-layout/field-vertical-layout.component';

class ListComponent {
    constructor(ability, breakpointObserver) {
        this.ability = ability;
        this.breakpointObserver = breakpointObserver;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.onPageChange = new EventEmitter();
        this.onSortChange = new EventEmitter();
        this._expanded = false;
        this.dataSource = new MatTableDataSource();
        this.cellCount = 12;
        this.isCustomTemplate = false;
        this.displayVertical = false;
        this.formIndex = -1;
        this.inlineEditButtons = new Array();
        this.hasDisplayActions = false;
        this.isInlineEditable = false;
        this.inlineButtonSize = "default" /* DEFAULT */;
        this.childRows = new Map();
        this.displayModes = new Array();
        this.columnNames = new Array();
        this.columnConfigs = new Array();
        this.selection = new SelectionModel(true, []);
        this.hideCard = false;
        this.hideHeader = false;
        this.hideFooter = false;
        this.pageSizeOptions = [5, 10, 25, 100];
        this.rowCount = 0;
        this.limit = 0;
        this.rowColors = new Array();
        this.cellColors = new Array();
        this.showCard = false;
        this.selectableAdded = false;
        this.sortDirection = 'asc';
        this.tooltipPosition = { 'top': 0, 'left': 0 };
        AbilityUtils.setAbility(this.ability);
    }
    get listConfig() {
        return this._listConfig;
    }
    set listConfig(_listConfig) {
        this._listConfig = _listConfig;
        this.setColumnNames();
        this.setDetailColumnCount();
        this.setCardVisibility();
    }
    get record() {
        return this._record;
    }
    set record(_record) {
        // console.log("-------------->")
        // console.log(_record);
        // console.log(this._record);
        // console.log("<--------------")
        if (!this.parent || (this.parent && JSON.stringify(_record) != JSON.stringify(this._record))) {
            this._record = _record;
            this.init();
            this.setCardVisibility();
            this.showRowEditable();
        }
    }
    get listReset() {
        return this._listReset;
    }
    set listReset(_listReset) {
        this._listReset = _listReset;
        if (this._listReset) {
            this.resetInlineEditButton('inlineEditButton', 'Edit', 'edit');
        }
    }
    get expanded() {
        return this._expanded;
    }
    set expanded(_expanded) {
        this._expanded = _expanded;
    }
    set contentPage(pagination) {
        this.dataSource.paginator = pagination;
    }
    set contentSort(sort) {
        this.dataSource.sort = sort;
    }
    ngOnInit() {
    }
    init() {
        this.getLayout();
        this.setPageSize();
        if (this._record === undefined) {
            this._record = { total: 10, pageNo: 1, rows: [] };
        }
        if (this._record && this._record.rows) {
            if (this._record.rows.length != this.rowCount || this._record.rows.length == 0) {
                this._record.rows = [...this._record.rows];
                this.dataSource.data = this._record.rows;
            }
        }
        this.resetInlineEditButton('inlineEditButton', 'Edit', 'edit');
        this.populateAllChilds();
        this.showRowEditable();
        this.initCommonFormGroup();
        this.setColors();
        this.setIconPosition();
        this.setFilterBar();
        this.setCustomTemplate();
        ListUtils.setCustomLayouts(this.listConfig);
    }
    setCustomTemplate() {
        // let hasCustomColumn: boolean = false;
        //  check if we have column template
        // if (!CollectionUtils.isEmpty(this._listConfig?.columns))  {
        //   this._listConfig?.columns.forEach(column => {
        //     if (column.template && column.template.layout) {
        //       hasCustomColumn = true;
        //     }
        //   });
        // }
        var _a, _b, _c;
        if (((_c = (_b = (_a = this._listConfig) === null || _a === void 0 ? void 0 : _a.row) === null || _b === void 0 ? void 0 : _b.template) === null || _c === void 0 ? void 0 : _c.layout) && !(this.isMobile && this._listConfig.mobile && this._listConfig.mobile.rowHeight)) {
            this.isCustomTemplate = true;
        }
    }
    sticky() {
        let header1 = document.querySelectorAll(".mat-toolbar");
        let header = document.getElementById("mxMobileSearchStrip");
        if (header) {
            let sticky = header.offsetTop;
            if (window.pageYOffset > sticky) {
                header.classList.add("sticky");
                header1.forEach((el) => {
                    el.classList.add("sticky-header");
                });
            }
            else {
                header.classList.remove("sticky");
                header1.forEach((el) => {
                    el.classList.remove("sticky-header");
                });
            }
        }
    }
    onScrolled(event) {
    }
    setFilterBar() {
        if (!this._listConfig.staticList) {
            this._listConfig.staticList = {};
        }
        if (this._listConfig.staticList.hasOnPageFilter && !this._listConfig.hasColumnSelection) {
            this.contentFilterColumnSpan = 12;
        }
        if (!this._listConfig.staticList.hasOnPageFilter && this._listConfig.hasColumnSelection) {
            this.columnSelectionColumnSpan = 12;
        }
    }
    setPageSize() {
        if (this._listConfig.pagination == "ALL" /* ALL */) {
            this.limit = this._record && this._record.rows ? this._record.rows.length : 10;
        }
        else {
            if (this._listConfig.pageSize) {
                this.limit = this._listConfig.pageSize;
            }
        }
    }
    setIconPosition() {
        this.iconPosition = "BEFORE_TITLE" /* BEFORE_TITLE */;
        if (this._listConfig.header && this._listConfig.header.icon && this._listConfig.header.icon.position) {
            this.iconPosition = this._listConfig.header.icon.position;
        }
    }
    getFilterField() {
        this.filterField = {
            key: "pageFilter",
            label: "Filter",
            type: "TEXT" /* TEXT */,
            icon: "search",
            appearance: "STANDARD" /* STANDARD */,
            isReadOnly: false,
            fieldDisplayType: "INLINE" /* INLINE */,
            placeholder: "Type to display filtered list",
            value: ""
        };
        return this.filterField;
    }
    getColumnSelectorField() {
        this.columnSelectorField = ListUtils.getColumnSelectorField(this._listConfig);
        return this.columnSelectorField;
    }
    updateColumnDisplay(event) {
        console.log(event);
        for (let column of this._listConfig.columns) {
            if (event.value.indexOf(ListUtils.getColumnKey(column)) > -1) {
                column.show = true;
            }
            else {
                column.show = false;
            }
        }
        this.setColumnNames();
        this.setDetailColumnCount();
    }
    inlinEditButton(identifier, label, icon) {
        let buttonConfig = {
            identifier: identifier,
            type: "FLAT" /* FLAT */,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            onlyIcon: false
        };
        return buttonConfig;
    }
    getColumnLabel(column) {
        return ListUtils.getColumnLabel(column);
    }
    getColumnKey(column) {
        return ListUtils.getColumnKey(column);
    }
    resetInlineEditButton(identifier, label, icon) {
        for (let cIndex = 0; cIndex < this.columnConfigs.length; cIndex++) {
            if (!CollectionUtils.isEmpty(this._listConfig.actions)) {
                for (let action of this._listConfig.actions) {
                    if (action.permission == null || (this.ability.can(action.permission['action'], action.permission['subject']))) {
                        this.hasDisplayActions = true;
                        break;
                    }
                }
            }
            if (this.hasDisplayActions) {
                for (let field of this.columnConfigs[cIndex].fields) {
                    if (FieldUtils.readOnlyField().indexOf(field.type) > -1) { }
                    else {
                        this.isInlineEditable = true;
                        break;
                    }
                }
            }
        }
        this.inlineEditButtons = new Array();
        if (this._record && this._record.rows) {
            for (let index = 0; index < this._record.rows.length; index++) {
                this.inlineEditButtons.push(this.inlinEditButton(identifier, label, icon));
                this.displayModes[index] = "VIEW" /* VIEW */;
            }
        }
        this.formIndex = -1;
        this.setColumnNames();
    }
    showRowEditable() {
        if (!CollectionUtils.isEmpty(this._listConfig.actions)) {
            this.inlineButtonSize = this._listConfig.actions[0].size;
        }
        if (this._record && this._record.rows) {
            for (let index = 0; index < this._record.rows.length; index++) {
                if (this._record.rows[index]['showRowEditable']) {
                    this.setRowEditablity(index);
                }
            }
        }
    }
    setRowEditablity(index) {
        if (this.formIndex != -1 && this.formIndex != index) {
            this.inlineEditButtons[this.formIndex].identifier = 'inlineEditButton';
            this.inlineEditButtons[this.formIndex].label = 'Edit';
            this.inlineEditButtons[this.formIndex].icon = 'edit';
            this.inlineEditButtons[this.formIndex].size = this.inlineButtonSize;
            this.formIndex = -1;
        }
        if (this.inlineEditButtons[index] && this.inlineEditButtons[index].label == 'Edit') {
            this.inlineEditButtons[index].identifier = 'cancelInlineStaticList';
            this.inlineEditButtons[index].label = 'Cancel';
            this.inlineEditButtons[index].icon = 'close';
            this.inlineEditButtons[index].size = this.inlineButtonSize;
            if (this._record && this._record.rows) {
                for (let rIndex = 0; rIndex < this._record.rows.length; rIndex++) {
                    this.displayModes[rIndex] = "VIEW" /* VIEW */;
                    if (rIndex != index) {
                        this.inlineEditButtons[rIndex].identifier = 'inlineEditButton';
                        this.inlineEditButtons[rIndex].label = 'Edit';
                        this.inlineEditButtons[rIndex].icon = 'edit';
                        this.inlineEditButtons[rIndex].size = this.inlineButtonSize;
                    }
                }
                if (this._record.rows[index]['formDisplayMode']) {
                    this.displayModes[index] = this._record.rows[index]['formDisplayMode'];
                }
                else {
                    this.displayModes[index] = "EDIT" /* EDIT */;
                }
            }
            this.initFormGroup(index);
            this.formIndex = index;
            this._listReset = false;
        }
        else {
            this.inlineEditButtons[index].identifier = 'inlineEditButton';
            this.inlineEditButtons[index].label = 'Edit';
            this.inlineEditButtons[index].icon = 'edit';
            this.inlineEditButtons[index].size = this.inlineButtonSize;
            this.formIndex = -1;
        }
        let inlineButtonTemp = this.inlineEditButtons[index];
        this.inlineEditButtons[index] = undefined;
        setTimeout(() => this.inlineEditButtons[index] = inlineButtonTemp, 100);
    }
    populateAllChilds() {
        if (this._record && this._record.rows && this._record.rows.length > 0) {
            for (let rIndex = 0; rIndex < this._record.rows.length; rIndex++) {
                this.childRows[rIndex] = this.getChildRows(this._record.rows[rIndex]);
            }
        }
    }
    getChildRows(row) {
        if (this._listConfig && this._listConfig.child && row) {
            let data = this._listConfig.child.recordIdentifier ? row[this._listConfig.child.recordIdentifier] : row;
            if (this._listConfig.child.type == "LIST" /* LIST */) {
                if (data) {
                    let childData;
                    if (data instanceof Array) {
                        childData = data;
                    }
                    else {
                        childData = new Array();
                        childData.push(data);
                    }
                    let record = {
                        pageNo: 1,
                        total: childData.length,
                        rows: childData
                    };
                    return record;
                }
            }
            else {
                return data;
            }
        }
    }
    getValue(colIndex, cFieldIndex, row, value) {
        try {
            value = eval("row." + this.columnConfigs[colIndex].fields[cFieldIndex].key);
        }
        catch (e) { }
        return value;
    }
    updateFilter(field) {
        const filterValue = field.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    }
    initFormGroup(cnt) {
        let fieldControls = {};
        let row = this.getCurrentRecord(cnt);
        KeyMapUtils.setOptionssUsingValues(this.keyMap, false, "LIST" /* LIST */, this._listConfig, row);
        for (let column of this.columnConfigs) {
            for (let field of column.fields) {
                let formField = { field: field, addMore: false };
                if (this._listConfig.uniqueKeys && this._listConfig.uniqueKeys.indexOf(formField.field.key) > -1) {
                    formField.field.isUnique = true;
                }
                FormUtils.initFieldGroup(fieldControls, formField, null, row, this.displayModes[cnt]);
            }
        }
        this.form = new FormGroup(fieldControls);
        this.formIndex = cnt;
    }
    initCommonFormGroup() {
        let commonFieldControls = {};
        FormUtils.initFieldGroup(commonFieldControls, { field: this.getFilterField(), addMore: false }, {}, {}, "EDIT" /* EDIT */);
        FormUtils.initFieldGroup(commonFieldControls, { field: this.getColumnSelectorField(), addMore: false }, {}, {}, "EDIT" /* EDIT */);
        this.commonListForm = new FormGroup(commonFieldControls);
    }
    getCurrentRecord(cnt) {
        let record = {};
        if (this.dataSource && this.dataSource['_renderData'] && this.dataSource['_renderData']['_value'] && this.dataSource['_renderData']['_value'][cnt]) {
            record = this.dataSource['_renderData']['_value'][cnt];
        }
        else if (this._record && this._record['rows'] && this._record['rows'][cnt]) {
            record = this._record['rows'][cnt];
        }
        return record;
    }
    getObjectTree(currentRow) {
        if (this._listConfig && this._listConfig.uniqueKeys && this._listConfig.uniqueKeys.length > 0) {
            let keys = this._listConfig.uniqueKeys;
            let values = new Array();
            keys.forEach(key => values.push(currentRow[key]));
            let objectTree = {
                parent: {
                    key: values
                }
            };
            if (this.parent) {
                objectTree.hierarchyUp = JSON.parse(JSON.stringify(this.parent));
            }
            return objectTree;
        }
        else {
            return null;
        }
    }
    /** Whether the number of selected elements matches the total number of rows. */
    isAllSelected() {
        const numSelected = this.selection.selected.length;
        const numRows = this.dataSource.data.length;
        return numSelected === numRows;
    }
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    masterToggle() {
        this.isAllSelected() ?
            this.selection.clear() :
            this.dataSource.data.forEach(row => this.selection.select(row));
    }
    /** The label for the checkbox on the passed row */
    checkboxLabel(row) {
        if (!row) {
            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;
        }
        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;
    }
    setCardVisibility() {
        this.hideCard = false;
        if (this._listConfig.hideCard || (this._listConfig.hideHeader && this._listConfig.hideFooter)) {
            this.hideCard = true;
        }
        if (this.hideCard == false) {
            if (this._record && this._record.rows && this._record.rows.length == this._record.total && (StringUtils.isEmpty(this._listConfig.header) && !this._listConfig.description)) {
                this.hideCard = true;
            }
        }
        this.hideHeader = false;
        if (((this._listConfig.header && StringUtils.isEmpty(this._listConfig.header.title)) && StringUtils.isEmpty(this._listConfig.description)) || this._listConfig.hideHeader) {
            this.hideHeader = true;
        }
        this.hideFooter = false;
        if ((this._record && this._record.rows && this._record.rows.length == this._record.total) || this._listConfig.hideFooter) {
            this.hideFooter = true;
        }
    }
    setColumnNames() {
        this.columnNames = new Array();
        this.columnConfigs = new Array();
        this.totalDispalyableWidth = 0;
        if (this._listConfig.selectable) {
            this.columnNames.push('select');
            if (!this._listConfig.header) {
                this._listConfig.header = { title: "" };
            }
            if (!this._listConfig.header || CollectionUtils.isEmpty(this._listConfig.header.actions)) {
                this._listConfig.header.actions = new Array();
            }
            let selectableExist = false;
            // for (let button of this._listConfig.header.actions) { 
            //   if ((<Button>button).identifier == "listCrudSelectionButton") {
            //     selectableExist = true;
            //   }
            // }
            // if (!selectableExist) {
            //   this._listConfig.header.actions.unshift(this.selectableButton("listCrudSelectionButton", this._listConfig.selectable.label, this._listConfig.selectable.icon))
            // } 
            if (!this.selectableAdded) {
                this._listConfig.header.actions.unshift(...this._listConfig.selectable);
                this.selectableAdded = true;
            }
        }
        if (this._listConfig.columns && this._listConfig.columns.length > 0) {
            this._listConfig.columns.filter(column => column.show == true).forEach(column => {
                let hasDisplayableField = false;
                for (let field of column.fields) {
                    if (field.permission == null || this.ability.can(field.permission['action'], field.permission['subject'])) {
                        hasDisplayableField = true;
                    }
                }
                if (hasDisplayableField) {
                    this.columnNames.push(ListUtils.getColumnKey(column));
                    this.columnConfigs.push(column);
                    this.totalDispalyableWidth += column.width;
                }
            });
        }
        if (this.hasDisplayActions) {
            this.columnNames.push('action');
            this.totalDispalyableWidth += this._listConfig.actionWidth;
        }
    }
    setDetailColumnCount() {
        this.childColumnCount = this.columnConfigs.length + (this._listConfig.actions && this._listConfig.actions.length > 0 ? 1 : 0) + (this._listConfig.selectable ? 1 : 0);
    }
    setColors() {
        if (this._record && this._record.rows) {
            for (let rIndex = 0; rIndex < this._record.rows.length; rIndex++) {
                if (CollectionUtils.isEmpty(this.rowColors[rIndex])) {
                    this.rowColors.push({ bgColor: "", textColor: "" });
                }
                let rowColor = this.rowColors[rIndex];
                if (this._listConfig.rowBgColor) {
                    rowColor.bgColor = this._listConfig.rowBgColor(this._record.rows[rIndex]);
                }
                if (this._listConfig.rowTextColor) {
                    rowColor.textColor = this._listConfig.rowTextColor(this._record.rows[rIndex]);
                }
                for (let cIndex = 0; cIndex < this.columnConfigs.length; cIndex++) {
                    if (CollectionUtils.isEmpty(this.cellColors[rIndex])) {
                        this.cellColors.push(new Array());
                    }
                    if (CollectionUtils.isEmpty(this.cellColors[rIndex][cIndex])) {
                        this.cellColors[rIndex][cIndex] = { bgColor: "", textColor: "" };
                    }
                    let cellColor = this.cellColors[rIndex][cIndex];
                    if (StringUtils.isEmpty(cellColor.bgColor)) {
                        cellColor.bgColor = rowColor.bgColor;
                    }
                    if (this.columnConfigs[cIndex].bgColor) {
                        cellColor.bgColor = this.columnConfigs[cIndex].bgColor(this._record.rows[rIndex]);
                    }
                    if (StringUtils.isEmpty(cellColor.textColor)) {
                        cellColor.textColor = rowColor.textColor;
                    }
                    if (this.columnConfigs[cIndex].textColor) {
                        cellColor.textColor = this.columnConfigs[cIndex].textColor(this._record.rows[rIndex]);
                    }
                }
            }
        }
    }
    selectableButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "FLAT" /* FLAT */,
            onlyIcon: false
        };
    }
    fieldChange(fieldChange) {
        console.log(fieldChange);
        this.onFieldChange.emit(fieldChange);
        this.formChange(this.form);
        //  if a field options are dependent on me, then reload its options 
        fieldChange.fieldKey;
        this._listConfig.columns.forEach(column => {
            column.fields.forEach(field => {
                if (field.optionDependsOn == fieldChange.fieldKey) {
                    let row = FormUtils.getRawValue(this.form);
                    //let row = this.getCurrentRecord(fieldChange.sourceIndex);
                    KeyMapUtils.setOptionssUsingValues(this.keyMap, false, "LIST" /* LIST */, this._listConfig, row);
                }
            });
        });
    }
    formChange(form) {
        console.log(form);
        if (form == undefined) {
            this.onFormChange.emit(this.form);
        }
        else {
            this.onFormChange.emit(form);
        }
    }
    buttonClick(action) {
        console.log(action);
        if (!CollectionUtils.isEmpty(this._listConfig.selectable)) {
            this._listConfig.selectable.forEach(selectButton => {
                if (action.action == selectButton.identifier) {
                    action.data = this.selection.selected;
                }
            });
        }
        if (action.action == "row_expand" /* ROW_EXPAND */ || action.action == "row_collapse" /* ROW_COLLAPSE */) {
        }
        else {
            action.event.stopPropagation();
        }
        this.onButtonClick.emit(action);
    }
    getLayout() {
        this.breakpointSubscription = this.breakpointObserver.observe([
            Breakpoints.XSmall,
            Breakpoints.Small,
            Breakpoints.Medium,
            Breakpoints.Large,
            Breakpoints.XLarge
        ]).subscribe((state) => {
            if (state.breakpoints[Breakpoints.XSmall]) {
                this.isMobile = true;
                this.cellCount = this.listConfig.mobile && this.listConfig.mobile.cellCount ? this.listConfig.mobile.cellCount : 4;
                this.hideCard = true;
                ListUtils.getMobileConfig(this.listConfig);
                console.log('Matches XSmall viewport');
            }
            if (state.breakpoints[Breakpoints.Small]) {
                this.isTablet = true;
                console.log('Matches Small viewport');
            }
            if (state.breakpoints[Breakpoints.Medium]) {
                this.isDesktop = true;
                console.log('Matches Medium  viewport');
            }
            if (state.breakpoints[Breakpoints.Large]) {
                this.isDesktop = true;
                console.log('Matches Large viewport');
            }
            if (state.breakpoints[Breakpoints.XLarge]) {
                this.isDesktop = true;
                console.log('Matches XLarge viewport');
            }
            this.setCustomTemplate();
            this.resetVerticalDisplay();
        });
    }
    rowClick(row, rowIndex, context, event) {
        console.log(row);
        console.log(rowIndex);
        console.log(context);
        let actionButton = null;
        if (!CollectionUtils.isEmpty(this._listConfig.actions)) {
            this._listConfig.actions.forEach(action => {
                if (action.identifier == this._listConfig.rowAction) {
                    actionButton = action;
                }
            });
            if (actionButton != null) {
                let actionObj = ButtonUtils.getAction(this._listConfig.identifier, rowIndex, this.widgetArrayIndex, actionButton.identifier, this.parent, event, row, context, null);
                this.onButtonClick.emit(actionObj);
            }
        }
    }
    resetVerticalDisplay() {
        // if (!this.isCustomTemplate && !(this.isMobile && this._listConfig.mobile && this._listConfig.mobile.rowHeight)) {
        if (this.isMobile && !(this._listConfig.mobile && this._listConfig.mobile.rowHeight) && !this.isCustomTemplate) {
            this.displayVertical = true;
        }
    }
    getButton(cell) {
        let buttons = new Array();
        if (!CollectionUtils.isEmpty(cell) && !CollectionUtils.isEmpty(cell.controls)) {
            buttons = cell.controls.filter(control => control.type == "BUTTON" /* BUTTON */).map(control => control.control);
        }
        return buttons;
    }
    onHover(event, rowIndex, row) {
        this.hoverRowData = row;
        this.hoverRowIndex = rowIndex;
        this.tooltipPosition.top = event.y;
        this.tooltipPosition.left = event.x;
    }
    ngOnDestroy() {
        if (this.breakpointSubscription) {
            this.breakpointSubscription.unsubscribe();
        }
    }
}
ListComponent.ɵfac = function ListComponent_Factory(t) { return new (t || ListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability), ɵngcc0.ɵɵdirectiveInject(ɵngcc35.BreakpointObserver)); };
ListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ListComponent, selectors: [["mx-list"]], viewQuery: function ListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatPaginator, true);
        ɵngcc0.ɵɵviewQuery(MatSort, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentPage = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentSort = _t.first);
    } }, inputs: { listConfig: "listConfig", _listConfig: "_listConfig", record: "record", _record: "_record", listReset: "listReset", _listReset: "_listReset", expanded: "expanded", sourceIdentifier: "sourceIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", originalData: "originalData", parent: "parent", disabled: "disabled", keyMap: "keyMap", expandRowIndex: "expandRowIndex" }, outputs: { onFormChange: "onFormChange", onFieldChange: "onFieldChange", onButtonClick: "onButtonClick", onPageChange: "onPageChange", onSortChange: "onSortChange" }, decls: 2, vars: 0, template: function ListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, "list works!");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""], encapsulation: 2, data: { animation: [
            trigger('detailExpand', [
                state('collapsed', style({ height: '0px', minHeight: '0' })),
                state('expanded', style({ height: '*' })),
                transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
            ]),
        ] } });
ListComponent.ctorParameters = () => [
    { type: Ability },
    { type: BreakpointObserver }
];
ListComponent.propDecorators = {
    _listConfig: [{ type: Input }],
    listConfig: [{ type: Input }],
    _record: [{ type: Input }],
    record: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    originalData: [{ type: Input }],
    parent: [{ type: Input }],
    _listReset: [{ type: Input }],
    listReset: [{ type: Input }],
    disabled: [{ type: Input }],
    keyMap: [{ type: Input }],
    onFormChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    onPageChange: [{ type: Output }],
    onSortChange: [{ type: Output }],
    expanded: [{ type: Input }],
    expandRowIndex: [{ type: Input }],
    contentPage: [{ type: ViewChild, args: [MatPaginator, { static: false },] }],
    contentSort: [{ type: ViewChild, args: [MatSort, { static: false },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ListComponent, [{
        type: Component,
        args: [{
                selector: 'mx-list',
                template: "<p>list works!</p>\n",
                animations: [
                    trigger('detailExpand', [
                        state('collapsed', style({ height: '0px', minHeight: '0' })),
                        state('expanded', style({ height: '*' })),
                        transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
                    ]),
                ],
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }, { type: ɵngcc35.BreakpointObserver }]; }, { onFormChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], onPageChange: [{
            type: Output
        }], onSortChange: [{
            type: Output
        }], listConfig: [{
            type: Input
        }], _listConfig: [{
            type: Input
        }], record: [{
            type: Input
        }], _record: [{
            type: Input
        }], listReset: [{
            type: Input
        }], _listReset: [{
            type: Input
        }], expanded: [{
            type: Input
        }], contentPage: [{
            type: ViewChild,
            args: [MatPaginator, { static: false }]
        }], contentSort: [{
            type: ViewChild,
            args: [MatSort, { static: false }]
        }], sourceIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], originalData: [{
            type: Input
        }], parent: [{
            type: Input
        }], disabled: [{
            type: Input
        }], keyMap: [{
            type: Input
        }], expandRowIndex: [{
            type: Input
        }] }); })();

class StaticListComponent extends ListComponent {
    constructor(ability, breakpointObserver) {
        super(ability, breakpointObserver);
        this.ability = ability;
        this.breakpointObserver = breakpointObserver;
        window.onscroll = () => { this.sticky(); };
    }
    ngOnInit() {
        this.init();
    }
    isList() {
        return this.listConfig.listType == "STATIC" /* STATIC */;
    }
    onSort(event) {
        const queryParams = { sorton: event['active'], sortdir: event['direction'] };
        this.expandedRow = null;
        let action = {
            sourceIdentifier: this.sourceIdentifier ? this.sourceIdentifier : this._listConfig.identifier,
            sourceIndex: this.sourceIndex ? this.sourceIndex : 0,
            widgetArrayIndex: this.widgetArrayIndex,
            action: this._listConfig.identifier,
            actionData: queryParams,
            data: this.record,
            originalData: this.record,
            parentHierarchy: this.parent,
            event: event
        };
        console.log(action);
        this.onSortChange.emit(action);
    }
    onPage(pageInfo) {
        console.log("scrolled:-", pageInfo);
        let action = {
            sourceIdentifier: this.sourceIdentifier ? this.sourceIdentifier : this._listConfig.identifier,
            sourceIndex: this.sourceIndex ? this.sourceIndex : 0,
            widgetArrayIndex: this.widgetArrayIndex,
            action: this._listConfig.identifier,
            actionData: pageInfo,
            data: this.record,
            originalData: this.record,
            parentHierarchy: this.parent,
            event: pageInfo
        };
        console.log(action);
        this.onPageChange.emit(action);
    }
    ngOnDestroy() {
    }
}
StaticListComponent.ɵfac = function StaticListComponent_Factory(t) { return new (t || StaticListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability), ɵngcc0.ɵɵdirectiveInject(ɵngcc35.BreakpointObserver)); };
StaticListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StaticListComponent, selectors: [["mx-static-list"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 18, vars: 4, consts: [[3, "mx-hide-card", 4, "ngIf"], ["cftable", ""], ["cftablemobile", ""], ["cfCustomRowLayout", ""], ["cfCustomRow", ""], ["cfCustomCell", ""], ["cftablelist", ""], ["rowHoverTemplate", ""], ["rowTemplate", ""], ["class", "mx-list-header", 3, "mx-table-hidden", 4, "ngIf"], ["class", "mdc-layout-grid mx-list-desc", 4, "ngIf"], ["class", "mx-list-header-divider", 4, "ngIf"], [4, "ngIf"], ["class", "mx-footer-actions", "align", "right", 4, "ngIf"], [1, "mx-list-header"], ["mat-card-avatar", "", "aria-hidden", "false", 3, "margin-top", 4, "ngIf"], ["class", "mx-list-header-subtitle", 4, "ngIf"], ["class", "mx-list-header-buttons", 4, "ngIf"], ["mat-card-avatar", "", "aria-hidden", "false"], ["aria-hidden", "false", 4, "ngIf"], ["aria-hidden", "false"], [1, "mx-list-header-subtitle"], [1, "mx-list-header-buttons"], [3, "buttons", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "originalData", "onClick"], [1, "mdc-layout-grid", "mx-list-desc"], [1, "mdc-layout-grid__inner"], [1, "mdc-layout-grid__cell--span-12"], [1, "mx-list-header-desc"], ["class", "mx-list-header-desc-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-list-header-desc-icon"], [1, "mx-list-header-divider"], [4, "ngTemplateOutlet"], ["align", "right", 1, "mx-footer-actions"], [3, "length", "pageSize", "pageSizeOptions", "ngClass", "hidePageSize", "page"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "mdc-layout-grid", "mx-card-list"], ["class", "mdc-layout-grid__inner", "id", "mxMobileSearchStrip", 4, "ngIf"], ["infiniteScroll", "", 3, "ngClass", "infiniteScrollDistance", "infiniteScrollThrottle", "infiniteScrollContainer", "scrolled", 4, "ngIf"], ["id", "mxMobileSearchStrip", 1, "mdc-layout-grid__inner"], [3, "class", 4, "ngIf"], [1, "mx-list-search-field", "search-mobile", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "value", "onFieldChange"], ["aria-label", "Filter Menu", 1, "mx-mobile-filter-icon", 3, "ngClass", "matMenuTriggerFor"], ["filterMenu", "matMenu"], ["class", "mx-mobile-filter-link", "mat-menu-item", "", 3, "click", 4, "ngFor", "ngForOf"], ["mat-menu-item", "", 1, "mx-mobile-filter-link", 3, "click"], [1, "material-icons", "mx-material-icons"], ["infiniteScroll", "", 3, "ngClass", "infiniteScrollDistance", "infiniteScrollThrottle", "infiniteScrollContainer", "scrolled"], ["scrollRow", ""], ["class", "mx-card-mobile", 4, "ngFor", "ngForOf"], [1, "mx-card-mobile"], [3, "cols", "rowHeight"], [3, "colspan", "rowspan", 4, "ngFor", "ngForOf"], [3, "colspan", "rowspan"], ["class", "mx-card-mobile-cell width-100", 3, "ngClass", 4, "ngIf", "ngIfElse"], ["elseValue", ""], [1, "mx-card-mobile-cell", "width-100", 3, "ngClass"], [1, "mx-card-mobile-cell-inline", 3, "ngClass"], ["class", "mx-card-mobile", 4, "ngIf"], ["class", "mx-card-mobile-cell", 3, "ngClass", 4, "ngIf", "ngIfElse"], [1, "mx-card-mobile-cell", 3, "ngClass"], [3, "ngClass", "class", 4, "ngFor", "ngForOf"], [3, "ngClass"], ["class", "mx-card-mobile-control-separator", 3, "innerHtml", 4, "ngIf"], ["class", "mx-list-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "hideLabel", "value", "ngClass", "row", "keyMap", "onFieldChange", 4, "ngIf"], [3, "identifier", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "label", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [1, "mx-card-mobile-control-separator", 3, "innerHtml"], [1, "mx-list-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "hideLabel", "value", "ngClass", "row", "keyMap", "onFieldChange"], [3, "identifier", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "label", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [1, "mdc-layout-grid", "mx-table"], ["class", "mdc-layout-grid__cell--span-12", 4, "ngIf"], [3, "class", "width", 4, "ngIf"], [1, "mx-list-search-field", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "value", "onFieldChange"], [1, "mx-list-sel-col-field", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "onFieldChange"], ["mat-table", "", "multiTemplateDataRows", "", "matSort", "", "matSortDisableClear", "", 1, "mx-table", 3, "dataSource", "ngClass", "matSortActive", "matSortDirection", "matSortChange"], ["class", "mat-row", 4, "matNoDataRow"], ["matColumnDef", "select"], ["mat-header-cell", "", "class", "selectable-column", 3, "mx-table-header-hidden", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "selectable-column", 3, "ngClass", "background-color", "color", 4, "matCellDef"], [3, "matColumnDef", 4, "ngFor", "ngForOf"], ["matColumnDef", "expandedRow"], ["mat-cell", "", 3, "ngClass", 4, "matCellDef"], ["matColumnDef", "action", 4, "ngIf"], ["mat-header-row", "", 4, "matHeaderRowDef", "matHeaderRowDefSticky"], [4, "ngIf", "ngIfElse"], ["withoutTooltip", ""], ["style", "background-color: aliceblue;", "mat-row", "", "class", "mx-detail-row", 3, "ngClass", 4, "matRowDef", "matRowDefColumns"], [1, "mat-row"], ["colspan", "9999", 1, "mat-cell"], ["mat-header-cell", "", 1, "selectable-column"], [1, "mx-list-checkbox-selectable", 3, "checked", "indeterminate", "aria-label", "change"], ["mat-cell", "", 1, "selectable-column", 3, "ngClass"], [1, "mx-list-checkbox-selectable", 3, "disabled", "checked", "aria-label", "change"], [3, "matColumnDef"], ["mat-header-cell", "", "mat-sort-header", "", "disableClear", "", 3, "disabled", "mx-table-header-hidden", "ngClass", "width", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "mx-table-data-cell", 3, "ngClass", "background-color", "color", "width", "click", 4, "matCellDef"], ["mat-header-cell", "", "mat-sort-header", "", "disableClear", "", 3, "disabled", "ngClass"], ["mat-cell", "", 1, "mx-table-data-cell", 3, "ngClass", "click"], ["elseDefault", ""], [3, "width", 4, "ngIf"], [4, "cfTemplate", "cfTemplateContext"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["mat-cell", "", 3, "ngClass"], [1, "mx-element-detail"], [3, "listConfig", "sourceIdentifier", "record", "keyMap", "expanded", "listReset", "parent", "width", "disabled", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange", 4, "ngIf"], [3, "formConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "keyMap", "reset", "width", "onFormChange", "onFieldChange", "onButtonClick", 4, "ngIf"], [3, "listConfig", "sourceIdentifier", "record", "keyMap", "expanded", "listReset", "parent", "disabled", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange"], [3, "formConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "keyMap", "reset", "onFormChange", "onFieldChange", "onButtonClick"], ["matColumnDef", "action"], ["mat-header-cell", "", "class", "mx-list-action-col", 3, "mx-table-header-hidden", "width", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "mx-list-action-col mx-row-non-editable", 3, "background-color", "color", "width", 4, "matCellDef"], ["mat-header-cell", "", 1, "mx-list-action-col"], ["mat-cell", "", 1, "mx-list-action-col", "mx-row-non-editable"], ["class", "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [3, "buttons", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [1, "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [3, "buttons", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "context", "originalData", "parentHierarchy", "disabled", "onClick"], ["mat-header-row", ""], ["mat-row", "", "show-delay", "300", "theme", "light", "content-type", "template", "class", "mx-row", 3, "tooltip", "position", "width", "max-width", "ngClass", "mouseenter", "click", 4, "matRowDef", "matRowDefColumns"], ["mat-row", "", "show-delay", "300", "theme", "light", "content-type", "template", 1, "mx-row", 3, "tooltip", "position", "width", "max-width", "ngClass", "mouseenter", "click"], ["mat-row", "", "class", "mx-row", 3, "ngClass", "click", 4, "matRowDef", "matRowDefColumns"], ["mat-row", "", 1, "mx-row", 3, "ngClass", "click"], ["mat-row", "", 1, "mx-detail-row", 2, "background-color", "aliceblue", 3, "ngClass"], [3, "ngStyle", 4, "ngIf"], ["class", "mx-list-hover-tooltip", 3, "ngStyle", 4, "ngIf"], [3, "ngStyle"], [1, "mx-list-hover-tooltip", 3, "ngStyle"]], template: function StaticListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, StaticListComponent_mat_card_0_Template, 9, 11, "mat-card", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, StaticListComponent_ng_template_2_Template, 3, 3, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, StaticListComponent_ng_template_4_Template, 3, 2, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, StaticListComponent_ng_template_6_Template, 2, 2, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, StaticListComponent_ng_template_8_Template, 2, 3, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(10, StaticListComponent_ng_template_10_Template, 1, 1, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(12, StaticListComponent_ng_template_12_Template, 4, 2, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(14, StaticListComponent_ng_template_14_Template, 2, 2, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(16, StaticListComponent_ng_template_16_Template, 1, 1, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._listConfig.permission == null || ctx._listConfig.permission && ɵngcc0.ɵɵpipeBind2(1, 1, ctx._listConfig.permission["subject"], ctx._listConfig.permission["action"]));
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc15.MatCard, ɵngcc15.MatCardContent, ɵngcc15.MatCardHeader, ɵngcc12.MatIcon, ɵngcc15.MatCardAvatar, ɵngcc15.MatCardTitle, ɵngcc15.MatCardSubtitle, ButtonGroupComponent, ɵngcc14.MatDivider, ɵngcc3.NgTemplateOutlet, ɵngcc15.MatCardActions, ɵngcc36.MatPaginator, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, FieldComponent, ɵngcc5.MatMenuTrigger, ɵngcc5._MatMenu, ɵngcc3.NgForOf, ɵngcc5.MatMenuItem, ɵngcc37.InfiniteScrollDirective, ɵngcc38.MatGridList, ɵngcc38.MatGridTile, ButtonComponent, ɵngcc39.MatTable, ɵngcc40.MatSort, ɵngcc39.MatNoDataRow, ɵngcc39.MatColumnDef, ɵngcc39.MatHeaderCellDef, ɵngcc39.MatCellDef, ɵngcc39.MatHeaderRowDef, ɵngcc39.MatRowDef, ɵngcc39.MatHeaderCell, ɵngcc31.MatCheckbox, ɵngcc39.MatCell, ɵngcc40.MatSortHeader, cfTemplateDirective, StaticListComponent, FormComponent, ɵngcc39.MatHeaderRow, ɵngcc39.MatRow, ɵngcc41.TooltipDirective, ɵngcc3.NgStyle, ɵngcc6.DefaultStyleDirective]; }, pipes: function () { return [ɵngcc13.CanPipe]; }, styles: [_c51], encapsulation: 2, data: { animation: [
            trigger('detailExpand', [
                state('collapsed', style({ height: '0px', minHeight: '0' })),
                state('expanded', style({ height: '*' })),
                transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
            ]),
        ] } });
StaticListComponent.ctorParameters = () => [
    { type: Ability },
    { type: BreakpointObserver }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StaticListComponent, [{
        type: Component,
        args: [{
                selector: 'mx-static-list',
                template: "<!-- <pre>\n  {{displayVertical | json}}----\n</pre>  -->\n<mat-card  \n  [class.mx-hide-card]=\"hideCard\"\n  *ngIf=\"(_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission['subject'] | can: _listConfig.permission['action'])))\">\n  <mat-card-header \n    [class.mx-table-hidden]=\"!(_listConfig) || hideHeader || !(_listConfig && _listConfig.header)\"\n    class=\"mx-list-header\" \n    *ngIf=\"hideHeader == false\">\n    <mat-icon \n      mat-card-avatar  \n      *ngIf=\"_listConfig.header && _listConfig.header.icon && _listConfig.header.icon.font && iconPosition == 'BEFORE_TITLE'\"\n      aria-hidden=\"false\" \n      [style.margin-top.px]=\"_listConfig.header.subtitle ? 8 : 0\"\n      [attr.aria-label]=\"_listConfig.header.icon.font\">\n      {{ _listConfig.header.icon.font }}\n    </mat-icon>\n\n    <mat-card-title *ngIf=\"_listConfig.header && _listConfig.header.title\">\n      {{_listConfig.header.title}}\n      <mat-icon \n        *ngIf=\"_listConfig.header && _listConfig.header.icon && _listConfig.header.icon.font && iconPosition == 'AFTER_TITLE'\"\n        aria-hidden=\"false\" [attr.aria-label]=\"_listConfig.header.icon.font\">{{ _listConfig.header.icon.font }}</mat-icon>\n    </mat-card-title>\n    \n    <mat-card-subtitle class=\"mx-list-header-subtitle\" *ngIf=\"_listConfig.header && _listConfig.header.subtitle\">{{ _listConfig.header.subtitle }}</mat-card-subtitle>\n\n    <div class=\"mx-list-header-buttons\" *ngIf=\"_listConfig.header && _listConfig.header.actions\">\n      <mx-button-group \n          [buttons]=\"_listConfig.header.actions\" \n          [sourceIdentifier]=\"sourceIdentifier\"\n          [sourceIndex]=\"sourceIndex\"\n          [widgetArrayIndex]=\"widgetArrayIndex\"\n          [originalData]=\"originalData\"\n          (onClick)=\"buttonClick($event)\">\n      </mx-button-group> \n    </div>\n  </mat-card-header>\n\n  <mat-card-content> \n    <div class=\"mdc-layout-grid mx-list-desc\" *ngIf=\"_listConfig.description && _listConfig.description.text && _listConfig.description.bgColor\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <div \n            class=\"mx-list-header-desc\"\n            [style.background-color]=\"_listConfig.description.bgColor\"\n            [style.color]=\"_listConfig.description.textColor\"\n          >\n            <mat-icon class=\"mx-list-header-desc-icon\" aria-hidden=\"true\" [attr.aria-label]=\"_listConfig.description.icon\" *ngIf=\"_listConfig.description.icon\">{{_listConfig.description.icon}}</mat-icon>\n            <span>{{ _listConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class=\"mx-list-header-divider\" *ngIf=\"(_listConfig.header && (_listConfig.header.title || _listConfig.header.actions)) || (_listConfig.description && _listConfig.description.text)\"></mat-divider>\n    <mat-card-subtitle *ngIf=\"_listConfig.description && _listConfig.description.text && !_listConfig.description.bgColor\">{{ _listConfig.description.text }}</mat-card-subtitle>\n  \n    <span *ngIf=\"_listConfig\">\n      <ng-container *ngTemplateOutlet=\"cftable\"></ng-container>\n    </span>\n    \n    <mat-card-actions \n      *ngIf=\"hideFooter == false && _listConfig.pagination!='INFINIT_SCROLL' && ((_listConfig) || hideFooter || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission['subject'] | can: _listConfig.permission['action'])))))\"\n      class=\"mx-footer-actions\" \n      align=\"right\">\n      <mat-paginator \n        [length]=\"_record.total\" \n        [pageSize]=\"limit\"\n        [pageSizeOptions]=\"pageSizeOptions\"\n        (page)=\"onPage($event)\"\n        [ngClass]=\"{'page-wise': _listConfig.pagination=='NO_PAGE'}\"\n        [hidePageSize]=\"_listConfig.pagination=='NO_PAGE'\"\n      ></mat-paginator>\n    </mat-card-actions>\n    \n  </mat-card-content>\n</mat-card>\n\n<ng-template #cftable>\n  <span *ngIf=\"!isCustomTemplate && !(isMobile && _listConfig.mobile && _listConfig.mobile.rowHeight)\">\n    <ng-container *ngTemplateOutlet=\"cftablelist\"></ng-container>\n  </span> \n  <span *ngIf=\"isCustomTemplate\">\n    <ng-container \n      [ngTemplateOutlet]=\"cftablemobile\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.row.template.layout}\"></ng-container>\n  </span>\n  <span *ngIf=\"isMobile && _listConfig.mobile && _listConfig.mobile.rowHeight\">\n    <ng-container \n      [ngTemplateOutlet]=\"cftablemobile\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.mobile}\"></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cftablemobile let-layout=\"layout\">\n  <div class=\"mdc-layout-grid mx-card-list\">\n    <div class=\"mdc-layout-grid__inner\" id=\"mxMobileSearchStrip\" *ngIf=\"_listConfig.staticList.hasOnPageFilter || layout.sorting\">\n      <div \n        *ngIf=\"_listConfig.staticList.hasOnPageFilter\"\n        class=\"mx-mobile-search-field-cont mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !layout.sorting ? 12 : 9}}\"\n      >\n        <mx-field \n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['pageFilter']) ? commonListForm.controls['pageFilter'] : null\"\n          [field]=\"filterField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          [value]=\"\"\n          (onFieldChange)=\"updateFilter($event);$event.event.stopPropagation()\"\n          class=\"mx-list-search-field search-mobile\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n      </div>\n      <div \n        *ngIf=\"layout.sorting\"\n        class=\"mx-mobile-sort-field-cont mdc-layout-grid__cell--span-{{ !_listConfig.staticList.hasOnPageFilter && layout.sorting ? 12 : 3}}\"> \n        <mat-icon \n          class=\"mx-mobile-filter-icon\" \n          [ngClass]=\"{'rote':this.sortDirection=='desc'}\" \n          [matMenuTriggerFor]=\"filterMenu\"  \n          aria-label=\"Filter Menu\"\n        >filter_list</mat-icon>\n        <!-- (click)=\"(sortDirection == 'asc' ? sortDirection = 'desc' : sortDirection = 'asc');_record.rows=_record.rows.reverse();\" -->\n        <mat-menu #filterMenu=\"matMenu\">\n          <button \n            class=\"mx-mobile-filter-link\"\n            *ngFor=\"let sorting of layout.sorting\" \n            mat-menu-item\n            (click)=\"onSort({'action':sorting.key, 'direction':sorting.direction})\"\n          >\n            {{sorting.label}}\n            <span class=\"material-icons mx-material-icons\">\n              {{ sorting.direction == \"asc\" ? \"north\" : \"south\" }}\n            </span>\n          </button>\n        </mat-menu>\n      </div>\n    </div>\n    <div \n      *ngIf=\"layout && layout.rowHeight\"\n      [ngClass]=\"{'mx-list-infinite-scroll': _listConfig.pagination=='INFINIT_SCROLL'}\" \n      infiniteScroll \n      [infiniteScrollDistance]=\"2\" \n      [infiniteScrollThrottle]=\"1.5\" \n      [infiniteScrollContainer]=\"scrollRow\" \n      #scrollRow \n      (scrolled)=\"onPage($event)\">\n      <!-- <pre>{{_listConfig.mobile.cells | json}}</pre> -->\n      <mat-card class=\"mx-card-mobile\" *ngFor=\"let row of _record.rows; let rowIndex=index\">\n        <mat-card-content>\n          <mat-grid-list [cols]=\"cellCount\" [rowHeight]=\"layout.rowHeight\">\n            <mat-grid-tile *ngFor=\"let cell of layout.cells\" [colspan]=\"cell.cols\" [rowspan]=\"cell.rows\">\n              <div \n                class=\"mx-card-mobile-cell width-100\"\n                [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\"\n                *ngIf=\"!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;\">\n                <ng-container [ngTemplateOutlet]=\"cfCustomCell\"\n                  [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"></ng-container>\n              </div>\n              <ng-template #elseValue>\n                <div \n                  class=\"mx-card-mobile-cell-inline\"\n                  [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\">\n                  <ng-container [ngTemplateOutlet]=\"cfCustomCell\"\n                    [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"></ng-container>\n                </div>\n              </ng-template>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #cfCustomRowLayout let-layout=\"layout\" let-row=\"row\" let-rowIndex=\"rowIndex\" let-withCard=\"withCard\"> \n  <mat-card class=\"mx-card-mobile\" *ngIf=\"withCard\">\n    <mat-card-content>\n      <ng-container  \n        [ngTemplateOutlet]=\"cfCustomRow\"\n        [ngTemplateOutletContext]=\"{layout: layout, row: row, rowIndex: rowIndex}\"\n      ></ng-container>\n    </mat-card-content>\n  </mat-card>\n  <span class=\"mx-card-mobile\" *ngIf=\"!withCard\">\n    <ng-container  \n      [ngTemplateOutlet]=\"cfCustomRow\"\n      [ngTemplateOutletContext]=\"{layout: layout, row: row, rowIndex: rowIndex}\"\n    ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfCustomRow let-layout=\"layout\" let-row=\"row\" let-rowIndex=\"rowIndex\"> \n  <mat-grid-list \n      [cols]=\"layout.cellCount\"  \n      [rowHeight]=\"layout.rowHeight\">\n      <mat-grid-tile\n        *ngFor=\"let cell of layout.cells\"\n        [colspan]=\"cell.cols\"\n        [rowspan]=\"cell.rows\">\n        <div \n          class=\"mx-card-mobile-cell\" \n          [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\"\n          *ngIf=\"!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;\"> \n          <ng-container \n            [ngTemplateOutlet]=\"cfCustomCell\"\n            [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"\n          ></ng-container>\n        </div>\n        <ng-template #elseValue>\n          <div \n            class=\"mx-card-mobile-cell-inline\"\n            [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\">\n            <ng-container \n              [ngTemplateOutlet]=\"cfCustomCell\"\n              [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </mat-grid-tile>\n    </mat-grid-list>   \n</ng-template>\n\n<ng-template #cfCustomCell let-cell=\"cell\" let-row=\"row\" let-rowIndex=\"rowIndex\">\n  <span \n    [ngClass]=\"{'fullwidth': control.fullWidth}\"\n    class=\"{{ control?.alignment?.vertical }} {{ control?.alignment?.horizontal }}\"\n    *ngFor=\"let control of cell.controls; let cControlIndex = index;\">\n    <!-- {{control.control.key}} --> \n    <span \n      class=\"mx-card-mobile-control-separator\"\n      *ngIf=\"cell.displayInline && cell.displayInline.separator && cControlIndex > 0\" \n      [innerHtml]=\"cell.displayInline.separator\"></span>\n\n    <!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== -->\n    <mx-field\n      *ngIf=\"control.control && (!cell.link || (cell.link && cell.linkKey && cell.linkKey != control.control.key)) && control.type == 'FIELD'\" \n      [sourceType]=\"'LIST'\"\n      [sourceIdentifier]=\"_listConfig.identifier\" \n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n      [fieldControl]=\"(formIndex == rowIndex && form != undefined) ? form.controls[control.control.key] : null\"\n      [field]=\"control.control\"\n      [displayMode]=\"displayModes[rowIndex]\" \n      [hideLabel]=\"true\"\n      [value]=\"getValue(control.colIndex, control.cControlIndex, row, control.control.value)\" \n      class=\"mx-list-field\"\n      [ngClass]=\"{'mx-list-field-disabled': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled, 'mx-primary-text': control.fieldStyle && control.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': control.fieldStyle && control.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': control.fieldStyle && control.fieldStyle.class == 'TERTIARY'}\"\n      [row]=\"row\"\n      [keyMap]=\"keyMap\"\n      (onFieldChange)=\"fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): ''\">\n    </mx-field>\n    <mx-button\n      *ngIf=\"cell.link && ((cell.linkKey && cell.linkKey == control.control.key) || !cell.linkKey) && control.type == 'FIELD'\" \n      [identifier]=\"'listFieldAsLink'\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\"\n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [button]=\"cell.link\"\n      [label]=\"getValue(control.colIndex, control.cControlIndex, row, control.control.value)\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n      [originalData]=\"row\"\n      [parentHierarchy]=\"parent\"\n      [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n      (onClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n    ></mx-button>\n\n    <!-- [formDisplayMode]=\"formConfig.displayMode\" -->\n    <!-- <mx-button-group \n      [ngClass]=\"{'fullwidth': control.fullWidth}\"\n      *ngIf=\"control.type == 'BUTTON'\"\n      [buttons]=\"control.control\" \n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [originalData]=\"row\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n      (onClick)=\"buttonClick($event)\">\n    </mx-button-group> -->\n\n    <mx-button \n      *ngIf=\"control.type == 'BUTTON'\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [button]=\"control.control\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n      [originalData]=\"row\"\n      [parentHierarchy]=\"parent\" \n      [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n      (onClick)=\"setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()\"\n    ></mx-button> \n  </span>\n</ng-template>\n\n<ng-template #cftablelist>\n  <div class=\"mdc-layout-grid mx-table\">\n    <div class=\"mdc-layout-grid__inner\" id=\"mxMobileSearchStrip\" *ngIf=\"_listConfig.staticList.hasOnPageFilter || _listConfig.hasColumnSelection\">\n      <div \n        *ngIf=\"_listConfig.staticList.hasOnPageFilter\"\n        class=\"mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !_listConfig.hasColumnSelection ? 12 : 9}}\"\n      >\n        <mx-field \n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['pageFilter']) ? commonListForm.controls['pageFilter'] : null\"\n          [field]=\"filterField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          [value]=\"\"\n          (onFieldChange)=\"updateFilter($event);$event.event.stopPropagation()\"\n          class=\"mx-list-search-field\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n      </div>\n      <div \n        *ngIf=\"_listConfig.hasColumnSelection\" \n        class=\"mdc-layout-grid__cell--span-{{!_listConfig.staticList.hasOnPageFilter && _listConfig.hasColumnSelection ? 12 : 3}} mdc-layout-grid--align-right\" \n        [style.width.%]=\"100\">\n        <mx-field\n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['columnSelector']) ? commonListForm.controls['columnSelector'] : null\"\n          [field]=\"columnSelectorField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          class=\"mx-list-sel-col-field\"\n          (onFieldChange)=\"updateColumnDisplay($event)\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n        <!-- ;$event.event.stopPropagation() -->\n      </div>\n    </div>\n    <div class=\"mdc-layout-grid__inner\">\n      <div class=\"mdc-layout-grid__cell--span-12\" *ngIf=\"columnNames\">\n        <table  \n          mat-table  \n          [dataSource]=\"dataSource\" \n          class=\"mx-table\"\n          [ngClass]=\"{'mx-table-hover': _listConfig.shade && _listConfig.shade.type == 'HOVER', 'mx-table-alternate': _listConfig.shade && _listConfig.shade.type == 'ALTERNATE', 'mx-table-without-header': _listConfig.hideHeaderRow}\"\n          multiTemplateDataRows\n          matSort\n          [matSortActive]=\"_listConfig.defaultSort ? _listConfig.defaultSort.column : ''\" \n          matSortDisableClear  \n          [style.width.%]=\"'100'\"\n          [matSortDirection]=\"_listConfig.defaultSort ? _listConfig.defaultSort.order: ''\"\n          (matSortChange)=\"onSort($event)\">\n\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"9999\">\n              {{ _listConfig.noRecordFound ? _listConfig.noRecordFound : 'No data found'}}\n            </td>\n          </tr>\n          \n          <ng-container matColumnDef=\"select\">\n            <th \n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              mat-header-cell \n              *matHeaderCellDef \n              class=\"selectable-column\">\n              <mat-checkbox \n                class=\"mx-list-checkbox-selectable\"\n                (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                [aria-label]=\"checkboxLabel()\">\n              </mat-checkbox>\n            </th>\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              [style.background-color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : ''\"\n              [style.color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : ''\"\n              class=\"selectable-column\">\n              <mat-checkbox \n                class=\"mx-list-checkbox-selectable\"\n                [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                (change)=\"$event ? selection.toggle(row) : null\"\n                [checked]=\"selection.isSelected(row)\"\n                [aria-label]=\"checkboxLabel(row)\">\n              </mat-checkbox>\n                <!-- (click)=\"$event.event.stopPropagation()\" -->\n            </td>\n          </ng-container>\n          \n          <ng-container \n            *ngFor=\"let column of columnConfigs; let colIndex = index\"\n            [matColumnDef]=\"getColumnKey(column)\">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              mat-sort-header\n              disableClear\n              [disabled]=\"!column.sortable\"\n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              [ngClass]=\"{'mx-list-field-first': colIndex == 0}\"\n              [style.width.%]=\"displayVertical ? '' : column.width / totalDispalyableWidth * 100\">\n              {{getColumnLabel(column)}}\n            </th> \n            <!-- [attr.data-label]=\"getColumnLabel(column)\" -->\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              class=\"mx-table-data-cell\"\n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              [style.background-color]=\"cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].bgColor : ''\"\n              [style.color]=\"cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].textColor : ''\"\n              [style.width.%]=\"displayVertical ? '' : column.width / totalDispalyableWidth * 100\"\n              (click)=\"_listConfig.rowAction ? rowClick(row, rowIndex, ((formIndex == rowIndex && form != undefined) ? form.value : null), $event) : _listConfig.rowAction\"\n              >\n\n              <ng-container *ngIf=\"column?.template?.html || column?.template?.layout; else elseDefault\">\n                <div \n                  [style.width.%]=\"100\"\n                  *ngIf=\"column?.template?.html\">\n                  <ng-container *cfTemplate=\"'<style>'+column?.template?.css+'</style>' + column?.template?.html; context: {row: row, index: rowIndex}\"></ng-container>\n                </div>\n                <div \n                  [style.width.%]=\"100\"\n                  *ngIf=\"column?.template?.layout\">\n                  <!-- {{row | json}}--- -->\n                  <ng-container  \n                    [ngTemplateOutlet]=\"cfCustomRowLayout\"\n                    [ngTemplateOutletContext]=\"{layout: column.template.layout, row: row, rowIndex: rowIndex, withCard: false}\"\n                  ></ng-container>\n                </div>\n              </ng-container>\n              <ng-template #elseDefault>\n                <div \n                  [ngClass]=\"{'mx-list-field-not-first': cFieldIndex > 0, 'mx-list-field-inline': column.displayInline && column.displayInline.separator}\" \n                  *ngFor=\"let field of column.fields; let cFieldIndex = index;\">\n                  <span *ngIf=\"column.displayInline && column.displayInline.separator && cFieldIndex > 0\">{{column.displayInline.separator}}</span>\n                  <mx-field\n                    *ngIf=\"!column.link || (column.link && column.linkKey && column.linkKey != field.key)\" \n                    [sourceType]=\"'LIST'\"\n                    [sourceIdentifier]=\"_listConfig.identifier\" \n                    [sourceIndex]=\"rowIndex\" \n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n                    [fieldControl]=\"(formIndex == rowIndex && form != undefined) ? form.controls[field.key] : null\"\n                    [field]=\"field\"\n                    [displayMode]=\"displayModes[rowIndex]\" \n                    [hideLabel]=\"true\"\n                    [value]=\"getValue(colIndex, cFieldIndex, row, field.value)\" \n                    class=\"mx-list-field\"\n                    [ngClass]=\"{'mx-list-field-disabled': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled}\"\n                    [row]=\"row\"\n                    [keyMap]=\"keyMap\"\n                    (onFieldChange)=\"fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): ''\">\n                  </mx-field>\n                  <mx-button\n                    *ngIf=\"column.link && ((column.linkKey && column.linkKey == field.key) || !column.linkKey)\" \n                    [identifier]=\"'listFieldAsLink'\"\n                    [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                    [sourceIdentifier]=\"_listConfig.identifier\"\n                    [sourceIndex]=\"rowIndex\"\n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [button]=\"column.link\"\n                    [label]=\"getValue(colIndex, cFieldIndex, row, field.value)\"\n                    [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n                    [originalData]=\"row\"\n                    [parentHierarchy]=\"parent\"\n                    [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                    (onClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n                  ></mx-button>\n                </div>\n              </ng-template>\n            </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"expandedRow\"> \n            <td \n              mat-cell \n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              *matCellDef=\"let row; let rowIndex = dataIndex\" \n              [attr.colspan]=\"childColumnCount\">\n              <div class=\"mx-element-detail\"\n                  [@detailExpand]=\"row == expandedRow || this._expanded == true ? 'expanded' : 'collapsed'\">\n                <mx-static-list \n                  *ngIf=\"_listConfig.child && _listConfig.child.type == 'LIST' && _listConfig.child.record && (row == expandedRow || _expanded == true)\"\n                  [listConfig]=\"_listConfig.child.record\" \n                  [sourceIdentifier]=\"sourceIdentifier\"\n                  [record]=\"getChildRows(expandedRow)\" \n                  [keyMap]=\"keyMap\"\n                  [expanded]=\"_expanded\"\n                  [listReset]=\"listReset\"\n                  [parent]=\"getObjectTree(row)\"\n                  [style.width.%]=\"100\"\n                  [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                  (onFormChange)=\"formChange($event)\"\n                  (onFieldChange)=\"fieldChange($event);$event.event.stopPropagation()\"\n                  (onButtonClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n                  (onPageChange)=\"onPage($event)\"\n                  (onSortChange)=\"onSort($event)\"  \n                >\n                </mx-static-list>\n                <mx-form \n                    *ngIf=\"_listConfig.child && _listConfig.child.type == 'FORM' && (row == expandedRow || _expanded == true)\"\n                    [formConfig]=\"_listConfig.child.record\"\n                    [sourceIdentifier]=\"_listConfig.identifier\"\n                    [sourceIndex]=\"rowIndex\"\n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [record]=\"getChildRows(expandedRow)\" \n                    [keyMap]=\"keyMap\"\n                    [reset]=\"listReset\"\n                    [style.width.%]=\"100\"\n                    (onFormChange)=\"formChange($event)\"\n                    (onFieldChange)=\"fieldChange($event)\"\n                    (onButtonClick)=\"buttonClick($event)\"\n                ></mx-form>\n              </div>\n            </td> \n          </ng-container>\n      \n          <ng-container \n            *ngIf=\"_listConfig.actions && _listConfig.actions.length > 0\"\n            matColumnDef=\"action\">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              class=\"mx-list-action-col\"\n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              [style.width.%]=\"displayVertical ? '' : _listConfig.actionWidth / totalDispalyableWidth * 100\"\n              >\n              Action\n            </th>\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              class=\"mx-list-action-col mx-row-non-editable\"\n              [style.background-color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : ''\"\n              [style.color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : ''\"\n              [style.width.%]=\"displayVertical ? '' : _listConfig.actionWidth / totalDispalyableWidth * 100\"\n              > \n              <!-- --{{inlineEditButtons[rowIndex].size}} -->\n              <mx-button \n                *ngIf=\"isInlineEditable && inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].icon\"\n                [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                [sourceIdentifier]=\"_listConfig.identifier\"\n                [sourceIndex]=\"rowIndex\" \n                [widgetArrayIndex]=\"widgetArrayIndex\"\n                [button]=\"inlineEditButtons[rowIndex]\"\n                class=\"mx-button\"\n                [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n                [originalData]=\"row\"\n                [parentHierarchy]=\"parent\" \n                [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                (onClick)=\"setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()\"\n              ></mx-button> \n              <mx-button-group\n                  *ngIf=\"!isInlineEditable || (inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')\"\n                  [buttons]=\"_listConfig.actions\"\n                  [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                  [sourceIdentifier]=\"_listConfig.identifier\"\n                  [sourceIndex]=\"rowIndex\"\n                  [widgetArrayIndex]=\"widgetArrayIndex\"\n                  [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n                  [originalData]=\"row\"\n                  [parentHierarchy]=\"parent\"\n                  [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                  (onClick)=\"buttonClick($event);\"\n              ></mx-button-group>\n            </td>\n          </ng-container> \n          <tr \n            mat-header-row \n            *matHeaderRowDef=\"columnNames; sticky: _listConfig.stickyHeader\"\n          ></tr>\n          <div *ngIf=\"(_listConfig.row &&_listConfig.row.hover);else withoutTooltip\">\n            <tr \n              mat-row \n              *matRowDef=\"let row; columns: columnNames; let i = dataIndex;\"\n              [tooltip]=\"rowHoverTemplate\"\n              show-delay=\"300\"\n              [position]=\"tooltipPosition\"\n              [width]=\"_listConfig?.row?.hover?.width\"  \n              [max-width]=\"_listConfig?.row?.hover?.width\"\n              theme=\"light\"\n              content-type=\"template\"\n              class=\"mx-row\"\n              [ngClass]=\"{'without-hover': !(_listConfig.row &&_listConfig.row.hover)}\"\n              (mouseenter)=\"onHover($event,i, (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row)\" \n              (click)=\"expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row\"\n            ></tr>\n          </div>\n\n          <ng-template #withoutTooltip>\n            <tr \n              mat-row \n              *matRowDef=\"let row; columns: columnNames; let i = dataIndex;\"\n              class=\"mx-row\"\n              [ngClass]=\"{'without-hover': !(_listConfig.row &&_listConfig.row.hover)}\"\n              (click)=\"expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row\"\n            ></tr>\n          </ng-template>\n          <!-- [tooltip]=\"rowHoverTemplate\"\n          placement=\"bottom\"\n          content-type=\"template\"\n          hideDelayTouchscreen=0\n          hide-delay=100\n          show-delay=100\n          animation-duration=100\n          max-width=_listConfig?.row?.hover?.width\n          display=\"_listConfig.row && _listConfig.row.hover && (_listConfig.row.hover.template || _listConfig.row.hover.layout)\"\n          theme=\"light\"\n           -->\n          <tr  \n            style=\"background-color: aliceblue;\"\n            mat-row  \n            *matRowDef=\"let row; columns: ['expandedRow']\" \n            [ngClass]=\"{'mx-detail-row-hide': !_listConfig.child || !_listConfig.child.record}\"\n            class=\"mx-detail-row\"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-template> \n\n<ng-template #rowHoverTemplate>\n  <div *ngIf=\"_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.component\" [ngStyle]=\"{'width': _listConfig.row.hover.width + 'px'}\">\n    <!-- <ndc-dynamic\n      [ndcDynamicComponent]=\"_listConfig.row.hover.template.component\"\n      [ndcDynamicInputs]=\"hoverRowData\"\n    ></ndc-dynamic> -->\n  </div>\n  <div *ngIf=\"_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.layout\" [ngStyle]=\"{'width': _listConfig.row.hover.width + 'px'}\" class=\"mx-list-hover-tooltip\">\n    <ng-container  \n      [ngTemplateOutlet]=\"cfCustomRowLayout\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.row.hover.template.layout, row: hoverRowData, rowIndex: hoverRowIndex, withCard: false}\"\n    ></ng-container>\n  </div>\n</ng-template> \n\n<ng-template #rowTemplate>\n  <div *ngIf=\"_listConfig?.row?.template\">\n    <!-- <ndc-dynamic [ndcDynamicComponent]=\"_listConfig.row.template\"></ndc-dynamic> -->\n  </div>\n</ng-template>",
                animations: [
                    trigger('detailExpand', [
                        state('collapsed', style({ height: '0px', minHeight: '0' })),
                        state('expanded', style({ height: '*' })),
                        transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
                    ]),
                ],
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-list-header .mat-card-header-text{margin:0!important}.mx-list-header .mat-card-title{margin-top:6px}.mx-list-header .mat-card-avatar{font-size:40px;padding-right:8px}.mat-card-subtitle,.mx-list-header-subtitle .mat-card-subtitle{padding-top:8px}.mx-list-header-buttons{position:absolute;right:5px;top:5px}.mx-table-header-hidden,.mx-table-hidden{display:none!important}.mx-table-without-header thead,.mx-table-without-header tr.mat-header-row{height:0!important}table{width:100%}.mx-list-desc,.mx-table{padding:0!important}.mx-hide-card{padding:0}td,th{max-width:200px;white-space:normal;word-wrap:break-word}.mx-element-detail{border-left:2px groove #f5f5f5;display:flex;overflow:hidden;padding-right:3px;width:100%}.mx-list-action-col{text-align:right!important}tr.mx-detail-row{background-color:#f5f5f5;height:0!important}tr.mx-detail-row-hide{display:none!important}.sticky{position:-webkit-sticky;position:sticky}.selectable-column{padding-right:1%}.rote{transform:rotateX(180deg)}.mx-element-detail>th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:0!important}.mat-card-content{margin-bottom:0!important}.mx-list-header-desc{margin:5px 0;padding:5px 10px;width:auto}.mx-list-header-desc-icon{font-size:15px;height:15px;margin-top:0;padding:0 5px 0 0;width:15px}.mx-table-alternate tr.mat-row:nth-child(odd),.mx-table-hover tr.mat-row:hover{background:#f5f5f5}.mx-table-alternate tr.mat-row:not(:nth-child(4n+1)){background:#fff}.mx-list-field .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:0}.mx-list-field-not-first{padding-top:5px}.mx-list-field-disabled{color:rgba(0,0,0,.5411764705882353)}.mx-list-checkbox-selectable{padding-right:12px}.mx-list-field-inline{display:inline}@media screen and (max-width:599px){.mat-table{border:0;vertical-align:middle}.mat-table caption{font-size:1em}.mat-table .mat-header-row{display:none}.mat-table .mat-header-cell{border:10px solid;clip:rect(0 0 0 0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.mat-table .mat-row{border-bottom:5px solid #ddd;display:block;height:unset}.mat-table .mat-cell{display:block;font-size:1em;font-weight:700}.mat-table .mx-row-non-editable{border-bottom-width:1px;padding:12px 8px!important}.mat-table .mx-row-editable{border-bottom-width:0;padding:0 8px!important}.mat-table .mat-cell:before{content:attr(data-label);float:left;font-size:.85em;font-weight:400}.mat-table .mat-cell:last-child{border-bottom:0}.mat-table .mat-row td{max-width:unset}}.mx-card-list{padding:0}.mx-card-list mat-card{padding:8px}.mx-card-mobile{margin-bottom:12px;word-wrap:break-word}.mx-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.mx-card-mobile .mx-primary-text .mx-field-value{font-size:18px;font-weight:400;margin-bottom:none}.mx-card-mobile .mx-secondary-text .mx-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.mx-card-mobile .mx-tertiary-text .mx-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.mx-card-mobile .mx-card-mobile-cell{display:block;width:100%}.mx-card-mobile .mx-card-mobile-cell .fullwidth button{width:100%}.mx-card-mobile .mx-card-mobile-cell .mx-primary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-secondary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-tertiary-text .mx-field-value{display:block}.mx-card-mobile .mx-card-mobile-cell .fullwidth button,.mx-card-mobile .mx-card-mobile-cell .fullwidth mat-chip{width:100%}.mx-card-mobile .mx-card-mobile-cell-inline{display:inline-block;width:100%}.mx-card-mobile .mx-card-mobile-cell-inline .mx-card-mobile-control-separator{padding:4px}.hover-template{display:none;position:absolute;z-index:9999}.mx-row:hover .without-hover{pointer-events:none}.mx-list-infinite-scroll{height:69vh;overflow-y:auto}.search-mobile{margin-right:10px}.mx-mobile-search-field-cont,.mx-mobile-sort-field-cont{display:flex}.sticky{background:#fff;border-bottom:1px solid #d3cece;left:0;margin:0 auto;padding:10px 20px;position:fixed;right:0;top:0;width:88%;z-index:99}.sticky+.content{padding-top:102px}.mx-mobile-filter-icon{padding-top:8px}.mx-mobile-filter-link{text-align:end}.mx-list-hover-tooltip{padding:8px}.right-align-forced{text-align:right;width:100%}.width-100{height:100%;width:100%!important}.top{top:0}.middle{top:40%}.bottom{bottom:0}.left{left:0}.left,.right{display:block;position:absolute;width:auto}.right{right:0}.center{display:block;left:50%;position:absolute;width:auto}.mat-drawer-inner-container{overflow:hidden!important}.mx-material-icons{font-size:12px}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }, { type: ɵngcc35.BreakpointObserver }]; }, null); })();

class DynamicListComponent extends ListComponent {
    constructor(ability, breakpointObserver) {
        super(ability, breakpointObserver);
        this.ability = ability;
        this.breakpointObserver = breakpointObserver;
        window.onscroll = () => { this.sticky(); };
    }
    ngOnInit() {
        this.init();
    }
    isList() {
        return this._listConfig.listType == "DYNAMIC" /* DYNAMIC */;
    }
    onSort(event) {
        const queryParams = { sorton: event['active'], sortdir: event['direction'] };
        let action = {
            sourceIdentifier: this.sourceIdentifier ? this.sourceIdentifier : this._listConfig.identifier,
            sourceIndex: this.sourceIndex ? this.sourceIndex : 0,
            widgetArrayIndex: this.widgetArrayIndex,
            action: this._listConfig.identifier,
            actionData: queryParams,
            data: this.record,
            originalData: this.record,
            parentHierarchy: this.parent,
            event: event
        };
        console.log(action);
        this.onSortChange.emit(action);
    }
    onPage(pageInfo) {
        console.log(pageInfo);
        let action = {
            sourceIdentifier: this.sourceIdentifier ? this.sourceIdentifier : this._listConfig.identifier,
            sourceIndex: this.sourceIndex ? this.sourceIndex : 0,
            widgetArrayIndex: this.widgetArrayIndex,
            action: this._listConfig.identifier,
            actionData: pageInfo,
            data: this.record,
            originalData: this.record,
            parentHierarchy: this.parent,
            event: pageInfo
        };
        console.log(action);
        this.onPageChange.emit(action);
    }
}
DynamicListComponent.ɵfac = function DynamicListComponent_Factory(t) { return new (t || DynamicListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability), ɵngcc0.ɵɵdirectiveInject(ɵngcc35.BreakpointObserver)); };
DynamicListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DynamicListComponent, selectors: [["mx-dynamic-list"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 18, vars: 4, consts: [[3, "mx-hide-card", 4, "ngIf"], ["cftable", ""], ["cftablemobile", ""], ["cfCustomRowLayout", ""], ["cfCustomRow", ""], ["cfCustomCell", ""], ["cftablelist", ""], ["rowHoverTemplate", ""], ["rowTemplate", ""], ["class", "mx-list-header", 3, "mx-table-hidden", 4, "ngIf"], ["class", "mdc-layout-grid mx-list-desc", 4, "ngIf"], ["class", "mx-list-header-divider", 4, "ngIf"], [4, "ngIf"], ["class", "mx-footer-actions", "align", "right", 4, "ngIf"], [1, "mx-list-header"], ["mat-card-avatar", "", "aria-hidden", "false", 3, "margin-top", 4, "ngIf"], ["class", "mx-list-header-subtitle", 4, "ngIf"], ["class", "mx-list-header-buttons", 4, "ngIf"], ["mat-card-avatar", "", "aria-hidden", "false"], ["aria-hidden", "false", 4, "ngIf"], ["aria-hidden", "false"], [1, "mx-list-header-subtitle"], [1, "mx-list-header-buttons"], [3, "buttons", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "originalData", "onClick"], [1, "mdc-layout-grid", "mx-list-desc"], [1, "mdc-layout-grid__inner"], [1, "mdc-layout-grid__cell--span-12"], [1, "mx-list-header-desc"], ["class", "mx-list-header-desc-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-list-header-desc-icon"], [1, "mx-list-header-divider"], [4, "ngTemplateOutlet"], ["align", "right", 1, "mx-footer-actions"], [3, "length", "pageSize", "pageSizeOptions", "ngClass", "hidePageSize", "page"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "mdc-layout-grid", "mx-card-list"], ["class", "mdc-layout-grid__inner", "id", "mxMobileSearchStrip", 4, "ngIf"], ["infiniteScroll", "", 3, "ngClass", "infiniteScrollDistance", "infiniteScrollThrottle", "infiniteScrollContainer", "scrolled", 4, "ngIf"], ["id", "mxMobileSearchStrip", 1, "mdc-layout-grid__inner"], [3, "class", 4, "ngIf"], [1, "mx-list-search-field", "search-mobile", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "value", "onFieldChange"], ["aria-label", "Filter Menu", 1, "mx-mobile-filter-icon", 3, "ngClass", "matMenuTriggerFor"], ["filterMenu", "matMenu"], ["class", "mx-mobile-filter-link", "mat-menu-item", "", 3, "click", 4, "ngFor", "ngForOf"], ["mat-menu-item", "", 1, "mx-mobile-filter-link", 3, "click"], [1, "material-icons", "mx-material-icons"], ["infiniteScroll", "", 3, "ngClass", "infiniteScrollDistance", "infiniteScrollThrottle", "infiniteScrollContainer", "scrolled"], ["scrollRow", ""], ["class", "mx-card-mobile", 4, "ngFor", "ngForOf"], [1, "mx-card-mobile"], [3, "cols", "rowHeight"], [3, "colspan", "rowspan", 4, "ngFor", "ngForOf"], [3, "colspan", "rowspan"], ["class", "mx-card-mobile-cell width-100", 3, "ngClass", 4, "ngIf", "ngIfElse"], ["elseValue", ""], [1, "mx-card-mobile-cell", "width-100", 3, "ngClass"], [1, "mx-card-mobile-cell-inline", 3, "ngClass"], ["class", "mx-card-mobile", 4, "ngIf"], ["class", "mx-card-mobile-cell", 3, "ngClass", 4, "ngIf", "ngIfElse"], [1, "mx-card-mobile-cell", 3, "ngClass"], [3, "ngClass", "class", 4, "ngFor", "ngForOf"], [3, "ngClass"], ["class", "mx-card-mobile-control-separator", 3, "innerHtml", 4, "ngIf"], ["class", "mx-list-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "hideLabel", "value", "ngClass", "row", "keyMap", "onFieldChange", 4, "ngIf"], [3, "identifier", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "label", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [1, "mx-card-mobile-control-separator", 3, "innerHtml"], [1, "mx-list-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "hideLabel", "value", "ngClass", "row", "keyMap", "onFieldChange"], [3, "identifier", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "label", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [1, "mdc-layout-grid", "mx-table"], ["class", "mdc-layout-grid__cell--span-12", 4, "ngIf"], [3, "class", "width", 4, "ngIf"], [1, "mx-list-search-field", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "value", "onFieldChange"], [1, "mx-list-sel-col-field", 3, "sourceType", "form", "fieldControl", "field", "hideLabel", "displayMode", "onFieldChange"], ["mat-table", "", "multiTemplateDataRows", "", "matSort", "", "matSortDisableClear", "", 1, "mx-table", 3, "dataSource", "ngClass", "matSortActive", "matSortDirection", "matSortChange"], ["class", "mat-row", 4, "matNoDataRow"], ["matColumnDef", "select"], ["mat-header-cell", "", "class", "selectable-column", 3, "mx-table-header-hidden", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "selectable-column", 3, "ngClass", "background-color", "color", 4, "matCellDef"], [3, "matColumnDef", 4, "ngFor", "ngForOf"], ["matColumnDef", "expandedRow"], ["mat-cell", "", 3, "ngClass", 4, "matCellDef"], ["matColumnDef", "action", 4, "ngIf"], ["mat-header-row", "", 4, "matHeaderRowDef", "matHeaderRowDefSticky"], [4, "ngIf", "ngIfElse"], ["withoutTooltip", ""], ["style", "background-color: aliceblue;", "mat-row", "", "class", "mx-detail-row", 3, "ngClass", 4, "matRowDef", "matRowDefColumns"], [1, "mat-row"], ["colspan", "9999", 1, "mat-cell"], ["mat-header-cell", "", 1, "selectable-column"], [1, "mx-list-checkbox-selectable", 3, "checked", "indeterminate", "aria-label", "change"], ["mat-cell", "", 1, "selectable-column", 3, "ngClass"], [1, "mx-list-checkbox-selectable", 3, "disabled", "checked", "aria-label", "change"], [3, "matColumnDef"], ["mat-header-cell", "", "mat-sort-header", "", "disableClear", "", 3, "disabled", "mx-table-header-hidden", "ngClass", "width", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "mx-table-data-cell", 3, "ngClass", "background-color", "color", "width", "click", 4, "matCellDef"], ["mat-header-cell", "", "mat-sort-header", "", "disableClear", "", 3, "disabled", "ngClass"], ["mat-cell", "", 1, "mx-table-data-cell", 3, "ngClass", "click"], ["elseDefault", ""], [3, "width", 4, "ngIf"], [4, "cfTemplate", "cfTemplateContext"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["mat-cell", "", 3, "ngClass"], [1, "mx-element-detail"], [3, "listConfig", "sourceIdentifier", "record", "keyMap", "expanded", "listReset", "parent", "width", "disabled", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange", 4, "ngIf"], [3, "formConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "keyMap", "reset", "width", "onFormChange", "onFieldChange", "onButtonClick", 4, "ngIf"], [3, "listConfig", "sourceIdentifier", "record", "keyMap", "expanded", "listReset", "parent", "disabled", "onFormChange", "onFieldChange", "onButtonClick", "onPageChange", "onSortChange"], [3, "formConfig", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "record", "keyMap", "reset", "onFormChange", "onFieldChange", "onButtonClick"], ["matColumnDef", "action"], ["mat-header-cell", "", "class", "mx-list-action-col", 3, "mx-table-header-hidden", "width", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "mx-list-action-col mx-row-non-editable", 3, "background-color", "color", "width", 4, "matCellDef"], ["mat-header-cell", "", 1, "mx-list-action-col"], ["mat-cell", "", 1, "mx-list-action-col", "mx-row-non-editable"], ["class", "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [3, "buttons", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "context", "originalData", "parentHierarchy", "disabled", "onClick", 4, "ngIf"], [1, "mx-button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "parentHierarchy", "disabled", "onClick"], [3, "buttons", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "context", "originalData", "parentHierarchy", "disabled", "onClick"], ["mat-header-row", ""], ["mat-row", "", "show-delay", "300", "theme", "light", "content-type", "template", "class", "mx-row", 3, "tooltip", "position", "width", "max-width", "ngClass", "mouseenter", "click", 4, "matRowDef", "matRowDefColumns"], ["mat-row", "", "show-delay", "300", "theme", "light", "content-type", "template", 1, "mx-row", 3, "tooltip", "position", "width", "max-width", "ngClass", "mouseenter", "click"], ["mat-row", "", "class", "mx-row", 3, "ngClass", "click", 4, "matRowDef", "matRowDefColumns"], ["mat-row", "", 1, "mx-row", 3, "ngClass", "click"], ["mat-row", "", 1, "mx-detail-row", 2, "background-color", "aliceblue", 3, "ngClass"], [3, "ngStyle", 4, "ngIf"], ["class", "mx-list-hover-tooltip", 3, "ngStyle", 4, "ngIf"], [3, "ngStyle"], [1, "mx-list-hover-tooltip", 3, "ngStyle"]], template: function DynamicListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DynamicListComponent_mat_card_0_Template, 9, 11, "mat-card", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, DynamicListComponent_ng_template_2_Template, 3, 3, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, DynamicListComponent_ng_template_4_Template, 3, 2, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, DynamicListComponent_ng_template_6_Template, 2, 2, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, DynamicListComponent_ng_template_8_Template, 2, 3, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(10, DynamicListComponent_ng_template_10_Template, 1, 1, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(12, DynamicListComponent_ng_template_12_Template, 4, 2, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(14, DynamicListComponent_ng_template_14_Template, 2, 2, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(16, DynamicListComponent_ng_template_16_Template, 1, 1, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._listConfig.permission == null || ctx._listConfig.permission && ɵngcc0.ɵɵpipeBind2(1, 1, ctx._listConfig.permission["subject"], ctx._listConfig.permission["action"]));
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc15.MatCard, ɵngcc15.MatCardContent, ɵngcc15.MatCardHeader, ɵngcc12.MatIcon, ɵngcc15.MatCardAvatar, ɵngcc15.MatCardTitle, ɵngcc15.MatCardSubtitle, ButtonGroupComponent, ɵngcc14.MatDivider, ɵngcc3.NgTemplateOutlet, ɵngcc15.MatCardActions, ɵngcc36.MatPaginator, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, FieldComponent, ɵngcc5.MatMenuTrigger, ɵngcc5._MatMenu, ɵngcc3.NgForOf, ɵngcc5.MatMenuItem, ɵngcc37.InfiniteScrollDirective, ɵngcc38.MatGridList, ɵngcc38.MatGridTile, ButtonComponent, ɵngcc39.MatTable, ɵngcc40.MatSort, ɵngcc39.MatNoDataRow, ɵngcc39.MatColumnDef, ɵngcc39.MatHeaderCellDef, ɵngcc39.MatCellDef, ɵngcc39.MatHeaderRowDef, ɵngcc39.MatRowDef, ɵngcc39.MatHeaderCell, ɵngcc31.MatCheckbox, ɵngcc39.MatCell, ɵngcc40.MatSortHeader, cfTemplateDirective, StaticListComponent, FormComponent, ɵngcc39.MatHeaderRow, ɵngcc39.MatRow, ɵngcc41.TooltipDirective, ɵngcc3.NgStyle, ɵngcc6.DefaultStyleDirective]; }, pipes: function () { return [ɵngcc13.CanPipe]; }, styles: [_c51], encapsulation: 2 });
DynamicListComponent.ctorParameters = () => [
    { type: Ability },
    { type: BreakpointObserver }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DynamicListComponent, [{
        type: Component,
        args: [{
                selector: 'mx-dynamic-list',
                template: "<!-- <pre>\n  {{displayVertical | json}}----\n</pre>  -->\n<mat-card  \n  [class.mx-hide-card]=\"hideCard\"\n  *ngIf=\"(_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission['subject'] | can: _listConfig.permission['action'])))\">\n  <mat-card-header \n    [class.mx-table-hidden]=\"!(_listConfig) || hideHeader || !(_listConfig && _listConfig.header)\"\n    class=\"mx-list-header\" \n    *ngIf=\"hideHeader == false\">\n    <mat-icon \n      mat-card-avatar  \n      *ngIf=\"_listConfig.header && _listConfig.header.icon && _listConfig.header.icon.font && iconPosition == 'BEFORE_TITLE'\"\n      aria-hidden=\"false\" \n      [style.margin-top.px]=\"_listConfig.header.subtitle ? 8 : 0\"\n      [attr.aria-label]=\"_listConfig.header.icon.font\">\n      {{ _listConfig.header.icon.font }}\n    </mat-icon>\n\n    <mat-card-title *ngIf=\"_listConfig.header && _listConfig.header.title\">\n      {{_listConfig.header.title}}\n      <mat-icon \n        *ngIf=\"_listConfig.header && _listConfig.header.icon && _listConfig.header.icon.font && iconPosition == 'AFTER_TITLE'\"\n        aria-hidden=\"false\" [attr.aria-label]=\"_listConfig.header.icon.font\">{{ _listConfig.header.icon.font }}</mat-icon>\n    </mat-card-title>\n    \n    <mat-card-subtitle class=\"mx-list-header-subtitle\" *ngIf=\"_listConfig.header && _listConfig.header.subtitle\">{{ _listConfig.header.subtitle }}</mat-card-subtitle>\n\n    <div class=\"mx-list-header-buttons\" *ngIf=\"_listConfig.header && _listConfig.header.actions\">\n      <mx-button-group \n          [buttons]=\"_listConfig.header.actions\" \n          [sourceIdentifier]=\"sourceIdentifier\"\n          [sourceIndex]=\"sourceIndex\"\n          [widgetArrayIndex]=\"widgetArrayIndex\"\n          [originalData]=\"originalData\"\n          (onClick)=\"buttonClick($event)\">\n      </mx-button-group> \n    </div>\n  </mat-card-header>\n\n  <mat-card-content> \n    <div class=\"mdc-layout-grid mx-list-desc\" *ngIf=\"_listConfig.description && _listConfig.description.text && _listConfig.description.bgColor\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-12\">\n          <div \n            class=\"mx-list-header-desc\"\n            [style.background-color]=\"_listConfig.description.bgColor\"\n            [style.color]=\"_listConfig.description.textColor\"\n          >\n            <mat-icon class=\"mx-list-header-desc-icon\" aria-hidden=\"true\" [attr.aria-label]=\"_listConfig.description.icon\" *ngIf=\"_listConfig.description.icon\">{{_listConfig.description.icon}}</mat-icon>\n            <span>{{ _listConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class=\"mx-list-header-divider\" *ngIf=\"(_listConfig.header && (_listConfig.header.title || _listConfig.header.actions)) || (_listConfig.description && _listConfig.description.text)\"></mat-divider>\n    <mat-card-subtitle *ngIf=\"_listConfig.description && _listConfig.description.text && !_listConfig.description.bgColor\">{{ _listConfig.description.text }}</mat-card-subtitle>\n  \n    <span *ngIf=\"_listConfig\">\n      <ng-container *ngTemplateOutlet=\"cftable\"></ng-container>\n    </span>\n    \n    <mat-card-actions \n      *ngIf=\"hideFooter == false && _listConfig.pagination!='INFINIT_SCROLL' && ((_listConfig) || hideFooter || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission['subject'] | can: _listConfig.permission['action'])))))\"\n      class=\"mx-footer-actions\" \n      align=\"right\">\n      <mat-paginator \n        [length]=\"_record.total\" \n        [pageSize]=\"limit\"\n        [pageSizeOptions]=\"pageSizeOptions\"\n        (page)=\"onPage($event)\"\n        [ngClass]=\"{'page-wise': _listConfig.pagination=='NO_PAGE'}\"\n        [hidePageSize]=\"_listConfig.pagination=='NO_PAGE'\"\n      ></mat-paginator>\n    </mat-card-actions>\n    \n  </mat-card-content>\n</mat-card>\n\n<ng-template #cftable>\n  <span *ngIf=\"!isCustomTemplate && !(isMobile && _listConfig.mobile && _listConfig.mobile.rowHeight)\">\n    <ng-container *ngTemplateOutlet=\"cftablelist\"></ng-container>\n  </span> \n  <span *ngIf=\"isCustomTemplate\">\n    <ng-container \n      [ngTemplateOutlet]=\"cftablemobile\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.row.template.layout}\"></ng-container>\n  </span>\n  <span *ngIf=\"isMobile && _listConfig.mobile && _listConfig.mobile.rowHeight\">\n    <ng-container \n      [ngTemplateOutlet]=\"cftablemobile\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.mobile}\"></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cftablemobile let-layout=\"layout\">\n  <div class=\"mdc-layout-grid mx-card-list\">\n    <div class=\"mdc-layout-grid__inner\" id=\"mxMobileSearchStrip\" *ngIf=\"_listConfig.staticList.hasOnPageFilter || layout.sorting\">\n      <div \n        *ngIf=\"_listConfig.staticList.hasOnPageFilter\"\n        class=\"mx-mobile-search-field-cont mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !layout.sorting ? 12 : 9}}\"\n      >\n        <mx-field \n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['pageFilter']) ? commonListForm.controls['pageFilter'] : null\"\n          [field]=\"filterField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          [value]=\"\"\n          (onFieldChange)=\"updateFilter($event);$event.event.stopPropagation()\"\n          class=\"mx-list-search-field search-mobile\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n      </div>\n      <div \n        *ngIf=\"layout.sorting\"\n        class=\"mx-mobile-sort-field-cont mdc-layout-grid__cell--span-{{ !_listConfig.staticList.hasOnPageFilter && layout.sorting ? 12 : 3}}\"> \n        <mat-icon \n          class=\"mx-mobile-filter-icon\" \n          [ngClass]=\"{'rote':this.sortDirection=='desc'}\" \n          [matMenuTriggerFor]=\"filterMenu\"  \n          aria-label=\"Filter Menu\"\n        >filter_list</mat-icon>\n        <!-- (click)=\"(sortDirection == 'asc' ? sortDirection = 'desc' : sortDirection = 'asc');_record.rows=_record.rows.reverse();\" -->\n        <mat-menu #filterMenu=\"matMenu\">\n          <button \n            class=\"mx-mobile-filter-link\"\n            *ngFor=\"let sorting of layout.sorting\" \n            mat-menu-item\n            (click)=\"onSort({'action':sorting.key, 'direction':sorting.direction})\"\n          >\n            {{sorting.label}}\n            <span class=\"material-icons mx-material-icons\">\n              {{ sorting.direction == \"asc\" ? \"north\" : \"south\" }}\n            </span>\n          </button>\n        </mat-menu>\n      </div>\n    </div>\n    <div \n      *ngIf=\"layout && layout.rowHeight\"\n      [ngClass]=\"{'mx-list-infinite-scroll': _listConfig.pagination=='INFINIT_SCROLL'}\" \n      infiniteScroll \n      [infiniteScrollDistance]=\"2\" \n      [infiniteScrollThrottle]=\"1.5\" \n      [infiniteScrollContainer]=\"scrollRow\" \n      #scrollRow \n      (scrolled)=\"onPage($event)\">\n      <!-- <pre>{{_listConfig.mobile.cells | json}}</pre> -->\n      <mat-card class=\"mx-card-mobile\" *ngFor=\"let row of _record.rows; let rowIndex=index\">\n        <mat-card-content>\n          <mat-grid-list [cols]=\"cellCount\" [rowHeight]=\"layout.rowHeight\">\n            <mat-grid-tile *ngFor=\"let cell of layout.cells\" [colspan]=\"cell.cols\" [rowspan]=\"cell.rows\">\n              <div \n                class=\"mx-card-mobile-cell width-100\"\n                [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\"\n                *ngIf=\"!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;\">\n                <ng-container [ngTemplateOutlet]=\"cfCustomCell\"\n                  [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"></ng-container>\n              </div>\n              <ng-template #elseValue>\n                <div \n                  class=\"mx-card-mobile-cell-inline\"\n                  [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\">\n                  <ng-container [ngTemplateOutlet]=\"cfCustomCell\"\n                    [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"></ng-container>\n                </div>\n              </ng-template>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #cfCustomRowLayout let-layout=\"layout\" let-row=\"row\" let-rowIndex=\"rowIndex\" let-withCard=\"withCard\"> \n  <mat-card class=\"mx-card-mobile\" *ngIf=\"withCard\">\n    <mat-card-content>\n      <ng-container  \n        [ngTemplateOutlet]=\"cfCustomRow\"\n        [ngTemplateOutletContext]=\"{layout: layout, row: row, rowIndex: rowIndex}\"\n      ></ng-container>\n    </mat-card-content>\n  </mat-card>\n  <span class=\"mx-card-mobile\" *ngIf=\"!withCard\">\n    <ng-container  \n      [ngTemplateOutlet]=\"cfCustomRow\"\n      [ngTemplateOutletContext]=\"{layout: layout, row: row, rowIndex: rowIndex}\"\n    ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfCustomRow let-layout=\"layout\" let-row=\"row\" let-rowIndex=\"rowIndex\"> \n  <mat-grid-list \n      [cols]=\"layout.cellCount\"  \n      [rowHeight]=\"layout.rowHeight\">\n      <mat-grid-tile\n        *ngFor=\"let cell of layout.cells\"\n        [colspan]=\"cell.cols\"\n        [rowspan]=\"cell.rows\">\n        <div \n          class=\"mx-card-mobile-cell\" \n          [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\"\n          *ngIf=\"!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;\"> \n          <ng-container \n            [ngTemplateOutlet]=\"cfCustomCell\"\n            [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"\n          ></ng-container>\n        </div>\n        <ng-template #elseValue>\n          <div \n            class=\"mx-card-mobile-cell-inline\"\n            [ngClass]=\"{'mx-primary-text': cell.fieldStyle && cell.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': cell.fieldStyle && cell.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': cell.fieldStyle && cell.fieldStyle.class == 'TERTIARY'}\">\n            <ng-container \n              [ngTemplateOutlet]=\"cfCustomCell\"\n              [ngTemplateOutletContext]=\"{cell:cell, row:row, rowIndex:rowIndex}\"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </mat-grid-tile>\n    </mat-grid-list>   \n</ng-template>\n\n<ng-template #cfCustomCell let-cell=\"cell\" let-row=\"row\" let-rowIndex=\"rowIndex\">\n  <span \n    [ngClass]=\"{'fullwidth': control.fullWidth}\"\n    class=\"{{ control?.alignment?.vertical }} {{ control?.alignment?.horizontal }}\"\n    *ngFor=\"let control of cell.controls; let cControlIndex = index;\">\n    <!-- {{control.control.key}} --> \n    <span \n      class=\"mx-card-mobile-control-separator\"\n      *ngIf=\"cell.displayInline && cell.displayInline.separator && cControlIndex > 0\" \n      [innerHtml]=\"cell.displayInline.separator\"></span>\n\n    <!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== -->\n    <mx-field\n      *ngIf=\"control.control && (!cell.link || (cell.link && cell.linkKey && cell.linkKey != control.control.key)) && control.type == 'FIELD'\" \n      [sourceType]=\"'LIST'\"\n      [sourceIdentifier]=\"_listConfig.identifier\" \n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n      [fieldControl]=\"(formIndex == rowIndex && form != undefined) ? form.controls[control.control.key] : null\"\n      [field]=\"control.control\"\n      [displayMode]=\"displayModes[rowIndex]\" \n      [hideLabel]=\"true\"\n      [value]=\"getValue(control.colIndex, control.cControlIndex, row, control.control.value)\" \n      class=\"mx-list-field\"\n      [ngClass]=\"{'mx-list-field-disabled': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled, 'mx-primary-text': control.fieldStyle && control.fieldStyle.class == 'PRIMARY', 'mx-secondary-text': control.fieldStyle && control.fieldStyle.class == 'SECONDARY', 'mx-tertiary-text': control.fieldStyle && control.fieldStyle.class == 'TERTIARY'}\"\n      [row]=\"row\"\n      [keyMap]=\"keyMap\"\n      (onFieldChange)=\"fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): ''\">\n    </mx-field>\n    <mx-button\n      *ngIf=\"cell.link && ((cell.linkKey && cell.linkKey == control.control.key) || !cell.linkKey) && control.type == 'FIELD'\" \n      [identifier]=\"'listFieldAsLink'\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\"\n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [button]=\"cell.link\"\n      [label]=\"getValue(control.colIndex, control.cControlIndex, row, control.control.value)\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n      [originalData]=\"row\"\n      [parentHierarchy]=\"parent\"\n      [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n      (onClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n    ></mx-button>\n\n    <!-- [formDisplayMode]=\"formConfig.displayMode\" -->\n    <!-- <mx-button-group \n      [ngClass]=\"{'fullwidth': control.fullWidth}\"\n      *ngIf=\"control.type == 'BUTTON'\"\n      [buttons]=\"control.control\" \n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [originalData]=\"row\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n      (onClick)=\"buttonClick($event)\">\n    </mx-button-group> -->\n\n    <mx-button \n      *ngIf=\"control.type == 'BUTTON'\"\n      [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n      [sourceIdentifier]=\"_listConfig.identifier\"\n      [sourceIndex]=\"rowIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [button]=\"control.control\"\n      [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n      [originalData]=\"row\"\n      [parentHierarchy]=\"parent\" \n      [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n      (onClick)=\"setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()\"\n    ></mx-button> \n  </span>\n</ng-template>\n\n<ng-template #cftablelist>\n  <div class=\"mdc-layout-grid mx-table\">\n    <div class=\"mdc-layout-grid__inner\" id=\"mxMobileSearchStrip\" *ngIf=\"_listConfig.staticList.hasOnPageFilter || _listConfig.hasColumnSelection\">\n      <div \n        *ngIf=\"_listConfig.staticList.hasOnPageFilter\"\n        class=\"mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !_listConfig.hasColumnSelection ? 12 : 9}}\"\n      >\n        <mx-field \n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['pageFilter']) ? commonListForm.controls['pageFilter'] : null\"\n          [field]=\"filterField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          [value]=\"\"\n          (onFieldChange)=\"updateFilter($event);$event.event.stopPropagation()\"\n          class=\"mx-list-search-field\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n      </div>\n      <div \n        *ngIf=\"_listConfig.hasColumnSelection\" \n        class=\"mdc-layout-grid__cell--span-{{!_listConfig.staticList.hasOnPageFilter && _listConfig.hasColumnSelection ? 12 : 3}} mdc-layout-grid--align-right\" \n        [style.width.%]=\"100\">\n        <mx-field\n          [sourceType]=\"'FORM'\"\n          [form]=\"commonListForm\" \n          [fieldControl]=\"(commonListForm != undefined && commonListForm.controls['columnSelector']) ? commonListForm.controls['columnSelector'] : null\"\n          [field]=\"columnSelectorField\"\n          [hideLabel]=\"true\"\n          [displayMode]=\"'EDIT'\" \n          class=\"mx-list-sel-col-field\"\n          (onFieldChange)=\"updateColumnDisplay($event)\"\n          [style.width.%]=\"100\">\n        </mx-field>  \n        <!-- ;$event.event.stopPropagation() -->\n      </div>\n    </div>\n    <div class=\"mdc-layout-grid__inner\">\n      <div class=\"mdc-layout-grid__cell--span-12\" *ngIf=\"columnNames\">\n        <table  \n          mat-table  \n          [dataSource]=\"dataSource\" \n          class=\"mx-table\"\n          [ngClass]=\"{'mx-table-hover': _listConfig.shade && _listConfig.shade.type == 'HOVER', 'mx-table-alternate': _listConfig.shade && _listConfig.shade.type == 'ALTERNATE', 'mx-table-without-header': _listConfig.hideHeaderRow}\"\n          multiTemplateDataRows\n          matSort\n          [matSortActive]=\"_listConfig.defaultSort ? _listConfig.defaultSort.column : ''\" \n          matSortDisableClear  \n          [style.width.%]=\"'100'\"\n          [matSortDirection]=\"_listConfig.defaultSort ? _listConfig.defaultSort.order: ''\"\n          (matSortChange)=\"onSort($event)\">\n\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"9999\">\n              {{ _listConfig.noRecordFound ? _listConfig.noRecordFound : 'No data found'}}\n            </td>\n          </tr>\n          \n          <ng-container matColumnDef=\"select\">\n            <th \n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              mat-header-cell \n              *matHeaderCellDef \n              class=\"selectable-column\">\n              <mat-checkbox \n                class=\"mx-list-checkbox-selectable\"\n                (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                [aria-label]=\"checkboxLabel()\">\n              </mat-checkbox>\n            </th>\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              [style.background-color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : ''\"\n              [style.color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : ''\"\n              class=\"selectable-column\">\n              <mat-checkbox \n                class=\"mx-list-checkbox-selectable\"\n                [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                (change)=\"$event ? selection.toggle(row) : null\"\n                [checked]=\"selection.isSelected(row)\"\n                [aria-label]=\"checkboxLabel(row)\">\n              </mat-checkbox>\n                <!-- (click)=\"$event.event.stopPropagation()\" -->\n            </td>\n          </ng-container>\n          \n          <ng-container \n            *ngFor=\"let column of columnConfigs; let colIndex = index\"\n            [matColumnDef]=\"getColumnKey(column)\">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              mat-sort-header\n              disableClear\n              [disabled]=\"!column.sortable\"\n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              [ngClass]=\"{'mx-list-field-first': colIndex == 0}\"\n              [style.width.%]=\"displayVertical ? '' : column.width / totalDispalyableWidth * 100\">\n              {{getColumnLabel(column)}}\n            </th> \n            <!-- [attr.data-label]=\"getColumnLabel(column)\" -->\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              class=\"mx-table-data-cell\"\n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              [style.background-color]=\"cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].bgColor : ''\"\n              [style.color]=\"cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].textColor : ''\"\n              [style.width.%]=\"displayVertical ? '' : column.width / totalDispalyableWidth * 100\"\n              (click)=\"_listConfig.rowAction ? rowClick(row, rowIndex, ((formIndex == rowIndex && form != undefined) ? form.value : null), $event) : _listConfig.rowAction\"\n              >\n\n              <ng-container *ngIf=\"column?.template?.html || column?.template?.layout; else elseDefault\">\n                <div \n                  [style.width.%]=\"100\"\n                  *ngIf=\"column?.template?.html\">\n                  <ng-container *cfTemplate=\"'<style>'+column?.template?.css+'</style>' + column?.template?.html; context: {row: row, index: rowIndex}\"></ng-container>\n                </div>\n                <div \n                  [style.width.%]=\"100\"\n                  *ngIf=\"column?.template?.layout\">\n                  <!-- {{row | json}}--- -->\n                  <ng-container  \n                    [ngTemplateOutlet]=\"cfCustomRowLayout\"\n                    [ngTemplateOutletContext]=\"{layout: column.template.layout, row: row, rowIndex: rowIndex, withCard: false}\"\n                  ></ng-container>\n                </div>\n              </ng-container>\n              <ng-template #elseDefault>\n                <div \n                  [ngClass]=\"{'mx-list-field-not-first': cFieldIndex > 0, 'mx-list-field-inline': column.displayInline && column.displayInline.separator}\" \n                  *ngFor=\"let field of column.fields; let cFieldIndex = index;\">\n                  <span *ngIf=\"column.displayInline && column.displayInline.separator && cFieldIndex > 0\">{{column.displayInline.separator}}</span>\n                  <mx-field\n                    *ngIf=\"!column.link || (column.link && column.linkKey && column.linkKey != field.key)\" \n                    [sourceType]=\"'LIST'\"\n                    [sourceIdentifier]=\"_listConfig.identifier\" \n                    [sourceIndex]=\"rowIndex\" \n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\" \n                    [fieldControl]=\"(formIndex == rowIndex && form != undefined) ? form.controls[field.key] : null\"\n                    [field]=\"field\"\n                    [displayMode]=\"displayModes[rowIndex]\" \n                    [hideLabel]=\"true\"\n                    [value]=\"getValue(colIndex, cFieldIndex, row, field.value)\" \n                    class=\"mx-list-field\"\n                    [ngClass]=\"{'mx-list-field-disabled': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled}\"\n                    [row]=\"row\"\n                    [keyMap]=\"keyMap\"\n                    (onFieldChange)=\"fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): ''\">\n                  </mx-field>\n                  <mx-button\n                    *ngIf=\"column.link && ((column.linkKey && column.linkKey == field.key) || !column.linkKey)\" \n                    [identifier]=\"'listFieldAsLink'\"\n                    [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                    [sourceIdentifier]=\"_listConfig.identifier\"\n                    [sourceIndex]=\"rowIndex\"\n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [button]=\"column.link\"\n                    [label]=\"getValue(colIndex, cFieldIndex, row, field.value)\"\n                    [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n                    [originalData]=\"row\"\n                    [parentHierarchy]=\"parent\"\n                    [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                    (onClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n                  ></mx-button>\n                </div>\n              </ng-template>\n            </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"expandedRow\"> \n            <td \n              mat-cell \n              [ngClass]=\"{'mx-row-editable': inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel', 'mx-row-non-editable': !(inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')}\"\n              *matCellDef=\"let row; let rowIndex = dataIndex\" \n              [attr.colspan]=\"childColumnCount\">\n              <div class=\"mx-element-detail\"\n                  [@detailExpand]=\"row == expandedRow || this._expanded == true ? 'expanded' : 'collapsed'\">\n                <mx-static-list \n                  *ngIf=\"_listConfig.child && _listConfig.child.type == 'LIST' && _listConfig.child.record && (row == expandedRow || _expanded == true)\"\n                  [listConfig]=\"_listConfig.child.record\" \n                  [sourceIdentifier]=\"sourceIdentifier\"\n                  [record]=\"getChildRows(expandedRow)\" \n                  [keyMap]=\"keyMap\"\n                  [expanded]=\"_expanded\"\n                  [listReset]=\"listReset\"\n                  [parent]=\"getObjectTree(row)\"\n                  [style.width.%]=\"100\"\n                  [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                  (onFormChange)=\"formChange($event)\"\n                  (onFieldChange)=\"fieldChange($event);$event.event.stopPropagation()\"\n                  (onButtonClick)=\"buttonClick($event);$event.event.stopPropagation()\"\n                  (onPageChange)=\"onPage($event)\"\n                  (onSortChange)=\"onSort($event)\"  \n                >\n                </mx-static-list>\n                <mx-form \n                    *ngIf=\"_listConfig.child && _listConfig.child.type == 'FORM' && (row == expandedRow || _expanded == true)\"\n                    [formConfig]=\"_listConfig.child.record\"\n                    [sourceIdentifier]=\"_listConfig.identifier\"\n                    [sourceIndex]=\"rowIndex\"\n                    [widgetArrayIndex]=\"widgetArrayIndex\"\n                    [record]=\"getChildRows(expandedRow)\" \n                    [keyMap]=\"keyMap\"\n                    [reset]=\"listReset\"\n                    [style.width.%]=\"100\"\n                    (onFormChange)=\"formChange($event)\"\n                    (onFieldChange)=\"fieldChange($event)\"\n                    (onButtonClick)=\"buttonClick($event)\"\n                ></mx-form>\n              </div>\n            </td> \n          </ng-container>\n      \n          <ng-container \n            *ngIf=\"_listConfig.actions && _listConfig.actions.length > 0\"\n            matColumnDef=\"action\">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              class=\"mx-list-action-col\"\n              [class.mx-table-header-hidden]=\"_listConfig.hideHeaderRow\"\n              [style.width.%]=\"displayVertical ? '' : _listConfig.actionWidth / totalDispalyableWidth * 100\"\n              >\n              Action\n            </th>\n            <td \n              mat-cell \n              *matCellDef=\"let row; let rowIndex = dataIndex\"\n              class=\"mx-list-action-col mx-row-non-editable\"\n              [style.background-color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : ''\"\n              [style.color]=\"rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : ''\"\n              [style.width.%]=\"displayVertical ? '' : _listConfig.actionWidth / totalDispalyableWidth * 100\"\n              > \n              <!-- --{{inlineEditButtons[rowIndex].size}} -->\n              <mx-button \n                *ngIf=\"isInlineEditable && inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].icon\"\n                [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                [sourceIdentifier]=\"_listConfig.identifier\"\n                [sourceIndex]=\"rowIndex\" \n                [widgetArrayIndex]=\"widgetArrayIndex\"\n                [button]=\"inlineEditButtons[rowIndex]\"\n                class=\"mx-button\"\n                [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\" \n                [originalData]=\"row\"\n                [parentHierarchy]=\"parent\" \n                [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                (onClick)=\"setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()\"\n              ></mx-button> \n              <mx-button-group\n                  *ngIf=\"!isInlineEditable || (inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == 'Cancel')\"\n                  [buttons]=\"_listConfig.actions\"\n                  [form]=\"(formIndex == rowIndex && form != undefined) ? form : null\"\n                  [sourceIdentifier]=\"_listConfig.identifier\"\n                  [sourceIndex]=\"rowIndex\"\n                  [widgetArrayIndex]=\"widgetArrayIndex\"\n                  [context]=\"(formIndex == rowIndex && form != undefined) ? form.value : null\"\n                  [originalData]=\"row\"\n                  [parentHierarchy]=\"parent\"\n                  [disabled]=\"(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled\"\n                  (onClick)=\"buttonClick($event);\"\n              ></mx-button-group>\n            </td>\n          </ng-container> \n          <tr \n            mat-header-row \n            *matHeaderRowDef=\"columnNames; sticky: _listConfig.stickyHeader\"\n          ></tr>\n          <div *ngIf=\"(_listConfig.row &&_listConfig.row.hover);else withoutTooltip\">\n            <tr \n              mat-row \n              *matRowDef=\"let row; columns: columnNames; let i = dataIndex;\"\n              [tooltip]=\"rowHoverTemplate\"\n              show-delay=\"300\"\n              [position]=\"tooltipPosition\"\n              [width]=\"_listConfig?.row?.hover?.width\"  \n              [max-width]=\"_listConfig?.row?.hover?.width\"\n              theme=\"light\"\n              content-type=\"template\"\n              class=\"mx-row\"\n              [ngClass]=\"{'without-hover': !(_listConfig.row &&_listConfig.row.hover)}\"\n              (mouseenter)=\"onHover($event,i, (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row)\" \n              (click)=\"expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row\"\n            ></tr>\n          </div>\n\n          <ng-template #withoutTooltip>\n            <tr \n              mat-row \n              *matRowDef=\"let row; columns: columnNames; let i = dataIndex;\"\n              class=\"mx-row\"\n              [ngClass]=\"{'without-hover': !(_listConfig.row &&_listConfig.row.hover)}\"\n              (click)=\"expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row\"\n            ></tr>\n          </ng-template>\n          <!-- [tooltip]=\"rowHoverTemplate\"\n          placement=\"bottom\"\n          content-type=\"template\"\n          hideDelayTouchscreen=0\n          hide-delay=100\n          show-delay=100\n          animation-duration=100\n          max-width=_listConfig?.row?.hover?.width\n          display=\"_listConfig.row && _listConfig.row.hover && (_listConfig.row.hover.template || _listConfig.row.hover.layout)\"\n          theme=\"light\"\n           -->\n          <tr  \n            style=\"background-color: aliceblue;\"\n            mat-row  \n            *matRowDef=\"let row; columns: ['expandedRow']\" \n            [ngClass]=\"{'mx-detail-row-hide': !_listConfig.child || !_listConfig.child.record}\"\n            class=\"mx-detail-row\"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-template> \n\n<ng-template #rowHoverTemplate>\n  <div *ngIf=\"_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.component\" [ngStyle]=\"{'width': _listConfig.row.hover.width + 'px'}\">\n    <!-- <ndc-dynamic\n      [ndcDynamicComponent]=\"_listConfig.row.hover.template.component\"\n      [ndcDynamicInputs]=\"hoverRowData\"\n    ></ndc-dynamic> -->\n  </div>\n  <div *ngIf=\"_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.layout\" [ngStyle]=\"{'width': _listConfig.row.hover.width + 'px'}\" class=\"mx-list-hover-tooltip\">\n    <ng-container  \n      [ngTemplateOutlet]=\"cfCustomRowLayout\"\n      [ngTemplateOutletContext]=\"{layout: _listConfig.row.hover.template.layout, row: hoverRowData, rowIndex: hoverRowIndex, withCard: false}\"\n    ></ng-container>\n  </div>\n</ng-template> \n\n<ng-template #rowTemplate>\n  <div *ngIf=\"_listConfig?.row?.template\">\n    <!-- <ndc-dynamic [ndcDynamicComponent]=\"_listConfig.row.template\"></ndc-dynamic> -->\n  </div>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-list-header .mat-card-header-text{margin:0!important}.mx-list-header .mat-card-title{margin-top:6px}.mx-list-header .mat-card-avatar{font-size:40px;padding-right:8px}.mat-card-subtitle,.mx-list-header-subtitle .mat-card-subtitle{padding-top:8px}.mx-list-header-buttons{position:absolute;right:5px;top:5px}.mx-table-header-hidden,.mx-table-hidden{display:none!important}.mx-table-without-header thead,.mx-table-without-header tr.mat-header-row{height:0!important}table{width:100%}.mx-list-desc,.mx-table{padding:0!important}.mx-hide-card{padding:0}td,th{max-width:200px;white-space:normal;word-wrap:break-word}.mx-element-detail{border-left:2px groove #f5f5f5;display:flex;overflow:hidden;padding-right:3px;width:100%}.mx-list-action-col{text-align:right!important}tr.mx-detail-row{background-color:#f5f5f5;height:0!important}tr.mx-detail-row-hide{display:none!important}.sticky{position:-webkit-sticky;position:sticky}.selectable-column{padding-right:1%}.rote{transform:rotateX(180deg)}.mx-element-detail>th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:0!important}.mat-card-content{margin-bottom:0!important}.mx-list-header-desc{margin:5px 0;padding:5px 10px;width:auto}.mx-list-header-desc-icon{font-size:15px;height:15px;margin-top:0;padding:0 5px 0 0;width:15px}.mx-table-alternate tr.mat-row:nth-child(odd),.mx-table-hover tr.mat-row:hover{background:#f5f5f5}.mx-table-alternate tr.mat-row:not(:nth-child(4n+1)){background:#fff}.mx-list-field .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:0}.mx-list-field-not-first{padding-top:5px}.mx-list-field-disabled{color:rgba(0,0,0,.5411764705882353)}.mx-list-checkbox-selectable{padding-right:12px}.mx-list-field-inline{display:inline}@media screen and (max-width:599px){.mat-table{border:0;vertical-align:middle}.mat-table caption{font-size:1em}.mat-table .mat-header-row{display:none}.mat-table .mat-header-cell{border:10px solid;clip:rect(0 0 0 0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.mat-table .mat-row{border-bottom:5px solid #ddd;display:block;height:unset}.mat-table .mat-cell{display:block;font-size:1em;font-weight:700}.mat-table .mx-row-non-editable{border-bottom-width:1px;padding:12px 8px!important}.mat-table .mx-row-editable{border-bottom-width:0;padding:0 8px!important}.mat-table .mat-cell:before{content:attr(data-label);float:left;font-size:.85em;font-weight:400}.mat-table .mat-cell:last-child{border-bottom:0}.mat-table .mat-row td{max-width:unset}}.mx-card-list{padding:0}.mx-card-list mat-card{padding:8px}.mx-card-mobile{margin-bottom:12px;word-wrap:break-word}.mx-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.mx-card-mobile .mx-primary-text .mx-field-value{font-size:18px;font-weight:400;margin-bottom:none}.mx-card-mobile .mx-secondary-text .mx-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.mx-card-mobile .mx-tertiary-text .mx-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.mx-card-mobile .mx-card-mobile-cell{display:block;width:100%}.mx-card-mobile .mx-card-mobile-cell .fullwidth button{width:100%}.mx-card-mobile .mx-card-mobile-cell .mx-primary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-secondary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-tertiary-text .mx-field-value{display:block}.mx-card-mobile .mx-card-mobile-cell .fullwidth button,.mx-card-mobile .mx-card-mobile-cell .fullwidth mat-chip{width:100%}.mx-card-mobile .mx-card-mobile-cell-inline{display:inline-block;width:100%}.mx-card-mobile .mx-card-mobile-cell-inline .mx-card-mobile-control-separator{padding:4px}.hover-template{display:none;position:absolute;z-index:9999}.mx-row:hover .without-hover{pointer-events:none}.mx-list-infinite-scroll{height:69vh;overflow-y:auto}.search-mobile{margin-right:10px}.mx-mobile-search-field-cont,.mx-mobile-sort-field-cont{display:flex}.sticky{background:#fff;border-bottom:1px solid #d3cece;left:0;margin:0 auto;padding:10px 20px;position:fixed;right:0;top:0;width:88%;z-index:99}.sticky+.content{padding-top:102px}.mx-mobile-filter-icon{padding-top:8px}.mx-mobile-filter-link{text-align:end}.mx-list-hover-tooltip{padding:8px}.right-align-forced{text-align:right;width:100%}.width-100{height:100%;width:100%!important}.top{top:0}.middle{top:40%}.bottom{bottom:0}.left{left:0}.left,.right{display:block;position:absolute;width:auto}.right{right:0}.center{display:block;left:50%;position:absolute;width:auto}.mat-drawer-inner-container{overflow:hidden!important}.mx-material-icons{font-size:12px}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }, { type: ɵngcc35.BreakpointObserver }]; }, null); })();

class ModalComponent {
    constructor(dialogRef, data, ability) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.ability = ability;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        AbilityUtils.setAbility(this.ability);
    }
    ngOnInit() {
    }
    click(event) {
        this.dialogRef.close(event);
    }
    fieldChange(fieldChange) {
        console.log(fieldChange);
        this.onFieldChange.emit(fieldChange);
    }
    formChange(form) {
        this.onFormChange.emit(form);
    }
    buttonClick(event) {
        console.log(event);
        this.onButtonClick.emit(event);
    }
}
ModalComponent.ɵfac = function ModalComponent_Factory(t) { return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalComponent, selectors: [["mx-modal"]], outputs: { onFormChange: "onFormChange", onFieldChange: "onFieldChange", onButtonClick: "onButtonClick" }, decls: 1, vars: 1, consts: [[3, "formConfig", "sourceIndex", "record", "originalData", "keyMap", "reset", "onFieldChange", "onFormChange", "onButtonClick", 4, "ngIf"], [3, "formConfig", "sourceIndex", "record", "originalData", "keyMap", "reset", "onFieldChange", "onFormChange", "onButtonClick"]], template: function ModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ModalComponent_mx_form_0_Template, 1, 7, "mx-form", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.data && ctx.data.type == "FORM");
    } }, directives: function () { return [ɵngcc3.NgIf, FormComponent]; }, styles: [".mx-dialog-action{text-align:right}.mx-dialog-action>.mx-button{margin-right:8px}.mat-dialog-container{padding:0!important}"], encapsulation: 2 });
ModalComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
    { type: Ability }
];
ModalComponent.propDecorators = {
    onFormChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalComponent, [{
        type: Component,
        args: [{
                selector: 'mx-modal',
                template: "<!-- <h1 mat-dialog-title *ngIf=\"title\">{{title}}</h1>\n<div mat-dialog-content *ngIf=\"message\">\n  <p>{{message}}</p>\n</div>\n<div \n  mat-dialog-actions \n  [style.text-align]=\"'right'\"\n  class=\"mx-dialog-action\">\n</div> -->\n\n<!-- <pre>\n    {{data | json}}\n</pre> -->\n<mx-form \n    *ngIf=\"data && data.type == 'FORM'\"\n    [formConfig]=\"data.widgetConfig\"\n    [sourceIndex]=\"data.sourceIndex\"\n    [record]=\"data.context ? data.context[data.widgetConfig.identifier] : data.context\"\n    [originalData]=\"data.originalData && data.originalData.record ? data.originalData.record[data.widgetConfig.identifier] : {}\"  \n    [keyMap]=\"data.keyMap\"\n    [reset]=\"data.reset\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onFormChange)=\"formChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n></mx-form>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-dialog-action{text-align:right}.mx-dialog-action>.mx-button{margin-right:8px}.mat-dialog-container{padding:0!important}"]
            }]
    }], function () { return [{ type: ɵngcc1.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }, { type: ɵngcc2.Ability }]; }, { onFormChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }] }); })();

class AdminLayoutComponent {
    constructor(ability) {
        this.ability = ability;
        AbilityUtils.setAbility(this.ability);
    }
    ngOnInit() {
    }
}
AdminLayoutComponent.ɵfac = function AdminLayoutComponent_Factory(t) { return new (t || AdminLayoutComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
AdminLayoutComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AdminLayoutComponent, selectors: [["app-admin-layout"]], decls: 2, vars: 0, template: function AdminLayoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, "admin-layout works!");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
AdminLayoutComponent.ctorParameters = () => [
    { type: Ability }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AdminLayoutComponent, [{
        type: Component,
        args: [{
                selector: 'app-admin-layout',
                template: "<p>admin-layout works!</p>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }]; }, null); })();

class CrudHeaderComponent {
    constructor(ability) {
        this.ability = ability;
        this.onButtonClick = new EventEmitter();
        this.badgeButtons = new Array();
        AbilityUtils.setAbility(this.ability);
    }
    get pageBackRoute() {
        return this._pageBackRoute;
    }
    set pageBackRoute(_pageBackRoute) {
        this._pageBackRoute = _pageBackRoute;
        this.addBackButton();
    }
    ngOnInit() {
        this.setIconPosition();
        this.addBackButton();
        this.transformBadgeButtons();
    }
    setIconPosition() {
        this.iconPosition = "BEFORE_TITLE" /* BEFORE_TITLE */;
        if (this.icon && this.icon.position) {
            this.iconPosition = this.icon.position;
        }
    }
    transformBadgeButtons() {
        if (this.badges && this.badges.length > 0) {
            let index = 0;
            for (let badge of this.badges) {
                this.badgeButtons.push({
                    identifier: 'crudHeaderBadge-' + index,
                    type: "CHIP" /* CHIP */,
                    label: badge.content,
                    color: this.badgeColorToButtonColor(badge.color),
                    size: "micro" /* MICRO */,
                    groupIdentifier: "crudHeaderGroup",
                });
            }
        }
    }
    badgeColorToButtonColor(color) {
        let buttonColor;
        if (color == "accent" /* ASCENT */) {
            buttonColor = "accent" /* ASCENT */;
        }
        else if (color == "primary" /* PRIMARY */) {
            buttonColor = "primary" /* PRIMARY */;
        }
        else if (color == "warn" /* WARN */) {
            buttonColor = "warn" /* WARN */;
        }
        return buttonColor;
    }
    addBackButton() {
        if (!this._pageBackRoute || CollectionUtils.isEmpty(this._pageBackRoute)) {
            return;
        }
        let backButton;
        if (CollectionUtils.isEmpty(this.actions)) {
            this.actions = new Array();
        }
        backButton = {
            identifier: "crudBackButton",
            label: "Back",
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: "keyboard_return",
            type: "GHOST" /* GHOST */,
            onlyIcon: false,
            routerLink: this._pageBackRoute,
            displayInFormModes: [
                "CRUD_FORM" /* CRUD_FORM */
            ]
        };
        let backAlreadyAdded = false;
        for (let action of this.actions) {
            if (action.identifier == "crudBackButton") {
                backAlreadyAdded = true;
            }
        }
        if (!backAlreadyAdded) {
            this.actions.unshift(backButton);
            this.actions = JSON.parse(JSON.stringify(this.actions));
        }
    }
    buttonClick(event) {
        console.log(event);
        this.onButtonClick.emit(event);
    }
}
CrudHeaderComponent.ɵfac = function CrudHeaderComponent_Factory(t) { return new (t || CrudHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
CrudHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudHeaderComponent, selectors: [["mx-crud-header"]], inputs: { pageBackRoute: "pageBackRoute", _pageBackRoute: "_pageBackRoute", actions: "actions", identifier: "identifier", title: "title", subtitle: "subtitle", description: "description", badges: "badges", icon: "icon", style: "style", formDisplayMode: "formDisplayMode", showHeader: "showHeader", originalData: "originalData", context: "context" }, outputs: { onButtonClick: "onButtonClick" }, decls: 13, vars: 14, consts: [[1, "mx-header"], [1, "mdc-layout-grid"], [1, "mdc-layout-grid__inner"], [1, "mx-crud-header"], ["mat-card-avatar", "", "class", "mx-crud-header-icon-before", "aria-hidden", "false", 3, "margin-top", 4, "ngIf"], ["class", "mx-crud-header-icon-after", "aria-hidden", "false", 4, "ngIf"], ["class", "mx-crud-header-subtitle", 4, "ngIf"], ["class", "mx-crud-header-badge", 4, "ngIf"], [3, "class", 4, "ngIf"], ["class", "mx-crud-header-divider", 4, "ngIf"], ["mat-card-avatar", "", "aria-hidden", "false", 1, "mx-crud-header-icon-before"], ["aria-hidden", "false", 1, "mx-crud-header-icon-after"], [1, "mx-crud-header-subtitle"], [1, "mx-crud-header-badge"], [3, "buttons", "sourceIdentifier", "sourceIndex", "onClick"], [3, "buttons", "sourceIdentifier", "formDisplayMode", "sourceIndex", "originalData", "context", "onClick"], [1, "mx-crud-header-divider"]], template: function CrudHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵelementStart(4, "mat-card-header", 3);
        ɵngcc0.ɵɵtemplate(5, CrudHeaderComponent_mat_icon_5_Template, 2, 4, "mat-icon", 4);
        ɵngcc0.ɵɵelementStart(6, "mat-card-title");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵtemplate(8, CrudHeaderComponent_mat_icon_8_Template, 2, 2, "mat-icon", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, CrudHeaderComponent_mat_card_subtitle_9_Template, 2, 1, "mat-card-subtitle", 6);
        ɵngcc0.ɵɵtemplate(10, CrudHeaderComponent_span_10_Template, 2, 3, "span", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, CrudHeaderComponent_div_11_Template, 2, 11, "div", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, CrudHeaderComponent_mat_divider_12_Template, 1, 0, "mat-divider", 9);
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("padding", ctx.style && ctx.style.hideCard ? "0px 16px" : "auto");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMapInterpolate3("mdc-layout-grid__cell--span-", ctx.actions && ctx.actions.length > 0 ? 6 : 12, "-desktop mdc-layout-grid__cell--span-", ctx.actions && ctx.actions.length > 0 ? 4 : 8, "-tablet mdc-layout-grid__cell--span-", ctx.actions && ctx.actions.length > 0 ? 3 : 4, "-phone mdc-layout-grid__cell--align-middle");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon && ctx.icon.font && ctx.iconPosition == "BEFORE_TITLE");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon && ctx.icon.font && ctx.iconPosition == "AFTER_TITLE");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.subtitle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.badges && ctx.badges.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actions && ctx.actions.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.title || ctx.actions && ctx.actions.length > 0) && ctx.description && !ctx.description.bgColor);
    } }, directives: [ɵngcc15.MatCardHeader, ɵngcc3.NgIf, ɵngcc15.MatCardTitle, ɵngcc12.MatIcon, ɵngcc15.MatCardAvatar, ɵngcc15.MatCardSubtitle, ButtonGroupComponent, ɵngcc14.MatDivider], styles: [".mx-crud-header[_ngcontent-%COMP%]     .mat-card-header-text{margin:0!important}.mx-crud-header[_ngcontent-%COMP%]   .mat-card-title[_ngcontent-%COMP%]{margin-top:6px}.mx-crud-header[_ngcontent-%COMP%]   .mat-card-avatar[_ngcontent-%COMP%]{font-size:40px;padding-right:8px}.mat-card-subtitle[_ngcontent-%COMP%], .mx-crud-header-subtitle[_ngcontent-%COMP%]   .mat-card-subtitle[_ngcontent-%COMP%]{padding-top:0!important}.mx-crud-header-btns[_ngcontent-%COMP%]{background:#faebd7;margin-left:8px;padding:2px 5px}.mx-header[_ngcontent-%COMP%] > .mdc-layout-grid[_ngcontent-%COMP%]{padding:0!important}.mx-crud-header-button[_ngcontent-%COMP%]{margin-top:-8px}.mx-crud-header-badge[_ngcontent-%COMP%]{vertical-align:text-bottom}.mdc-layout-grid[_ngcontent-%COMP%]{padding:0 0 10px!important}.mx-crud-header-icon-after[_ngcontent-%COMP%]{padding-left:10px}"] });
CrudHeaderComponent.ctorParameters = () => [
    { type: Ability }
];
CrudHeaderComponent.propDecorators = {
    identifier: [{ type: Input }],
    title: [{ type: Input }],
    subtitle: [{ type: Input }],
    description: [{ type: Input }],
    badges: [{ type: Input }],
    icon: [{ type: Input }],
    style: [{ type: Input }],
    _pageBackRoute: [{ type: Input }],
    pageBackRoute: [{ type: Input }],
    formDisplayMode: [{ type: Input }],
    actions: [{ type: Input }],
    showHeader: [{ type: Input }],
    originalData: [{ type: Input }],
    context: [{ type: Input }],
    onButtonClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mx-crud-header',
                template: "<div \n  class=\"mx-header\"\n  [style.padding]=\"style && style.hideCard ? '0px 16px' : 'auto'\"\n>\n    <div class=\"mdc-layout-grid\">\n        <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 6 : 12}}-desktop mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 4 : 8}}-tablet mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 3 : 4}}-phone mdc-layout-grid__cell--align-middle\">\n            <mat-card-header class=\"mx-crud-header\">\n              <mat-icon\n                mat-card-avatar \n                class=\"mx-crud-header-icon-before\"\n                *ngIf=\"icon && icon.font && iconPosition == 'BEFORE_TITLE'\"\n                aria-hidden=\"false\" \n                [style.margin-top.px]=\"subtitle ? 8 : 0\"\n                [attr.aria-label]=\"icon.font\"\n                >{{ icon.font }}</mat-icon>\n\n              <mat-card-title>\n                {{ title }} \n                <mat-icon \n                  class=\"mx-crud-header-icon-after\"\n                  *ngIf=\"icon && icon.font && iconPosition == 'AFTER_TITLE'\"\n                  aria-hidden=\"false\" [attr.aria-label]=\"icon.font\">{{ icon.font }}</mat-icon>\n              </mat-card-title>\n              \n              <!-- <mat-card-subtitle *ngIf=\"description && description.text && !description.bgColor\">{{ description.text }}</mat-card-subtitle> -->\n\n              <mat-card-subtitle class=\"mx-crud-header-subtitle\" *ngIf=\"subtitle\">{{ subtitle }}</mat-card-subtitle>\n\n              <span class=\"mx-crud-header-badge\" *ngIf=\"badges && badges.length > 0\"> \n                  <mx-button-group\n                      [buttons]=\"badgeButtons\"\n                      [sourceIdentifier]=\"identifier\"\n                      [sourceIndex]=\"'0'\"\n                      (onClick)=\"buttonClick($event)\"\n                  ></mx-button-group>\n              </span>\n            </mat-card-header>\n          </div>\n          <div \n            class=\"mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 6 : 0}}-desktop mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 4 : 0}}-tablet mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 1 : 0}}-phone mdc-layout-grid__cell--align-middle mdc-layout-grid--align-right mx-crud-header-button\" \n            *ngIf=\"actions && actions.length > 0\">\n            <!-- <pre>{{actions | json}}</pre> --> \n            <mx-button-group\n                [buttons]=\"actions\"\n                [sourceIdentifier]=\"identifier\"\n                [formDisplayMode]=\"formDisplayMode\"\n                [sourceIndex]=\"'0'\"\n                [originalData]=\"originalData\"\n                [context]=\"context\"\n                (onClick)=\"buttonClick($event)\"\n            ></mx-button-group> \n          </div>\n        </div> \n    </div>\n</div>\n<mat-divider class=\"mx-crud-header-divider\" *ngIf=\"(title || (actions && actions.length > 0)) && description && !description.bgColor\"></mat-divider>\n",
                styles: [".mx-crud-header ::ng-deep .mat-card-header-text{margin:0!important}.mx-crud-header .mat-card-title{margin-top:6px}.mx-crud-header .mat-card-avatar{font-size:40px;padding-right:8px}.mat-card-subtitle,.mx-crud-header-subtitle .mat-card-subtitle{padding-top:0!important}.mx-crud-header-btns{background:#faebd7;margin-left:8px;padding:2px 5px}.mx-header>.mdc-layout-grid{padding:0!important}.mx-crud-header-button{margin-top:-8px}.mx-crud-header-badge{vertical-align:text-bottom}.mdc-layout-grid{padding:0 0 10px!important}.mx-crud-header-icon-after{padding-left:10px}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }]; }, { onButtonClick: [{
            type: Output
        }], pageBackRoute: [{
            type: Input
        }], _pageBackRoute: [{
            type: Input
        }], actions: [{
            type: Input
        }], identifier: [{
            type: Input
        }], title: [{
            type: Input
        }], subtitle: [{
            type: Input
        }], description: [{
            type: Input
        }], badges: [{
            type: Input
        }], icon: [{
            type: Input
        }], style: [{
            type: Input
        }], formDisplayMode: [{
            type: Input
        }], showHeader: [{
            type: Input
        }], originalData: [{
            type: Input
        }], context: [{
            type: Input
        }] }); })();

class FormHeaderComponent {
    constructor(ability) {
        this.ability = ability;
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.fields = new Array();
        this.buttons = new Array();
        this.formInitialized = true;
        AbilityUtils.setAbility(this.ability);
    }
    get formDisplayMode() {
        return this._formDisplayMode;
    }
    set formDisplayMode(_formDisplayMode) {
        while (1) {
            if (this.formInitialized) {
                if (_formDisplayMode != this._formDisplayMode) {
                    this._formDisplayMode = _formDisplayMode;
                    this.init();
                }
                break;
            }
        }
    }
    ngOnInit() {
        this.formInitialized = true;
    }
    init() {
        this.getFormHeader();
        this.setIconPosition();
        this.saperateFormActions();
    }
    getFormHeader() {
        let title = this.formHeaderConfig.title;
        this.subtitle = this.formHeaderConfig.subtitle;
        switch (this._formDisplayMode) {
            case "SEARCH" /* SEARCH */: {
                title = this.formHeaderConfig.searchModeTitle ? this.formHeaderConfig.searchModeTitle : title;
                break;
            }
            case "ADD" /* ADD */: {
                title = this.formHeaderConfig.addModeTitle ? this.formHeaderConfig.addModeTitle : title;
                break;
            }
            case "EDIT" /* EDIT */: {
                title = this.formHeaderConfig.editModeTitle ? this.formHeaderConfig.editModeTitle : title;
                break;
            }
            case "VIEW" /* VIEW */: {
                title = this.formHeaderConfig.viewModeTitle ? this.formHeaderConfig.viewModeTitle : title;
                break;
            }
            default: {
                title = this.formHeaderConfig.title;
            }
        }
        if (this.widgetArrayIndex != null) {
            title += " - " + (this.widgetArrayIndex + 1);
        }
        this.title = title;
    }
    setIconPosition() {
        this.iconPosition = "BEFORE_TITLE" /* BEFORE_TITLE */;
        if (this.formHeaderConfig.icon && this.formHeaderConfig.icon.position) {
            this.iconPosition = this.formHeaderConfig.icon.position;
        }
    }
    saperateFormActions() {
        console.log("1");
        if (!CollectionUtils.isEmpty(this.formActions)) {
            this.buttons = [];
            this.fields = [];
            this.formActions.forEach(formAction => {
                if (ButtonUtils.instanceOfAnyButtonType(formAction)) {
                    this.buttons.push(formAction);
                }
                else {
                    this.fields.push(formAction);
                }
            });
            this.initFormGroup();
        }
    }
    initFormGroup() {
        if (this.fields && this.fields.length > 0) {
            let formFields = new Array();
            this.fields.map(field => {
                field.alwaysEnable = true;
                formFields.push({ 'field': field, 'addMore': false });
            });
            this.form = FormUtils.initFormGroup(formFields, {}, {}, "ADD" /* ADD */);
        }
    }
    fieldChange(fieldChange) {
        //    console.log(fieldChange);
        this.onFieldChange.emit(fieldChange);
    }
    buttonClick(event) {
        this.onButtonClick.emit(event);
    }
}
FormHeaderComponent.ɵfac = function FormHeaderComponent_Factory(t) { return new (t || FormHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
FormHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormHeaderComponent, selectors: [["mx-form-header"]], inputs: { formDisplayMode: "formDisplayMode", _formDisplayMode: "_formDisplayMode", form: "form", formHeaderConfig: "formHeaderConfig", description: "description", help: "help", formIdentifier: "formIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", originalData: "originalData", context: "context", formActions: "formActions" }, outputs: { onFieldChange: "onFieldChange", onButtonClick: "onButtonClick" }, decls: 11, vars: 15, consts: [[1, "mx-form-header"], ["mat-card-avatar", "", "aria-hidden", "false", 3, "margin-top", 4, "ngIf"], [1, "mx-form-header-title"], ["mat-card-avatar", "", "aria-hidden", "false", "class", "mx-form-header-after-icon", 4, "ngIf"], ["aria-hidden", "true", "class", "mx-hint-icon", 3, "matTooltip", "matTooltipPosition", 4, "ngIf"], ["class", "mx-form-header-subtitle", 4, "ngIf"], [1, "mx-form-header-buttons"], [3, "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "value", "onFieldChange", 4, "ngFor", "ngForOf"], ["class", "mx-form-header-between-action", 4, "ngIf"], [3, "buttons", "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "formDisplayMode", "context", "originalData", "onClick"], ["mat-card-avatar", "", "aria-hidden", "false"], ["mat-card-avatar", "", "aria-hidden", "false", 1, "mx-form-header-after-icon"], ["aria-hidden", "true", 1, "mx-hint-icon", 3, "matTooltip", "matTooltipPosition"], [1, "mx-form-header-subtitle"], [3, "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "field", "displayMode", "value", "onFieldChange"], [1, "mx-form-header-between-action"]], template: function FormHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card-header", 0);
        ɵngcc0.ɵɵtemplate(1, FormHeaderComponent_mat_icon_1_Template, 2, 4, "mat-icon", 1);
        ɵngcc0.ɵɵelementStart(2, "mat-card-title", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵtemplate(4, FormHeaderComponent_mat_icon_4_Template, 2, 2, "mat-icon", 3);
        ɵngcc0.ɵɵtemplate(5, FormHeaderComponent_mat_icon_5_Template, 2, 4, "mat-icon", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, FormHeaderComponent_mat_card_subtitle_6_Template, 2, 1, "mat-card-subtitle", 5);
        ɵngcc0.ɵɵelementStart(7, "div", 6);
        ɵngcc0.ɵɵtemplate(8, FormHeaderComponent_mx_field_8_Template, 1, 7, "mx-field", 7);
        ɵngcc0.ɵɵtemplate(9, FormHeaderComponent_span_9_Template, 1, 0, "span", 8);
        ɵngcc0.ɵɵelementStart(10, "mx-button-group", 9);
        ɵngcc0.ɵɵlistener("onClick", function FormHeaderComponent_Template_mx_button_group_onClick_10_listener($event) { return ctx.buttonClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formHeaderConfig.icon && ctx.formHeaderConfig.icon.font && ctx.iconPosition == "BEFORE_TITLE");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.title, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formHeaderConfig.icon && ctx.formHeaderConfig.icon.font && ctx.iconPosition == "AFTER_TITLE");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.help && ctx.help.message && ctx.help.icon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.subtitle);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.fields);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.fields && ctx.fields.length > 0 && ctx.buttons && ctx.buttons.length > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("buttons", ctx.buttons)("form", ctx.form)("sourceIdentifier", ctx.formIdentifier)("sourceIndex", ctx.sourceIndex)("widgetArrayIndex", ctx.widgetArrayIndex)("formDisplayMode", ctx._formDisplayMode)("context", ctx.context)("originalData", ctx.originalData);
    } }, directives: [ɵngcc15.MatCardHeader, ɵngcc3.NgIf, ɵngcc15.MatCardTitle, ɵngcc3.NgForOf, ButtonGroupComponent, ɵngcc12.MatIcon, ɵngcc15.MatCardAvatar, ɵngcc10.MatTooltip, ɵngcc15.MatCardSubtitle, FieldComponent], styles: [".mx-form-header-buttons{position:absolute;right:0;text-align:right;top:5px}.mat-card-header-text{margin:0 0 10px}.mx-form-header-title{margin-top:0!important}.mx-form-header-after-icon{text-align:center}.mx-form-header-between-action{margin-right:8px}.mx-hint-icon{font-size:75%}"], encapsulation: 2 });
FormHeaderComponent.ctorParameters = () => [
    { type: Ability }
];
FormHeaderComponent.propDecorators = {
    form: [{ type: Input }],
    formHeaderConfig: [{ type: Input }],
    description: [{ type: Input }],
    help: [{ type: Input }],
    _formDisplayMode: [{ type: Input }],
    formDisplayMode: [{ type: Input }],
    formIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    originalData: [{ type: Input }],
    context: [{ type: Input }],
    formActions: [{ type: Input }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mx-form-header',
                template: "<mat-card-header class=\"mx-form-header\">\n    <mat-icon \n        *ngIf=\"formHeaderConfig.icon && formHeaderConfig.icon.font && iconPosition == 'BEFORE_TITLE'\"\n        mat-card-avatar \n        aria-hidden=\"false\" \n        [style.margin-top.px]=\"subtitle ? 8 : 0\"\n        [attr.aria-label]=\"formHeaderConfig.icon.font\">{{ formHeaderConfig.icon.font }}</mat-icon>\n\n    <mat-card-title class=\"mx-form-header-title\">\n        {{ title }}\n        <mat-icon \n            mat-card-avatar\n            *ngIf=\"formHeaderConfig.icon && formHeaderConfig.icon.font && iconPosition == 'AFTER_TITLE'\"\n            aria-hidden=\"false\" \n            [attr.aria-label]=\"formHeaderConfig.icon.font\"\n            class=\"mx-form-header-after-icon\">\n            {{ formHeaderConfig.icon.font }}</mat-icon>\n            <mat-icon \n                *ngIf=\"help && help.message && help.icon\" \n                aria-hidden=\"true\" \n                [attr.aria-label]=\"help.message\" \n                [matTooltip]=\"help.message\"\n                [matTooltipPosition]=\"help.position\"\n                class=\"mx-hint-icon\">\n                {{help.icon ? help.icon : 'live_help'}}\n            </mat-icon>\n    </mat-card-title>\n\n    <mat-card-subtitle class=\"mx-form-header-subtitle\" *ngIf=\"subtitle\">{{ subtitle }}</mat-card-subtitle>\n\n    <div class=\"mx-form-header-buttons\">\n        <!-- {{fields | json}} -->\n        <mx-field \n            *ngFor=\"let field of fields\"\n            [sourceIdentifier]=\"formIdentifier\" \n            [sourceIndex]=\"sourceIndex\" \n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [form]=\"form\"\n            [fieldControl]=\"form.controls[field.key]\"\n            [field]=\"field\"\n            [displayMode]=\"_formDisplayMode\" \n            [value]=\"\"\n            (onFieldChange)=\"fieldChange($event)\">\n        </mx-field> \n        <span *ngIf=\"fields && fields.length > 0 && buttons && buttons.length > 0\" class=\"mx-form-header-between-action\"></span>\n        <!-- {{context | json}} -->\n        <!-- {{ originalData | json }} -->\n        <!-- --{{_formDisplayMode | json}}==== -->\n        <mx-button-group \n            [buttons]=\"buttons\" \n            [form]=\"form\" \n            [sourceIdentifier]=\"formIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [formDisplayMode]=\"_formDisplayMode\" \n            [context]=\"context\"\n            [originalData]=\"originalData\"\n            (onClick)=\"buttonClick($event)\">\n        </mx-button-group>  \n    </div>\n</mat-card-header>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-form-header-buttons{position:absolute;right:0;text-align:right;top:5px}.mat-card-header-text{margin:0 0 10px}.mx-form-header-title{margin-top:0!important}.mx-form-header-after-icon{text-align:center}.mx-form-header-between-action{margin-right:8px}.mx-hint-icon{font-size:75%}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }]; }, { onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], formDisplayMode: [{
            type: Input
        }], _formDisplayMode: [{
            type: Input
        }], form: [{
            type: Input
        }], formHeaderConfig: [{
            type: Input
        }], description: [{
            type: Input
        }], help: [{
            type: Input
        }], formIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], originalData: [{
            type: Input
        }], context: [{
            type: Input
        }], formActions: [{
            type: Input
        }] }); })();

class FormComponent {
    // headerReload: boolean = false;
    //  unflatten = require('flat').unflatten;
    constructor(ability, breakpointObserver) {
        this.ability = ability;
        this.breakpointObserver = breakpointObserver;
        this.onFormChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.formFields = new Array();
        this.cellCount = 12;
        this.showButtons = true;
        this.formLayouts = new Array();
        this.formInitialized = true;
        AbilityUtils.setAbility(this.ability);
    }
    get formConfig() {
        return this._formConfig;
    }
    set formConfig(_formConfig) {
        this._formConfig = _formConfig;
        // this.headerReload = false;
        while (1) {
            if (this.formInitialized) {
                // setTimeout(() => {this.headerReload = true;}, 20);
                console.log("1");
                this.init();
                break;
            }
        }
    }
    get supportingRecord() {
        return this._supportingRecord;
    }
    set supportingRecord(_supportingRecord) {
        this._supportingRecord = _supportingRecord;
        this.initFormGroup();
    }
    get record() {
        return this._record;
    }
    set record(_record) {
        this._record = _record;
        if (this.originalData) { }
        else {
            this.originalData = this._record;
        }
        this.initFormGroup();
    }
    get reset() {
        return this._reset;
    }
    set reset(_reset) {
        this._reset = _reset;
        if (this._reset == true) {
            FormUtils.reset(this.form, this.formConfig);
        }
    }
    ngOnInit() {
        this.formInitialized = true;
    }
    init() {
        this.getLayout();
        this.getActions();
        //    this.fieldDefaultSetting();
        this.dependencies = Object.assign(Object.assign({}, DependentUtils.getDependencyTree(this.formConfig.formFields)), DependentUtils.getDependencyTreeForButton(this.formConfig.action));
        this.getCustomLayout();
    }
    getCustomLayout() {
        if (this.formConfig.showCustomLayout) {
            FormCustomUtils.setCustomLayout(this.formConfig, this.formConfig.layout);
        }
        else {
            this.formConfig.showCustomLayout = false;
        }
    }
    getActions() {
        if (this.formConfig && this.formConfig.action && this.formConfig.action.align && this.formConfig.action.buttons && this.formConfig.action.buttons.length > 0) {
            this.formButton = this.formConfig.action;
        }
        if (this.formConfig && this.formConfig.action && this.formConfig.action.cells && this.formConfig.action.cells.length > 0) {
            this.formButtonLayout = this.formConfig.action;
        }
    }
    dependentFieldChange(action) {
        if (this.formConfig.identifier == action.sourceIdentifier) {
            let newRecord = ObjectUtils.unflatten(this.form.getRawValue());
            this.record = Object.assign(Object.assign({}, this.record), newRecord);
            console.log(this.record);
            this.initFormGroup();
            this.showButtons = false;
            setTimeout(() => {
                this.showButtons = true;
            }, 50);
        }
    }
    fieldChange(fieldChange) {
        this.onFieldChange.emit(fieldChange);
        this.onFormChange.emit(this.form);
    }
    buttonClick(event) {
        this.onButtonClick.emit(event);
    }
    fieldDefaultSetting() {
        if (this.formConfig) {
            for (let formField of this.formConfig.formFields) {
                if (!formField.field.fieldDisplayType) {
                    formField.field.fieldDisplayType = this.formConfig.displayType;
                }
            }
            if (!this.formConfig.displayInColumns) {
                this.formConfig.displayInColumns = 1;
            }
        }
        this.setTitle();
    }
    setTitle() {
        if (this.formConfig.header) {
            let title = this.formConfig.header.title;
            switch (this.formConfig.displayMode) {
                case "ADD" /* ADD */:
                    if (this.formConfig.header.addModeTitle) {
                        title = this.formConfig.header.addModeTitle;
                    }
                    break;
                case "EDIT" /* EDIT */:
                    if (this.formConfig.header.editModeTitle) {
                        title = this.formConfig.header.editModeTitle;
                    }
                    break;
                case "VIEW" /* VIEW */:
                    if (this.formConfig.header.viewModeTitle) {
                        title = this.formConfig.header.viewModeTitle;
                    }
                    break;
                case "BLOCKED" /* BLOCKED */:
                    if (this.formConfig.header.viewModeTitle) {
                        title = this.formConfig.header.viewModeTitle;
                    }
                    break;
            }
            this.formConfig.header.title = title;
        }
    }
    initFormGroup() {
        KeyMapUtils.setOptionssUsingValues(this.keyMap, false, "FORM" /* FORM */, this.formConfig, this._record);
        this.form = FormUtils.initFormGroup(this.formConfig.formFields, this._supportingRecord, this._record, this.formConfig.displayMode);
        this.onFormChange.emit(this.form);
        if (this.isMobile || this.isTablet || this.isDesktop) {
            this.resetDisplayInColumn();
        }
    }
    // isValidButton(button: Button): boolean {
    //   let isValid: boolean = false;
    //   if (button.displayInFormModes.indexOf(this.formConfig.displayMode) > -1) {
    //     isValid = true;
    //   }
    //   return isValid;
    // }
    // isNewRow(index: number): string {
    //   let displayRow: string = "";
    //   if (index % this.formConfig.displayInColumns == 0) {
    //     displayRow = "row";
    //   }
    //   return displayRow;
    // }
    getFormValue() {
        return FormUtils.getRawValue(this.form);
    }
    transformRows() {
        let sectionLabel = "";
        let formLayouts = new Array();
        let index = -1;
        let displayInColumns = this.formConfig.displayInColumns;
        if (this.formConfig.formFields && this.form) {
            for (let formField of this.formConfig.formFields) {
                if (this.form.controls[formField.field.key] && DependentUtils.displayDependencyField(formField.field.dependentOnFields, this._supportingRecord, this._record)) {
                    if (formField.separator || sectionLabel == "") {
                        formLayouts.push({
                            sectionLabel: formField && formField.separator && formField.separator.label ? formField.separator.label : "",
                            sectionIcon: formField && formField.separator && formField.separator.icon ? formField.separator.icon : "",
                            sectionExpandable: formField && formField.separator && formField.separator.expandable ? formField.separator.expandable : null,
                            rows: new Array()
                        });
                        sectionLabel = "-";
                        index++;
                    }
                    if (formLayouts[index]) {
                        let rLength = formLayouts[index].rows.length;
                        if (formLayouts[index].rows.length == 0) {
                            formLayouts[index].rows.push({ columns: new Array() });
                            formLayouts[index].rows[0].columns = new Array();
                        }
                        let cLength = this.formFieldRowColumnCount(formLayouts, index);
                        if (cLength >= displayInColumns) {
                            formLayouts[index].rows[rLength] = { columns: new Array() };
                        }
                        formLayouts[index].rows[formLayouts[index].rows.length - 1].columns.push(formField);
                    }
                }
            }
        }
        this.formLayouts = formLayouts;
    }
    formFieldRowColumnCount(formLayouts, index) {
        let colCount = 0;
        for (let cCnt = 0; cCnt < formLayouts[index].rows[formLayouts[index].rows.length - 1].columns.length; cCnt++) {
            if (formLayouts[index].rows[formLayouts[index].rows.length - 1].columns[cCnt].displayInColumns) {
                colCount += formLayouts[index].rows[formLayouts[index].rows.length - 1].columns[cCnt].displayInColumns;
            }
            else {
                colCount += 1;
                formLayouts[index].rows[formLayouts[index].rows.length - 1].columns[cCnt].displayInColumns = 1;
            }
        }
        return colCount;
    }
    toggleList(formLayout) {
        if (formLayout.sectionExpandable && formLayout.sectionExpandable.allowed) {
            if (formLayout.sectionExpandable.default == "EXPAND" /* EXPAND */) {
                formLayout.sectionExpandable.default = "COLLAPSE" /* COLLAPSE */;
            }
            else {
                formLayout.sectionExpandable.default = "EXPAND" /* EXPAND */;
            }
        }
    }
    getLayout() {
        this.breakpointSubscription = this.breakpointObserver.observe([
            Breakpoints.XSmall,
            Breakpoints.Small,
            Breakpoints.Medium,
            Breakpoints.Large,
            Breakpoints.XLarge
        ]).subscribe((state) => {
            if (state.breakpoints[Breakpoints.XSmall]) {
                this.isMobile = true;
                console.log('Matches XSmall viewport');
            }
            if (state.breakpoints[Breakpoints.Small]) {
                this.isTablet = true;
                console.log('Matches Small viewport');
            }
            if (state.breakpoints[Breakpoints.Medium]) {
                this.isDesktop = true;
                console.log('Matches Medium  viewport');
            }
            if (state.breakpoints[Breakpoints.Large]) {
                this.isDesktop = true;
                console.log('Matches Large viewport');
            }
            if (state.breakpoints[Breakpoints.XLarge]) {
                this.isDesktop = true;
                console.log('Matches XLarge viewport');
            }
            this.resetButtonDisplay();
            this.resetDisplayInColumn();
        });
    }
    resetButtonDisplay() {
        if (this.formConfig && this.formConfig.action && !CollectionUtils.isEmpty(this.formConfig.action.buttons)) {
            if ((this.isMobile || this.isTablet) && !ButtonUtils.hasWidth(this.formConfig.action.buttons)) {
                ButtonUtils.setEqualWidth(this.formConfig.action.buttons);
            }
        }
    }
    resetDisplayInColumn() {
        if (this.formConfig && this.formConfig.displayInColumns) {
            if (this.isMobile) {
                this.cellCount = 4;
                this.formConfig.displayInColumns = this.getNewDisplayInColumn("mobile", this.formConfig.displayInColumns);
            }
            if (this.isTablet) {
                this.cellCount = 8;
                this.formConfig.displayInColumns = this.getNewDisplayInColumn("tablet", this.formConfig.displayInColumns);
            }
        }
        if (this.formConfig && !CollectionUtils.isEmpty(this.formConfig.formFields)) {
            this.formConfig.formFields.forEach(formField => {
                if (formField.displayInColumns) {
                    if (this.isMobile) {
                        this.cellCount = 4;
                        formField.displayInColumns = this.getNewDisplayInColumn("mobile", formField.displayInColumns);
                    }
                    if (this.isTablet) {
                        this.cellCount = 8;
                        formField.displayInColumns = this.getNewDisplayInColumn("tablet", formField.displayInColumns);
                    }
                }
                else {
                    formField.displayInColumns = 1;
                }
            });
        }
        this.fieldDefaultSetting();
        this.transformRows();
    }
    getNewDisplayInColumn(device, displayInColumn) {
        let displayInColumnMap = new Map();
        let mobileMap = new Map();
        mobileMap.set(12, 1);
        mobileMap.set(11, 1);
        mobileMap.set(10, 1);
        mobileMap.set(9, 1);
        mobileMap.set(8, 1);
        mobileMap.set(7, 1);
        mobileMap.set(6, 1);
        mobileMap.set(5, 1);
        mobileMap.set(4, 1);
        mobileMap.set(3, 1);
        mobileMap.set(2, 1);
        mobileMap.set(1, 1);
        displayInColumnMap.set("mobile", mobileMap);
        let tabletMap = new Map();
        tabletMap.set(12, 2);
        tabletMap.set(11, 2);
        tabletMap.set(10, 2);
        tabletMap.set(9, 2);
        tabletMap.set(8, 2);
        tabletMap.set(7, 2);
        tabletMap.set(6, 2);
        tabletMap.set(5, 2);
        tabletMap.set(4, 2);
        tabletMap.set(3, 2);
        tabletMap.set(2, 2);
        tabletMap.set(1, 1);
        displayInColumnMap.set("tablet", tabletMap);
        return displayInColumnMap.get(device).get(displayInColumn);
    }
    ngOnDestroy() {
        if (this.breakpointSubscription) {
            this.breakpointSubscription.unsubscribe();
        }
    }
}
FormComponent.ɵfac = function FormComponent_Factory(t) { return new (t || FormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability), ɵngcc0.ɵɵdirectiveInject(ɵngcc35.BreakpointObserver)); };
FormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FormComponent, selectors: [["mx-form"]], inputs: { formConfig: "formConfig", _formConfig: "_formConfig", supportingRecord: "supportingRecord", record: "record", originalData: "originalData", reset: "reset", form: "form", sourceIdentifier: "sourceIdentifier", sourceIndex: "sourceIndex", widgetArrayIndex: "widgetArrayIndex", keyMap: "keyMap" }, outputs: { onFormChange: "onFormChange", onFieldChange: "onFieldChange", onButtonClick: "onButtonClick" }, decls: 6, vars: 4, consts: [["class", "mx-form-container", 4, "ngIf"], ["cfCustomCell", ""], ["cfControl", ""], [1, "mx-form-container"], ["class", "mx-form-header", 3, "formHeaderConfig", "description", "help", "sourceIndex", "widgetArrayIndex", "formIdentifier", "form", "originalData", "context", "formActions", "formDisplayMode", "onFieldChange", "onButtonClick", 4, "ngIf"], [4, "ngIf"], ["class", "mx-card-mobile", 4, "ngIf"], ["class", "mx-form-action", 3, "text-align", 4, "ngIf"], ["class", "mx-form-action", 4, "ngIf"], [1, "mx-form-header", 3, "formHeaderConfig", "description", "help", "sourceIndex", "widgetArrayIndex", "formIdentifier", "form", "originalData", "context", "formActions", "formDisplayMode", "onFieldChange", "onButtonClick"], ["class", "mdc-layout-grid mx-table", 4, "ngIf"], ["class", "mx-form-header-divider", 4, "ngIf"], [1, "fields-container"], [4, "ngFor", "ngForOf"], [1, "mdc-layout-grid", "mx-table"], [1, "mdc-layout-grid__inner"], [1, "mx-form-header-desc"], ["class", "mx-form-header-desc-icon", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mx-form-header-desc-icon"], [1, "mx-form-header-divider"], ["class", "mx-form-separator", 3, "click", 4, "ngIf"], ["class", "mx-form-section-divider", 4, "ngIf"], [1, "mdc-layout-grid", "mx-form-field-container", 3, "hidden"], ["class", "mdc-layout-grid__inner", 4, "ngFor", "ngForOf"], [1, "mx-form-separator", 3, "click"], ["matListIcon", "", 4, "ngIf"], [3, "ngClass"], ["class", "mx-form-section-showhide", "matListIcon", "", 4, "ngIf"], ["matListIcon", ""], ["matListIcon", "", 1, "mx-form-section-showhide"], [1, "mx-form-section-divider"], [3, "class", 4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "mx-card-mobile"], [3, "cols", "rowHeight"], [3, "colspan", "rowspan", 4, "ngFor", "ngForOf"], [3, "colspan", "rowspan"], ["class", "mx-card-mobile-cell-container", 4, "ngIf", "ngIfElse"], ["elseValue", ""], [1, "mx-card-mobile-cell-container"], ["class", "mx-card-mobile-cell-inline", 4, "ngIf", "ngIfElse"], [1, "mx-card-mobile-cell-inline"], [1, "mx-card-mobile-cell"], ["class", "mx-form-separator", 4, "ngIf"], [1, "mx-form-separator"], [1, "mx-form-action"], [3, "buttons", "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "originalData", "context", "onClick"], [3, "buttons", "form", "formDisplayMode", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "originalData", "context", "onClick", 4, "ngIf"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["class", "mx-card-mobile-control-separator", 3, "innerHtml", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [1, "mx-card-mobile-control-separator", 3, "innerHtml"], ["class", "mx-form-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "keyMap", "fieldControl", "field", "originalData", "displayMode", "value", "dependencies", "onDependentFieldChange", "onFieldChange", "onButtonClick", 4, "ngIf"], [3, "ngIf"], [1, "mx-form-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "keyMap", "fieldControl", "field", "originalData", "displayMode", "value", "dependencies", "onDependentFieldChange", "onFieldChange", "onButtonClick"], [1, "mx-form-field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "fieldIndex", "form", "keyMap", "fieldControl", "field", "originalData", "displayMode", "value", "isAddMore", "addMorePermission", "device", "displayInColumns", "dependencies", "onDependentFieldChange", "onFieldChange", "onButtonClick"]], template: function FormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FormComponent_mat_card_0_Template, 6, 5, "mat-card", 0);
        ɵngcc0.ɵɵpipe(1, "can");
        ɵngcc0.ɵɵtemplate(2, FormComponent_ng_template_2_Template, 1, 1, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, FormComponent_ng_template_4_Template, 2, 2, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", (ctx.isMobile || ctx.isTablet || ctx.isDesktop) && ctx.formConfig && (ctx.formConfig.permission == null || ctx.formConfig.permission && ɵngcc0.ɵɵpipeBind2(1, 1, ctx.formConfig.permission["subject"], ctx.formConfig.permission["action"])));
    } }, directives: [ɵngcc3.NgIf, ɵngcc15.MatCard, FormHeaderComponent, ɵngcc15.MatCardContent, ɵngcc3.NgForOf, ɵngcc12.MatIcon, ɵngcc14.MatDivider, ɵngcc15.MatCardSubtitle, ɵngcc21.MatList, ɵngcc21.MatListItem, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc21.MatListIconCssMatStyler, ɵngcc3.NgTemplateOutlet, ɵngcc38.MatGridList, ɵngcc38.MatGridTile, ɵngcc15.MatCardActions, ButtonGroupComponent, FieldComponent], pipes: [ɵngcc13.CanPipe], styles: [":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}body{margin:0}.mx-form-container{box-shadow:none!important}.mx-form-field{width:100%}.mx-form-separator{font-size:12px}.mx-form-separator .mat-list-item-content{padding-left:0!important}.mdc-layout-grid{padding:0!important}.mat-card-header-text{margin:0}.mx-form-header-desc{padding:5px 10px;width:auto}.mx-form-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mat-card-subtitle{padding-top:12px}.mx-form-field-container{padding-top:8px!important}.fields-container .mat-list-base{padding-top:0!important}.mx-form-separator-expandable{color:#00f!important;cursor:pointer;text-decoration:underline}.mx-form-section-showhide{font-size:16px!important;height:16px!important;width:16px!important}.mx-form-button-grid-cell-left{bottom:8px;left:8px;position:absolute}.mx-form-button-grid-cell-right{bottom:8px;position:absolute;right:8px}.mx-form-section-divider{border-top-color:#696969;border-top-width:2px!important}::-webkit-scrollbar{height:8px;width:8px}::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 4px rgba(0,0,0,.38);border-radius:2px}::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 2px rgba(0,0,0,.5);border-radius:8px}::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb:window-inactive{background:rgba(0,0,0,.38)}.mx-card-mobile{margin-bottom:12px;word-wrap:break-word}.mx-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.mx-card-mobile .mx-primary-text .mx-field-value{font-size:18px;font-weight:400;margin-bottom:none}.mx-card-mobile .mx-secondary-text .mx-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.mx-card-mobile .mx-tertiary-text .mx-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.mx-card-mobile .mx-card-mobile-cell-container{width:100%}.mx-card-mobile .mx-card-mobile-cell{display:block;padding:4px;width:100%}.mx-card-mobile .mx-card-mobile-cell .fullwidth button{width:100%}.mx-card-mobile .mx-card-mobile-cell .mx-primary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-secondary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-tertiary-text .mx-field-value{display:block}.mx-card-mobile .mx-card-mobile-cell .fullwidth button,.mx-card-mobile .mx-card-mobile-cell .fullwidth mat-chip{width:100%}.mx-card-mobile .mx-card-mobile-cell-inline{display:inline-block;padding:4px;width:100%}.mx-card-mobile .mx-card-mobile-cell-inline .mx-card-mobile-control-separator{padding:4px}.mx-card-mobile .mx-card-mobile-cell-inline .mx-field-lbl-for-label{display:inherit}"], encapsulation: 2 });
FormComponent.ctorParameters = () => [
    { type: Ability },
    { type: BreakpointObserver }
];
FormComponent.propDecorators = {
    _formConfig: [{ type: Input }],
    formConfig: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    originalData: [{ type: Input }],
    keyMap: [{ type: Input }],
    onFormChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    supportingRecord: [{ type: Input }],
    record: [{ type: Input }],
    reset: [{ type: Input }],
    form: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormComponent, [{
        type: Component,
        args: [{
                selector: 'mx-form',
                template: "<mat-card *ngIf=\"(isMobile || isTablet || isDesktop) && formConfig && (formConfig.permission == null || (formConfig.permission && (formConfig.permission['subject'] | can: formConfig.permission['action'])))\" class=\"mx-form-container\">\n  <!-- <mat-card *ngIf=\"formConfig && (formConfig.permission == null || (formConfig.permission && (formConfig.permission['subject'] | can: formConfig.permission['action'])))\"> -->\n  <!-- --{{formConfig.displayMode}}=== -->\n  <mx-form-header \n    *ngIf=\"formConfig.header && formConfig.header.title\"\n    class=\"mx-form-header\"\n    [formHeaderConfig]=\"formConfig.header\"  \n    [description]=\"formConfig.description\"\n    [help]=\"formConfig.help\"\n    [sourceIndex]=\"sourceIndex\"\n    [widgetArrayIndex]=\"widgetArrayIndex\"\n    [formIdentifier]=\"formConfig.identifier\"\n    [form]=\"form\"\n    [originalData]=\"originalData\"\n    [context]=\"getFormValue()\"\n    [formActions]=\"formConfig.header.actions\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n    [formDisplayMode]=\"formConfig.displayMode\" \n  ></mx-form-header>  \n\n  <mat-card-content *ngIf=\"!formConfig.showCustomLayout\">\n    <div class=\"mdc-layout-grid mx-table\" *ngIf=\"formConfig.description && formConfig.description.text && formConfig.description.bgColor\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-{{cellCount}}\">\n          <div \n            class=\"mx-form-header-desc\"\n            [style.background-color]=\"formConfig.description.bgColor\"\n            [style.color]=\"formConfig.description.textColor\"\n          >\n            <mat-icon class=\"mx-form-header-desc-icon\" aria-hidden=\"true\" [attr.aria-label]=\"formConfig.description.icon\" *ngIf=\"formConfig.description.icon\">{{formConfig.description.icon}}</mat-icon>\n            <span>{{ formConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class=\"mx-form-header-divider\" *ngIf=\"formConfig.formFields && formConfig.formFields.length > 0 && (formConfig.header && formConfig.header.title) && (!formConfig.description || !formConfig.description.bgColor)\"></mat-divider>\n    <mat-card-subtitle *ngIf=\"formConfig.description && formConfig.description.text && !formConfig.description.bgColor\">{{ formConfig.description.text }}</mat-card-subtitle>\n\n    <div class=\"fields-container\">\n      <mat-list *ngFor=\"let formLayout of formLayouts\">\n        <mat-list-item \n          *ngIf=\"formLayout.sectionLabel\" \n          class=\"mx-form-separator\" \n          (click)=\"toggleList(formLayout)\">\n          <mat-icon *ngIf=\"formLayout.sectionIcon\" matListIcon>{{ formLayout.sectionIcon }}</mat-icon>\n          <span>\n            <span [ngClass]=\"{'mx-form-separator-expandable': formLayout.sectionExpandable && formLayout.sectionExpandable.allowed}\">\n              {{formLayout.sectionLabel}}\n            </span>\n            <mat-icon class=\"mx-form-section-showhide\" *ngIf=\"formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == 'COLLAPSE'\" matListIcon>keyboard_arrow_down</mat-icon>\n            <mat-icon class=\"mx-form-section-showhide\" *ngIf=\"formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == 'EXPAND'\" matListIcon>keyboard_arrow_up</mat-icon>\n          </span>\n          \n        </mat-list-item>\n        <mat-divider class=\"mx-form-section-divider\" *ngIf=\"formLayout.sectionLabel && ((!formLayout.sectionExpandable || !formLayout.sectionExpandable.allowed) || (formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == 'EXPAND'))\"></mat-divider>\n        <div class=\"mdc-layout-grid mx-form-field-container\" [hidden]=\"formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == 'COLLAPSE'\">\n          <!-- <pre>{{formLayout | json}}</pre> -->\n          <div class=\"mdc-layout-grid__inner\" *ngFor=\"let row of formLayout.rows; let rIndex = index;\">\n            <div class=\"mdc-layout-grid__cell--span-{{cellCount / formConfig.displayInColumns * (column.displayInColumns ? column.displayInColumns : 1)}} mdc-layout-grid__cell--align-top\" *ngFor=\"let column of row.columns\">\n              <!-- <pre>\n                {{column | json}}\n                {{form.controls[column.field.key]}}\n              </pre> -->\n              <ng-container \n                [ngTemplateOutlet]=\"cfControl\"\n                [ngTemplateOutletContext]=\"{formField: column}\"\n              ></ng-container>\n            </div>\n          </div>\n        </div> \n      </mat-list>\n    </div>\n  </mat-card-content>\n  <!-- <pre>{{originalData | json}}</pre> -->\n\n  <mat-card-content class=\"mx-card-mobile\" *ngIf=\"formConfig.showCustomLayout\">\n    <mat-grid-list \n      [cols]=\"formConfig.layout.cellCount\"  \n      [rowHeight]=\"formConfig.layout.rowHeight\">\n      <mat-grid-tile\n        *ngFor=\"let cell of formConfig.layout.cells\"\n        [colspan]=\"cell.cols\"\n        [rowspan]=\"cell.rows\">\n        <span class=\"mx-card-mobile-cell-container\" *ngIf=\"cell.controls && cell.controls.length > 0; else elseValue;\">\n          <div class=\"mx-card-mobile-cell-inline\" *ngIf=\"cell.displayInline && cell.displayInline.separator; else elseValue;\"> \n            <ng-container \n              [ngTemplateOutlet]=\"cfCustomCell\"\n              [ngTemplateOutletContext]=\"{cell:cell}\"\n            ></ng-container>\n          </div>\n          <ng-template #elseValue>\n            <div class=\"mx-card-mobile-cell\">\n              <ng-container  \n                [ngTemplateOutlet]=\"cfCustomCell\"\n                [ngTemplateOutletContext]=\"{cell:cell}\"\n              ></ng-container>\n            </div>\n          </ng-template>\n        </span>\n        <ng-template #elseValue>\n          <span\n            *ngIf=\"cell.separator && (cell.separator.label || cell.separator.icon)\" \n            class=\"mx-form-separator\" \n          >\n            <mat-icon *ngIf=\"cell.separator.icon\" matListIcon>{{ cell.separator.icon }}</mat-icon>\n            <span>{{cell.separator.label}}</span>\n          </span>\n        </ng-template>\n    </mat-grid-tile>\n    </mat-grid-list>   \n  </mat-card-content>\n\n  <mat-card-actions \n    class=\"mx-form-action\"  \n    [style.text-align]=\"formButton.align\"\n    *ngIf=\"formButton && showButtons\">\n    <mx-button-group \n      [buttons]=\"formButton.buttons\" \n      [form]=\"form\" \n      [formDisplayMode]=\"formConfig.displayMode\"\n      [sourceIdentifier]=\"formConfig.identifier\"\n      [sourceIndex]=\"sourceIndex\" \n      [widgetArrayIndex]=\"widgetArrayIndex\"\n      [originalData]=\"originalData\"\n      [context]=\"getFormValue()\" \n      (onClick)=\"buttonClick($event)\"> \n    </mx-button-group>\n  </mat-card-actions> \n\n  <mat-card-actions  \n    class=\"mx-form-action\"  \n    *ngIf=\"formButtonLayout && showButtons\">\n    <mat-grid-list \n      [cols]=\"cellCount\"  \n      [rowHeight]=\"formButtonLayout.rowHeight\">\n      <mat-grid-tile\n        *ngFor=\"let cell of formButtonLayout.cells\"\n        [colspan]=\"cell.cols\"\n        [rowspan]=\"cell.rows\"> \n        <div \n          [ngClass]=\"{'mx-form-button-grid-cell-left': cell.buttons.align == 'left', 'mx-form-button-grid-cell-right': cell.buttons.align == 'right', 'mx-form-button-grid-cell-center': cell.buttons.align == 'center'}\">\n          <mx-button-group \n            *ngIf=\"cell && cell.buttons && cell.buttons.buttons\"\n            [buttons]=\"cell.buttons.buttons\" \n            [form]=\"form\" \n            [formDisplayMode]=\"formConfig.displayMode\"\n            [sourceIdentifier]=\"formConfig.identifier\"\n            [sourceIndex]=\"sourceIndex\" \n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [originalData]=\"originalData\"\n            [context]=\"getFormValue()\" \n            (onClick)=\"buttonClick($event)\">\n          </mx-button-group>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card-actions> \n</mat-card>\n\n<ng-template #cfCustomCell let-cell=\"cell\"> \n  <span \n    [ngClass]=\"{'fullwidth': control.fullWidth}\"\n    *ngFor=\"let control of cell.controls; let cControlIndex = index;\">\n    <!-- {{control.control.key}} --> \n    <span \n      class=\"mx-card-mobile-control-separator\"\n      *ngIf=\"cell.displayInline && cell.displayInline.separator && cControlIndex > 0\" \n      [innerHtml]=\"cell.displayInline.separator\"></span>\n\n      <!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== -->\n      <!-- //{{control.colIndex}}-{{control.cControlIndex}} -->\n      <ng-container \n        *ngIf=\"control.type == 'FIELD'\"\n        [ngTemplateOutlet]=\"cfControl\"\n        [ngTemplateOutletContext]=\"{formField: control.control}\"\n      ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfControl let-formField=\"formField\">\n  <mx-field \n    *ngIf=\"formField && !formField.addMore\"\n    [sourceType]=\"'FORM'\"\n    [sourceIdentifier]=\"formConfig.identifier\" \n    [sourceIndex]=\"sourceIndex\" \n    [widgetArrayIndex]=\"widgetArrayIndex\"\n    [form]=\"form\" \n    [keyMap]=\"keyMap\"\n    [fieldControl]=\"form.controls[formField.field.key]\"\n    [field]=\"formField.field\"\n    [originalData]=\"originalData\"\n    [displayMode]=\"formConfig.displayMode\" \n    [value]=\"\" \n    [dependencies]=\"dependencies\"\n    (onDependentFieldChange)=\"dependentFieldChange($event)\"\n    (onFieldChange)=\"fieldChange($event)\"\n    (onButtonClick)=\"buttonClick($event)\"\n    class=\"mx-form-field\">\n  </mx-field>\n  <ng-template [ngIf]=\"formField && formField.addMore\">\n    <span *ngFor=\"let fieldControl of form.controls[formField.field.key]['controls']; let i=index;\">\n      <mx-field\n        [sourceType]=\"'FORM'\"\n        [sourceIdentifier]=\"formConfig.identifier\" \n        [sourceIndex]=\"sourceIndex\" \n        [widgetArrayIndex]=\"widgetArrayIndex\"\n        [fieldIndex]=\"i\"\n        [form]=\"form\" \n        [keyMap]=\"keyMap\"\n        [fieldControl]=\"fieldControl\"\n        [field]=\"formField.field\"\n        [originalData]=\"originalData\"\n        [displayMode]=\"formConfig.displayMode\" \n        [value]=\"\" \n        [isAddMore]=\"formField.addMore\"\n        [addMorePermission]=\"formField.addMorePermission\"\n        [device]=\"isDesktop ? 'desktop' : (isTablet ? 'tablet' : 'mobile')\"\n        [displayInColumns]=\"cellCount / formConfig.displayInColumns * (formField.displayInColumns ? formField.displayInColumns : 1)\"\n        [dependencies]=\"dependencies\"\n        (onDependentFieldChange)=\"dependentFieldChange($event)\"\n        (onFieldChange)=\"fieldChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n        class=\"mx-form-field\">\n      </mx-field>\n    </span>\n  </ng-template>\n</ng-template>\n\n",
                encapsulation: ViewEncapsulation.None,
                styles: [":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}body{margin:0}.mx-form-container{box-shadow:none!important}.mx-form-field{width:100%}.mx-form-separator{font-size:12px}.mx-form-separator .mat-list-item-content{padding-left:0!important}.mdc-layout-grid{padding:0!important}.mat-card-header-text{margin:0}.mx-form-header-desc{padding:5px 10px;width:auto}.mx-form-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mat-card-subtitle{padding-top:12px}.mx-form-field-container{padding-top:8px!important}.fields-container .mat-list-base{padding-top:0!important}.mx-form-separator-expandable{color:#00f!important;cursor:pointer;text-decoration:underline}.mx-form-section-showhide{font-size:16px!important;height:16px!important;width:16px!important}.mx-form-button-grid-cell-left{bottom:8px;left:8px;position:absolute}.mx-form-button-grid-cell-right{bottom:8px;position:absolute;right:8px}.mx-form-section-divider{border-top-color:#696969;border-top-width:2px!important}::-webkit-scrollbar{height:8px;width:8px}::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 4px rgba(0,0,0,.38);border-radius:2px}::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 2px rgba(0,0,0,.5);border-radius:8px}::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb:window-inactive{background:rgba(0,0,0,.38)}.mx-card-mobile{margin-bottom:12px;word-wrap:break-word}.mx-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.mx-card-mobile .mx-primary-text .mx-field-value{font-size:18px;font-weight:400;margin-bottom:none}.mx-card-mobile .mx-secondary-text .mx-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.mx-card-mobile .mx-tertiary-text .mx-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.mx-card-mobile .mx-card-mobile-cell-container{width:100%}.mx-card-mobile .mx-card-mobile-cell{display:block;padding:4px;width:100%}.mx-card-mobile .mx-card-mobile-cell .fullwidth button{width:100%}.mx-card-mobile .mx-card-mobile-cell .mx-primary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-secondary-text .mx-field-value,.mx-card-mobile .mx-card-mobile-cell .mx-tertiary-text .mx-field-value{display:block}.mx-card-mobile .mx-card-mobile-cell .fullwidth button,.mx-card-mobile .mx-card-mobile-cell .fullwidth mat-chip{width:100%}.mx-card-mobile .mx-card-mobile-cell-inline{display:inline-block;padding:4px;width:100%}.mx-card-mobile .mx-card-mobile-cell-inline .mx-card-mobile-control-separator{padding:4px}.mx-card-mobile .mx-card-mobile-cell-inline .mx-field-lbl-for-label{display:inherit}"]
            }]
    }], function () { return [{ type: ɵngcc2.Ability }, { type: ɵngcc35.BreakpointObserver }]; }, { onFormChange: [{
            type: Output
        }], onFieldChange: [{
            type: Output
        }], onButtonClick: [{
            type: Output
        }], formConfig: [{
            type: Input
        }], _formConfig: [{
            type: Input
        }], supportingRecord: [{
            type: Input
        }], record: [{
            type: Input
        }], originalData: [{
            type: Input
        }], reset: [{
            type: Input
        }], form: [{
            type: Input
        }], sourceIdentifier: [{
            type: Input
        }], sourceIndex: [{
            type: Input
        }], widgetArrayIndex: [{
            type: Input
        }], keyMap: [{
            type: Input
        }] }); })();

//extends ModalInterfaceComponent
class CrudListComponentInterface {
    constructor() {
        this.keyMap = new Array();
        // super();
    }
    ngOnInit() {
        this.setCommonConfig();
        this.setListConfig();
    }
    setCommonConfig() {
    }
    setListConfig() {
    }
    setBadges() {
        return null;
    }
    setCommonConfigUsingCrud(crud) {
        //  Config
        this.identifier = crud.identifier;
        this.header = crud.header;
        //  Tab wise data/setting
        //this.keyMap = {};
        this.listReset = true;
    }
    setListConfigUsingCrud(crud) {
        //  Config
        this.quickLinks = crud.quickLinks;
        this.searchConfig = crud.search;
        this.listConfig = crud.list;
        this.actions = crud.actions;
        this.setConfigListData([], []);
    }
    loadFilterParams(filterStr) {
        if (filterStr != null) {
            const filter = SecurityUtils.decrypt(filterStr);
            this.configListData.searchData = filter;
        }
        else {
        }
        this.configListData.pageNo = 1;
    }
    setConfigListData(records, badges, route) {
        let configListDataNew = {
            pageBackRoute: route,
            badges: badges,
            records: records,
            originalData: this.originalData
        };
        this.configListData = Object.assign(Object.assign({}, this.configListData), configListDataNew);
    }
    getRowKey(lIndex) {
        let keys;
        if (this.listConfig && this.listConfig.lists && this.listConfig.lists[lIndex]) {
            keys = this.listConfig.lists[lIndex].uniqueKeys;
        }
        else {
            keys = new Array();
        }
        return keys;
    }
    getChildRowKey(lIndex) {
        let keys;
        if (this.listConfig && this.listConfig.lists && this.listConfig.lists[lIndex] && this.listConfig.lists[lIndex].child && this.listConfig.lists[lIndex].child.record && this.listConfig.lists[lIndex].child.record.uniqueKeys) {
            keys = this.listConfig.lists[lIndex].child.record.uniqueKeys;
        }
        else {
            keys = new Array();
        }
        return keys;
    }
    getChildRecordIdentifier(lIndex) {
        let childRecordIdentifier;
        if (this.listConfig && this.listConfig.lists && this.listConfig.lists[lIndex] && this.listConfig.lists[lIndex].child) {
            childRecordIdentifier = this.listConfig.lists[lIndex].child.recordIdentifier;
        }
        else {
            childRecordIdentifier = "";
        }
        return childRecordIdentifier;
    }
    beforeChangeMerge(action, sourceIdentifier) {
        let rows;
        let rowIndex = -1;
        if (this.configListData && this.configListData.records) {
            for (let lIndex = 0; lIndex < this.configListData.records.length; lIndex++) {
                if (this.listConfig.lists[lIndex].identifier == sourceIdentifier) {
                    for (let rIndex = 0; rIndex < this.configListData.records[lIndex].rows.length; rIndex++) {
                        let keys = this.getRowKey(lIndex);
                        let isMatchingRow = true;
                        for (let key of keys) {
                            if (this.configListData.records[lIndex].rows[rIndex][key] != action.originalData[key]) {
                                isMatchingRow = false;
                            }
                        }
                        if (isMatchingRow) {
                            this.configListData.records[lIndex].rows[rIndex] = Object.assign(Object.assign({}, action.originalData), action.data);
                            rows = this.configListData.records[lIndex].rows;
                            rowIndex = rIndex;
                            break;
                        }
                    }
                }
            }
        }
        return { rows: rows, rowIndex: rowIndex };
    }
    addRow(action, sourceIdentifier, data) {
        let rows;
        let rowIndex = -1;
        if (this.configListData && this.configListData.records) {
            for (let lIndex = 0; lIndex < this.configListData.records.length; lIndex++) {
                if (this.listConfig.lists[lIndex].identifier == sourceIdentifier) {
                    if (CollectionUtils.isEmpty(data)) {
                        this.configListData.records[lIndex].rows.push({});
                    }
                    else {
                        this.configListData.records[lIndex].rows.push(data);
                    }
                    rows = this.configListData.records[lIndex].rows;
                    rowIndex = this.configListData.records[lIndex].rows.length - 1;
                    break;
                }
            }
        }
        return { rows: rows, rowIndex: rowIndex };
    }
    afterChangeMerge() {
        this.configListData = JSON.parse(JSON.stringify(this.configListData));
        this.listReset = true;
    }
    beforeChildChangeMerge(action, sourceIdentifier) {
        let rows;
        let rowIndex = -1;
        if (this.configListData && this.configListData.records) {
            for (let lIndex = 0; lIndex < this.configListData.records.length; lIndex++) {
                if (this.listConfig.lists[lIndex].identifier == sourceIdentifier) {
                    for (let rIndex = 0; rIndex < this.configListData.records[lIndex].rows.length; rIndex++) {
                        let keys = this.getRowKey(lIndex);
                        let isMatchingRow = true;
                        for (let key of keys) {
                            if (action.parentHierarchy.parent['key'].indexOf(this.configListData.records[lIndex].rows[rIndex][key]) < -1) {
                                isMatchingRow = false;
                            }
                        }
                        if (isMatchingRow) {
                            let childRecordIdentifier = this.getChildRecordIdentifier(lIndex);
                            for (let cIndex = 0; cIndex < this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier].length; cIndex++) {
                                let keys = this.getChildRowKey(lIndex);
                                let isChildMatchingRow = true;
                                for (let key of keys) {
                                    if (this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier][cIndex][key] != action.originalData[key]) {
                                        isChildMatchingRow = false;
                                    }
                                }
                                if (isChildMatchingRow) {
                                    this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier][cIndex] = Object.assign(Object.assign({}, action.originalData), action.data);
                                    rows = this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier];
                                    rowIndex = cIndex;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
        return { rows: rows, rowIndex: rowIndex };
    }
    addChildRow(action, sourceIdentifier, data) {
        let rows;
        let rowIndex = -1;
        if (this.configListData && this.configListData.records) {
            for (let lIndex = 0; lIndex < this.configListData.records.length; lIndex++) {
                if (this.listConfig.lists[lIndex].identifier == action.sourceIdentifier) {
                    for (let rIndex = 0; rIndex < this.configListData.records[lIndex].rows.length; rIndex++) {
                        let keys = this.getRowKey(lIndex);
                        let isMatchingRow = true;
                        for (let key of keys) {
                            if (action.originalData[key].indexOf(this.configListData.records[lIndex].rows[rIndex][key]) < -1) {
                                isMatchingRow = false;
                            }
                        }
                        if (isMatchingRow) {
                            let childRecordIdentifier = this.getChildRecordIdentifier(lIndex);
                            for (let cIndex = 0; cIndex < this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier].length; cIndex++) {
                                if (CollectionUtils.isEmpty(data)) {
                                    this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier].push({});
                                }
                                else {
                                    this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier].push(data);
                                }
                                rows = this.configListData.records[lIndex].rows[rIndex][childRecordIdentifier];
                                rowIndex = cIndex;
                                break;
                            }
                        }
                    }
                }
            }
        }
        return { rows: rows, rowIndex: rowIndex };
    }
    setTabDisplayMode(crudTabs, formDisplayMode) {
        CrudUtils.setDisplayType(crudTabs, formDisplayMode);
    }
    afterChildChangeMerge() {
        this.afterChangeMerge();
    }
    setHeaderTitle(title) {
        this.header.title = title;
    }
    setHeaderDescription(description) {
        this.header.description.text = description;
    }
}
CrudListComponentInterface.ɵfac = function CrudListComponentInterface_Factory(t) { return new (t || CrudListComponentInterface)(); };
CrudListComponentInterface.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CrudListComponentInterface, selectors: [["mx-crud-list-interface"]], decls: 2, vars: 0, template: function CrudListComponentInterface_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, "crud-list works!");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
CrudListComponentInterface.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CrudListComponentInterface, [{
        type: Component,
        args: [{
                selector: 'mx-crud-list-interface',
                template: "<p>crud-list works!</p>\n",
                styles: [""]
            }]
    }], function () { return []; }, null); })();

class ChipsComponent extends FieldComponent {
    constructor(router, ability) {
        super(router, ability);
        this.router = router;
        this.ability = ability;
        this.field = null;
        this.onListChange = new EventEmitter();
        this.placeholder = '';
        this.separatorKeysCodes = [ENTER]; //SPACE
        this.chips = [];
        this.addOnBlur = true;
        this.addItem = ($event) => {
            const input = $event.input;
            const value = $event.value;
            let keyExists = this.keyExists(value.trim());
            // Add our item
            if ((value || '').trim() && !keyExists) {
                this.chips.push({
                    key: value.trim(),
                    value: value.trim(),
                    disabled: false,
                    removable: this.removable || true
                });
            }
            // Reset the input value
            if (input) {
                input.value = '';
            }
            this.triggerChangedEvent($event);
        };
        this.removeItem = ($event, item, index) => {
            this.chips.splice(index, 1);
            // if (this.isFunctionDefined(this.field.onRemoveItem)) {
            //     this.field.onRemoveItem(item.value).subscribe(result => {
            //         if (result) {
            //             this.chips.splice(index, 1);
            //             this.triggerChangedEvent($event);
            //         }
            //     });
            // }
        };
        this.drop = ($event) => {
            moveItemInArray(this.chips, $event.previousIndex, $event.currentIndex);
            this.triggerChangedEvent($event);
        };
        this.triggerChangedEvent = ($event) => {
            let values = this.chips.map(x => x.key);
            this.formControl.setValue(values);
            this.onListChange.emit({
                values: values,
                event: $event
            });
        };
        this.onSelected = (event) => {
            let keyExists = this.keyExists(event.option.value['key']);
            if (!keyExists) {
                this.chips.push({
                    key: event.option.value['key'],
                    value: event.option.value['value'],
                    removable: true,
                    disabled: false
                });
                this.input.nativeElement.value = '';
                this.triggerChangedEvent(event);
            }
        };
        this.isFunctionDefined = (func) => {
            return typeof func == 'function';
        };
    }
    ;
    setDescribedByIds(ids) {
        throw new Error('Method not implemented.');
    }
    onContainerClick(event) {
        throw new Error('Method not implemented.');
    }
    ngOnInit() {
        this.placeholder = this.field.placeholder || '';
        this.orientation = this.field.orientation || "HORIZONTAL" /* HORIZONTAL */;
        this.options = this.field.options || [];
        this.setChips();
    }
    setChips() {
        let values = this.formControl.value;
        let isReadOnly = FieldUtils.isFieldDisabled(this.field, this.displayMode, values);
        if (!CollectionUtils.isEmpty(values)) {
            values.forEach(value => {
                if (!CollectionUtils.isEmpty(this.field.options)) {
                    let optionMatch = null;
                    this.field.options.forEach(option => {
                        if (option.key == value) {
                            optionMatch = option;
                        }
                    });
                    if (optionMatch != null) {
                        this.chips.push({
                            key: optionMatch.key,
                            value: optionMatch.value,
                            disabled: isReadOnly,
                            removable: true
                        });
                    }
                    else {
                        this.chips.push({
                            key: value,
                            value: value,
                            disabled: isReadOnly,
                            removable: true
                        });
                    }
                }
                else {
                    this.chips.push({
                        key: value,
                        value: value,
                        disabled: isReadOnly,
                        removable: true
                    });
                }
            });
        }
        else {
            this.chips = [];
        }
    }
    keyExists(value) {
        let keyExists = false;
        this.chips.forEach(chip => {
            if (chip.key == value) {
                keyExists = true;
            }
        });
        return keyExists;
    }
    errors() {
        let errors = [];
        if (this.formControl != undefined) {
            if (this.formControl && this.formControl.errors) {
                Object.keys(this.formControl.errors).forEach(keyError => {
                    if (this.field.validations) {
                        for (let validation of this.field.validations) {
                            if (keyError === validation.message.key) {
                                errors[errors.length] = { error: keyError, message: validation.message.message };
                            }
                        }
                    }
                });
            }
        }
        return errors;
    }
}
ChipsComponent.ɵfac = function ChipsComponent_Factory(t) { return new (t || ChipsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ChipsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChipsComponent, selectors: [["mx-chips"]], viewQuery: function ChipsComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c56, true);
        ɵngcc0.ɵɵviewQuery(_c57, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);
    } }, inputs: { field: "field", disabled: "disabled", formControl: "formControl", errorMatcher: "errorMatcher" }, outputs: { onListChange: "onListChange" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 2, consts: [[4, "ngIf"], ["chipListStandard", ""], ["chipListAutoComplete", ""], [4, "ngTemplateOutlet"], [1, "mx-chip-list", 3, "appearance"], [3, "class", 4, "ngIf"], ["matPrefix", "", "aria-hidden", "true", "class", "mx-field-icon", 4, "ngIf"], [3, "ngClass"], ["chipList", ""], ["class", "chip-item", 3, "removable", "disabled", "removed", 4, "ngFor", "ngForOf"], ["matInput", "", 3, "id", "placeholder", "matChipInputFor", "errorStateMatcher", "disabled", "matChipInputSeparatorKeyCodes", "matChipInputAddOnBlur", "matChipInputTokenEnd"], ["input", ""], ["matSuffix", "", 3, "button", "class", "onClick", 4, "ngIf"], ["matSuffix", "", 3, "field"], ["class", "mx-field-hint", 4, "ngIf"], ["aria-hidden", "true", 3, "innerHtml", 4, "ngFor", "ngForOf"], ["class", "mx-field-lbl-req", 4, "ngIf"], [1, "mx-field-lbl-req"], ["matPrefix", "", "aria-hidden", "true", 1, "mx-field-icon"], [1, "chip-item", 3, "removable", "disabled", "removed"], ["matChipRemove", "", 4, "ngIf"], ["matChipRemove", ""], ["matSuffix", "", 3, "button", "onClick"], [1, "mx-field-hint"], ["aria-hidden", "true", 1, "mx-field-hint-icon"], ["aria-hidden", "true", 3, "innerHtml"], [1, "mx-chip-list"], ["matInput", "", 3, "id", "placeholder", "matChipInputFor", "errorStateMatcher", "disabled", "matChipInputSeparatorKeyCodes", "matChipInputAddOnBlur", "matAutocomplete"], [3, "optionSelected"], ["auto", "matAutocomplete"], [3, "value", "disabled", 4, "ngFor", "ngForOf"], [3, "value", "disabled"]], template: function ChipsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ChipsComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, ChipsComponent_ng_container_1_Template, 2, 1, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(2, ChipsComponent_ng_template_2_Template, 14, 21, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, ChipsComponent_ng_template_4_Template, 17, 21, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.enableDragAndDrop && ctx.options.length == 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.enableDragAndDrop && ctx.options.length > 0);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc23.MatFormField, ɵngcc9.MatChipList, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc3.NgForOf, ɵngcc24.MatInput, ɵngcc9.MatChipInput, TooltipComponent, ɵngcc23.MatSuffix, ɵngcc23.MatLabel, ɵngcc12.MatIcon, ɵngcc23.MatPrefix, ɵngcc9.MatChip, ɵngcc9.MatChipRemove, ButtonComponent, ɵngcc23.MatHint, ɵngcc23.MatError, ɵngcc28.MatAutocompleteTrigger, ɵngcc28.MatAutocomplete, ɵngcc27.MatOption]; }, pipes: function () { return [ɵngcc3.LowerCasePipe]; }, styles: [".mx-chip-list[_ngcontent-%COMP%]{width:100%}.mx-chip-list[_ngcontent-%COMP%]   .chip-item.cdk-drag-animating[_ngcontent-%COMP%], .mx-chip-list[_ngcontent-%COMP%]   .hip-item[_ngcontent-%COMP%]   .cdk-drop-list-dragging[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}.mx-chip-list[_ngcontent-%COMP%]   .mat-chip-list-stacked[_ngcontent-%COMP%]   input.mat-chip-input[_ngcontent-%COMP%]{flex:none}"] });
ChipsComponent.ctorParameters = () => [
    { type: Router },
    { type: Ability }
];
ChipsComponent.propDecorators = {
    field: [{ type: Input }],
    disabled: [{ type: Input }],
    formControl: [{ type: Input }],
    errorMatcher: [{ type: Input }],
    input: [{ type: ViewChild, args: ['input',] }],
    matAutocomplete: [{ type: ViewChild, args: ['auto',] }],
    onListChange: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChipsComponent, [{
        type: Component,
        args: [{
                selector: 'mx-chips',
                template: "<ng-container *ngIf=\"!enableDragAndDrop && options.length==0\">\n    <ng-container *ngTemplateOutlet=\"chipListStandard\"></ng-container>\n</ng-container>\n<ng-container *ngIf=\"!enableDragAndDrop && options.length>0\">\n    <ng-container *ngTemplateOutlet=\"chipListAutoComplete\"></ng-container>\n</ng-container>\n\n<!-- Chip list Standard -->\n<ng-template #chipListStandard>\n    <mat-form-field \n        [appearance]=\"appearance | lowercase\"\n        class=\"mx-chip-list\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL'\">\n          <strong>{{field.label}}</strong>\n          <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n          <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n            {{field.help.message}}\n          </span>\n        </mat-label>\n        <!-- <mat-label class=\"mx-field-lbl\" *ngIf=\"(hideLabel == true)\"> \n        </mat-label> -->\n  \n        <mat-icon \n          *ngIf=\"field.icon\" \n          matPrefix\n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.icon\" \n          class=\"mx-field-icon\" \n        >{{field.icon}}</mat-icon>\n  \n        <mat-chip-list #chipList [ngClass]=\"{'mat-chip-list-stacked': orientation === 'VERTICAL'}\">\n            <mat-chip *ngFor=\"let chip of chips;let i=index\" [removable]=\"chip.removable || true\"\n                (removed)=\"removeItem($event,chip,i)\" class=\"chip-item\" [disabled]=\"chip.disabled\">\n                {{chip.value}}\n                <mat-icon matChipRemove *ngIf=\"chip.removable\">cancel</mat-icon>\n            </mat-chip>\n            <!-- [formControl]=\"formControl\"  -->\n            <input \n                matInput \n                #input \n                [id]=\"field.key\"\n                [placeholder]=\"placeholder\" \n                [matChipInputFor]=\"chipList\"\n                [errorStateMatcher]=\"errorMatcher\"\n                [disabled]=\"disabled\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" \n                [matChipInputAddOnBlur]=\"addOnBlur\"\n                (matChipInputTokenEnd)=\"addItem($event)\" />\n        </mat-chip-list>\n        <mx-button\n            matSuffix\n            *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n            [button]=\"textClearButton\"\n            class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n            (onClick)=\"cleanValue()\"\n        ></mx-button>\n        <mx-button\n            matSuffix\n            *ngIf=\"hasFieldNavigate\"\n            [button]=\"routeToButton\"\n            class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n            (onClick)=\"resolvedValue = ''\"\n        ></mx-button> \n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n            <mat-icon \n            aria-hidden=\"true\"  \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n            </mat-icon>\n            {{field.help.message}}\n        </mat-hint>\n\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n    </mat-form-field>\n</ng-template>\n\n<!-- Chip list with Autocomplete -->\n<ng-template #chipListAutoComplete>\n    <mat-form-field class=\"mx-chip-list\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL'\">\n            <strong>{{field.label}}</strong>\n            <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n            <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n              {{field.help.message}}\n            </span>\n          </mat-label>\n          <!-- <mat-label class=\"mx-field-lbl\" *ngIf=\"(hideLabel == true)\"> \n          </mat-label> -->\n    \n          <mat-icon \n            *ngIf=\"field.icon\" \n            matPrefix\n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.icon\" \n            class=\"mx-field-icon\" \n          >{{field.icon}}</mat-icon>\n      \n        <mat-chip-list #chipList [ngClass]=\"{'mat-chip-list-stacked': orientation === 'VERTICAL'}\">\n            <mat-chip *ngFor=\"let chip of chips;let i=index\" [removable]=\"chip.removable || true\"\n                (removed)=\"removeItem($event,chip,i)\" class=\"chip-item\" [disabled]=\"chip.disabled\">\n                {{chip.value}}\n                <mat-icon matChipRemove *ngIf=\"chip.removable\">cancel</mat-icon>\n            </mat-chip>\n            <!-- [formControl]=\"formControl\"  -->\n            <input \n                matInput \n                #input \n                [id]=\"field.key\"\n                [placeholder]=\"placeholder\" \n                [matChipInputFor]=\"chipList\"\n                [errorStateMatcher]=\"errorMatcher\"\n                [disabled]=\"disabled\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" \n                [matChipInputAddOnBlur]=\"addOnBlur\"\n                [matAutocomplete]=\"auto\" />\n        </mat-chip-list>\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onSelected($event)\">\n            <mat-option \n                *ngFor=\"let option of options\" \n                [value]=\"option\"\n                [disabled]=\"option.disabled\" >\n                {{option.value}}\n                <!-- <span [innerHTML]=\"option.value | highlight: highlightAutoCompleteText\"></span> -->\n            </mat-option>\n        </mat-autocomplete>\n\n        <mx-button\n            matSuffix\n            *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n            [button]=\"textClearButton\"\n            class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n            (onClick)=\"cleanValue()\"\n        ></mx-button>\n        <mx-button\n            matSuffix\n            *ngIf=\"hasFieldNavigate\"\n            [button]=\"routeToButton\"\n            class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n            (onClick)=\"resolvedValue = ''\"\n        ></mx-button> \n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n            <mat-icon \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n            </mat-icon>\n            {{field.help.message}}\n        </mat-hint>\n\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n\n    </mat-form-field>\n</ng-template>\n\n",
                styles: [".mx-chip-list{width:100%}.mx-chip-list .chip-item.cdk-drag-animating,.mx-chip-list .hip-item .cdk-drop-list-dragging{transition:transform .25s cubic-bezier(0,0,.2,1)}.mx-chip-list .mat-chip-list-stacked input.mat-chip-input{flex:none}"]
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: ɵngcc2.Ability }]; }, { field: [{
            type: Input
        }], onListChange: [{
            type: Output
        }], disabled: [{
            type: Input
        }], formControl: [{
            type: Input
        }], errorMatcher: [{
            type: Input
        }], input: [{
            type: ViewChild,
            args: ['input']
        }], matAutocomplete: [{
            type: ViewChild,
            args: ['auto']
        }] }); })();

class ToolbarComponent {
    constructor() {
        this.field = null;
        this.onMenuClick = (item) => {
            item.onClick(item);
        };
    }
    ngOnInit() {
        this.title = this.field.title;
        this.menuItems = this.field.menuItems;
    }
}
ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) { return new (t || ToolbarComponent)(); };
ToolbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToolbarComponent, selectors: [["mx-toolbar"]], inputs: { field: "field" }, decls: 8, vars: 3, consts: [["mat-button", "", 3, "fxShow", "fxShow.xs", "fxShow.sm", "click", 4, "ngFor", "ngForOf"], ["mat-icon-button", "", 3, "matMenuTriggerFor"], ["dropMenu", "matMenu"], [4, "ngFor", "ngForOf"], ["mat-button", "", 3, "fxShow", "fxShow.xs", "fxShow.sm", "click"], [1, "mr"], [3, "fxShow", "fxShow.sm", "fxShow.xs"], ["mat-menu-item", "", 3, "click"]], template: function ToolbarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span");
        ɵngcc0.ɵɵtemplate(1, ToolbarComponent_button_1_Template, 4, 5, "button", 0);
        ɵngcc0.ɵɵelementStart(2, "button", 1);
        ɵngcc0.ɵɵelementStart(3, "mat-icon");
        ɵngcc0.ɵɵtext(4, "more_vert");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "mat-menu", null, 2);
        ɵngcc0.ɵɵtemplate(7, ToolbarComponent_ng_container_7_Template, 7, 5, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.menuItems);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r1);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.menuItems);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc7.MatButton, ɵngcc5.MatMenuTrigger, ɵngcc12.MatIcon, ɵngcc5._MatMenu, ɵngcc6.DefaultShowHideDirective, ɵngcc5.MatMenuItem, ɵngcc14.MatDivider], styles: [".mx-chip-list{width:100%}.mx-chip-list .chip-item.cdk-drag-animating,.mx-chip-list .hip-item .cdk-drop-list-dragging{transition:transform .25s cubic-bezier(0,0,.2,1)}"], encapsulation: 2 });
ToolbarComponent.ctorParameters = () => [];
ToolbarComponent.propDecorators = {
    field: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToolbarComponent, [{
        type: Component,
        args: [{
                selector: 'mx-toolbar',
                template: "<span>\n    <button mat-button *ngFor=\"let item of menuItems\" (click)=\"onMenuClick(item)\"\n    [fxShow]=\"item.showOnDesktop\" \n    [fxShow.xs]=\"item.showOnMobile\"\n    [fxShow.sm]=\"item.showOnTablet\">\n        <mat-icon class=\"mr\">{{item.icon}}</mat-icon>\n        {{item.label}}\n    </button>\n    <button mat-icon-button [matMenuTriggerFor]=\"dropMenu\">\n        <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #dropMenu=\"matMenu\">\n        <ng-container *ngFor=\"let item of menuItems\">\n            <div [fxShow]=\"!item.showOnDesktop\" \n                [fxShow.sm]=\"!item.showOnTablet\" \n                [fxShow.xs]=\"!item.showOnMobile\">\n                <button mat-menu-item (click)=\"onMenuClick(item)\">\n                    <mat-icon class=\"mr\">{{item.icon}}</mat-icon>\n                    {{item.label}}\n                </button>\n                <mat-divider></mat-divider>\n            </div>\n        </ng-container>\n    </mat-menu>\n</span>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-chip-list{width:100%}.mx-chip-list .chip-item.cdk-drag-animating,.mx-chip-list .hip-item .cdk-drop-list-dragging{transition:transform .25s cubic-bezier(0,0,.2,1)}"]
            }]
    }], function () { return []; }, { field: [{
            type: Input
        }] }); })();

class MultiImageComponent {
    constructor() {
        this.field = null;
        this.onShowAllClick = () => {
            this.count = this.images.length;
        };
    }
    ngOnInit() {
        this.radius = (this.field.radius || 5) * 10;
        this.showCount = this.field.showCount || false;
        this.showAll = this.field.showAll || false;
        this.images = this.field.images;
        this.images = this.images ? this.images : this.field.value;
        this.count = this.field.count || (this.images ? this.images.length : 0);
        if (this.showCount && (this.showAll || !this.showAll)) {
            this.lastItemLabel = '+' + (this.images.length - this.count);
        }
        else if (this.showAll && !this.showCount) {
            this.lastItemLabel = '>';
        }
        this.hideTooltip = this.images && this.images.length > 0 && (typeof this.images[0] == 'string');
    }
}
MultiImageComponent.ɵfac = function MultiImageComponent_Factory(t) { return new (t || MultiImageComponent)(); };
MultiImageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MultiImageComponent, selectors: [["mx-multi-image"]], inputs: { field: "field", control: "control", disabled: "disabled" }, decls: 3, vars: 5, consts: [[1, "avatars", "mx-field-nm", 3, "ngClass"], [4, "ngFor", "ngForOf"], ["class", "avatar", 3, "margin-left", "width", 4, "ngIf"], ["class", "avatar", 3, "matTooltip", "matTooltipDisabled", "margin-left", "z-index", 4, "ngIf"], [1, "avatar", 3, "matTooltip", "matTooltipDisabled"], [1, "item", 3, "src"], [1, "avatar"], [1, "item", 3, "disabled", "click"]], template: function MultiImageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, MultiImageComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, MultiImageComponent_span_2_Template, 3, 12, "span", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c18, ctx.disabled));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.images);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.showCount || ctx.showAll) && ctx.count !== ctx.images.length);
    } }, directives: [ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc10.MatTooltip], styles: [".avatars{display:flex;margin-bottom:1.25em!important;overflow:auto;width:100%}.item{align-items:center;background-color:#bbb;border-radius:9999px;box-shadow:0 0 0 2px #fff;color:#fff;display:flex;justify-content:center}button{background:transparent;border:none;color:#4d4d4d;font-size:18px}button:hover:not([disabled]){background-color:rgba(103,58,183,.5803921568627451);cursor:pointer}button:disabled:hover:not([disabled]){color:#ccc}"], encapsulation: 2 });
MultiImageComponent.ctorParameters = () => [];
MultiImageComponent.propDecorators = {
    field: [{ type: Input }],
    control: [{ type: Input }],
    disabled: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MultiImageComponent, [{
        type: Component,
        args: [{
                selector: 'mx-multi-image',
                template: "<div class=\"avatars mx-field-nm\"  [ngClass]=\"{'mx-disable': disabled}\">\n    <ng-container *ngFor=\"let img of images; let i=index,let last = last\">\n        <div class=\"avatar\"  *ngIf=\"i<count\" matTooltip=\"{{img.name}}\" [matTooltipDisabled]=\"hideTooltip\"\n            [style.margin-left.px]=\"i==0? 0:-radius/2\" [style.z-index]=\"1000-i\">\n            <img class=\"item\" src=\"{{img.url || img}}\" [style.width.px]=\"radius\" [style.height.px]=\"radius\"/>\n        </div>\n    </ng-container>\n    <span class=\"avatar\" *ngIf=\"(showCount || showAll) && (count !== images.length)\"\n        [style.margin-left.px]=\"-radius/2\" [style.width.px]=\"radius\">\n        <button class=\"item\"  (click)=\"onShowAllClick()\"\n            [style.padding-left.px]=\"radius/4\" \n            [disabled]=\"(disabled || !showAll)\" \n            [style.width.px]=\"radius\" \n            [style.height.px]=\"radius\">\n            {{lastItemLabel}}\n        </button>\n    </span>\n</div>",
                encapsulation: ViewEncapsulation.None,
                styles: [".avatars{display:flex;margin-bottom:1.25em!important;overflow:auto;width:100%}.item{align-items:center;background-color:#bbb;border-radius:9999px;box-shadow:0 0 0 2px #fff;color:#fff;display:flex;justify-content:center}button{background:transparent;border:none;color:#4d4d4d;font-size:18px}button:hover:not([disabled]){background-color:rgba(103,58,183,.5803921568627451);cursor:pointer}button:disabled:hover:not([disabled]){color:#ccc}"]
            }]
    }], function () { return []; }, { field: [{
            type: Input
        }], control: [{
            type: Input
        }], disabled: [{
            type: Input
        }] }); })();

class ParagraphComponent extends FieldComponent {
    constructor(router, ability) {
        super(router, ability);
        this.router = router;
        this.ability = ability;
        this.tokens = new Array();
        this.onButtonClick = new EventEmitter();
    }
    ngOnInit() {
        this.paragraphField = this.field;
        let words = this.paragraphField.template.split(' ');
        if (words && words.length > 0) {
            words.map(word => {
                var key = word.slice(1, -1);
                if (word.indexOf('{') == -1) {
                    this.tokens.push({ type: 'LABEL', value: word });
                }
                else if (word.indexOf('{') != -1 && this.paragraphField.fieldContexts[key] != undefined) {
                    this.tokens.push({ type: 'FIELD', field: this.paragraphField.fieldContexts[key] });
                    if (this.paragraphField.isReadOnly) {
                        this.paragraphField.fieldContexts[key]['isReadOnly'] = this.paragraphField.isReadOnly;
                    }
                    if (this.paragraphField.displayMode == "LABEL" /* LABEL */) {
                        this.paragraphField.fieldContexts[key]['displayMode'] = "LABEL" /* LABEL */;
                    }
                }
                else if (word.indexOf('{') != -1 && this.paragraphField.buttonContexts[key] != undefined) {
                    this.tokens.push({ type: 'BUTTON', button: this.paragraphField.buttonContexts[key] });
                    // if (this.paragraphField.isReadOnly) {
                    //     this.paragraphField.buttonContexts[key]['displayMode'] = DisplayMode.DISABLED;
                    // }
                }
            });
        }
    }
    fieldChange(fieldChange) {
        this.onFieldChange.emit(fieldChange);
    }
    isButtonDisable() {
        return ButtonUtils.isDisable(this.displayMode) || this.paragraphField.isReadOnly;
    }
    getFormValue() {
        return FormUtils.getRawValue(this.form);
    }
    buttonClick(event) {
        console.log(event);
        this.onButtonClick.emit(event);
    }
}
ParagraphComponent.ɵfac = function ParagraphComponent_Factory(t) { return new (t || ParagraphComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Ability)); };
ParagraphComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ParagraphComponent, selectors: [["mx-paragraph"]], outputs: { onButtonClick: "onButtonClick" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], [4, "ngIf"], [1, "text"], [1, "field", 3, "sourceType", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "form", "fieldControl", "keyMap", "field", "displayMode", "value", "onFieldChange"], [1, "button", 3, "form", "sourceIdentifier", "sourceIndex", "widgetArrayIndex", "button", "context", "originalData", "formDisplayMode", "disabled", "onClick"]], template: function ParagraphComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ParagraphComponent_ng_container_0_Template, 4, 3, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tokens);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgIf, FieldComponent, ButtonComponent], styles: [".text{vertical-align:middle}.button,.field{padding:0 10px}"], encapsulation: 2 });
ParagraphComponent.ctorParameters = () => [
    { type: Router },
    { type: Ability }
];
ParagraphComponent.propDecorators = {
    onButtonClick: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ParagraphComponent, [{
        type: Component,
        args: [{
                selector: 'mx-paragraph',
                template: "<ng-container *ngFor=\"let token of tokens\">\n    <ng-container *ngIf=\"token.type == 'LABEL'\">\n        <span class=\"text\">{{token.value}} </span>\n    </ng-container>\n    <ng-container *ngIf=\"token.type == 'FIELD'\">\n        <mx-field \n            [sourceType]=\"sourceType\"\n            [sourceIdentifier]=\"sourceIdentifier\" \n            [sourceIndex]=\"sourceIndex\" \n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [form]=\"form\" \n            [fieldControl]=\"fieldControl['controls'][token.field.key]\"\n            [keyMap]=\"keyMap\"\n            [field]=\"token.field\"\n            [displayMode]=\"displayMode\" \n            [value]=\"\" \n            (onFieldChange)=\"fieldChange($event)\" \n            class=\"field\">\n        </mx-field> \n    </ng-container> \n    <ng-container *ngIf=\"token.type == 'BUTTON'\">\n        <!-- \n        [buttonRoute]=\"buttonRoute\"\n        [parentHierarchy]=\"parentHierarchy\"\n         -->\n        <mx-button\n            [form]=\"form\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            class=\"button\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"token.button\"\n            [context]=\"getFormValue()\"\n            [originalData]=\"originalData\"\n            [formDisplayMode]=\"displayMode\"\n            [disabled]=\"isButtonDisable()\"\n            (onClick)=\"buttonClick($event)\"\n        ></mx-button>\n    </ng-container>\n</ng-container>",
                encapsulation: ViewEncapsulation.None,
                styles: [".text{vertical-align:middle}.button,.field{padding:0 10px}"]
            }]
    }], function () { return [{ type: ɵngcc4.Router }, { type: ɵngcc2.Ability }]; }, { onButtonClick: [{
            type: Output
        }] }); })();

class HighlightPipe {
    transform(text, search) {
        const pattern = search
            .replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
            .split(' ')
            .filter(t => t.length > 0)
            .join('|');
        const regex = new RegExp(pattern, 'gi');
        return search ? text.replace(regex, match => `<b>${match}</b>`) : text;
    }
}
HighlightPipe.ɵfac = function HighlightPipe_Factory(t) { return new (t || HighlightPipe)(); };
HighlightPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "highlight", type: HighlightPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighlightPipe, [{
        type: Pipe,
        args: [{ name: 'highlight' }]
    }], null, null); })();

class TooltipComponent {
    constructor() {
        this.field = null;
    }
    ngOnInit() {
        this.hasFieldNavigate = this.fieldNavigate();
        if (this.field.help && this.field.help.orientation) {
            this.placement = this.field.help.orientation.toLowerCase();
        }
        else {
            this.placement = 'bottom';
        }
        ;
    }
    fieldNavigate() {
        let hasFieldNavigate = false;
        if (this.field.navigate && (!StringUtils.isEmpty(this.field.navigate.icon) || !StringUtils.isEmpty(this.field.navigate.text)) && !CollectionUtils.isEmpty(this.field.navigate.routeTo)) {
            hasFieldNavigate = true;
        }
        return hasFieldNavigate;
    }
}
TooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(); };
TooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [["mx-tooltip"]], inputs: { field: "field", control: "control" }, decls: 3, vars: 1, consts: [["theme", "light", "content-type", "template", 3, "tooltip", "placement", "class", 4, "ngIf"], ["HtmlContent", ""], ["theme", "light", "content-type", "template", 3, "tooltip", "placement"], ["mat-icon-button", "", 1, "mx-tooltip-button"], ["inline", "true"], [1, "tooltip-card"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TooltipComponent_span_0_Template, 4, 6, "span", 0);
        ɵngcc0.ɵɵtemplate(1, TooltipComponent_ng_template_1_Template, 5, 2, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.field.help && ctx.field.help.message && !ctx.hasFieldNavigate && ctx.field.help.displayType == "TOOLTIP");
    } }, directives: [ɵngcc3.NgIf, ɵngcc41.TooltipDirective, ɵngcc7.MatButton, ɵngcc12.MatIcon, ɵngcc15.MatCard, ɵngcc15.MatCardHeader, ɵngcc15.MatCardContent], styles: [".tooltip{background-color:#fff!important;max-width:260px;padding:0!important}.tooltip .tooltip-card{margin:0!important;padding:0!important}.tooltip .tooltip-card .mat-card-header{background-color:#e5e3e3!important;color:#4d4d4d}.tooltip .tooltip-card .mat-card-content,.tooltip .tooltip-card .mat-card-header{padding:10px;text-align:left}.tooltip-top:after{border-color:#444 transparent transparent!important;border-width:7px!important;margin-left:-7px!important}.mx-tooltip-button{color:rgba(0,0,0,.54)}"], encapsulation: 2 });
TooltipComponent.ctorParameters = () => [];
TooltipComponent.propDecorators = {
    field: [{ type: Input }],
    control: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{
        type: Component,
        args: [{
                selector: 'mx-tooltip',
                template: "    <!-- <mat-icon  matSuffix inline=\"true\"> {{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon> -->\n<span *ngIf=\"field.help && field.help.message && !hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n    [tooltip]=\"HtmlContent\"\n    [placement]=\"placement\"\n    theme=\"light\"\n    content-type=\"template\"\n    class=\"mx-field-hint mx-field-hint-inline mx-field-hint-{{field.key}}\">\n    \n    <button mat-icon-button class=\"mx-tooltip-button\">\n        <mat-icon inline=\"true\"> {{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n    </button>\n</span>\n\n<ng-template #HtmlContent>\n    <mat-card class=\"tooltip-card\">\n        <mat-card-header>\n            {{field.help.title}}\n        </mat-card-header>\n        <mat-card-content>\n            {{field.help.message}}\n        </mat-card-content>\n    </mat-card>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                styles: [".tooltip{background-color:#fff!important;max-width:260px;padding:0!important}.tooltip .tooltip-card{margin:0!important;padding:0!important}.tooltip .tooltip-card .mat-card-header{background-color:#e5e3e3!important;color:#4d4d4d}.tooltip .tooltip-card .mat-card-content,.tooltip .tooltip-card .mat-card-header{padding:10px;text-align:left}.tooltip-top:after{border-color:#444 transparent transparent!important;border-width:7px!important;margin-left:-7px!important}.mx-tooltip-button{color:rgba(0,0,0,.54)}"]
            }]
    }], function () { return []; }, { field: [{
            type: Input
        }], control: [{
            type: Input
        }] }); })();

class NgInit {
    constructor() {
        this.ngInit = new EventEmitter();
    }
    ngOnInit() {
        this.ngInit.emit();
    }
}
NgInit.ɵfac = function NgInit_Factory(t) { return new (t || NgInit)(); };
NgInit.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgInit, selectors: [["", "ngInit", ""]], outputs: { ngInit: "ngInit" } });
NgInit.propDecorators = {
    ngInit: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgInit, [{
        type: Directive,
        args: [{
                selector: '[ngInit]'
            }]
    }], function () { return []; }, { ngInit: [{
            type: Output
        }] }); })();

class SafeHtmlPipe {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    transform(value, args) {
        return this.sanitizer.bypassSecurityTrustHtml(value);
    }
}
SafeHtmlPipe.ɵfac = function SafeHtmlPipe_Factory(t) { return new (t || SafeHtmlPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc42.DomSanitizer)); };
SafeHtmlPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "safeHtml", type: SafeHtmlPipe, pure: true });
SafeHtmlPipe.ctorParameters = () => [
    { type: DomSanitizer }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SafeHtmlPipe, [{
        type: Pipe,
        args: [{
                name: 'safeHtml'
            }]
    }], function () { return [{ type: ɵngcc42.DomSanitizer }]; }, null); })();

//import { MaterialWidgetModule } from '../../ngx-material-widget.module';
class cfTemplateDirective {
    constructor(vcRef, compiler) {
        this.vcRef = vcRef;
        this.compiler = compiler;
    }
    ngOnChanges() {
        if (!this.cfTemplate) {
            if (this.componentRef) {
                this.updateProperties();
                return;
            }
            throw Error('You must provide template.');
        }
        this.vcRef.clear();
        this.componentRef = null;
        const component = this.createDynamicComponent(this.cfTemplate);
        const module = this.createDynamicModule(component);
        this.compiler.compileModuleAndAllComponentsAsync(module)
            .then((moduleWithFactories) => {
            let componentFactory = moduleWithFactories.componentFactories.find(x => x.componentType === component);
            this.componentRef = this.vcRef.createComponent(componentFactory);
            this.updateProperties();
        })
            .catch(error => {
            console.log(error);
        });
    }
    updateProperties() {
        for (var prop in this.cfTemplateContext) {
            this.componentRef.instance[prop] = this.cfTemplateContext[prop];
        }
    }
    createDynamicComponent(template) {
        class CustomDynamicComponent {
        }
        CustomDynamicComponent.decorators = [
            { type: Component, args: [{
                        selector: 'mx-dynamic-component',
                        template: template
                    },] }
        ];
        return CustomDynamicComponent;
    }
    createDynamicModule(component) {
        class CfDynamicModule {
        }
        CfDynamicModule.decorators = [
            { type: NgModule, args: [{
                        // Every element you might need must be known for this module
                        //      imports: [CommonModule, MaterialWidgetModule],
                        imports: [CommonModule],
                        declarations: [component]
                    },] }
        ];
        return CfDynamicModule;
    }
}
cfTemplateDirective.ɵfac = function cfTemplateDirective_Factory(t) { return new (t || cfTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Compiler)); };
cfTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: cfTemplateDirective, selectors: [["", "cfTemplate", ""]], inputs: { cfTemplate: "cfTemplate", cfTemplateContext: "cfTemplateContext", currentComponent: "currentComponent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
cfTemplateDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Compiler }
];
cfTemplateDirective.propDecorators = {
    cfTemplate: [{ type: Input }],
    cfTemplateContext: [{ type: Input }],
    currentComponent: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(cfTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[cfTemplate]'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Compiler }]; }, { cfTemplate: [{
            type: Input
        }], cfTemplateContext: [{
            type: Input
        }], currentComponent: [{
            type: Input
        }] }); })();

class NavigationComponent {
    constructor(breakpointObserver, ref) {
        this.breakpointObserver = breakpointObserver;
        this.ref = ref;
        this.isExpanded = true;
        this.logout = new EventEmitter();
        this.showSubmenu = [false];
        this.isShowing = false;
        this.showSubSubMenu = [[false, false], false];
    }
    ngAfterViewChecked() {
        //Called after every check of the component's view. Applies to components only.
        //Add 'implements AfterViewChecked' to the class.
        this.ref.detectChanges();
    }
    mouseenter() {
        if (!this.isExpanded) {
            this.isShowing = true;
        }
    }
    mouseleave() {
        if (!this.isExpanded) {
            this.isShowing = false;
        }
    }
    logoutEvent() {
        this.logout.emit();
    }
    ngOnInit() { }
    ngAfterViewInit() {
        //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.
        //Add 'implements AfterViewInit' to the class.
        this.navigation = this.navigationPanel.navigations;
        this.isExpanded = (!this.navigationPanel.defaultCollapse);
        this.breakpointObserver
            .observe([Breakpoints.HandsetLandscape, Breakpoints.HandsetPortrait])
            .subscribe((result) => {
            if (result.matches) {
                this.isExpanded = false;
            }
        });
    }
}
NavigationComponent.ɵfac = function NavigationComponent_Factory(t) { return new (t || NavigationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc35.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
NavigationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NavigationComponent, selectors: [["admin-navigation"]], viewQuery: function NavigationComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c12, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);
    } }, inputs: { isExpanded: "isExpanded", navigation: "navigation", navigationPanel: "navigationPanel" }, outputs: { logout: "logout" }, ngContentSelectors: _c68, decls: 16, vars: 10, consts: [["autosize", "", 1, "admin-container"], ["mode", "side", "opened", "true", 1, "admin-sidenav", 3, "fixedInViewport", "ngClass", "mouseenter", "mouseleave"], ["sidenav", ""], [1, "flex-layout"], [4, "ngIf"], [4, "ngFor", "ngForOf"], ["submenu", ""], ["mainmenu", ""], ["footertemplate", ""], ["mat-mini-fab", "", "color", "primary", "class", "menu-side-button", "aria-label", "Menu collapse", 3, "ngClass", "click", 4, "ngIf"], ["align", "center", 4, "ngIf", "ngIfElse"], ["image", ""], ["align", "center"], [1, "flex-center"], [1, "header-image", 3, "ngClass", "src"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "click", 4, "ngIf"], [3, "click"], [4, "ngIf", "ngIfElse"], ["cfTemplate", "", 3, "cfTemplate"], ["class", "submenu", 3, "ngClass", 4, "ngIf"], [1, "submenu", 3, "ngClass"], ["nochild", ""], ["subimageIcon", ""], ["submenuImage", ""], [1, "parent", 3, "click"], ["class", "full-width", 4, "ngIf"], ["mat-list-icon", "", 4, "ngIf", "ngIfElse"], ["class", "menu-button", 3, "ngClass", 4, "ngIf"], [1, "full-width"], ["matBadgeOverlap", "false", 3, "matBadge", 4, "ngIf"], ["class", "sub-text", 4, "ngIf"], ["matBadgeOverlap", "false", 3, "matBadge"], [1, "sub-text"], ["mat-list-icon", ""], [1, "menu-button", 3, "ngClass"], ["routerLinkActive", "active", 3, "routerLink"], [1, "image-icon", 3, "src"], [1, "image-name", 3, "src"], ["imageIcon", ""], ["menuImage", ""], ["routerLinkActive", "active", 1, "parent", 3, "routerLink"], ["mat-mini-fab", "", "color", "primary", "aria-label", "Menu collapse", 1, "menu-side-button", 3, "ngClass", "click"]], template: function NavigationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "mat-sidenav-container", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-sidenav", 1, 2);
        ɵngcc0.ɵɵlistener("mouseenter", function NavigationComponent_Template_mat_sidenav_mouseenter_1_listener() { return ctx.mouseenter(); })("mouseleave", function NavigationComponent_Template_mat_sidenav_mouseleave_1_listener() { return ctx.mouseleave(); });
        ɵngcc0.ɵɵelementStart(3, "span", 3);
        ɵngcc0.ɵɵelementStart(4, "mat-nav-list");
        ɵngcc0.ɵɵtemplate(5, NavigationComponent_header_5_Template, 4, 2, "header", 4);
        ɵngcc0.ɵɵtemplate(6, NavigationComponent_div_6_Template, 2, 5, "div", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, NavigationComponent_footer_7_Template, 3, 1, "footer", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, NavigationComponent_ng_template_9_Template, 1, 1, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(11, NavigationComponent_ng_template_11_Template, 8, 3, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(13, NavigationComponent_ng_template_13_Template, 3, 1, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(15, NavigationComponent_button_15_Template, 3, 3, "button", 9);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("fixedInViewport", "true")("ngClass", ɵngcc0.ɵɵpureFunction3(6, _c67, ctx.isExpanded || ctx.isShowing, !ctx.isExpanded, !ctx.isExpanded && !ctx.isShowing));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.navigationPanel == null ? null : ctx.navigationPanel.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.navigation);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.navigationPanel.footer);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("ngIf", ctx.navigationPanel.canCollapse);
    } }, directives: [ɵngcc19.MatSidenavContainer, ɵngcc19.MatSidenav, ɵngcc3.NgClass, ɵngcc6.DefaultClassDirective, ɵngcc21.MatNavList, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc3.NgTemplateOutlet, ɵngcc21.MatListItem, cfTemplateDirective, ɵngcc8.MatBadge, ɵngcc12.MatIcon, ɵngcc21.MatListIconCssMatStyler, ɵngcc4.RouterLinkActive, ɵngcc4.RouterLink, ɵngcc14.MatDivider, ɵngcc7.MatButton], styles: [".admin-sidenav-content[_ngcontent-%COMP%]{align-items:center;display:flex;height:100%;justify-content:center}.admin-sidenav[_ngcontent-%COMP%]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none}.full-width[_ngcontent-%COMP%]{align-items:center;display:flex;padding-left:10px;width:100%}.menu-button[_ngcontent-%COMP%]{transform:rotate(0deg);transition:.3s ease-in-out}.menu-button.rotated[_ngcontent-%COMP%]{transform:rotate(180deg)}.submenu[_ngcontent-%COMP%]{overflow-y:hidden;padding-left:30px;transform:scaleY(0);transform-origin:top;transition:transform .3s ease}.submenu.expanded[_ngcontent-%COMP%]{transform:scaleY(1)}.side-width[_ngcontent-%COMP%]{width:250px}.collaps-width[_ngcontent-%COMP%]{width:65px}.menu-side-button[_ngcontent-%COMP%]{background:#fff;color:#000;left:238px;position:fixed;top:55px;z-index:9}@media (max-width:599px){.menu-side-button[_ngcontent-%COMP%]{display:none}}.menu-side-button.minimize[_ngcontent-%COMP%]{left:52px;transform:rotate(180deg)}@media (max-width:599px){.mobile-side-remove[_ngcontent-%COMP%]{display:none}}mat-sidenav-container[_ngcontent-%COMP%]{min-height:88vh}.image-icon[_ngcontent-%COMP%]{width:32px}.image-name[_ngcontent-%COMP%]{width:92px;z-index:-1}.sub-text[_ngcontent-%COMP%]{background:#673ab7;border-radius:5px;color:#fff;margin:5px;padding:5px}.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%]{top:-18px}.flex-beetween[_ngcontent-%COMP%]{align-content:space-between}.flex-beetween[_ngcontent-%COMP%], .flex-layout[_ngcontent-%COMP%]{display:flex;flex-direction:column}.flex-layout[_ngcontent-%COMP%]{height:100%;justify-content:space-between}.flex-layout[_ngcontent-%COMP%]   .flex-center[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center}.flex-layout[_ngcontent-%COMP%]   .flex-center[_ngcontent-%COMP%]   .header-image[_ngcontent-%COMP%]{max-width:64px}.mat-drawer-inner-container[_ngcontent-%COMP%]{overflow:hidden!important}"] });
NavigationComponent.ctorParameters = () => [
    { type: BreakpointObserver },
    { type: ChangeDetectorRef }
];
NavigationComponent.propDecorators = {
    sidenav: [{ type: ViewChild, args: ["sidenav",] }],
    isExpanded: [{ type: Input }],
    navigationPanel: [{ type: Input }],
    navigation: [{ type: Input }],
    logout: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NavigationComponent, [{
        type: Component,
        args: [{
                selector: "admin-navigation",
                template: "<mat-sidenav-container class=\"admin-container\" autosize>\n  <mat-sidenav\n    #sidenav\n    class=\"admin-sidenav\"\n    [fixedInViewport]=\"'true'\"\n    [ngClass]=\"{\n      'side-width': isExpanded || isShowing,\n      'mobile-side-remove': !isExpanded,\n      'collaps-width': !isExpanded && !isShowing\n    }\"\n    mode=\"side\"\n    opened=\"true\"\n    (mouseenter)=\"mouseenter()\"\n    (mouseleave)=\"mouseleave()\"\n  >\n    <span class=\"flex-layout\">\n      <mat-nav-list>\n        <header *ngIf=\"navigationPanel?.header\">\n          <H3\n            *ngIf=\"navigationPanel?.header?.logo?.name; else image\"\n            align=\"center\"\n            >{{ navigationPanel?.header?.logo?.name }}</H3\n          >\n          <ng-template #image>\n            <div class=\"flex-center\">\n              <img\n                [ngClass]=\"{ 'image-icon': !(isExpanded || isShowing) }\"\n                [src]=\"navigationPanel?.header?.logo?.image\"\n                class=\"header-image\"\n              />\n            </div>\n          </ng-template>\n        </header>\n        <div *ngFor=\"let data of navigation; let i = index\">\n          <!-- <mat-list-item (click)=\"showSubmenu[0] = !showSubmenu[0]\" class=\"parent\">\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">{{data.name}}</span>\n          <mat-icon mat-list-icon>{{data.icon}}</mat-icon>\n          <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu[0]}\" *ngIf=\"isExpanded || isShowing\">\n            expand_more</mat-icon>\n        </mat-list-item> -->\n          <ng-container\n            *ngTemplateOutlet=\"mainmenu; context: { menu: data, index: i }\"\n          ></ng-container>\n        </div>\n      </mat-nav-list>\n\n      <footer *ngIf=\"navigationPanel.footer\">\n        <mat-nav-list>\n          <mat-list-item\n            *ngIf=\"navigationPanel.footer.logout\"\n            (click)=\"logoutEvent()\"\n          >\n            <ng-container\n              *ngIf=\"\n                navigationPanel.footer?.template.content as tmpl;\n                else footertemplate\n              \"\n            >\n              <ng-container\n                cfTemplate\n                [cfTemplate]=\"\n                  '<style>' +\n                  navigationPanel.footer?.template?.css +\n                  '</style>' +\n                  tmpl\n                \"\n              >\n              </ng-container>\n            </ng-container>\n          </mat-list-item>\n        </mat-nav-list>\n      </footer>\n    </span>\n  </mat-sidenav>\n\n  <ng-content></ng-content>\n</mat-sidenav-container>\n\n<ng-template #submenu let-menu=\"menu\" let-j=\"mainindex\" let-s=\"subindex\">\n  <div\n    class=\"submenu\"\n    [ngClass]=\"{ expanded: s >= 0 ? showSubSubMenu[j][s] : showSubmenu[j] }\"\n    *ngIf=\"isShowing || isExpanded\"\n  >\n    <div *ngFor=\"let item of menu; let m = index\">\n      <div *ngIf=\"item?.children; else nochild\">\n        <mat-list-item\n          (click)=\"showSubSubMenu[j][m] = !showSubSubMenu[j][m]\"\n          class=\"parent\"\n        >\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">\n            <span *ngIf=\"item.name; else submenuImage\">{{ item.name }}</span>\n            <span\n              [matBadge]=\"item?.subText?.text\"\n              *ngIf=\"item?.subText?.displayType == 'BADGE'\"\n              matBadgeOverlap=\"false\"\n            ></span>\n            <span\n              *ngIf=\"item?.subText?.displayType == 'PLAIN_TEXT'\"\n              class=\"sub-text\"\n              >{{ item?.subText?.text }}</span\n            >\n          </span>\n          <mat-icon *ngIf=\"item.icon; else subimageIcon\" mat-list-icon>{{\n            item.icon\n          }}</mat-icon>\n          <mat-icon\n            class=\"menu-button\"\n            [ngClass]=\"{ rotated: showSubSubMenu[j][m] }\"\n            *ngIf=\"isExpanded || isShowing\"\n          >\n            expand_more</mat-icon\n          >\n        </mat-list-item>\n        <span *ngIf=\"showSubSubMenu[j][m]\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              submenu;\n              context: { menu: item.children, mainindex: j, subindex: m }\n            \"\n          >\n          </ng-container>\n        </span>\n      </div>\n      <ng-template #nochild>\n        <mat-list-item [routerLink]=\"[item?.route]\" routerLinkActive=\"active\">\n          <span *ngIf=\"item.name; else submenuImage\">{{ item.name }}</span>\n          <span\n            [matBadge]=\"item?.subText?.text\"\n            *ngIf=\"item?.subText?.displayType == 'BADGE'\"\n            matBadgeOverlap=\"false\"\n          ></span>\n          <span\n            *ngIf=\"item?.subText?.displayType == 'PLAIN_TEXT'\"\n            class=\"sub-text\"\n            >{{ item?.subText?.text }}</span\n          >\n          <mat-icon *ngIf=\"item.icon; else subimageIcon\" mat-list-icon>\n            {{ item.icon }}</mat-icon\n          >\n        </mat-list-item>\n      </ng-template>\n      <mat-divider *ngIf=\"item?.divider\"></mat-divider>\n\n      <ng-template #subimageIcon>\n        <img [src]=\"item.image\" class=\"image-icon\" />\n      </ng-template>\n\n      <ng-template #submenuImage>\n        <img [src]=\"item.nameAsImage\" class=\"image-name\" />\n      </ng-template>\n    </div>\n    <!-- <mat-list-item>SubSubmenu Item 2</mat-list-item> -->\n  </div>\n</ng-template>\n\n<ng-template #mainmenu let-menu=\"menu\" let-i=\"index\">\n  <div *ngIf=\"menu.children; else nochild\">\n    <mat-list-item (click)=\"showSubmenu[i] = !showSubmenu[i]\" class=\"parent\">\n      <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">\n        <span *ngIf=\"menu.name; else menuImage\">{{ menu.name }}</span>\n        <span\n          [matBadge]=\"menu?.subText?.text\"\n          *ngIf=\"menu?.subText?.displayType == 'BADGE'\"\n          matBadgeOverlap=\"false\"\n        ></span>\n\n        <span\n          *ngIf=\"menu?.subText?.displayType == 'PLAIN_TEXT'\"\n          class=\"sub-text\"\n          >{{ menu?.subText?.text }}</span\n        >\n      </span>\n      <mat-icon *ngIf=\"menu.icon; else imageIcon\" mat-list-icon\n        >{{ menu.icon }}\n      </mat-icon>\n\n      <mat-icon\n        class=\"menu-button\"\n        [ngClass]=\"{ rotated: showSubmenu[i] }\"\n        *ngIf=\"isExpanded || isShowing\"\n      >\n        expand_more\n      </mat-icon>\n    </mat-list-item>\n    <span *ngIf=\"showSubmenu[i]\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          submenu;\n          context: { menu: menu.children, mainindex: i }\n        \"\n      ></ng-container>\n    </span>\n  </div>\n  <ng-template #nochild>\n    <mat-list-item\n      class=\"parent\"\n      [routerLink]=\"[menu?.route]\"\n      routerLinkActive=\"active\"\n      ><span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">\n        <span *ngIf=\"menu.name; else menuImage\">{{ menu.name }}</span></span\n      >\n      <mat-icon *ngIf=\"menu.icon; else imageIcon\" mat-list-icon>\n        {{ menu.icon }}</mat-icon\n      >\n    </mat-list-item>\n  </ng-template>\n  <mat-divider *ngIf=\"menu?.divider\"></mat-divider>\n  <ng-template #imageIcon>\n    <img [src]=\"menu.image\" class=\"image-icon\" />\n  </ng-template>\n\n  <ng-template #menuImage>\n    <img [src]=\"menu.nameAsImage\" class=\"image-name\" />\n  </ng-template>\n</ng-template>\n\n<ng-template #footertemplate>\n  <mat-icon mat-list-icon>power_settings_new</mat-icon>\n  <span *ngIf=\"isExpanded || isShowing\">Logout</span>\n</ng-template>\n\n<button\n  mat-mini-fab\n  color=\"primary\"\n  [ngClass]=\"{ minimize: !isExpanded && !isShowing }\"\n  (click)=\"isExpanded = !isExpanded\"\n  class=\"menu-side-button\"\n  aria-label=\"Menu collapse\"\n\n  *ngIf=\"navigationPanel.canCollapse\"\n>\n  <mat-icon> keyboard_arrow_left</mat-icon>\n</button>\n",
                styles: [".admin-sidenav-content{align-items:center;display:flex;height:100%;justify-content:center}.admin-sidenav{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none}.full-width{align-items:center;display:flex;padding-left:10px;width:100%}.menu-button{transform:rotate(0deg);transition:.3s ease-in-out}.menu-button.rotated{transform:rotate(180deg)}.submenu{overflow-y:hidden;padding-left:30px;transform:scaleY(0);transform-origin:top;transition:transform .3s ease}.submenu.expanded{transform:scaleY(1)}.side-width{width:250px}.collaps-width{width:65px}.menu-side-button{background:#fff;color:#000;left:238px;position:fixed;top:55px;z-index:9}@media (max-width:599px){.menu-side-button{display:none}}.menu-side-button.minimize{left:52px;transform:rotate(180deg)}@media (max-width:599px){.mobile-side-remove{display:none}}mat-sidenav-container{min-height:88vh}.image-icon{width:32px}.image-name{width:92px;z-index:-1}.sub-text{background:#673ab7;border-radius:5px;color:#fff;margin:5px;padding:5px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-18px}.flex-beetween{align-content:space-between}.flex-beetween,.flex-layout{display:flex;flex-direction:column}.flex-layout{height:100%;justify-content:space-between}.flex-layout .flex-center{display:flex;flex-direction:row;justify-content:center}.flex-layout .flex-center .header-image{max-width:64px}.mat-drawer-inner-container{overflow:hidden!important}"]
            }]
    }], function () { return [{ type: ɵngcc35.BreakpointObserver }, { type: ɵngcc0.ChangeDetectorRef }]; }, { isExpanded: [{
            type: Input
        }], logout: [{
            type: Output
        }], navigation: [{
            type: Input
        }], sidenav: [{
            type: ViewChild,
            args: ["sidenav"]
        }], navigationPanel: [{
            type: Input
        }] }); })();

const ɵ0 = new Ability();
class MaterialWidgetModule {
}
MaterialWidgetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MaterialWidgetModule });
MaterialWidgetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MaterialWidgetModule_Factory(t) { return new (t || MaterialWidgetModule)(); }, providers: [
        { provide: Ability, useValue: ɵ0 },
        { provide: PureAbility, useExisting: Ability },
    ], imports: [[
            // ButtonModule,
            // CrudModule,
            // FieldModule,
            // ListModule,
            // ModalModule,
            // NavigationModule,
            // PageModule,
            // PrivilegeModule, 
            // SettingModule
            CommonModule,
            //    BrowserModule,
            //    BrowserAnimationsModule,
            //    NoopAnimationsModule,
            HttpClientModule,
            RouterModule,
            //    DynamicModule,
            MdePopoverModule,
            ReactiveFormsModule,
            TooltipModule,
            LayoutModule,
            MatButtonModule,
            MatButtonToggleModule,
            MatMenuModule,
            MatChipsModule,
            MatIconModule,
            MatBadgeModule,
            MatDialogModule,
            MatCardModule,
            MatTabsModule,
            MatExpansionModule,
            MatSidenavModule,
            MatBottomSheetModule,
            MatDividerModule,
            MatIconModule,
            MatFormFieldModule,
            MatInputModule,
            MatIconModule,
            MatSelectModule,
            MatAutocompleteModule,
            MatCheckboxModule,
            MatRadioModule,
            MatDatepickerModule,
            MatMomentDateModule,
            MatSliderModule,
            MatSlideToggleModule,
            MatListModule,
            MatTableModule,
            MatSortModule,
            MatPaginatorModule,
            MatGridListModule,
            MatProgressBarModule,
            MatProgressSpinnerModule,
            DragDropModule,
            // FroalaEditorModule.forRoot(), 
            // FroalaViewModule.forRoot(),
            //    MatFileUploadModule,
            // ReactiveFormsModule,
            // EditorModule,
            MatTooltipModule,
            MatDividerModule,
            MatSidenavModule,
            MatExpansionModule,
            MatFormFieldModule,
            MatCardModule,
            MatDividerModule,
            MatButtonModule,
            MatIconModule,
            MatCardModule,
            MatDividerModule,
            MatFormFieldModule,
            MatIconModule,
            MatCheckboxModule,
            MatDialogModule,
            QuillModule.forRoot(),
            AbilityModule,
            FlexLayoutModule,
            MatToolbarModule,
            InfiniteScrollModule
        ], 
        //    DynamicModule,
        MdePopoverModule,
        MatButtonModule,
        MatButtonToggleModule,
        MatMenuModule,
        MatChipsModule,
        MatIconModule,
        MatBadgeModule,
        MatDialogModule,
        MatCardModule,
        MatTabsModule,
        MatExpansionModule,
        MatSidenavModule,
        MatBottomSheetModule,
        MatDividerModule,
        MatIconModule,
        MatFormFieldModule,
        MatInputModule,
        MatIconModule,
        MatSelectModule,
        MatAutocompleteModule,
        MatCheckboxModule,
        MatRadioModule,
        MatDatepickerModule,
        MatMomentDateModule,
        MatSliderModule,
        MatSlideToggleModule,
        MatListModule,
        MatTableModule,
        MatSortModule,
        MatPaginatorModule,
        MatGridListModule,
        MatProgressBarModule,
        MatProgressSpinnerModule,
        // FroalaEditorModule.forRoot(), 
        // FroalaViewModule.forRoot(),
        //    MatFileUploadModule,
        // ReactiveFormsModule,
        // EditorModule,
        MatTooltipModule,
        MatDividerModule,
        MatSidenavModule,
        MatExpansionModule,
        MatFormFieldModule,
        MatCardModule,
        MatDividerModule,
        MatButtonModule,
        MatIconModule,
        MatCardModule,
        MatDividerModule,
        MatFormFieldModule,
        MatIconModule,
        MatCheckboxModule,
        MatDialogModule,
        InfiniteScrollModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MaterialWidgetModule, { declarations: function () { return [ButtonComponent, ButtonGroupComponent, ButtonDeleteConfirmationComponent, CrudHeaderComponent, CrudFormComponent, CrudListComponent, CrudListComponentInterface, BottomSearchSheet, FileUploaderComponent, FieldComponent, FormHeaderComponent, FormComponent, AdminLayoutComponent, ListComponent, StaticListComponent, DynamicListComponent, ModalComponent, ChipsComponent, ToolbarComponent, MultiImageComponent, ParagraphComponent, HighlightPipe, TooltipComponent, NgInit, SafeHtmlPipe, cfTemplateDirective, NavigationComponent]; }, imports: function () { return [
        // ButtonModule,
        // CrudModule,
        // FieldModule,
        // ListModule,
        // ModalModule,
        // NavigationModule,
        // PageModule,
        // PrivilegeModule, 
        // SettingModule
        CommonModule,
        //    BrowserModule,
        //    BrowserAnimationsModule,
        //    NoopAnimationsModule,
        HttpClientModule,
        RouterModule,
        //    DynamicModule,
        MdePopoverModule,
        ReactiveFormsModule,
        TooltipModule,
        LayoutModule,
        MatButtonModule,
        MatButtonToggleModule,
        MatMenuModule,
        MatChipsModule,
        MatIconModule,
        MatBadgeModule,
        MatDialogModule,
        MatCardModule,
        MatTabsModule,
        MatExpansionModule,
        MatSidenavModule,
        MatBottomSheetModule,
        MatDividerModule,
        MatIconModule,
        MatFormFieldModule,
        MatInputModule,
        MatIconModule,
        MatSelectModule,
        MatAutocompleteModule,
        MatCheckboxModule,
        MatRadioModule,
        MatDatepickerModule,
        MatMomentDateModule,
        MatSliderModule,
        MatSlideToggleModule,
        MatListModule,
        MatTableModule,
        MatSortModule,
        MatPaginatorModule,
        MatGridListModule,
        MatProgressBarModule,
        MatProgressSpinnerModule,
        DragDropModule,
        // FroalaEditorModule.forRoot(), 
        // FroalaViewModule.forRoot(),
        //    MatFileUploadModule,
        // ReactiveFormsModule,
        // EditorModule,
        MatTooltipModule,
        MatDividerModule,
        MatSidenavModule,
        MatExpansionModule,
        MatFormFieldModule,
        MatCardModule,
        MatDividerModule,
        MatButtonModule,
        MatIconModule,
        MatCardModule,
        MatDividerModule,
        MatFormFieldModule,
        MatIconModule,
        MatCheckboxModule,
        MatDialogModule, ɵngcc30.QuillModule, AbilityModule,
        FlexLayoutModule,
        MatToolbarModule,
        InfiniteScrollModule]; }, exports: function () { return [ButtonComponent, ButtonGroupComponent, CrudListComponentInterface, CrudFormComponent, CrudListComponent, FileUploaderComponent, FieldComponent, FormComponent, FormHeaderComponent, StaticListComponent, DynamicListComponent, ModalComponent, 
        //    DynamicModule,
        MdePopoverModule,
        MatButtonModule,
        MatButtonToggleModule,
        MatMenuModule,
        MatChipsModule,
        MatIconModule,
        MatBadgeModule,
        MatDialogModule,
        MatCardModule,
        MatTabsModule,
        MatExpansionModule,
        MatSidenavModule,
        MatBottomSheetModule,
        MatDividerModule,
        MatIconModule,
        MatFormFieldModule,
        MatInputModule,
        MatIconModule,
        MatSelectModule,
        MatAutocompleteModule,
        MatCheckboxModule,
        MatRadioModule,
        MatDatepickerModule,
        MatMomentDateModule,
        MatSliderModule,
        MatSlideToggleModule,
        MatListModule,
        MatTableModule,
        MatSortModule,
        MatPaginatorModule,
        MatGridListModule,
        MatProgressBarModule,
        MatProgressSpinnerModule,
        // FroalaEditorModule.forRoot(), 
        // FroalaViewModule.forRoot(),
        //    MatFileUploadModule,
        // ReactiveFormsModule,
        // EditorModule,
        MatTooltipModule,
        MatDividerModule,
        MatSidenavModule,
        MatExpansionModule,
        MatFormFieldModule,
        MatCardModule,
        MatDividerModule,
        MatButtonModule,
        MatIconModule,
        MatCardModule,
        MatDividerModule,
        MatFormFieldModule,
        MatIconModule,
        MatCheckboxModule,
        MatDialogModule,
        InfiniteScrollModule, NgInit, SafeHtmlPipe, cfTemplateDirective, NavigationComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaterialWidgetModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ButtonComponent,
                    ButtonGroupComponent,
                    ButtonDeleteConfirmationComponent,
                    CrudHeaderComponent,
                    CrudFormComponent,
                    CrudListComponent,
                    CrudListComponentInterface,
                    BottomSearchSheet,
                    FileUploaderComponent,
                    FieldComponent,
                    // FieldHorizontalLayoutComponent,
                    // FieldVerticalLayoutComponent,
                    // FieldInlineLayoutComponent,
                    // FieldLayoutComponent,
                    FormHeaderComponent,
                    FormComponent,
                    AdminLayoutComponent,
                    ListComponent,
                    StaticListComponent,
                    DynamicListComponent,
                    ModalComponent,
                    ChipsComponent,
                    ToolbarComponent,
                    MultiImageComponent,
                    ParagraphComponent,
                    HighlightPipe,
                    TooltipComponent,
                    NgInit,
                    SafeHtmlPipe,
                    cfTemplateDirective,
                    NavigationComponent
                ],
                imports: [
                    // ButtonModule,
                    // CrudModule,
                    // FieldModule,
                    // ListModule,
                    // ModalModule,
                    // NavigationModule,
                    // PageModule,
                    // PrivilegeModule, 
                    // SettingModule
                    CommonModule,
                    //    BrowserModule,
                    //    BrowserAnimationsModule,
                    //    NoopAnimationsModule,
                    HttpClientModule,
                    RouterModule,
                    //    DynamicModule,
                    MdePopoverModule,
                    ReactiveFormsModule,
                    TooltipModule,
                    LayoutModule,
                    MatButtonModule,
                    MatButtonToggleModule,
                    MatMenuModule,
                    MatChipsModule,
                    MatIconModule,
                    MatBadgeModule,
                    MatDialogModule,
                    MatCardModule,
                    MatTabsModule,
                    MatExpansionModule,
                    MatSidenavModule,
                    MatBottomSheetModule,
                    MatDividerModule,
                    MatIconModule,
                    MatFormFieldModule,
                    MatInputModule,
                    MatIconModule,
                    MatSelectModule,
                    MatAutocompleteModule,
                    MatCheckboxModule,
                    MatRadioModule,
                    MatDatepickerModule,
                    MatMomentDateModule,
                    MatSliderModule,
                    MatSlideToggleModule,
                    MatListModule,
                    MatTableModule,
                    MatSortModule,
                    MatPaginatorModule,
                    MatGridListModule,
                    MatProgressBarModule,
                    MatProgressSpinnerModule,
                    DragDropModule,
                    // FroalaEditorModule.forRoot(), 
                    // FroalaViewModule.forRoot(),
                    //    MatFileUploadModule,
                    // ReactiveFormsModule,
                    // EditorModule,
                    MatTooltipModule,
                    MatDividerModule,
                    MatSidenavModule,
                    MatExpansionModule,
                    MatFormFieldModule,
                    MatCardModule,
                    MatDividerModule,
                    MatButtonModule,
                    MatIconModule,
                    MatCardModule,
                    MatDividerModule,
                    MatFormFieldModule,
                    MatIconModule,
                    MatCheckboxModule,
                    MatDialogModule,
                    QuillModule.forRoot(),
                    AbilityModule,
                    FlexLayoutModule,
                    MatToolbarModule,
                    InfiniteScrollModule
                ],
                exports: [
                    ButtonComponent,
                    ButtonGroupComponent,
                    CrudListComponentInterface,
                    CrudFormComponent,
                    CrudListComponent,
                    FileUploaderComponent,
                    FieldComponent,
                    // FieldHorizontalLayoutComponent,
                    // FieldVerticalLayoutComponent,
                    // FieldInlineLayoutComponent,
                    // FieldLayoutComponent,
                    FormComponent,
                    FormHeaderComponent,
                    StaticListComponent,
                    DynamicListComponent,
                    ModalComponent,
                    //    DynamicModule,
                    MdePopoverModule,
                    MatButtonModule,
                    MatButtonToggleModule,
                    MatMenuModule,
                    MatChipsModule,
                    MatIconModule,
                    MatBadgeModule,
                    MatDialogModule,
                    MatCardModule,
                    MatTabsModule,
                    MatExpansionModule,
                    MatSidenavModule,
                    MatBottomSheetModule,
                    MatDividerModule,
                    MatIconModule,
                    MatFormFieldModule,
                    MatInputModule,
                    MatIconModule,
                    MatSelectModule,
                    MatAutocompleteModule,
                    MatCheckboxModule,
                    MatRadioModule,
                    MatDatepickerModule,
                    MatMomentDateModule,
                    MatSliderModule,
                    MatSlideToggleModule,
                    MatListModule,
                    MatTableModule,
                    MatSortModule,
                    MatPaginatorModule,
                    MatGridListModule,
                    MatProgressBarModule,
                    MatProgressSpinnerModule,
                    // FroalaEditorModule.forRoot(), 
                    // FroalaViewModule.forRoot(),
                    //    MatFileUploadModule,
                    // ReactiveFormsModule,
                    // EditorModule,
                    MatTooltipModule,
                    MatDividerModule,
                    MatSidenavModule,
                    MatExpansionModule,
                    MatFormFieldModule,
                    MatCardModule,
                    MatDividerModule,
                    MatButtonModule,
                    MatIconModule,
                    MatCardModule,
                    MatDividerModule,
                    MatFormFieldModule,
                    MatIconModule,
                    MatCheckboxModule,
                    MatDialogModule,
                    InfiniteScrollModule,
                    // AdminLayoutComponent
                    NgInit,
                    SafeHtmlPipe,
                    cfTemplateDirective,
                    NavigationComponent
                ],
                providers: [
                    { provide: Ability, useValue: ɵ0 },
                    { provide: PureAbility, useExisting: Ability },
                ]
            }]
    }], null, null); })();

// export const enum ActionType {

// export interface ButtonTooltip   {
//     width: number,
//     template?: {
//         component?: any,
//         layout?: ListCustomLayout,
//     }
// }

// import { ActionPage } from './action-page.model';
// import { Crud } from './crud.model';
// export {
//   ActionPage,
//   Crud 
// };

class ModalUitls {
    //    static dialogRef: MatDialogRef<any, any>;
    static openDialog(modal, component) {
        let dialogRef;
        dialogRef = modal.dialog.open(component ? component : ModalComponent, {
            width: modal.widgetConfig.modal && modal.widgetConfig.modal.width ? modal.widgetConfig.modal.width + 'px' : '250px',
            data: {
                type: modal.type,
                widgetConfig: modal.widgetConfig,
                sourceIndex: modal.sourceIndex,
                context: modal.context,
                originalData: modal.originalData,
                keyMap: modal.keyMap,
                reset: modal.reset
            }
        });
        if (dialogRef.componentInstance.onButtonClick) {
            dialogRef.componentInstance.onButtonClick.subscribe(event => {
                console.log(event);
                if (eval("this.buttonClick")) {
                    eval("this.buttonClick(event)");
                }
            });
        }
        if (dialogRef.componentInstance.onFieldChange) {
            dialogRef.componentInstance.onFieldChange.subscribe((event) => {
                console.log(event);
                if (eval("this.fieldChange")) {
                    eval("this.fieldChange(event)");
                }
            }, this);
        }
        if (dialogRef.componentInstance.onFormChange) {
            dialogRef.componentInstance.onFormChange.subscribe(event => {
                console.log(event);
                if (eval("this.formChange")) {
                    eval("this.formChange(event)");
                }
            });
        }
        dialogRef.afterClosed().subscribe(result => {
            console.log('The dialog was closed');
            //          this.invokeAction(result, event);
        });
    }
}

/*
 * Public API Surface of ngx-material-widget
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AbilityUtils, AdminLayoutComponent, BadgeUitls, BottomSearchSheet, ButtonComponent, ButtonGroupComponent, ButtonUtils, CollectionUtils, CrudFormComponent, CrudListComponent, CrudListComponentInterface, CrudUtils, DependentUtils, DropdownUtils, DynamicListComponent, FieldComponent, FieldErrorStateMatcher, FieldUtils, FormComponent, FormCustomUtils, FormHeaderComponent, FormUtils, KeyMapUtils, ListUtils, MasterDataUtils, MaterialWidgetModule, ModalComponent, ModalUitls, ObjectUtils, PropertyUtils, SecurityUtils, StaticListComponent, StringUtils, ɵ0, ButtonDeleteConfirmationComponent as ɵa, CrudHeaderComponent as ɵb, FileUploaderComponent as ɵc, FieldComponent as ɵd, FormHeaderComponent as ɵe, FormComponent as ɵf, ListComponent as ɵg, ChipsComponent as ɵh, ToolbarComponent as ɵi, MultiImageComponent as ɵj, ParagraphComponent as ɵk, HighlightPipe as ɵl, TooltipComponent as ɵm, NgInit as ɵn, SafeHtmlPipe as ɵo, cfTemplateDirective as ɵp, NavigationComponent as ɵq };

//# sourceMappingURL=ngx-material-widget.js.map