{"version":3,"file":"form.component.d.ts","sources":["form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { Form, FormField, FormLayout, FormButton, FormButtonLayout } from '../../model';\nimport { FieldChange, KeyMap } from '../../../field/model';\nimport { FormGroup } from '@angular/forms';\nimport { Action } from '../../../button/model';\nimport { Ability } from '@casl/ability';\nimport { Subscription } from 'rxjs';\nexport declare class FormComponent implements OnInit, OnDestroy {\n    private ability;\n    private breakpointObserver;\n    _formConfig: Form;\n    get formConfig(): any;\n    set formConfig(_formConfig: any);\n    sourceIdentifier: string;\n    sourceIndex: number;\n    widgetArrayIndex: number;\n    originalData: any;\n    keyMap: Array<KeyMap>;\n    onFormChange: EventEmitter<any>;\n    onFieldChange: EventEmitter<any>;\n    onButtonClick: EventEmitter<any>;\n    formFields: Array<FormField>;\n    dependencies: any;\n    cellCount: number;\n    isMobile: boolean;\n    isTablet: boolean;\n    isDesktop: boolean;\n    showButtons: boolean;\n    private _supportingRecord;\n    get supportingRecord(): any;\n    set supportingRecord(_supportingRecord: any);\n    private _record;\n    get record(): any;\n    set record(_record: any);\n    private _reset;\n    get reset(): boolean;\n    set reset(_reset: boolean);\n    form: FormGroup;\n    formLayouts: Array<FormLayout>;\n    formButton: FormButton;\n    formButtonLayout: FormButtonLayout;\n    breakpointSubscription: Subscription;\n    formInitialized: boolean;\n    constructor(ability: Ability, breakpointObserver: BreakpointObserver);\n    ngOnInit(): void;\n    init(): void;\n    getCustomLayout(): void;\n    getActions(): void;\n    dependentFieldChange(action: Action): void;\n    fieldChange(fieldChange: FieldChange): void;\n    buttonClick(event: any): void;\n    fieldDefaultSetting(): void;\n    setTitle(): void;\n    initFormGroup(): void;\n    getFormValue(): any;\n    transformRows(): void;\n    private formFieldRowColumnCount;\n    toggleList(formLayout: FormLayout): void;\n    getLayout(): void;\n    resetButtonDisplay(): void;\n    resetDisplayInColumn(): void;\n    getNewDisplayInColumn(device: string, displayInColumn: number): number;\n    ngOnDestroy(): void;\n}\n"]}