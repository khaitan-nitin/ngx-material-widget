{"version":3,"file":"chips.component.d.ts","sources":["chips.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ChipField, Chip, ChipItemChangedEvent, ChipOrientation, RemoveFunc } from '../../model/chips.model';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { DropdownOption } from '../../model';\nimport { FieldComponent } from '../field/field.component';\nimport { Ability } from '@casl/ability';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nexport declare class ChipsComponent extends FieldComponent implements OnInit {\n    router: Router;\n    ability: Ability;\n    field: ChipField;\n    disabled: boolean;\n    formControl: FormControl;\n    errorMatcher: ErrorStateMatcher;\n    input: ElementRef<HTMLInputElement>;\n    matAutocomplete: MatAutocomplete;\n    onListChange: EventEmitter<ChipItemChangedEvent>;\n    placeholder: string;\n    separatorKeysCodes: number[];\n    enableDragAndDrop: boolean;\n    orientation: ChipOrientation;\n    chips: Chip[];\n    options: Array<DropdownOption>;\n    addOnBlur: boolean;\n    removable: boolean;\n    constructor(router: Router, ability: Ability);\n    stateChanges: Observable<void>;\n    id: string;\n    ngControl: NgControl;\n    focused: boolean;\n    empty: boolean;\n    shouldLabelFloat: boolean;\n    errorState: boolean;\n    controlType?: string;\n    autofilled?: boolean;\n    userAriaDescribedBy?: string;\n    setDescribedByIds(ids: string[]): void;\n    onContainerClick(event: MouseEvent): void;\n    ngOnInit(): void;\n    setChips(): void;\n    addItem: ($event: MatChipInputEvent) => void;\n    keyExists(value: string): boolean;\n    removeItem: ($event: Event, item: Chip, index: number) => void;\n    drop: ($event: CdkDragDrop<Chip[]>) => void;\n    triggerChangedEvent: ($event: Event | MatAutocompleteSelectedEvent) => void;\n    onSelected: (event: MatAutocompleteSelectedEvent) => void;\n    isFunctionDefined: (func: RemoveFunc) => boolean;\n    errors(): Array<{\n        error: string;\n        message: string;\n    }>;\n}\n"]}