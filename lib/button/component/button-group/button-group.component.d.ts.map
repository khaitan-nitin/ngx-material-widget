{"version":3,"file":"button-group.component.d.ts","sources":["button-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Button, ObjectTree, ButtonGroup, HoverButton } from '../../model';\nimport { ButtonGroupList, HoverButtonList } from '../../model/button-group.model';\nimport { FormDiaplyMode } from '../../../form/model';\nimport { Ability } from '@casl/ability';\nexport declare class ButtonGroupComponent implements OnInit {\n    private ability;\n    form: FormGroup;\n    formDisplayMode: FormDiaplyMode;\n    sourceIdentifier: string;\n    sourceIndex: number;\n    widgetArrayIndex: number;\n    _buttons: Array<Button | ButtonGroup | HoverButton>;\n    get buttons(): Array<Button | ButtonGroup | HoverButton>;\n    set buttons(_buttons: Array<Button | ButtonGroup | HoverButton>);\n    context: any;\n    originalData: any;\n    buttonRoute: Array<string>;\n    parentHierarchy: ObjectTree;\n    disabled: boolean;\n    onClick: EventEmitter<any>;\n    onIconClick: EventEmitter<any>;\n    buttonLists: Array<Array<Button> | ButtonGroupList | HoverButtonList>;\n    buttonListsType: Array<string>;\n    displayDesktopDD: boolean;\n    displayTabletDD: boolean;\n    displayMobileDD: boolean;\n    hoverButtonLists: Array<Array<Button> | ButtonGroupList | HoverButtonList>;\n    constructor(ability: Ability);\n    ngOnInit(): void;\n    hasMobileButton(displayIn: string): boolean;\n    changeButtonTypeToGhost(): void;\n    getButtonList(): void;\n    isGroupAdded(groupIdentifier: string, buttonLists: Array<Array<Button> | ButtonGroupList | HoverButtonList>): boolean;\n    getGroupButton(groupIdentifier: string, buttonLists: Array<Array<Button> | ButtonGroupList | HoverButtonList>): boolean;\n    getHoverButtons(): HoverButtonList;\n    getButtonType(): void;\n    isButtonGroup(buttonList: Array<Button> | ButtonGroupList | HoverButtonList): boolean;\n    isChipGroup(buttonList: Array<Button> | ButtonGroupList | HoverButtonList): boolean;\n    isButtonHover(buttonList: Array<Button> | ButtonGroupList | HoverButtonList): boolean;\n    isButtonArray(buttonList: Array<Button> | ButtonGroupList | HoverButtonList): boolean;\n    click(event: any): void;\n    iconClick(event: any): void;\n}\n"]}