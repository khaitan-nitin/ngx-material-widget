{"version":3,"file":"crud-list-interface.component.d.ts","sources":["crud-list-interface.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { CrudHeader, ActionPage, CrudList, CrudListData, Crud, CrudSearch, CrudTab } from '../../model';\nimport { Button, Badge, Action } from '../../../button/model';\nimport { KeyMap } from '../../../field/model';\nimport { FormDiaplyMode } from '../../../form/model';\nexport declare class CrudListComponentInterface implements OnInit {\n    identifier: string;\n    header: CrudHeader;\n    actions: Array<Button>;\n    actionPages: Array<ActionPage>;\n    formReset: boolean;\n    listReset: boolean;\n    keyMap: Array<KeyMap>;\n    quickLinks: Array<Button>;\n    searchConfig: CrudSearch;\n    searchData: any;\n    listConfig: CrudList;\n    listPageBackRoute: Array<string>;\n    expandRowIndex: number;\n    configListData: CrudListData;\n    originalData: any;\n    constructor();\n    ngOnInit(): void;\n    setCommonConfig(): void;\n    setListConfig(): void;\n    setBadges(): Array<Badge>;\n    setCommonConfigUsingCrud(crud: Crud): void;\n    setListConfigUsingCrud(crud: Crud): void;\n    loadFilterParams(filterStr: string): void;\n    setConfigListData(records: Array<any>, badges: Array<Badge>, route?: Array<string>): void;\n    getRowKey(lIndex: number): Array<string>;\n    getChildRowKey(lIndex: number): Array<string>;\n    getChildRecordIdentifier(lIndex: number): string;\n    beforeChangeMerge(action: Action, sourceIdentifier: string): {\n        rows: Array<any>;\n        rowIndex: number;\n    };\n    addRow(action: Action, sourceIdentifier: string, data?: any): {\n        rows: Array<any>;\n        rowIndex: number;\n    };\n    afterChangeMerge(): void;\n    beforeChildChangeMerge(action: Action, sourceIdentifier: string): {\n        rows: Array<any>;\n        rowIndex: number;\n    };\n    addChildRow(action: Action, sourceIdentifier: string, data?: any): {\n        rows: Array<any>;\n        rowIndex: number;\n    };\n    setTabDisplayMode(crudTabs: Array<CrudTab>, formDisplayMode: FormDiaplyMode): void;\n    afterChildChangeMerge(): void;\n    setHeaderTitle(title: string): void;\n    setHeaderDescription(description: string): void;\n}\n"]}