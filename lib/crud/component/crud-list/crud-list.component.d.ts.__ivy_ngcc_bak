import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { Record, ListHeader } from '../../../list/model';
import { Button, HoverButton, ButtonGroup, Badge } from '../../../button/model';
import { KeyMap, FieldChange } from '../../../field/model';
import { Subscription } from 'rxjs';
import { Ability } from '@casl/ability';
import { CrudHeader, CrudList, CrudSearch, ActionPage, CrudListData } from '../../model';
import { MatSidenav } from '@angular/material/sidenav';
import { MatBottomSheetRef, MatBottomSheet } from '@angular/material/bottom-sheet';
export declare class CrudListComponent implements OnInit, OnDestroy {
    private _bottomSheet;
    private ability;
    identifier: string;
    header: CrudHeader;
    actions: Array<Button | HoverButton | ButtonGroup>;
    actionPages: Array<ActionPage>;
    quickLinks: Array<Button | HoverButton | ButtonGroup>;
    searchConfig: CrudSearch;
    listConfig: CrudList;
    formReset: boolean;
    originalData: any;
    _configData: CrudListData;
    get configData(): CrudListData;
    set configData(_configData: CrudListData);
    keyMap: Array<KeyMap>;
    listReset: boolean;
    _expanded: boolean;
    get expanded(): boolean;
    set expanded(_expanded: boolean);
    expandRowIndex: number;
    onFormChange: EventEmitter<any>;
    onFieldChange: EventEmitter<any>;
    onButtonClick: EventEmitter<any>;
    onButtonIconClick: EventEmitter<any>;
    onSortClick: EventEmitter<any>;
    onPageClick: EventEmitter<any>;
    onTabClick: EventEmitter<any>;
    title: string;
    showSearchForm: boolean;
    searchButton: Button;
    searchModalButton: Button;
    listHeaders: Array<ListHeader>;
    badges: Array<Badge>;
    pageBackRoute: Array<string>;
    records: Array<Record>;
    searchData: any;
    searchOnFieldsCount: number;
    searchOnFieldsButtons: Array<Button>;
    buttonSubscriber: Subscription;
    fieldSubscriber: Subscription;
    formSubscriber: Subscription;
    dialogRefSubscriber: Subscription;
    constructor(_bottomSheet: MatBottomSheet, ability: Ability);
    ngOnInit(): void;
    setConfigAsPerTab(tabIdentifier?: string): void;
    getTabIdentifier(tabTitle: string): string;
    setListHeaders(): void;
    setCrudHeader(): void;
    displaySearchForm(): void;
    setSearchButton(identifier: string, label: string, icon: string): Button;
    setSelectedFilterButton(identifier: string, label: string): Button | ButtonGroup;
    sidenav: MatSidenav;
    close(): void;
    fieldChange(fieldChange: FieldChange): void;
    formChange(form: any): void;
    buttonClick(event: any): void;
    buttonIconClick(event: any): void;
    onSort(event: any): void;
    onPage(event: any): void;
    onAccordianChange(event: any): void;
    onTabChange(event: any): void;
    openBottomSheet(): void;
    ngOnDestroy(): void;
    bottomUnsubscribe(): void;
}
export declare class BottomSearchSheet {
    private _bottomSheetRef;
    data: any;
    onFormChange: EventEmitter<any>;
    onFieldChange: EventEmitter<any>;
    onButtonClick: EventEmitter<any>;
    constructor(_bottomSheetRef: MatBottomSheetRef<BottomSearchSheet>, data: any);
    openLink(event: MouseEvent): void;
    fieldChange(fieldChange: FieldChange): void;
    formChange(form: any): void;
    buttonClick(event: any): void;
}
