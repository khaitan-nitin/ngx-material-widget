{"version":3,"file":"crud-form.component.d.ts","sources":["crud-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { CrudHeader, ActionPage, CrudTab, CrudWidget, CrudFormData, CrudForm } from '../../model';\nimport { Badge, ButtonGroup, HoverButton, Button, ButtonColor, Action } from '../../../button/model';\nimport { Form, FormDiaplyMode } from '../../../form/model';\nimport { Wizard } from '../../../wizard/model';\nimport { List } from '../../../list/model';\nimport { FieldChange, KeyMap } from '../../../field/model';\nimport { Ability } from '@casl/ability';\nexport declare class CrudFormComponent implements OnInit {\n    private ability;\n    identifier: string;\n    header: CrudHeader;\n    actions: Array<Button | HoverButton | ButtonGroup>;\n    actionPages: Array<ActionPage>;\n    onAction: string;\n    displayMode: FormDiaplyMode;\n    form: CrudForm;\n    reset: boolean;\n    configData: CrudFormData;\n    keyMap: Array<KeyMap>;\n    onFormChange: EventEmitter<any>;\n    onFieldChange: EventEmitter<any>;\n    onButtonClick: EventEmitter<any>;\n    onSortClick: EventEmitter<any>;\n    onPageClick: EventEmitter<any>;\n    title: string;\n    backButton: Button;\n    formsConfigToDisplay: Array<Form | List | Wizard>;\n    rowsInTab: Array<Array<Array<CrudWidget>>>;\n    badges: Array<Badge>;\n    pageBackRoute: Array<string>;\n    record: any;\n    addWidget: Button;\n    formTabLength: number;\n    filteredTabs: Array<CrudTab>;\n    constructor(ability: Ability);\n    ngOnInit(): void;\n    setFormTitle(): void;\n    setFormHeader(header: CrudHeader, displayMode: FormDiaplyMode): void;\n    setConfigAsPerTab(tabIdentifier?: string): void;\n    getTabIdentifier(tabTitle: string): string;\n    drawTabs(): void;\n    drawTab(tabIndex: number, widgetIdentifiers: Array<string>): Array<Array<CrudWidget>>;\n    displayWidget(widget: CrudWidget, supportingRecord: any, record: any): boolean;\n    addWidgetButton(identifier: string, label: string, icon: string, color: ButtonColor): Button;\n    fieldChange(fieldChange: FieldChange): void;\n    formChange(form: any): void;\n    buttonClick(action: Action): void;\n    onTabChange(event: any): void;\n    onAccordianChange(event: any): void;\n    onSort(event: any): void;\n    onPage(event: any): void;\n}\n"]}