import { Component, Input, Output, EventEmitter } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { Router, ActivatedRoute } from '@angular/router';
import { StringUtils, CollectionUtils, FormUtils, SecurityUtils, ButtonUtils, DependentUtils } from '../../../utility';
import { AbilityUtils } from '../../../utility/ability.utility';
import { Ability } from '@casl/ability';
import { ButtonDeleteConfirmationComponent } from '../button-delete-confirmation/button-delete-confirmation.component';
//export { Button, ObjectTree, ReservedButton, Action, ButtonType, HoverButton, ButtonGroup, IconPosition } from '../../model';
export class ButtonComponent {
    constructor(dialog, router, route, ability) {
        this.dialog = dialog;
        this.router = router;
        this.route = route;
        this.ability = ability;
        this.onClick = new EventEmitter();
        this.onIconClick = new EventEmitter();
        this.routerLink = [];
        this.displayButton = true;
        this.isButtonDisabled = false;
        this.isDisplayOnlyIcon = false;
        this.hasIconDisplay = false;
        this.isFlatButton = false;
        this.isGhostButton = false;
        this.isRaisedButton = false;
        this.isStrokedButton = false;
        this.isFabButton = false;
        this.isChip = false;
        this.isLink = false;
        this.isGroupButton = false;
        this.isMenuButton = false;
        this.buttonWithoutPadding = false;
        this.state = true;
        AbilityUtils.setAbility(this.ability);
    }
    get button() {
        return this._button;
    }
    set button(_button) {
        this._button = _button;
        if (StringUtils.isEmpty(this.label) || !StringUtils.isEmpty(this._button.label)) {
            this.label = this._button.label;
        }
        if (StringUtils.isEmpty(this._button.width)) {
            this._button.width = '';
        }
        else {
            this._button.width = this._button.width + '%';
            document.documentElement.style.setProperty('--width', this._button.width + '%');
        }
        if (StringUtils.isEmpty(this._button.iconPosition)) {
            this._button.iconPosition = "LEFT" /* LEFT */;
        }
    }
    ngOnInit() {
        if (this.displayButton) {
            this.setLabel();
            this.setButtonEnable();
            if (this.form) {
                this.formSubscription = this.form.valueChanges.subscribe(obj => {
                    this.setButtonEnable();
                });
            }
            this.setButtonDisplay();
            this.setOnlyIconDisplay();
            this.setIconDisplay();
            this.setLink();
            this.setGroupButton();
            this.setFlatButton();
            this.setGhostButton();
            this.setRaisedButton();
            this.setStrokedButton();
            this.setFabButton();
            this.setChip();
            this.setButtonWithoutPadding();
            this.setMenuButton();
        }
    }
    setButtonDisplay() {
        if ((!CollectionUtils.isEmpty(this._button.displayInFormModes) && this._button.displayInFormModes.indexOf(this.formDisplayMode) <= -1) || !DependentUtils.displayDependencyField(this._button.dependentOnFields, null, this.context ? this.context : this.originalData)) {
            this.displayButton = false;
        }
    }
    setButtonWithoutPadding() {
        if (this._button.identifier == "fieldTextClearBtn" || this._button.identifier == "fieldRouteToBtn" || this._button.identifier == "listFieldAsLink" || this.identifier == "listFieldAsLink") {
            this.buttonWithoutPadding = true;
        }
    }
    setLabel() {
        if (StringUtils.isEmpty(this.label)) {
            this.label = this._button.label;
        }
    }
    click(event) {
        if (!CollectionUtils.isEmpty(this._button.confirmationConfiguration)) {
            this.openDialog(event);
        }
        else {
            this.invokeAction(null, event);
        }
    }
    openDialog(event) {
        const dialogRef = this.dialog.open(ButtonDeleteConfirmationComponent, {
            width: this._button.confirmationConfiguration.width ? this._button.confirmationConfiguration.width : '250px',
            data: {
                form: this.form,
                sourceIdentifier: this.sourceIdentifier,
                sourceIndex: this.sourceIndex,
                widgetArrayIndex: this.widgetArrayIndex,
                context: this.context,
                originalData: this.originalData,
                buttonRoute: this.buttonRoute,
                parentHierarchy: this.parentHierarchy,
                confirmationConfig: this._button.confirmationConfiguration,
            }
        });
        dialogRef.afterClosed().subscribe(result => {
            console.log('The dialog was closed');
            this.invokeAction(result, event);
        });
    }
    invokeAction(actionDialog, event) {
        if (this._button.identifier == "crudBackButton" && this.buttonRoute && this.buttonRoute.length > 0) {
            this.router.navigate(this.buttonRoute, { skipLocationChange: false, replaceUrl: true });
            return;
        }
        if (this._button.identifier == "reset" /* RESET */) {
            FormUtils.reset(this.form);
            this.context = {};
        }
        let action = ButtonUtils.getAction(this.sourceIdentifier, this.sourceIndex, this.widgetArrayIndex, this._button.identifier, this.parentHierarchy, event, this.originalData, this.context, actionDialog);
        if (this._button.identifier == "search" /* SEARCH */ || this._button.identifier == "reset" /* RESET */) {
            this.addSearchParamsInUrl(action.data);
        }
        else {
            this.onClick.emit(action);
        }
    }
    iconClick(event) {
        let action = ButtonUtils.getAction(this.sourceIdentifier, this.sourceIndex, this.widgetArrayIndex, this._button.identifier, this.parentHierarchy, event, this.originalData, this.context, null);
        if (this._button['groupIdentifier'] == "clearFilterField" /* CLEAR_FILTER_FIELD */) {
            delete action.data[action.action];
            this.addSearchParamsInUrl(action.data);
        }
        else {
            this.onIconClick.emit(action);
        }
    }
    addSearchParamsInUrl(filterData) {
        const queryParams = { filter: SecurityUtils.encrypt(filterData) };
        this.router.navigate([], {
            relativeTo: this.route,
            queryParams: queryParams,
            queryParamsHandling: 'merge',
            skipLocationChange: false,
            replaceUrl: true
        });
    }
    setButtonEnable() {
        let isButtonDisabled = false;
        if (this.form) {
            isButtonDisabled = !this.form.valid;
        }
        if (this.form && this.form.disabled) {
            isButtonDisabled = false;
        }
        if (this._button.identifier == "search" /* SEARCH */ || this._button.identifier == "cancel" /* CANCEL */ || this._button.identifier == "reset" /* RESET */ || this._button.identifier == "add_field" /* ADD_FIELD */ || this._button.identifier == "remove_field" /* REMOVE_FIELD */ || this._button.alwaysEnable == true) {
            isButtonDisabled = false;
        }
        if (this.disabled) {
            isButtonDisabled = this.disabled;
        }
        this.isButtonDisabled = isButtonDisabled;
    }
    setOnlyIconDisplay() {
        this.isDisplayOnlyIcon = this._button && this._button.onlyIcon && !StringUtils.isEmpty(this._button.icon) ? true : false;
    }
    setIconDisplay() {
        this.hasIconDisplay = this._button && this._button.icon ? true : false;
    }
    setFlatButton() {
        this.isFlatButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "FLAT" /* FLAT */ && !this.isGroupButton && !this.isLink : false;
    }
    setGhostButton() {
        this.isGhostButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "GHOST" /* GHOST */ && !this.isGroupButton && !this.isLink : false;
    }
    setRaisedButton() {
        this.isRaisedButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "RAISED" /* RAISED */ && !this.isGroupButton && !this.isLink : false;
    }
    setStrokedButton() {
        this.isStrokedButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "STROKED" /* STROKED */ && !this.isGroupButton && !this.isLink : false;
    }
    setFabButton() {
        this.isFabButton = this._button && ButtonUtils.instanceOfButton(this._button) ? this._button.type == "FAB" /* FAB */ && !this.isGroupButton && !this.isLink : false;
    }
    setChip() {
        this.isChip = this._button && ButtonUtils.instanceOfChipButton(this._button) && !StringUtils.isEmpty(this._button.groupIdentifier) ? true : false;
    }
    setLink() {
        this.isLink = this._button && !StringUtils.isEmpty(this.label) ? !CollectionUtils.isEmpty(this._button.routerLink) : false;
        this.routerLink = this._button.routerLink;
    }
    setGroupButton() {
        this.isGroupButton = this._button && ButtonUtils.instanceOfButtonGroup(this._button) && !StringUtils.isEmpty(this._button.groupIdentifier) ? true : false;
    }
    setMenuButton() {
        this.isMenuButton = this._button && ButtonUtils.instanceOfHoverButton(this._button) ? true : false;
    }
    ngOnDestroy() {
        if (this.formSubscription) {
            this.formSubscription.unsubscribe();
        }
    }
}
ButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'mx-button',
                template: "<!-- <pre>{{ displayButton | json }}</pre> -->\n<span \n    [style.width]=\"_button.width\"\n    class=\"mx-button-wrapper\" \n    *ngIf=\"_button && displayButton && (_button.permission == null || (_button.permission && (_button.permission['subject'] | can: _button.permission['action'])))\">\n    <button \n        mat-menu-item  \n        *ngIf=\"isMenuButton\"\n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-menu-button mx-menu-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': 'calc(' + _button.width + ' - 8px)'}\"\n        [attr.color]=\"_button.color\"  \n        (click)=\"click($event)\" \n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-flat-button\n        *ngIf=\"isFlatButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-flat-button mx-flat-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\"  \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button> \n\n    <button \n        mat-button \n        *ngIf=\"isGhostButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default', 'mx-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"mx-ghost-button mx-ghost-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>    \n    </button>\n    \n    <button \n        mat-raised-button \n        *ngIf=\"isRaisedButton\"\n        [color]=\"_button.color\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-raised-button mx-raised-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-stroked-button \n        *ngIf=\"isStrokedButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-stroked-button mx-stroked-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-fab \n        *ngIf=\"isFabButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-fab-button mx-fab-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n \n    <mat-chip \n        [selected]=\"state\" \n        *ngIf=\"isChip\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default'}\" \n        class=\"mx-chip-button mx-chip-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-chip>\n    <!-- {{_button | json}} -->\n    <a \n        mat-button \n        *ngIf=\"isLink\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-default-btn': _button.size == 'default', 'mx-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"mx-link mx-link-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [routerLink]=\"routerLink\" \n        [matTooltip]=\"_button.label\"\n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </a>\n\n    <!-- appearance=\"legacy\"  -->\n    <mat-button-toggle \n        *ngIf=\"isGroupButton\" \n        [value]=\"_button.identifier\" \n        [disabled]=\"isButtonDisabled\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-btn': _button.size == 'small', 'mx-tiny-btn': _button.size == 'tiny', 'mx-micro-btn': _button.size == 'micro', 'mx-toggle-default-btn': _button.size == 'default'}\" \n        class=\"mx-toggle-button mx-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (change)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\"  \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-button-toggle>\n</span>\n\n<ng-template #cfButtonIcon>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-icon': _button.size == 'small', 'mx-tiny-icon': _button.size == 'tiny', 'mx-micro-icon': _button.size == 'micro'}\"  \n        class=\"mx-button-icon mx-button-icon-{{_button.identifier}}\"\n        [style.padding-right.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'LEFT' || _button.iconPosition == 'TOP')\">\n            {{_button.icon}}\n    </mat-icon>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'TOP' && !isDisplayOnlyIcon\"/>\n    <span class=\"mx-button-label mx-button-label-{{_button.identifier}}\" *ngIf=\"!isDisplayOnlyIcon\">{{ label }}</span>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'BOTTOM' && !isDisplayOnlyIcon\"/>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'mx-small-icon': _button.size == 'small', 'mx-tiny-icon': _button.size == 'tiny', 'mx-micro-icon': _button.size == 'micro'}\"  \n        class=\"mx-button-icon mx-button-icon-{{_button.identifier}}\"\n        [style.padding-left.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'RIGHT' || _button.iconPosition == 'BOTTOM')\">\n            {{_button.icon}}\n    </mat-icon>\n</ng-template>",
                styles: [".mx-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.mx-small-icon{font-size:12px;height:12px;width:12px}.mx-small-btn ::ng-deep .mat-button-toggle-label-content,.mx-small-btn ::ng-deep .mx-button-label{line-height:30px}.mx-small-btn.mat-standard-chip{min-height:30px}.mx-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.mx-tiny-icon{font-size:10px;height:10px;width:10px}.mx-tiny-btn ::ng-deep .mat-button-toggle-label-content,.mx-tiny-btn ::ng-deep .mx-button-label{line-height:24px}.mx-tiny-btn.mat-standard-chip{min-height:26px}.mx-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.mx-micro-icon{font-size:8px;height:8px;width:8px}.mx-micro-btn ::ng-deep .mat-button-toggle-label-content,.mx-micro-btn ::ng-deep .mx-button-label{line-height:18px}.mx-micro-btn.mat-standard-chip{min-height:20px}.mx-toggle-default-btn ::ng-deep .mat-button-toggle-label-content,.mx-toggle-default-btn ::ng-deep .mx-button-label{line-height:36px}.mx-chip-button{justify-content:center}.mx-chip-button .mat-standard-chip{margin:unset}.mx-button-wt-padding,.mx-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"]
            },] }
];
ButtonComponent.ctorParameters = () => [
    { type: MatDialog },
    { type: Router },
    { type: ActivatedRoute },
    { type: Ability }
];
ButtonComponent.propDecorators = {
    form: [{ type: Input }],
    formDisplayMode: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    identifier: [{ type: Input }],
    context: [{ type: Input }],
    originalData: [{ type: Input }],
    label: [{ type: Input }],
    buttonRoute: [{ type: Input }],
    parentHierarchy: [{ type: Input }],
    disabled: [{ type: Input }],
    onClick: [{ type: Output }],
    onIconClick: [{ type: Output }],
    _button: [{ type: Input }],
    button: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,