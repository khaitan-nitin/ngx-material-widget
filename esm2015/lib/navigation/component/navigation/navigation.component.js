import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
export class NavigationComponent {
    constructor() {
        this.isExpanded = true;
        this.logout = new EventEmitter();
        this.showSubmenu = [false];
        this.isShowing = false;
        this.showSubSubMenu = [[false, false], false];
        // this.navigation = this.navigationPanel[0].navigations;
    }
    mouseenter() {
        if (!this.isExpanded) {
            this.isShowing = true;
        }
    }
    mouseleave() {
        if (!this.isExpanded) {
            this.isShowing = false;
        }
    }
    logoutEvent() {
        this.logout.emit();
    }
    ngOnInit() {
        this.navigation = this.navigationPanel.navigations;
    }
}
NavigationComponent.decorators = [
    { type: Component, args: [{
                selector: 'admin-navigation',
                template: "<mat-sidenav-container class=\"admin-container\" autosize>\n  <mat-sidenav #sidenav class=\"admin-sidenav\"\n    [ngClass]=\"{'side-width':(isExpanded || isShowing),'mobile-side-remove':!isExpanded,'collaps-width':(!isExpanded && !isShowing)}\"\n    mode=\"side\" opened=\"true\" (mouseenter)=\"mouseenter()\" (mouseleave)=\"mouseleave()\">\n    <span class=\"flex-layout\">\n\n      <mat-nav-list>\n        <div *ngFor=\"let data of navigation;let i=index\">\n          <!-- <mat-list-item (click)=\"showSubmenu[0] = !showSubmenu[0]\" class=\"parent\">\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">{{data.name}}</span>\n          <mat-icon mat-list-icon>{{data.icon}}</mat-icon>\n          <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu[0]}\" *ngIf=\"isExpanded || isShowing\">\n            expand_more</mat-icon>\n        </mat-list-item> -->\n          <ng-container *ngTemplateOutlet=\"mainmenu; context: {menu:data,index:i}\"></ng-container>\n\n        </div>\n      </mat-nav-list>\n\n      <footer *ngIf=\"navigationPanel.footer\">\n        <mat-nav-list>\n          <mat-list-item *ngIf=\"navigationPanel.footer.logout\" (click)=\"logoutEvent()\">\n            <ng-container *ngIf=\"navigationPanel.footer?.template.content as tmpl; else footertemplate\">\n\n              <ng-container cfTemplate [cfTemplate]=\"'<style>'+navigationPanel.footer?.template?.css+'</style>'+tmpl\">\n              </ng-container>\n            </ng-container>\n          </mat-list-item>\n        </mat-nav-list>\n\n\n      </footer>\n\n    </span>\n  </mat-sidenav>\n\n  <ng-content></ng-content>\n</mat-sidenav-container>\n\n<ng-template #submenu let-menu=\"menu\" let-j=\"mainindex\" let-s=\"subindex\">\n\n  <div class=\"submenu\" [ngClass]=\"{'expanded' :(s>=0?showSubSubMenu[j][s]:showSubmenu[j])}\"\n    *ngIf=\"isShowing || isExpanded\">\n    <div *ngFor=\"let item of menu;let m=index\">\n\n      <div *ngIf=\"item?.children;else nochild\">\n        <mat-list-item (click)=\"showSubSubMenu[j][m] = !showSubSubMenu[j][m]\" class=\"parent\">\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">\n            <span *ngIf=\"item.name;else submenuImage\">{{item.name}}</span>\n            <span [matBadge]=\"item?.subText?.text\" *ngIf=\"item?.subText?.displayType=='BADGE'\"\n              matBadgeOverlap=\"false\"></span>\n            <span *ngIf=\"item?.subText?.displayType=='PLAIN_TEXT'\" class=\"sub-text\">{{item?.subText?.text}}</span>\n          </span>\n          <mat-icon *ngIf=\"item.icon;else subimageIcon\" mat-list-icon>{{item.icon}}</mat-icon>\n          <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubSubMenu[j][m]}\" *ngIf=\"isExpanded || isShowing\">\n            expand_more</mat-icon>\n        </mat-list-item>\n        <span *ngIf=\"showSubSubMenu[j][m]\">\n          <ng-container *ngTemplateOutlet=\"submenu; context: {menu:item.children,mainindex:j,subindex:m}\">\n          </ng-container>\n        </span>\n      </div>\n      <ng-template #nochild>\n\n        <mat-list-item [routerLink]=\"[item?.route]\" routerLinkActive=\"active\">\n          <span *ngIf=\"item.name;else submenuImage\">{{item.name}}</span>\n          <span [matBadge]=\"item?.subText?.text\" *ngIf=\"item?.subText?.displayType=='BADGE'\"\n            matBadgeOverlap=\"false\"></span>\n          <span *ngIf=\"item?.subText?.displayType=='PLAIN_TEXT'\" class=\"sub-text\">{{item?.subText?.text}}</span>\n          <mat-icon *ngIf=\"item.icon;else subimageIcon\" mat-list-icon>\n            {{item.icon}}</mat-icon>\n        </mat-list-item>\n\n      </ng-template>\n      <mat-divider *ngIf=\"item?.divider\"></mat-divider>\n\n      <ng-template #subimageIcon>\n        <img [src]=\"item.image\" class=\"image-icon\">\n      </ng-template>\n\n      <ng-template #submenuImage>\n        <img [src]=\"item.nameAsImage\" class=\"image-name\">\n      </ng-template>\n    </div>\n    <!-- <mat-list-item>SubSubmenu Item 2</mat-list-item> -->\n  </div>\n</ng-template>\n\n<ng-template #mainmenu let-menu=\"menu\" let-i=\"index\">\n  <div *ngIf=\"menu.children;else nochild\">\n    <mat-list-item (click)=\"showSubmenu[i] = !showSubmenu[i]\" class=\"parent\">\n      <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">\n        <span *ngIf=\"menu.name;else menuImage\">{{menu.name}}</span>\n        <span [matBadge]=\"menu?.subText?.text\" *ngIf=\"menu?.subText?.displayType=='BADGE'\"\n          matBadgeOverlap=\"false\"></span>\n\n        <span *ngIf=\"menu?.subText?.displayType=='PLAIN_TEXT'\" class=\"sub-text\">{{menu?.subText?.text}}</span>\n      </span>\n      <mat-icon *ngIf=\"menu.icon;else imageIcon\" mat-list-icon>{{menu.icon}} </mat-icon>\n\n      <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu[i]}\" *ngIf=\"isExpanded || isShowing\">\n        expand_more\n      </mat-icon>\n    </mat-list-item>\n    <span *ngIf=\"showSubmenu[i]\">\n      <ng-container *ngTemplateOutlet=\"submenu; context: {menu:menu.children,mainindex:i}\"></ng-container>\n    </span>\n  </div>\n  <ng-template #nochild>\n\n    <mat-list-item class=\"parent\" [routerLink]=\"[menu?.route]\" routerLinkActive=\"active\"><span class=\"full-width\"\n        *ngIf=\"isExpanded || isShowing\"> <span *ngIf=\"menu.name;else menuImage\">{{menu.name}}</span></span>\n      <mat-icon *ngIf=\"menu.icon;else imageIcon\" mat-list-icon>\n        {{menu.icon}}</mat-icon>\n    </mat-list-item>\n  </ng-template>\n  <mat-divider *ngIf=\"menu?.divider\"></mat-divider>\n  <ng-template #imageIcon>\n    <img [src]=\"menu.image\" class=\"image-icon\">\n  </ng-template>\n\n  <ng-template #menuImage>\n    <img [src]=\"menu.nameAsImage\" class=\"image-name\">\n  </ng-template>\n</ng-template>\n\n\n<ng-template #footertemplate>\n\n  <mat-icon mat-list-icon>power_settings_new</mat-icon>\n  <span *ngIf=\"isExpanded || isShowing\">Logout</span>\n\n</ng-template>\n\n\n<button mat-mini-fab color=\"primary\" [ngClass]=\"{'minimize':(!isExpanded && !isShowing)}\"\n  (click)=\"isExpanded = !isExpanded\" class=\"menu-side-button\" aria-label=\"Menu collapse\">\n  <mat-icon> keyboard_arrow_left</mat-icon>\n</button>",
                styles: [".admin-sidenav-content{align-items:center;display:flex;height:100%;justify-content:center}.admin-sidenav{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none}.full-width{align-items:center;display:flex;padding-left:10px;width:100%}.menu-button{transform:rotate(0deg);transition:.3s ease-in-out}.menu-button.rotated{transform:rotate(180deg)}.submenu{overflow-y:hidden;padding-left:30px;transform:scaleY(0);transform-origin:top;transition:transform .3s ease}.submenu.expanded{transform:scaleY(1)}.side-width{width:250px}.collaps-width{width:65px}.menu-side-button{background:#fff;color:#000;left:238px;position:absolute;top:110px;z-index:9}@media (max-width:599px){.menu-side-button{display:none}}.menu-side-button.minimize{left:52px;transform:rotate(180deg)}@media (max-width:599px){.mobile-side-remove{display:none}}mat-sidenav-container{min-height:88vh}.image-icon{width:32px}.image-name{width:92px;z-index:-1}.sub-text{background:#673ab7;border-radius:5px;color:#fff;margin:5px;padding:5px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-18px}.flex-beetween{align-content:space-between}.flex-beetween,.flex-layout{display:flex;flex-direction:column}.flex-layout{height:100%;justify-content:space-between}"]
            },] }
];
NavigationComponent.ctorParameters = () => [];
NavigationComponent.propDecorators = {
    sidenav: [{ type: ViewChild, args: ['sidenav',] }],
    isExpanded: [{ type: Input }],
    navigationPanel: [{ type: Input }],
    navigation: [{ type: Input }],
    logout: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL25pdGlua2hhaXRhbi9OaXRpbi9zdHVkeS9hbmd1bGFyL21hdGVyaWFsL2FkbWluLWJ1aWxkZXItcGx1Z2luL3Byb2plY3RzL25neC1tYXRlcmlhbC13aWRnZXQvc3JjLyIsInNvdXJjZXMiOlsibGliL25hdmlnYXRpb24vY29tcG9uZW50L25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFTMUYsTUFBTSxPQUFPLG1CQUFtQjtJQWU5QjtRQVpTLGVBQVUsR0FBRyxJQUFJLENBQUM7UUFLakIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFM0MsZ0JBQVcsR0FBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QyxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLG1CQUFjLEdBQWUsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUluRCx5REFBeUQ7SUFDM0QsQ0FBQztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNwQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN2QjtJQUNILENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDeEI7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDO0lBQ3JELENBQUM7OztZQTFDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsMmpNQUEwQzs7YUFFM0M7Ozs7c0JBRUUsU0FBUyxTQUFDLFNBQVM7eUJBRW5CLEtBQUs7OEJBRUwsS0FBSzt5QkFDTCxLQUFLO3FCQUVMLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0U2lkZW5hdiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NpZGVuYXYnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbiwgTmF2aWdhdGlvblBhbm5lbCB9IGZyb20gJy4uLy4uL21vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWRtaW4tbmF2aWdhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCdzaWRlbmF2Jykgc2lkZW5hdjogTWF0U2lkZW5hdjtcblxuICBASW5wdXQoKSBpc0V4cGFuZGVkID0gdHJ1ZTtcblxuICBASW5wdXQoKSBuYXZpZ2F0aW9uUGFuZWw6IE5hdmlnYXRpb25QYW5uZWw7XG4gIEBJbnB1dCgpIG5hdmlnYXRpb246IEFycmF5PE5hdmlnYXRpb24+O1xuXG4gIEBPdXRwdXQoKSBsb2dvdXQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgXG4gIHNob3dTdWJtZW51OiBBcnJheTxib29sZWFuPiA9IFtmYWxzZV07XG4gIGlzU2hvd2luZyA9IGZhbHNlO1xuICBzaG93U3ViU3ViTWVudTogQXJyYXk8YW55PiA9IFtbZmFsc2UsIGZhbHNlXSwgZmFsc2VdO1xuXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gdGhpcy5uYXZpZ2F0aW9uID0gdGhpcy5uYXZpZ2F0aW9uUGFuZWxbMF0ubmF2aWdhdGlvbnM7XG4gIH1cblxuICBtb3VzZWVudGVyKCkge1xuICAgIGlmICghdGhpcy5pc0V4cGFuZGVkKSB7XG4gICAgICB0aGlzLmlzU2hvd2luZyA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgbW91c2VsZWF2ZSgpIHtcbiAgICBpZiAoIXRoaXMuaXNFeHBhbmRlZCkge1xuICAgICAgdGhpcy5pc1Nob3dpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBsb2dvdXRFdmVudCgpIHtcbiAgICB0aGlzLmxvZ291dC5lbWl0KCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm5hdmlnYXRpb24gPSB0aGlzLm5hdmlnYXRpb25QYW5lbC5uYXZpZ2F0aW9ucztcbiAgfVxuXG59XG4iXX0=