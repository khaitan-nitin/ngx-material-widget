import { CollectionUtils } from './collection.utility';
import { FormUtils } from './form.utility';
import { ListUtils } from './list.utility';
export class CrudUtils {
    static setOptionsUsingKey(crud, fieldKey, masterDataKey) {
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.form) && !CollectionUtils.isEmpty(crud.form.tabs)) {
            crud.form.tabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.setOptionsUsingKey(widget.widget, fieldKey, masterDataKey);
                        }
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "LIST" /* LIST */) {
                            ListUtils.setOptionsUsingKey(widget.widget, fieldKey, masterDataKey);
                        }
                    });
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.list) && !CollectionUtils.isEmpty(crud.list.lists)) {
            crud.list.lists.forEach(list => {
                if (!CollectionUtils.isEmpty(list)) {
                    ListUtils.setOptionsUsingKey(list, fieldKey, masterDataKey);
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.search) && !CollectionUtils.isEmpty(crud.search.form)) {
            FormUtils.setOptionsUsingKey(crud.search.form, fieldKey, masterDataKey);
        }
    }
    static setOptionsUsingValues(crud, fieldKey, keyMap, relaodAll, record) {
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.form) && !CollectionUtils.isEmpty(crud.form.tabs)) {
            crud.form.tabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.setOptionsUsingValues(widget.widget, fieldKey, keyMap, relaodAll, record);
                        }
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "LIST" /* LIST */) {
                            ListUtils.setOptionsUsingValues(widget.widget, fieldKey, keyMap, relaodAll, record);
                        }
                    });
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.list) && !CollectionUtils.isEmpty(crud.list.lists)) {
            crud.list.lists.forEach(list => {
                if (!CollectionUtils.isEmpty(list)) {
                    ListUtils.setOptionsUsingValues(list, fieldKey, keyMap, relaodAll, record);
                }
            });
        }
        if (!CollectionUtils.isEmpty(crud) && !CollectionUtils.isEmpty(crud.search) && !CollectionUtils.isEmpty(crud.search.form)) {
            FormUtils.setOptionsUsingValues(crud.search.form, fieldKey, keyMap, relaodAll, record);
        }
    }
    static setDisplayType(crudTabs, formDisplayMode) {
        if (!CollectionUtils.isEmpty(crudTabs)) {
            crudTabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            widget.widget.displayMode = formDisplayMode;
                        }
                    });
                }
            });
        }
    }
    static changeButtonLabelIcon(crudTabs, buttonIdentifier, label, icon) {
        if (!CollectionUtils.isEmpty(crudTabs)) {
            crudTabs.forEach(tab => {
                if (!CollectionUtils.isEmpty(tab) && !CollectionUtils.isEmpty(tab.widgets)) {
                    tab.widgets.forEach(widget => {
                        if (!CollectionUtils.isEmpty(widget) && widget.widgetType == "FORM" /* FORM */) {
                            FormUtils.changeButtonLabelIcon(widget.widget, buttonIdentifier, label, icon);
                        }
                    });
                }
            });
        }
    }
}
//# sourceMappingURL=data:application/json;base64,