import { Component, Input, ViewEncapsulation, Output, EventEmitter, ViewChild } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { StringUtils, FieldUtils, CollectionUtils, FormUtils } from '../../../utility';
import { Router } from '@angular/router';
import { quillConfiguration } from './html.editor.configuration';
import { AbilityUtils } from '../../../utility/ability.utility';
import { Ability } from '@casl/ability';
export class FieldErrorStateMatcher {
    isErrorState(control, form) {
        //    console.log("111");
        return !!(control && control.invalid && (control.dirty || control.touched));
    }
}
export class FieldComponent {
    constructor(router, ability) {
        this.router = router;
        this.ability = ability;
        this.onDependentFieldChange = new EventEmitter();
        this.onFieldChange = new EventEmitter();
        this.onFormChange = new EventEmitter();
        this.onButtonClick = new EventEmitter();
        this.ellipsisRequired = false;
        this.editorOptions = quillConfiguration;
        this.onListSelectionFuc = null;
        this.listOptions = null;
        this.dateRange = false;
        this.minLengthForTrigger = 3;
        this.highlightAutoCompleteText = '';
        this.onShowAllOptions = () => {
            this.showLess = this.field.options.length;
        };
        this.autoCompleteInputHasValue = false;
        this.onListImageLoadError = ($event) => {
            $event.target.src = this.field.defaultImageUrl;
        };
        AbilityUtils.setAbility(this.ability);
    }
    get displayMode() {
        return this._displayMode;
    }
    set displayMode(_displayMode) {
        this._displayMode = _displayMode;
        this.isFieldDisabled = this.fieldDisabled();
    }
    isEditorErrorState() {
        return !!(this.fieldControl && this.fieldControl.invalid && (this.fieldControl.dirty || this.fieldControl.touched));
    }
    ngOnInit() {
        if (this.field.placeholder == undefined) {
            this.field.placeholder = "";
        }
        if (this.field.ellipsis && this.field.ellipsis > 0) {
            this.charLimit = this.field.ellipsis;
        }
        this.matcher = new FieldErrorStateMatcher();
        this.getValue(this.field, this.value);
        this.isRequired = this.required();
        this.isFieldDisabled = this.fieldDisabled();
        this.hasFieldNavigate = this.fieldNavigate();
        this.hasHintIcon = this.displayHintIcon();
        this.setMaxLength();
        this.setNumberMinMax();
        this.setAppearance();
        this.setOptionInDisplay();
        this.getImagePath(this.field);
        this.setRows();
        this.setHeight();
        this.setClear();
        this.setAsBubble();
        this.setTextAlign();
        this.setAddMoreDisplayInColumn();
        this.setMinLengthForTrigger();
        //    this.autocompleteInit();
        this.setDisplayTemplate();
        this.setCalendar();
        this.setShowLess();
        this.textClearButton = this.setTextClearButton('fieldTextClearBtn', "Clear Text", "cancel", null);
        if (this.field.navigate) {
            this.routeToButton = this.setTextClearButton('fieldRouteToBtn', this.field.navigate.text, this.field.navigate.icon ? this.field.navigate.icon : "call_made", this.field.navigate.routeTo);
        }
        this.helpModalButton = this.setHelpButton('helpCloseButton', 'Close', 'close');
        this.plusButton = this.addRemoveButton("add_field" /* ADD_FIELD */, "Add", "add");
        this.minusButton = this.addRemoveButton("remove_field" /* REMOVE_FIELD */, "Minus", "remove");
    }
    setDisplayTemplate() {
        if ((this.field.type == "RADIO" /* RADIO */ || this.field.type == "CHECKBOX" /* CHECKBOX */) && StringUtils.isEmpty(this.field.displayTemplate)) {
            this.field.displayTemplate = "CLASSIC" /* CLASSIC */;
        }
    }
    setAddMoreDisplayInColumn() {
        if (this.isAddMore) {
            if (this.device == 'desktop') {
                if (this.displayInColumns < 6) {
                    this.addMoreFieldDisplayInColumns = 10;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 11;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
            if (this.device == 'tablet') {
                if (this.displayInColumns < 6) {
                    this.addMoreFieldDisplayInColumns = 6;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 7;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
            if (this.device == 'mobile') {
                if (this.displayInColumns < 3) {
                    this.addMoreFieldDisplayInColumns = 3;
                    this.addMoreButtonDisplayInColumns = 2;
                }
                else {
                    this.addMoreFieldDisplayInColumns = 3;
                    this.addMoreButtonDisplayInColumns = 1;
                }
            }
        }
    }
    setMinLengthForTrigger() {
        this.minLengthForTrigger = this.field.minLengthForTrigger ? this.field.minLengthForTrigger : 3;
    }
    setRows() {
        this.rows = this.field.rows ? this.field.rows : 1;
    }
    setHeight() {
        this.height = this.field.height ? this.field.height : 300;
    }
    setAppearance() {
        this.appearance = this.field.appearance ? this.field.appearance : 'standard';
    }
    setAsBubble() {
        this.asBubble = this.field.asBubble ? this.field.asBubble : false;
        this.bubbleColor = this.field.bubbleColor ? this.field.bubbleColor : "" /* DEFAULT */;
    }
    setTextAlign() {
        this.textAlign = this.field.textAlign ? this.field.textAlign : "left" /* LEFT */;
    }
    setMaxLength() {
        this.maxLength = this.field.maxLength ? this.field.maxLength : 1000000;
    }
    setNumberMinMax() {
        this.min = this.field.min ? this.field.min : null;
        this.max = this.field.max ? this.field.max : null;
    }
    displayHintIcon() {
        return this.field.help && this.field.help.icon ? true : false;
    }
    close() {
        this.sidenav.close();
    }
    open() {
        this.sidenav.open();
    }
    setHelpButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "GHOST" /* GHOST */,
            onlyIcon: true,
        };
    }
    required() {
        let isRequired = false;
        if (this.field.validations && this.field.validations.length > 0) {
            for (let validation of this.field.validations) {
                if (validation.message.key == "required") {
                    isRequired = true;
                }
            }
        }
        if (StringUtils.isEmpty(this.field.label)) {
            isRequired = false;
        }
        return isRequired;
    }
    fieldNavigate() {
        let hasFieldNavigate = false;
        if (this.field.navigate &&
            (!StringUtils.isEmpty(this.field.navigate.icon) || !StringUtils.isEmpty(this.field.navigate.text)) &&
            !CollectionUtils.isEmpty(this.field.navigate.routeTo)) {
            hasFieldNavigate = true;
        }
        return hasFieldNavigate;
    }
    fieldDisabled() {
        let isDisabled = false;
        if (this.field.alwaysEnable) { }
        else {
            isDisabled = FieldUtils.isFieldDisabled(this.field, this._displayMode, this.resolvedValue);
            if (isDisabled) {
                FormUtils.disableFieldControl(this.fieldControl);
            }
        }
        return isDisabled;
    }
    getValue(field, txt) {
        let value = "";
        let initialLength = 0;
        let finalLength = 0;
        if (this.fieldControl != undefined) {
            value = this.fieldControl.value;
        }
        else {
            value = txt;
        }
        if (field.type != "DROPDOWN" /* DROPDOWN */) {
            if (this.keyMap && this.keyMap.length > 0) {
                this.keyMap
                    .filter(objs => {
                    let hasAssociation = false;
                    if (!CollectionUtils.isEmpty(objs) && !CollectionUtils.isEmpty(objs.associations)) {
                        objs.associations.forEach(element => {
                            if (element.fieldKey == field.key && element.componentIdentifier == this.sourceIdentifier) {
                                hasAssociation = true;
                            }
                        });
                    }
                    return hasAssociation;
                })
                    .forEach(field => {
                    if (field['options'] && field['options'].length > 0) {
                        for (let index = 0; index < field['options'].length; index++) {
                            if (field['options'][index].key == value) {
                                value = field['options'][index].value;
                                break;
                            }
                        }
                    }
                });
            }
        }
        this.resolvedValue = value;
        if (FieldUtils.isEllipsisField(this.field) && FieldUtils.displayEllipsis(this.charLimit, this.resolvedValue)) {
            value = JSON.stringify(value);
            initialLength = value.length;
            value = value.substr(0, this.field.ellipsis);
            finalLength = value.length;
            value += "...";
            if (initialLength > finalLength) {
                this.ellipsisRequired = true;
            }
        }
        return value;
    }
    displayFullText() {
        let resolvedValueStr = JSON.stringify(this.resolvedValue);
        if (!StringUtils.isEmpty(resolvedValueStr)) {
            this.charLimit = resolvedValueStr.length;
        }
    }
    displayShortText() {
        if (this.field.ellipsis && this.field.ellipsis > 0) {
            this.charLimit = this.field.ellipsis;
            this.displayEllipsis();
        }
    }
    displayEllipsis() {
        return FieldUtils.displayEllipsis(this.charLimit, this.resolvedValue);
    }
    setCalendar() {
        if (this.field.type === "CALENDAR" /* CALENDAR */) {
            this.dateRange = this.field.dateRange;
        }
    }
    ///////////////////////////// AUTOCOMPLETE - START ///////////////////////////
    invokeOnChangeOnField(value, input) {
        let invokeOnChange = false;
        if (this.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */) {
            this.autoCompleteInputHasValue = !!value;
            if (value.length >= this.minLengthForTrigger) {
                this.autoCompleteInputHasValue = !!value;
                this.highlightAutoCompleteText = value;
            }
            else {
                this.autoCompleteInputHasValue = false;
                this.highlightAutoCompleteText = '';
            }
            invokeOnChange = true;
        }
        else {
            invokeOnChange = true;
        }
        return invokeOnChange;
    }
    autocompleteDisplayFn(option) {
        let value;
        if (option != null && option.key != null) {
            value = option.value;
        }
        else {
            value = option;
        }
        return value;
    }
    _filter(value) {
        const filterValue = value.toLowerCase();
        var result = this.field.options.filter(option => option.value.toLowerCase().includes(filterValue));
        this.autoCompleteResultCount = result.length;
        return result;
    }
    ///////////////////////////// AUTOCOMPLETE - END ///////////////////////////
    ///////////////////////////// DROPDOWN OPTION - START ///////////////////////////
    setOptionInDisplay() {
        if (this.field['options'] && this.fieldControl) {
            let key = this.fieldControl.value;
            for (let cnt = 0; cnt < this.field['options'].length; cnt++) {
                if (this.field['options'][cnt].key === key) {
                    this.field['options'][cnt].checked = true;
                }
            }
        }
    }
    setClear() {
        let hasClear = false;
        if (this.resolvedValue && this.field.hasClear && (this.field.type == "TEXT" /* TEXT */ ||
            this.field.type == "TEXTAREA" /* TEXTAREA */ ||
            this.field.type == "EMAIL" /* EMAIL */ ||
            this.field.type == "PASSWORD" /* PASSWORD */ ||
            this.field.type == "COLOR" /* COLOR */ ||
            this.field.type == "MONTH" /* MONTH */ ||
            this.field.type == "WEEK" /* WEEK */ ||
            this.field.type == "NUMBER" /* NUMBER */ ||
            this.field.type == "DROPDOWN" /* DROPDOWN */ ||
            this.field.type == "AUTOCOMPLETE" /* AUTOCOMPLETE */ ||
            this.field.type == "CHIPS" /* CHIPS */ ||
            this.field.type == "TIME" /* TIME */ ||
            this.field.type == "CALENDAR" /* CALENDAR */)) {
            hasClear = true;
        }
        this.hasClear = hasClear;
    }
    cleanValue() {
        this.resolvedValue = "";
        this.fieldControl.setValue("");
        this.setClear();
    }
    getResolveTextWithKey(field) {
        let value = "";
        if (this.row != undefined) {
            if (this.row[field['resolveOptionWithKey']]) {
                value = this.row[field['resolveOptionWithKey']];
            }
        }
        return value;
    }
    getDropdownValue(field, txt) {
        let value = "";
        if (this.fieldControl != undefined) {
            if (this.fieldControl.value) {
                value = this.fieldControl.value;
            }
        }
        else {
            value = txt;
        }
        if (field['options'] && field['options'].length > 0) {
            for (let index = 0; index < field['options'].length; index++) {
                let isSelected = false;
                if (value instanceof Array) {
                    if (value.indexOf(field['options'][index].key) > -1) {
                        isSelected = true;
                    }
                }
                else if (value instanceof String) {
                    if (field['options'][index].key == value) {
                        isSelected = true;
                    }
                }
                else if (value instanceof Object) {
                    if (value[field['options'][index].key]) {
                        isSelected = true;
                    }
                }
                if (isSelected) {
                    value = field['options'][index].value;
                    break;
                }
            }
        }
        return value;
    }
    ///////////////////////////// DROPDOWN OPTION - END ///////////////////////////
    ///////////////////////////// UPLOAD - START ///////////////////////////
    // imgURL: any;
    // onUpload(event) {
    //   let file: File = {
    //     'source': this.sourceIdentifier,
    //     'index': this.index,
    //     'field': this.field.key,
    //     'files': event.target.files
    //   };
    //   this.field['onUpload'](file);
    //   var reader = new FileReader();
    //   reader.readAsDataURL(file.files[0]);
    //   reader.onload = (_event) => {
    //     this.imgURL = reader.result;
    //   }
    // }
    ///////////////////////////// UPLOAD - END ///////////////////////////
    ///////////////////////////// IMAGE - START ///////////////////////////
    getImagePath(field) {
        //    console.log(path);
        if (!StringUtils.isEmpty(this.resolvedValue) && this.resolvedValue instanceof String && this.resolvedValue.indexOf("http://") <= -1) {
            // if (this.resolvedValue.startsWith("/")) {
            //   this.resolvedValue = Properties.contentUrl + this.resolvedValue;
            // } else {
            //   this.resolvedValue = Properties.contentUrl + "/" + this.resolvedValue;
            // }
        }
        this.imagePath = this.resolvedValue;
    }
    ///////////////////////////// IMAGE - END ///////////////////////////
    ///////////////////////////// SLIDER - START ///////////////////////////
    //   getSliderTickInterval(): number | 'auto' {
    // //    if ((<SliderField>this.field)..showTicks) {
    //       return (<SliderField>this.field).autoTicks ? 'auto' : this.tickInterval;
    // //    }
    //     return 0;
    //   }
    ///////////////////////////// SLIDER - END ///////////////////////////
    ///////////////////////////// EVENTS - START ///////////////////////////
    onAutocompleteChange(autocomplate) {
        let value = autocomplate.option.value;
        // console.log(value);
        this.onChangeEvent(this.field.key, value, autocomplate);
    }
    onToggleChange(toggle) {
        console.log(toggle);
        let value = toggle.checked;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, toggle);
    }
    onSliderChange(slider) {
        //    console.log(slider);
        let value = slider.value;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, slider);
    }
    onRadioChange(radio) {
        //    console.log(radio);
        let value = radio.value;
        //    console.log(value);
        this.onChangeEvent(this.field.key, value, radio);
    }
    onCheckboxChange(option, checkbox) {
        let key = option.key;
        let value = checkbox.checked;
        // console.log(key + ": " + value);
        this.onChangeEvent(key, value, checkbox);
    }
    setShowLess() {
        if (this.field.type === "RADIO" /* RADIO */ || this.field.type === "CHECKBOX" /* CHECKBOX */) {
            this.showLess = this.field.showLess || this.field.options.length;
        }
    }
    onOptionChange(options) {
        let value = this.listView.selectedOptions.selected.map(x => x.value);
        if (this.field.type == 'CHECKBOX') {
            let selectedOptions = options.source._value;
            let currentOptions = this.fieldControl.value;
            for (let key in currentOptions) {
                if (selectedOptions.indexOf(key) > -1) {
                    currentOptions[key] = true;
                }
                else {
                    currentOptions[key] = false;
                }
            }
            this.fieldControl.setValue(currentOptions);
        }
        else if (this.field.type == 'RADIO') {
            let selectedOptions = options.source._value;
            if (CollectionUtils.isEmpty(selectedOptions)) {
                this.fieldControl.setValue(null);
                value = null;
            }
            else {
                this.fieldControl.setValue(selectedOptions[0]);
                value = value[0];
            }
        }
        this.onChangeEvent(this.field.key, value, options);
    }
    onHtmlEditorChange($event) {
        // console.log($event);
        //    console.log(value);
        this.onChangeEvent(this.field.key, $event.html, $event);
    }
    onChipsListChange($event) {
        this.onChangeEvent(this.field.key, $event.values, $event);
    }
    onInputChange(input) {
        console.log(input);
        let value = input.target.value;
        //    console.log(value);
        if (this.invokeOnChangeOnField(value, input)) {
            this.onChangeEvent(this.field.key, value, input);
        }
    }
    onDateChange(date, type) {
        let key = this.field.key;
        if (!StringUtils.isEmpty(type)) {
            key = this.field.key + "." + type;
        }
        //    console.log(date.value);
        let value = date.value;
        //    console.log(value);
        this.onChangeEvent(key, value, date);
    }
    onChange(dropdown) {
        //    console.log(dropdown.value);
        let value = dropdown.value;
        this.onChangeEvent(this.field.key, value, dropdown);
    }
    onFileChange(event) {
        // console.log(event);
        this.onChangeEvent(this.field.key, event, event);
        var reader = new FileReader();
        reader.readAsDataURL(event[0]);
        reader.onload = (_event) => {
            this.imgURL = reader.result;
        };
    }
    onParagraphChange(event) {
        //    console.log(event); 
        this.onChangeEvent(this.field.key, event, event);
    }
    buttonClick(event) {
        this.onButtonClick.emit(event);
    }
    onChangeEvent(key, value, event) {
        this.resolvedValue = value;
        this.setClear();
        setTimeout(() => {
            //      if ((this.dependencies && this.dependencies[this.field.key]) || this.field.type == FieldType.CHECKBOX || this.field.type == FieldType.DROPDOWN) {
            if ((this.dependencies && this.dependencies[this.field.key])) {
                let action = {
                    sourceIdentifier: this.sourceIdentifier,
                    sourceIndex: this.sourceIndex,
                    widgetArrayIndex: this.widgetArrayIndex,
                    fieldIndex: this.fieldIndex,
                    action: this.field.key,
                    data: this.form.getRawValue(),
                    parentHierarchy: null,
                    event: event
                };
                this.onDependentFieldChange.emit(action);
            }
        }, 200);
        let fieldChange = {
            sourceIdentifier: this.sourceIdentifier,
            sourceIndex: this.sourceIndex,
            widgetArrayIndex: this.widgetArrayIndex,
            fieldIndex: this.fieldIndex,
            fieldKey: key,
            value: value,
            event: event
        };
        this.onFieldChange.emit(fieldChange);
    }
    // onChangeSearch(val: string) {
    //   console.log("onChangeSearch");
    //   let autocomplete: Autocomplete = {
    //     'source': this.sourceIdentifier,
    //     'index': this.index,
    //     'field': this.field.key,
    //     'searchText': val
    //   };
    //   this.autocompleteService.invoke(autocomplete);
    // }
    ///////////////////////////// EVENTS - END ///////////////////////////
    ///////////////////////////// ERROR - START ///////////////////////////
    errors() {
        let errors = [];
        if (this.fieldControl != undefined) {
            if (this.fieldControl && this.fieldControl.errors) {
                Object.keys(this.fieldControl.errors).forEach(keyError => {
                    if (this.field.validations) {
                        for (let validation of this.field.validations) {
                            if (keyError === validation.message.key) {
                                errors[errors.length] = { error: keyError, message: validation.message.message };
                            }
                            else {
                                //errors[errors.length] = {error: keyError, message: this.fieldControl.errors[keyError]};
                            }
                        }
                    }
                });
            }
            else if (this.fieldControl instanceof FormGroup) {
                if (this.fieldControl.controls && this.fieldControl.controls['startDate'] && this.fieldControl.controls['startDate'].errors) {
                    Object.keys(this.fieldControl.controls['startDate'].errors).forEach(keyError => {
                        if (this.field.validations) {
                            for (let validation of this.field.validations) {
                                if (keyError === validation.message.key) {
                                    errors[errors.length] = { error: keyError, message: validation.message.message };
                                }
                            }
                        }
                    });
                }
            }
        }
        return errors;
    }
    ///////////////////////////// ERROR - END ///////////////////////////
    setTextClearButton(identifier, label, icon, routeTo) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "GHOST" /* GHOST */,
            onlyIcon: true,
            routerLink: routeTo
        };
    }
    addField(field) {
        let validations = FormUtils.getFieldValidation(field);
        this.form.controls[field.key].push(FormUtils.setFormControl(this.displayMode, field, null, validations));
        this.onFormChange.emit(this.form);
    }
    removeField(field, index) {
        this.form.controls[field.key].controls.splice(index, 1);
        this.onFormChange.emit(this.form);
    }
    addRemoveButton(identifier, label, icon) {
        return {
            identifier: identifier,
            label: label,
            color: "primary" /* PRIMARY */,
            size: "small" /* SMALL */,
            icon: icon,
            type: "FLAT" /* FLAT */,
            onlyIcon: true
        };
    }
    onFileComplete(data) {
        // console.log(data); // We just print out data bubbled up from event emitter.
    }
}
FieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'mx-field',
                template: "<!-- {{field.fieldDisplayType}} -->\n<div \n  class=\"mdc-layout-grid mx-field-horizontal-container\" \n  *ngIf=\"(!(hideLabel == true) && field.fieldDisplayType == 'HORIZONTAL') && (field && (field.permission == null || (field.permission && (field.permission['subject'] | can: field.permission['action']))))\"\n> \n  <div class=\"mdc-layout-grid__inner\">\n    <div class=\"mdc-layout-grid__cell--span-3\">\n      <span \n        *ngIf=\"!isAddMore || (isAddMore && (fieldIndex == 0  || fieldIndex == null)) && field.label\"\n        class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" \n        [ngClass]=\"{'mx-field-lbl-horizontal': (field.type != 'CHECKBOX' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON'), 'mx-field-lbl-horizontal-premitive': !(field.type != 'CHECKBOX' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON')}\">\n        <strong>{{field.label}}</strong>\n        <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n        <!-- <span   \n          *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n          matTooltip=\"{{field.help.message}}\"\n          matTooltipPosition=\"above\"\n          class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n          <mat-icon   \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n          >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n        </span>   -->\n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n          <ng-container \n            *ngTemplateOutlet=\"cfhelpmodal\" \n          ></ng-container>\n        </span>  \n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n          {{field.help.message}}\n        </span>\n      </span>\n    </div> \n    <div class=\"mdc-layout-grid__cell--span-9 mdc-layout-grid--align-right\" [style.width.%]=\"100\">\n      <ng-container *ngTemplateOutlet=\"cffield\"></ng-container>\n    </div>\n  </div>\n</div>\n<span \n  *ngIf=\"(field.fieldDisplayType != 'HORIZONTAL') && (field && (field.permission == null || (field.permission && (field.permission['subject'] | can: field.permission['action']))))\"\n>\n  <ng-container *ngTemplateOutlet=\"cffield\"></ng-container>\n</span>\n\n<ng-template #cffield>\n  <!-- {{field.type}} -->\n  <span *ngIf=\"(!form && !fieldControl) || field.displayMode == 'LABEL'\" [ngSwitch]=\"field.type\" class=\"mx-field mx-field-key-{{field.key}}\" [ngClass]=\"{'mx-field-lbl-horizontal': (field.type == 'LABEL' || field.type == 'BOOLEAN') && field.fieldDisplayType == 'HORIZONTAL', 'mx-field-lbl': (field.type == 'LABEL' || field.type == 'BOOLEAN') && sourceType == 'FORM'}\">\n    <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}} mx-field-lbl-inline\" \n      *ngIf=\"field.fieldDisplayType != 'HORIZONTAL' && field.type != 'PARAGRAPH' && field.type != 'TOGGLE_OPTION' && !hideLabel && field.label\">\n      <strong>{{field.label}}</strong>\n      <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n      <!-- <span  \n        *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n        matTooltip=\"{{field.help.message}}\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n        <mat-icon  \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>   -->\n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n        <ng-container \n          *ngTemplateOutlet=\"cfhelpmodal\" \n        ></ng-container>\n      </span>  \n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n\n    <span *ngSwitchCase=\"'IMAGE'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\">\n      <img \n        class=\"mx-field-image mx-field-image-{{field.key}}\" \n        [src]=\"imagePath\"\n        [style.width.px]=\"field['width'] ? field['width'] : 'auto'\">\n    </span>\n    <span *ngSwitchCase=\"'BOOLEAN'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-input-element mx-field-boolean mx-field-boolean-{{field.key}}\">\n      <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n      <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n    </span>\n    <span *ngSwitchCase=\"'DROPDOWN'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'CHECKBOX'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'RADIO'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"> \n      <span *ngIf=\"value == true || value == false\" class=\"mat-input-element  mx-field-boolean mx-field-boolean-{{field.key}}\">\n        <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n        <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n      </span>\n      <span *ngIf=\"value != true && value != false\" class=\"mx-field-value mx-field-value-{{field.key}}\">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase=\"'AUTOCOMPLETE'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-form-field mx-field-value mx-field-value-{{field.key}}\">\n      {{field['resolveTextWithKey'] ? getResolveTextWithKey(field) : resolvedValue}}\n    </span>\n    <span *ngSwitchCase=\"'JSON'\">\n      <div class=\"mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-content\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <div *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue> \n              <span (click)=\"displayShortText()\" class=\"mx-field-value\">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayFullText()\" *ngIf=\"displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayShortText()\" *ngIf=\"!displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>\n    <span *ngSwitchCase=\"'PARAGRAPH'\" class=\"mx-field-paragraph\">\n      <!-- <span class=\"mx-field\"> -->\n        <mx-paragraph [field]=\"field\"\n          [sourceType]=\"sourceType\"\n          [sourceIdentifier]=\"sourceIdentifier\"\n          [sourceIndex]=\"sourceIndex\" \n          [widgetArrayIndex]=\"widgetArrayIndex\" \n          [form]=\"form\" \n          [keyMap]=\"keyMap\"\n          [field]=\"field\"\n          [displayMode]=\"displayMode\"\n          [originalData]=\"originalData\"\n          [fieldControl]=\"fieldControl\"\n          [dependencies]=\"dependencies\"\n          (onFieldChange)=\"onParagraphChange($event)\"\n          (onButtonClick)=\"buttonClick($event)\"\n          ></mx-paragraph>\n        <!-- </span> -->\n    </span>\n    <span *ngSwitchCase=\"'MULTI_IMAGE'\">\n      <mx-multi-image [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-multi-image>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'UPLOAD'\">\n      <mx-file-uploader [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-file-uploader>\n    </span>\n    <span *ngSwitchCase=\"'EMAIL'\">\n      <a href=\"mailto:{{getValue(field, value)}}\">{{getValue(field, value)}}</a>\n    </span>\n    <span *ngSwitchDefault>\n      <!-- displayFullText(value) -->\n      <span [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\" [style.text-align]=\"textAlign\" *ngIf=\"!asBubble; else elseAsBubble\">\n        <span *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\" [innerHtml]=\"getValue(field, value)\">\n          ...\n        </span>\n        <ng-template #elseValue>\n          <span (click)=\"displayShortText()\" class=\"mx-field-value\" [innerHtml]=\"getValue(field, value)\">\n          </span>\n        </ng-template> \n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]=\"getValue(field, value)\">\n          <mat-chip class=\"mx-small-bubble\" [color]=\"bubbleColor\" selected>{{getValue(field, value)}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>\n  </span>\n\n  <span *ngIf=\"form && fieldControl && matcher && field.displayMode != 'LABEL' && !isAddMore\" class=\"mx-field\" [ngClass]=\"{'mx-field-lbl-horizontal': (field.type == 'LABEL' || field.type == 'BOOLEAN') && field.fieldDisplayType == 'HORIZONTAL', 'mx-field-lbl-for-label': (field.type == 'LABEL' || field.type == 'BOOLEAN') && sourceType == 'FORM'}\">\n    <ng-container *ngTemplateOutlet=\"cffieldeditable\"></ng-container>\n  </span>\n\n  <span *ngIf=\"form && fieldControl && matcher && field.displayMode != 'LABEL' && isAddMore\" class=\"mx-field\">\n    <div class=\"mdc-layout-grid mx-form-add-more-row\">\n      <div class=\"mdc-layout-grid__inner\">\n        <div class=\"mdc-layout-grid__cell--span-{{isAddMore ? addMoreFieldDisplayInColumns : (addMoreFieldDisplayInColumns + addMoreButtonDisplayInColumns)}} mdc-layout-grid__cell--align-middle\">\n          <ng-container *ngTemplateOutlet=\"cffieldeditable\"></ng-container>\n        </div>\n        <div class=\"mdc-layout-grid__cell--span-{{addMoreButtonDisplayInColumns}} mdc-layout-grid__cell--align-middle\" *ngIf=\"isAddMore\">\n          <mx-button\n            *ngIf=\"fieldIndex != form.controls[field.key]['controls'].length - 1\"\n            [disabled]=\"!(addMorePermission == null || (addMorePermission && (addMorePermission['subject'] | can: addMorePermission['action'])))\"\n            [form]=\"form\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"minusButton\"\n            class=\"mx-field-addmore mx-field-addmore-{{field.key}}\"\n            (onClick)=\"removeField(field, fieldIndex)\"\n          ></mx-button>\n          <mx-button\n            *ngIf=\"fieldIndex == form.controls[field.key]['controls'].length - 1\"\n            [form]=\"form\"\n            [sourceIdentifier]=\"sourceIdentifier\"\n            [sourceIndex]=\"sourceIndex\"\n            [widgetArrayIndex]=\"widgetArrayIndex\"\n            [button]=\"plusButton\"\n            class=\"mx-field-addmore mx-field-addmore-{{field.key}}\"\n            (onClick)=\"addField(field)\"\n          ></mx-button>\n        </div>\n      </div>\n    </div>\n  </span>\n</ng-template>\n\n<ng-template #cffieldeditable>\n  <span [ngSwitch]=\"field.type\">\n    <!-- [appearance]=\"appearance | lowercase\"  -->\n    <!-- [appearance]=\"appearance | lowercase\" -->\n    <mat-form-field \n      class=\"mx-field\"\n      [ngClass]=\"{'mx-inbuild-type': (field.type== 'TIME' || field.type== 'COLOR' || field.type== 'WEEK' || field.type== 'MONTH'|| field.type== 'NUMBER'), 'mx-field-horizontal': field.fieldDisplayType == 'HORIZONTAL'}\" \n      *ngIf=\"field.type != 'PARAGRAPH' && field.type != 'MULTI_IMAGE' && field.type != 'CHECKBOX' && field.type != 'TOOLBAR' && field.type != 'CHIPS' && field.type != 'HTML_EDITOR' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'TOGGLE_OPTION' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'CALENDAR' && field.type != 'JSON' && field.type != 'LABEL'\">\n      <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\">\n        <strong>{{field.label}}</strong>\n        <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n        <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n          {{field.help.message}}\n        </span>\n      </mat-label>\n      <!-- <mat-label class=\"mx-field-lbl\" *ngIf=\"(hideLabel == true)\"> \n      </mat-label> -->\n\n      <mat-icon \n        *ngIf=\"field.icon\" \n        matPrefix\n        aria-hidden=\"true\" \n        [attr.aria-label]=\"field.icon\" \n        class=\"mx-field-icon\" \n      >{{field.icon}}</mat-icon>\n\n      <span *ngSwitchCase=\"'TEXT'\">\n        <input  \n          matInput \n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\" \n          [errorStateMatcher]=\"matcher\" \n          [maxLength]=\"maxLength\"\n          [placeholder]=\"field.placeholder\"\n          [disabled]=\"isFieldDisabled\"\n          class=\"mat-input-element mx-field-text mx-field-text-{{field.key}}\"\n          (input)=\"onInputChange($event)\"/>\n      </span>\n      <!-- <input  \n        *ngSwitchCase=\"'HIDDEN'\" \n        matInput \n        type=\"hidden\"\n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n      > -->\n\n      <!-- [mat-autosize]=\"'true'\" -->\n      <textarea\n        *ngSwitchCase=\"'TEXTAREA'\" \n        matInput \n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        rows=\"{{rows}}\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-textarea mx-field-textarea-{{field.key}}\"\n        (input)=\"onInputChange($event)\"> \n      </textarea>\n      <!-- <br/> -->  \n      <mat-hint hintLabel=\"end\" *ngIf=\"field.type == 'TEXTAREA' && maxLength && maxLength > 0 && maxLength != 1000000\"><strong>{{fieldControl.value.length}}</strong> / {{maxLength}} characters</mat-hint>\n\n      <input \n        *ngSwitchCase=\"'COLOR'\" \n        matInput \n        type=\"color\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-color mx-field-color-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'EMAIL'\" \n        matInput \n        type=\"email\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-email mx-field-email-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'MONTH'\" \n        matInput \n        type=\"month\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-month mx-field-month-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'NUMBER'\" \n        matInput \n        type=\"number\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-number mx-field-number-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'PASSWORD'\" \n        matInput \n        type=\"password\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [maxLength]=\"maxLength\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-password mx-field-password-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'TIME'\" \n        matInput \n        type=\"time\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-time mx-field-time-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <input \n        *ngSwitchCase=\"'WEEK'\" \n        matInput \n        type=\"week\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        [errorStateMatcher]=\"matcher\"\n        [placeholder]=\"field.placeholder\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-input-element mx-field-week mx-field-week-{{field.key}}\"\n        (input)=\"onInputChange($event)\"/>\n      <span *ngSwitchCase=\"'DROPDOWN'\">\n        <mat-select\n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\"\n          [errorStateMatcher]=\"matcher\"\n          [multiple]=\"field['multiselect']\"\n          [placeholder]=\"field.placeholder\"\n          [disabled]=\"isFieldDisabled\"\n          class=\"mat-input-element mx-field-dropdown mx-field-dropdown-{{field.key}}\"\n          (selectionChange)=\"onChange($event)\">\n          <mat-option class=\"mat-option\" *ngIf=\"field['defaultOption']\">{{field['defaultOption']}}</mat-option>\n          <mat-option class=\"mat-option\" *ngFor=\"let option of field['options']\" [value]=\"option.key\" [disabled]=\"option.disabled\" >{{option.value}}</mat-option>\n        </mat-select>\n      </span>\n      <span *ngSwitchCase=\"'AUTOCOMPLETE'\"> \n        <input \n          matInput \n          [id]=\"field.key\"  \n          [formControl]=\"fieldControl\" \n          [errorStateMatcher]=\"matcher\"\n          [attr.aria-label]=\"field.label\" \n          [placeholder]=\"field.placeholder\"\n          [matAutocomplete]=\"auto\"\n          class=\"mat-input-element mx-field-autocomplete mx-field-autocomplete-{{field.key}}\"\n          [disabled]=\"isFieldDisabled\"\n          (input)=\"onInputChange($event)\"/>\n        <mat-autocomplete \n          #auto=\"matAutocomplete\"\n          [displayWith]=\"autocompleteDisplayFn\"\n          (optionSelected)=\"onAutocompleteChange($event)\">\n          <mat-option \n            class=\"mat-option mx-field-autocomplete-option mx-field-autocomplete-option-{{field.key}}\" \n            *ngIf=\"field['defaultOption']\">\n            {{field['defaultOption']}}\n          </mat-option>\n          <mat-option \n            class=\"mat-option mx-field-autocomplete-option mx-field-autocomplete-option-{{field.key}}\" \n            *ngFor=\"let option of field['options']\" \n            [value]=\"option\" \n            [disabled]=\"option.disabled\" >\n            <span [innerHTML]=\"option.value | highlight: highlightAutoCompleteText\"></span>\n          </mat-option>\n          <mat-option *ngIf=\"(field['options'])?.length==0 && autoCompleteInputHasValue\">\n            {{field['noRecordFound'] ? field['noRecordFound'] : 'No Result Found'}}\n          </mat-option>\n        </mat-autocomplete>\n      </span> \n      <!-- <mx-button\n        matSuffix\n        *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n        [button]=\"textClearButton\"\n        class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n        (onClick)=\"cleanValue()\"\n      ></mx-button> -->\n      <mx-button\n        matSuffix\n        *ngIf=\"hasFieldNavigate\"\n        [button]=\"routeToButton\"\n        class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n        (onClick)=\"resolvedValue = ''\"\n      ></mx-button> \n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n      <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n      <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n        <mat-icon \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon\">\n          {{field.help.icon ? field.help.icon : 'live_help'}}\n        </mat-icon>\n        <span>{{field.help.message}}</span>\n      </mat-hint>\n\n      <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n    </mat-form-field>\n\n    <span *ngSwitchCase=\"'CALENDAR'\">\n      <!-- [appearance]=\"appearance | lowercase\" -->\n      <mat-form-field \n        class=\"mx-field\" \n        *ngIf=\"dateRange\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\" class=\"mx-field-label\">\n          <strong>{{field.label}}</strong>\n          <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n          <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n            {{field.help.message}}\n          </span>\n        </mat-label>\n        <mat-date-range-input [formGroup]=\"fieldControl\" [rangePicker]=\"datePicker\" >\n          <input \n            matStartDate\n            matInput\n            [id]=\"field.key\" \n            formControlName=\"startDate\" \n            [min]=\"field['minDate']\"\n            [disabled]=\"isFieldDisabled\"\n            [errorStateMatcher]=\"matcher\"\n            placeholder=\"Start date\"\n            (dateChange)=\"onDateChange($event, 'startDate')\">\n          <input \n            matEndDate\n            matInput\n            [id]=\"field.key\" \n            [max]=\"field['maxDate']\"\n            [disabled]=\"isFieldDisabled\"\n            [errorStateMatcher]=\"matcher\"\n            formControlName=\"endDate\" \n            placeholder=\"End date\"\n            (dateChange)=\"onDateChange($event, 'endDate')\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"datePicker\" ></mat-datepicker-toggle>\n        <mat-date-range-picker #datePicker ></mat-date-range-picker>\n\n        <!-- <mx-button\n          matSuffix\n          *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n          [button]=\"textClearButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"cleanValue()\"\n        ></mx-button> -->\n        <mx-button\n          matSuffix\n          *ngIf=\"hasFieldNavigate\"\n          [button]=\"routeToButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"resolvedValue = ''\"\n        ></mx-button> \n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n          <mat-icon \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n      </mat-form-field>\n      <!-- [appearance]=\"appearance | lowercase\" -->\n      <mat-form-field \n        class=\"mx-field\" \n        *ngIf=\"!dateRange\">\n        <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}}\" *ngIf=\"!(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\" class=\"mx-field-label\">\n          <strong>{{field.label}}</strong>\n          <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n          <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n            {{field.help.message}}\n          </span>  \n        </mat-label>      \n        <input \n            matInput \n            [matDatepicker]=\"picker\"\n            [id]=\"field.key\" \n            [formControl]=\"fieldControl\" \n            [matDatepickerFilter]=\"field['filter']\"\n            [min]=\"field['minDate']\"\n            [max]=\"field['maxDate']\"\n            [errorStateMatcher]=\"matcher\"\n            [disabled]=\"isFieldDisabled\"\n            class=\"mat-input-element mx-field-datepicker mx-field-datepicker-{{field.key}}\" \n            (dateChange)=\"onDateChange($event, '')\" />\n        <mat-datepicker-toggle   matSuffix [for]=\"picker\" ></mat-datepicker-toggle>\n        <mat-datepicker #picker ></mat-datepicker>\n        <!-- <mx-button\n          matSuffix\n          *ngIf=\"hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == 'TOOLTIP' && field.help.message)\"\n          [button]=\"textClearButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"cleanValue()\"\n        ></mx-button> -->\n        <mx-button\n          matSuffix\n          *ngIf=\"hasFieldNavigate\"\n          [button]=\"routeToButton\"\n          class=\"mx-field-clr-btn mx-field-clr-btn-{{field.key}}\"\n          (onClick)=\"resolvedValue = ''\"\n        ></mx-button>\n\n        <!-- <ng-container *ngTemplateOutlet=\"cfHelp;\"></ng-container> -->\n        <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint\">\n          <mat-icon \n            aria-hidden=\"true\" \n            [attr.aria-label]=\"field.help.message\" \n            class=\"mx-field-hint-icon\">\n            {{field.help.icon ? field.help.icon : 'live_help'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n        <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n      </mat-form-field>\n    </span>\n\n    <mat-label class=\"mx-field-lbl mx-field-lbl-{{field.key}} mx-field-lbl-inline\" \n      *ngIf=\"!(field.type != 'MULTI_IMAGE' && field.type != 'TOOLBAR' && field.type != 'CHECKBOX' && field.type != 'HTML_EDITOR' && field.type != 'RADIO' && field.type != 'SLIDER' && field.type != 'UPLOAD' && field.type != 'IMAGE' && field.type != 'BOOLEAN' && field.type != 'JSON' && field.type != 'LABEL') && !(hideLabel == true) && field.fieldDisplayType != 'HORIZONTAL' && field.label\">\n      <strong>{{field.label}}</strong>\n      <span class=\"mx-field-lbl-req\" *ngIf=\"isRequired\">*</span>\n      <mx-tooltip matSuffix [field]=\"field\"></mx-tooltip>\n      <!-- <span  \n        *ngIf=\"field.help && field.help.message && hasFieldNavigate && field.help.displayType == 'TOOLTIP'\" \n        matTooltip=\"{{field.help.message}}\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\">  \n        <mat-icon  \n          aria-hidden=\"true\" \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>   -->\n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'RIGHT_MODAL'\">\n        <ng-container \n          *ngTemplateOutlet=\"cfhelpmodal\" \n        ></ng-container>\n      </span>  \n      <span *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && field.help.withLabel\">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n    <span *ngSwitchCase=\"'HTML_EDITOR'\" >\n      <div class=\"mx-field-nm\">\n        <quill-editor \n          [ngClass]=\"{'mx-editor-invalid': isEditorErrorState(), 'mx-disable': isFieldDisabled}\"  \n          class=\"mx-field-nm\"\n          [styles]=\"{height: height + 'px','margin-bottom': isEditorErrorState() ? 0 : '1.25em'}\"\n          (onEditorChanged)=\"onHtmlEditorChange($event)\"\n          [id]=\"field.key\" \n          [formControl]=\"fieldControl\" \n          [disabled]=\"isFieldDisabled\"\n          [placeholder]=\"field.placeholder\"\n          [readOnly]=\"isFieldDisabled\"\n          [modules]=\"editorOptions\" \n        >\n        </quill-editor>\n        <span *ngIf=\"isEditorErrorState()\" class=\"mx-field-editor-error\">\n          <mat-error aria-hidden=\"true\" [attr.aria-label]=\"error.message\" *ngFor=\"let error of errors()\" [innerHtml]=\"error.message\"></mat-error>\n        </span> \n        <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n      </div>\n    </span>\n\n    <span *ngSwitchCase=\"'CHECKBOX'\" class=\"mat-input-element mx-field-chk-group\">\n      <div \n        [ngClass]=\"{'mx-field-checkbox-horizontal': field['displayType'] == 'INLINE'}\"\n        class=\"mx-field-nm\"\n        *ngIf=\"field['displayTemplate'] == 'CLASSIC'; else elseValue\">\n        <span \n          *ngFor=\"let option of field['options']\" \n          class=\"mx-field-chk\">\n          <mat-checkbox \n              class=\"mat-checkbox mat-accent mx-field-chk-inner mx-field-chk-inner-{{field.key}}\"\n              [ngClass]=\"{'mx-field-checkbox-horizontal': field['displayType'] == 'INLINE'}\"\n              [formControl]=\"fieldControl['controls'][option.key]\" \n              [disabled]=\"option.disabled || isFieldDisabled\"\n              (change)=\"onCheckboxChange(option, $event)\">\n            {{option.value}}\n          </mat-checkbox>\n          <i *ngIf=\"option.description\" class=\"mx-field-chk-desc mx-field-chk-desc-{{field.key}}\" [ngClass]=\"{'mx-disabled': option.disabled || isFieldDisabled}\">{{option.description}}</i>\n        </span>\n        <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n      </div>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet=\"cfoptiontemplate\"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase=\"'RADIO'\">\n      <!-- =={{field | json}} -->\n      <mat-radio-group \n        *ngIf=\"field['displayTemplate'] == 'CLASSIC'; else elseValue\"\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\" \n        class=\"mx-field-nm mx-field-radio-group mx-field-radio-group-{{field.key}}\"\n        [ngClass]=\"{'mx-field-radio-horizontal': field['displayType'] == 'INLINE'}\"\n        (change)=\"onRadioChange($event)\"> \n          <span \n          [ngClass]=\"{'mx-field-radio-horizontal-padding': field['displayType'] == 'INLINE'}\"\n          *ngFor=\"let option of field['options']\">\n            <mat-radio-button \n              class=\"mat-radio-button mat-accent mx-field-radio mx-field-radio-{{field.key}}\"\n              [value]=\"option.key\" \n              [disabled]=\"option.disabled || isFieldDisabled\">\n              {{option.value}}\n            </mat-radio-button>\n            <br *ngIf=\"option.description\"/><i *ngIf=\"option.description\" class=\"mx-field-radio-desc\" [ngClass]=\"{'mx-disabled': option.disabled || isFieldDisabled}\">{{option.description}}</i>\n          </span>\n          <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n        </mat-radio-group>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet=\"cfoptiontemplate\"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase=\"'SLIDER'\">\n      <mat-slider\n        [id]=\"field.key\" \n        [formControl]=\"fieldControl\"\n        [invert]=\"field['invert']\"\n        [max]=\"field['max']\"\n        [min]=\"field['min']\"\n        [step]=\"field['step']\"\n        [thumbLabel]=\"field['thumbLabel']\"\n        [tickInterval]=\"field['tickInterval']\"\n        [vertical]=\"field['vertical']\"\n        class=\"mat-slider mx-field-slider mx-field-slider-{{field.key}}\"\n        [disabled]=\"isFieldDisabled\"\n        (change)=\"onSliderChange($event)\">\n      </mat-slider>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'TOGGLE_OPTION'\">\n      <mat-slide-toggle \n        [formControl]=\"fieldControl\"\n        [color]=\"field['color']\" \n        [checked]=\"field['checked']\"\n        [disabled]=\"isFieldDisabled\"\n        class=\"mat-slide-toggle mx-field-toggle mx-field-toggle-{{field.key}}\"\n        (change)=\"onToggleChange($event)\">\n        {{field['label']}}\n        <span *ngIf=\"field['description']\">{{field['description']}}</span>\n      </mat-slide-toggle>\n    </span>\n    <span *ngSwitchCase=\"'UPLOAD'\">\n      <mx-file-uploader [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-file-uploader>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'MULTI_IMAGE'\">\n      <mx-multi-image [field]=\"field\" [disabled]=\"isFieldDisabled\"></mx-multi-image>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'IMAGE'\"\n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\">\n      <img class=\"mx-field-image mx-field-image-{{field.key}}\" [src]=\"imagePath\" \n        [style.width.px]=\"field['width'] ? field['width'] : 'auto'\">\n    </span>\n    <span *ngSwitchCase=\"'BOOLEAN'\" \n      [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\"\n      class=\"mat-input-element mx-field-boolean mx-field-boolean-{{field.key}}\">\n      <mat-icon class=\"mx-field-boolean-success\" *ngIf=\"resolvedValue == true\" aria-hidden=\"true\">done</mat-icon>\n      <mat-icon class=\"mx-field-boolean-failure\" *ngIf=\"resolvedValue == false\" aria-hidden=\"true\">close</mat-icon>\n    </span>\n    <span *ngSwitchCase=\"'JSON'\" class=\"mx-field-json mx-field-json-{{field.key}}\">\n      <div class=\"mx-field-nm mdc-layout-grid mx-field-showmore-pannel mx-field-showmore-pannel-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-content\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <div *ngIf=\"displayEllipsis(); else elseValue\" (click)=\"displayFullText()\" class=\"mx-field-short-value\">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue>\n              <span (click)=\"displayShortText()\" class=\"mx-field-value\">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayFullText()\" *ngIf=\"displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-showmore-pannel-action\" (click)=\"displayShortText()\" *ngIf=\"!displayEllipsis() && ellipsisRequired\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>  \n    <span *ngSwitchCase=\"'CHIPS'\">\n      <mx-chips [field]=\"field\"  \n        [formControl]=\"fieldControl\"\n        [disabled]=\"isFieldDisabled\"\n        [errorMatcher]=\"matcher\"\n        (onListChange)=\"onChipsListChange($event)\"\n      ></mx-chips>\n    </span>\n    <span *ngSwitchCase=\"'PARAGRAPH'\" class=\"mx-field-paragraph\">\n      <!-- [sourceType]=\"'FORM'\" -->\n      <mx-paragraph [field]=\"field\"\n        [sourceType]=\"sourceType\"\n        [sourceIdentifier]=\"sourceIdentifier\"\n        [sourceIndex]=\"sourceIndex\" \n        [widgetArrayIndex]=\"widgetArrayIndex\"\n        [form]=\"form\" \n        [keyMap]=\"keyMap\"\n        [field]=\"field\"\n        [displayMode]=\"displayMode\"\n        [originalData]=\"originalData\"\n        [fieldControl]=\"fieldControl\"\n        [dependencies]=\"dependencies\"\n        (onFieldChange)=\"onParagraphChange($event)\"\n        (onButtonClick)=\"buttonClick($event)\"\n        ></mx-paragraph>\n      <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n    </span>\n    <span *ngSwitchCase=\"'TOOLBAR'\">\n      <mx-toolbar [field]=\"field\"></mx-toolbar>\n    </span>\n    <span *ngSwitchDefault>\n      <!-- displayFullText(value) -->\n      <span [ngClass]=\"{'mx-field-value-wrapper-horizontal': field.fieldDisplayType != 'HORIZONTAL', 'mx-field-value-wrapper-vertical': field.fieldDisplayType == 'HORIZONTAL'}\" [style.text-align]=\"textAlign\" *ngIf=\"!asBubble; else elseAsBubble\">\n        <span class=\"mx-field-short-value\" [innerHtml]=\"resolvedValue\">\n          ...\n        </span>\n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]=\"resolvedValue\">\n          <mat-chip class=\"mx-small-bubble\" [color]=\"bubbleColor\" selected>{{resolvedValue}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>    \n  </span>\n</ng-template>\n\n<ng-template #cfhelplaintext>\n  <mat-hint *ngIf=\"field.help && field.help.message && field.help.displayType == 'PLAIN_TEXT' && !field.help.withLabel\" class=\"mx-field-hint mx-field-hint-nm\">\n    <mat-icon \n      aria-hidden=\"true\" \n      [attr.aria-label]=\"field.help && field.help.message\" \n      class=\"mx-field-hint-icon\">{{field.help && field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n    {{field.help.message}}\n  </mat-hint>\n</ng-template>\n\n<ng-template #cfhelpmodal>\n    <mat-sidenav #sidenav [position]=\"'end'\" (keydown.escape)=\"close()\" disableClose>\n      <div class=\"mdc-layout-grid mx-crud-search-modal mx-crud-search-modal-{{field.key}}\">\n        <div class=\"mdc-layout-grid__inner\">\n          <div class=\"mdc-layout-grid__cell--span-9 mx-field-help-modal-header\">\n            <strong>{{field.help.title}}</strong>\n          </div>\n          <div class=\"mdc-layout-grid__cell--span-3 mdc-layout-grid--align-right\">\n            <mx-button\n              [sourceIdentifier]=\"field.key\"\n              [sourceIndex]=\"'0'\"\n              [widgetArrayIndex]=\"'0'\"\n              [button]=\"helpModalButton\"\n              align = \"right\"\n              (onClick)=\"close()\"\n            ></mx-button>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-help-modal-divider\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            <mat-divider class=\"mx-field-help-divider\"></mat-divider>\n          </div>\n        </div>\n        <div class=\"mdc-layout-grid__inner mx-field-help-modal-description\">\n          <div class=\"mdc-layout-grid__cell--span-12\">\n            {{field.help.message}}\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n    <br/>\n    <mat-sidenav-content #helpSideNav class=\"mx-field-help-modal\">\n      <span \n        matTooltip=\"Click for help\"\n        matTooltipPosition=\"above\"\n        class=\"mx-field-hint mx-field-hint-{{field.key}}\"\n        (click)=\"open()\"\n        >\n        <mat-icon \n          aria-hidden=\"true\"  \n          [attr.aria-label]=\"field.help.message\" \n          class=\"mx-field-hint-icon mx-field-hint-icon-{{field.key}}\" \n          (click)=\"open()\"\n        >{{field.help.icon ? field.help.icon : 'live_help'}}</mat-icon>\n      </span>  \n    </mat-sidenav-content>\n</ng-template>\n\n<ng-template #cfoptiontemplate> \n  <mat-selection-list \n    #listView \n    [multiple]=\"field.type == 'CHECKBOX'\" \n    (selectionChange)=\"onOptionChange($event)\"\n    class=\"mx-field-list mx-field-nm\">\n    <ng-container \n      *ngFor=\"let option of field['options']; let index=index,let last = last\">\n      <mat-list-option \n        *ngIf=\"index < showLess\" \n        [value]=\"option.key\" \n        [selected]=\"field.type == 'CHECKBOX' ? option.checked : option.key == fieldControl.value\"\n        [disabled]=\"option.disabled || isFieldDisabled\"\n        class=\"mx-field-list-option\">\n        <img \n          *ngIf=\"option.image || field['defaultImageUrl']\" \n          matListAvatar \n          [src]=\"option.image\" \n          (error)=\"onListImageLoadError($event)\"  \n          alt=\"\" \n          class=\"mx-field-list-image\"/>\n          <h3 matLine class=\"primary\">\n            {{option.value}}\n          </h3>\n          <p matLine class=\"secondary\">\n            <span>{{option.description}}</span>\n          </p>\n        <mat-divider *ngIf=\"!last\"></mat-divider>\n      </mat-list-option>\n    </ng-container>\n  </mat-selection-list>\n  <span class=\"mx-show-all-btn\">\n    <button  mat-button (click)=\"onShowAllOptions()\" *ngIf=\"showLess < field['options'].length\">\n      {{field['showAllLabel'] ? field['showAllLabel'] : 'Show All'}}\n      <mat-icon aria-hidden=\"true\">keyboard_arrow_down</mat-icon>\n    </button>\n  </span>\n  <ng-container *ngTemplateOutlet=\"cfhelplaintext\"></ng-container>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                styles: [".mx-field-lbl,.mx-field-lbl-for-label{display:block}.mx-field-lbl-horizontal{padding-top:20px}.mx-field-lbl-horizontal-premitive{padding-top:13px}.mx-field-hint-inline{text-align:right}.mx-field-hint-nm{font-size:75%}.mx-field-hint-nm .mx-field-hint-icon{height:1em;width:1em}.mx-field-hint-icon{font-size:100%!important}.mx-field-hint .mat-icon{margin-right:4px!important;vertical-align:middle!important}.mx-field{width:100%}.mx-field-chk-group{padding-top:24px}.mx-field-chk{display:flex;flex-direction:column;margin:0}.mx-field-chk-inner{margin:5px 0}.mx-field-chk-desc{padding-left:22px}.mx-field-radio-group{display:flex;flex-direction:column;margin:0}.mx-field-radio{margin:5px 0}.mx-field-radio-desc{padding-left:26px}.mx-disabled{color:rgba(0,0,0,.54)}.mx-field-slider{width:100%}.mx-field-slider .mat-slider-wrapper{top:16px!important}.mx-field-toggle{height:48px!important}.mx-field-help-modal{margin-left:0!important;width:20px}.mx-field-help-modal-header{font-size:20px;font-weight:500;padding:16px 16px 8px}.mx-field-help-modal-divider{padding:12px 16px 0}.mx-field-help-modal-description{padding:16px 16px 8px}.mx-form-add-more-row{padding:0!important}.mx-field-upload{vertical-align:middle}.mx-field-upload .file-input-text{display:none!important}.mx-field-img{padding-top:5px}.mx-field-showmore-pannel{background-color:#eff0f1;border-radius:3px;margin-bottom:1em!important;overflow:auto;padding:0 8px!important;width:auto}.mx-field-showmore-pannel-content{padding-bottom:5px}.mx-field-showmore-pannel-action{border-top:1px solid #d3d3d3;color:grey;padding-top:5px;text-align:center}.mx-field-horizontal-container{padding:0!important}.mx-field-horizontal-container label#mat-form-field-label-1{color:transparent}.mx-field-horizontal-container .mx-field-nm{margin-top:6px}.mx-field-boolean-success,.mx-success{color:green}.mx-failure,.mx-field-boolean-failure{color:red}.mx-field-boolean{margin-bottom:1.25em!important}.mat-flat-button,.mat-icon-button,.mat-stroked-button,.mx-field-addmore .mat-button{min-width:30px!important}.mx-small-bubble{box-sizing:border-box!important;font-size:10px;line-height:24px;margin-top:12px!important;min-height:24px!important;min-width:unset;padding:0 8px!important}.mx-field-value-wrapper-horizontal{padding-top:8px}.mx-field-value-wrapper-vertical{display:block;padding-bottom:12px}.mx-field-list{padding-bottom:8px}.mx-field-list>div{margin-bottom:1.25em;text-align:center}.mx-field-list .mx-field-list-option[aria-selected=true]{background:rgba(203,197,197,.2)!important}.mx-field-list .mx-field-list-option .mx-field-list-image{border:1px solid #4d4d4d;height:30px!important;width:30px!important}.mx-field-list .mx-field-list-option .primary{margin:5px 0}.mx-field-list .mx-field-list-option .secondary{font-style:italic}.mx-field-list .mx-field-list-option:not(:last-child){border-bottom:1px solid #ebebeb}.mx-field-list .mx-field-list-option:nth-last-child(2){border-bottom:none}.highlight{font-weight:700}.mx-show-all-btn{display:block}.mx-field-paragraph .mx-field{width:auto!important}.mx-field-paragraph .mx-field .mx-field-lbl,.mx-field-paragraph .mx-field .mx-field-value-wrapper-horizontal{display:inline;width:auto!important}.mx-field-lbl-inline{color:rgba(0,0,0,.54);font-size:10px;height:10px;line-height:10px;margin-bottom:8px}.mx-field-lbl-inline .mat-icon-button{color:rgba(0,0,0,.54);height:10px;line-height:8px;width:30px}.mat-slide-toggle{line-height:unset;margin-top:4px}.ql-toolbar.ql-snow{border:none;border-radius:4px 4px 0 0;box-shadow:0 0 1px -1px rgba(0,0,0,.2),0 0 1px 0 rgba(0,0,0,.14),0 0 3px 0 rgba(0,0,0,.12)}.ql-container.ql-snow{border:none;border-radius:0 0 4px 4px;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)!important}.mx-field-editor-error{font-size:75%}.mx-field-editor-error .mat-error{margin-bottom:1.25em;margin-top:.5416666667em}.mx-editor-invalid .ql-toolbar.ql-snow{border:1px solid #f44336;border-bottom:none}.mx-editor-invalid .ql-container.ql-snow{border:1px solid #f44336}.mx-field-chk-group .mx-field-chk:last-child,.mx-field-radio-group{margin-bottom:1.25em!important}.mx-field-radio-horizontal{display:inline-block}.mx-field-radio-horizontal-padding{padding-right:10px}.mx-field-checkbox-horizontal{display:flex;padding-right:10px}.mx-disable,.mx-disable .ql-container,.mx-disable .ql-toolbar{opacity:.38}.mx-disable .mat-list-item-disabled{background:none}.mx-disable.mx-field-list:hover{outline:none}input[type=color],input[type=month],input[type=number],input[type=time],input[type=week]{-webkit-appearance:none;border:none;height:16px}input[type=color]::-webkit-color-swatch-wrapper{padding:0}input[type=color]::-webkit-color-swatch{border:none}"]
            },] }
];
FieldComponent.ctorParameters = () => [
    { type: Router },
    { type: Ability }
];
FieldComponent.propDecorators = {
    sourceType: [{ type: Input }],
    sourceIdentifier: [{ type: Input }],
    sourceIndex: [{ type: Input }],
    widgetArrayIndex: [{ type: Input }],
    form: [{ type: Input }],
    fieldControl: [{ type: Input }],
    fieldIndex: [{ type: Input }],
    field: [{ type: Input }],
    originalData: [{ type: Input }],
    _displayMode: [{ type: Input }],
    displayMode: [{ type: Input }],
    hideLabel: [{ type: Input }],
    value: [{ type: Input }],
    isAddMore: [{ type: Input }],
    addMorePermission: [{ type: Input }],
    device: [{ type: Input }],
    displayInColumns: [{ type: Input }],
    dependencies: [{ type: Input }],
    row: [{ type: Input }],
    keyMap: [{ type: Input }],
    onDependentFieldChange: [{ type: Output }],
    onFieldChange: [{ type: Output }],
    onFormChange: [{ type: Output }],
    onButtonClick: [{ type: Output }],
    listView: [{ type: ViewChild, args: ['listView',] }],
    sidenav: [{ type: ViewChild, args: ['sidenav',] }]
};
//# sourceMappingURL=data:application/json;base64,