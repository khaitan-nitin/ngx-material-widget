!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@angular/router"),require("@angular/cdk/layout"),require("@angular/material/button-toggle"),require("@angular/material/chips"),require("@angular/material/icon"),require("@angular/material/badge"),require("@angular/material/dialog"),require("@angular/material/button"),require("@angular/material/menu"),require("@angular/material/card"),require("@angular/material/tabs"),require("@angular/material/expansion"),require("@angular/material/sidenav"),require("@angular/material/bottom-sheet"),require("@angular/material/divider"),require("@angular/material/form-field"),require("@angular/material/input"),require("@angular/material/autocomplete"),require("@angular/material/select"),require("@angular/material/checkbox"),require("@angular/material/radio"),require("@angular/material/datepicker"),require("@angular/material-moment-adapter"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/tooltip"),require("@angular/material/list"),require("@angular/material/table"),require("@angular/material/sort"),require("@angular/material/paginator"),require("@angular/material/grid-list"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/common/http"),require("@casl/angular"),require("@casl/ability"),require("ng2-tooltip-directive"),require("util"),require("crypto-js"),require("@angular/animations"),require("@angular/cdk/collections"),require("ngx-quill"),require("@angular/cdk/keycodes"),require("@angular/cdk/drag-drop"),require("@angular/flex-layout"),require("@angular/material/toolbar"),require("ngx-infinite-scroll"),require("@material-extended/mde"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ngx-material-widget",["exports","@angular/core","@angular/common","@angular/forms","@angular/router","@angular/cdk/layout","@angular/material/button-toggle","@angular/material/chips","@angular/material/icon","@angular/material/badge","@angular/material/dialog","@angular/material/button","@angular/material/menu","@angular/material/card","@angular/material/tabs","@angular/material/expansion","@angular/material/sidenav","@angular/material/bottom-sheet","@angular/material/divider","@angular/material/form-field","@angular/material/input","@angular/material/autocomplete","@angular/material/select","@angular/material/checkbox","@angular/material/radio","@angular/material/datepicker","@angular/material-moment-adapter","@angular/material/slider","@angular/material/slide-toggle","@angular/material/tooltip","@angular/material/list","@angular/material/table","@angular/material/sort","@angular/material/paginator","@angular/material/grid-list","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/common/http","@casl/angular","@casl/ability","ng2-tooltip-directive","util","crypto-js","@angular/animations","@angular/cdk/collections","ngx-quill","@angular/cdk/keycodes","@angular/cdk/drag-drop","@angular/flex-layout","@angular/material/toolbar","ngx-infinite-scroll","@material-extended/mde","@angular/platform-browser"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["ngx-material-widget"]={},t.ng.core,t.ng.common,t.ng.forms,t.ng.router,t.ng.cdk.layout,t.ng.material.buttonToggle,t.ng.material.chips,t.ng.material.icon,t.ng.material.badge,t.ng.material.dialog,t.ng.material.button,t.ng.material.menu,t.ng.material.card,t.ng.material.tabs,t.ng.material.expansion,t.ng.material.sidenav,t.ng.material.bottomSheet,t.ng.material.divider,t.ng.material.formField,t.ng.material.input,t.ng.material.autocomplete,t.ng.material.select,t.ng.material.checkbox,t.ng.material.radio,t.ng.material.datepicker,t.ng.materialMomentAdapter,t.ng.material.slider,t.ng.material.slideToggle,t.ng.material.tooltip,t.ng.material.list,t.ng.material.table,t.ng.material.sort,t.ng.material.paginator,t.ng.material.gridList,t.ng.material.progressBar,t.ng.material.progressSpinner,t.ng.common.http,t.angular,t.ability,t.ng2TooltipDirective,t.util,t.CryptoJS,t.ng.animations,t.ng.cdk.collections,t.ngxQuill,t.ng.cdk.keycodes,t.ng.cdk.dragDrop,t.ng.flexLayout,t.ng.material.toolbar,t.ngxInfiniteScroll,t.mde,t.ng.platformBrowser)}(this,(function(exports,core,common,forms,router,layout,buttonToggle,chips,icon,badge,dialog,button,menu,card,tabs,expansion,sidenav,bottomSheet,divider,formField,input,autocomplete,select,checkbox,radio,datepicker,materialMomentAdapter,slider,slideToggle,tooltip,list,table,sort,paginator,gridList,progressBar,progressSpinner,http,angular,ability,ng2TooltipDirective,util,CryptoJS,animations,collections,ngxQuill,keycodes,dragDrop,flexLayout,toolbar,ngxInfiniteScroll,mde,platformBrowser){"use strict";var BadgeUitls=function(){},CollectionUtils=function(){function t(){}return t.isEmpty=function(t){return null==t||null==t||""==t||0==t.length},t}(),ButtonUtils=function(){function t(){}return t.instanceOfButton=function(t){return"type"in t&&"CHIP"!=t.type&&"GROUP"!=t.type&&"DROPDOWN"!=t.type&&("FLAT"==t.type||"GHOST"==t.type||"RAISED"==t.type||"FAB"==t.type||"STROKED"==t.type)},t.instanceOfChipButton=function(t){return"type"in t&&"groupIdentifier"in t&&"CHIP"==t.type},t.instanceOfButtonGroup=function(t){return"type"in t&&"groupIdentifier"in t&&"GROUP"==t.type},t.instanceOfHoverButton=function(t){return"type"in t&&"groupIdentifier"in t&&"DROPDOWN"==t.type},t.instanceOfAnyButtonType=function(t){var e=!1;return(this.instanceOfButton(t)||this.instanceOfChipButton(t)||this.instanceOfButtonGroup(t)||this.instanceOfHoverButton(t))&&(e=!0),e},t.hasWidth=function(t){var e=!1;return!CollectionUtils.isEmpty(t)&&t.filter((function(t){return null!=t.width&&""!=t.width})).length>0&&(e=!0),e},t.setEqualWidth=function(t){if(!CollectionUtils.isEmpty(t)){var e=100/t.length;t.forEach((function(t){t.width=""+e}))}},t.getAction=function(t,e,n,i,o,l,a,r,d){var s=null;return a?s=Object.assign(Object.assign({},a),r):(s=r,a=r),{sourceIdentifier:t,sourceIndex:e,widgetArrayIndex:n,action:i,actionData:d,data:s,originalData:a,parentHierarchy:o,event:l}},t.isDisable=function(t){return"BLOCKED"==t||"VIEW"==t},t}(),extendStatics=function(t,e){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function __extends(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}extendStatics(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var __assign=function(){return(__assign=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function __rest(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(i=Object.getOwnPropertySymbols(t);o<i.length;o++)e.indexOf(i[o])<0&&Object.prototype.propertyIsEnumerable.call(t,i[o])&&(n[i[o]]=t[i[o]])}return n}function __decorate(t,e,n,i){var o,l=arguments.length,a=l<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,i);else for(var r=t.length-1;r>=0;r--)(o=t[r])&&(a=(l<3?o(a):l>3?o(e,n,a):o(e,n))||a);return l>3&&a&&Object.defineProperty(e,n,a),a}function __param(t,e){return function(n,i){e(n,i,t)}}function __metadata(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function __awaiter(t,e,n,i){return new(n||(n=Promise))((function(o,l){function a(t){try{d(i.next(t))}catch(t){l(t)}}function r(t){try{d(i.throw(t))}catch(t){l(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,r)}d((i=i.apply(t,e||[])).next())}))}function __generator(t,e){var n,i,o,l,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return l={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function r(l){return function(r){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&l[0]?i.return:l[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,l[1])).done)return o;switch(i=0,o&&(l=[2&l[0],o.value]),l[0]){case 0:case 1:o=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,i=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==l[0]&&2!==l[0])){a=0;continue}if(3===l[0]&&(!o||l[1]>o[0]&&l[1]<o[3])){a.label=l[1];break}if(6===l[0]&&a.label<o[1]){a.label=o[1],o=l;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(l);break}o[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(t,a)}catch(t){l=[6,t],i=0}finally{n=o=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,r])}}}var __createBinding=Object.create?function(t,e,n,i){void 0===i&&(i=n),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,i){void 0===i&&(i=n),t[i]=e[n]};function __exportStar(t,e){for(var n in t)"default"===n||Object.prototype.hasOwnProperty.call(e,n)||__createBinding(e,t,n)}function __values(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var i,o,l=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(i=l.next()).done;)a.push(i.value)}catch(t){o={error:t}}finally{try{i&&!i.done&&(n=l.return)&&n.call(l)}finally{if(o)throw o.error}}return a}function __spread(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(__read(arguments[e]));return t}function __spreadArrays(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),o=0;for(e=0;e<n;e++)for(var l=arguments[e],a=0,r=l.length;a<r;a++,o++)i[o]=l[a];return i}function __spreadArray(t,e){for(var n=0,i=e.length,o=t.length;n<i;n++,o++)t[o]=e[n];return t}function __await(t){return this instanceof __await?(this.v=t,this):new __await(t)}function __asyncGenerator(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,o=n.apply(t,e||[]),l=[];return i={},a("next"),a("throw"),a("return"),i[Symbol.asyncIterator]=function(){return this},i;function a(t){o[t]&&(i[t]=function(e){return new Promise((function(n,i){l.push([t,e,n,i])>1||r(t,e)}))})}function r(t,e){try{(n=o[t](e)).value instanceof __await?Promise.resolve(n.value.v).then(d,s):c(l[0][2],n)}catch(t){c(l[0][3],t)}var n}function d(t){r("next",t)}function s(t){r("throw",t)}function c(t,e){t(e),l.shift(),l.length&&r(l[0][0],l[0][1])}}function __asyncDelegator(t){var e,n;return e={},i("next"),i("throw",(function(t){throw t})),i("return"),e[Symbol.iterator]=function(){return this},e;function i(i,o){e[i]=t[i]?function(e){return(n=!n)?{value:__await(t[i](e)),done:"return"===i}:o?o(e):e}:o}}function __asyncValues(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},i("next"),i("throw"),i("return"),e[Symbol.asyncIterator]=function(){return this},e);function i(n){e[n]=t[n]&&function(e){return new Promise((function(i,o){(function(t,e,n,i){Promise.resolve(i).then((function(e){t({value:e,done:n})}),e)})(i,o,(e=t[n](e)).done,e.value)}))}}}function __makeTemplateObject(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}var __setModuleDefault=Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e};function __importStar(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&__createBinding(e,t,n);return __setModuleDefault(e,t),e}function __importDefault(t){return t&&t.__esModule?t:{default:t}}function __classPrivateFieldGet(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)}function __classPrivateFieldSet(t,e,n){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,n),n}var DependentUtils=function(){function DependentUtils(){}return DependentUtils.displayDependencyField=function(dependentOnFields,supportingRecord,record){var e_1,_a,e_2,_b,displayDependencyField=!0,displaySupportingDependencyField=!0;if(dependentOnFields&&dependentOnFields.length>0&&record){var _loop_1=function(dependentField){var dependencyValue="";try{dependencyValue=eval("record."+dependentField.key)}catch(t){}if(null!=dependencyValue)if(dependentField.condition instanceof Array)if(dependencyValue instanceof Array){var hasMatch_1=!1;dependencyValue.forEach((function(t){dependentField.condition.indexOf(t)>-1&&(hasMatch_1=!0)})),hasMatch_1&&(displayDependencyField=!1)}else dependentField.condition.indexOf(dependencyValue)<=-1&&(displayDependencyField=!1);else dependencyValue instanceof Array?dependencyValue.indexOf(dependentField.condition)<=-1&&(displayDependencyField=!1):dependencyValue!=dependentField.condition&&(displayDependencyField=!1)};try{for(var dependentOnFields_1=__values(dependentOnFields),dependentOnFields_1_1=dependentOnFields_1.next();!dependentOnFields_1_1.done;dependentOnFields_1_1=dependentOnFields_1.next()){var dependentField=dependentOnFields_1_1.value;_loop_1(dependentField)}}catch(t){e_1={error:t}}finally{try{dependentOnFields_1_1&&!dependentOnFields_1_1.done&&(_a=dependentOnFields_1.return)&&_a.call(dependentOnFields_1)}finally{if(e_1)throw e_1.error}}}if(dependentOnFields&&dependentOnFields.length>0&&supportingRecord){var _loop_2=function(dependentField){var dependencyValue="";try{dependencyValue=eval("supportingRecord."+dependentField.key)}catch(t){}if(null!=dependencyValue)if(dependentField.condition instanceof Array)if(dependencyValue instanceof Array){var hasMatch_2=!1;dependencyValue.forEach((function(t){dependentField.condition.indexOf(t)>-1&&(hasMatch_2=!0)})),hasMatch_2||(displaySupportingDependencyField=!1)}else dependentField.condition.indexOf(dependencyValue)<=-1&&(displaySupportingDependencyField=!1);else dependencyValue instanceof Array?dependencyValue.indexOf(dependentField.condition)<=-1&&(displaySupportingDependencyField=!1):dependencyValue!=dependentField.condition&&(displaySupportingDependencyField=!1)};try{for(var dependentOnFields_2=__values(dependentOnFields),dependentOnFields_2_1=dependentOnFields_2.next();!dependentOnFields_2_1.done;dependentOnFields_2_1=dependentOnFields_2.next()){var dependentField=dependentOnFields_2_1.value;_loop_2(dependentField)}}catch(t){e_2={error:t}}finally{try{dependentOnFields_2_1&&!dependentOnFields_2_1.done&&(_b=dependentOnFields_2.return)&&_b.call(dependentOnFields_2)}finally{if(e_2)throw e_2.error}}}return displayDependencyField&&displaySupportingDependencyField},DependentUtils.getDependencyTree=function(t){var e,n,i,o,l={};try{for(var a=__values(t),r=a.next();!r.done;r=a.next()){var d=r.value;if(d.field.dependentOnFields&&d.field.dependentOnFields.length>0)try{for(var s=(i=void 0,__values(d.field.dependentOnFields)),c=s.next();!c.done;c=s.next()){var p=c.value;null!=l[p.key]&&null!=l[p.key]||(l[p.key]=new Array),l[p.key].push(d.field.key)}}catch(t){i={error:t}}finally{try{c&&!c.done&&(o=s.return)&&o.call(s)}finally{if(i)throw i.error}}}}catch(t){e={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}return l},DependentUtils.getDependencyTreeForButton=function(t){var e,n,i,o,l,a,r,d,s,c,p={};if(!CollectionUtils.isEmpty(t.buttons))try{for(var u=__values(t.buttons),g=u.next();!g.done;g=u.next()){if((w=g.value).dependentOnFields&&w.dependentOnFields.length>0)try{for(var m=(i=void 0,__values(w.dependentOnFields)),f=m.next();!f.done;f=m.next()){null!=p[(I=f.value).key]&&null!=p[I.key]||(p[I.key]=new Array),p[I.key].push(w.identifier)}}catch(t){i={error:t}}finally{try{f&&!f.done&&(o=m.return)&&o.call(m)}finally{if(i)throw i.error}}}}catch(t){e={error:t}}finally{try{g&&!g.done&&(n=u.return)&&n.call(u)}finally{if(e)throw e.error}}if(!CollectionUtils.isEmpty(t.cells))try{for(var h=__values(t.cells),y=h.next();!y.done;y=h.next()){var _=y.value;try{for(var b=(r=void 0,__values(_.buttons.buttons)),x=b.next();!x.done;x=b.next()){var w;if((w=x.value).dependentOnFields&&w.dependentOnFields.length>0)try{for(var C=(s=void 0,__values(w.dependentOnFields)),v=C.next();!v.done;v=C.next()){var I;null!=p[(I=v.value).key]&&null!=p[I.key]||(p[I.key]=new Array),p[I.key].push(w.identifier)}}catch(t){s={error:t}}finally{try{v&&!v.done&&(c=C.return)&&c.call(C)}finally{if(s)throw s.error}}}}catch(t){r={error:t}}finally{try{x&&!x.done&&(d=b.return)&&d.call(b)}finally{if(r)throw r.error}}}}catch(t){l={error:t}}finally{try{y&&!y.done&&(a=h.return)&&a.call(h)}finally{if(l)throw l.error}}return p},DependentUtils}(),ObjectUtils=function(){function t(){}return t.isEmpty=function(t){return null==t||0===Object.keys(t).length},t.resolve=function(t,e){if(!this.isEmpty(e))for(var n in e)t=t.replace("{"+n+"}",e[n]);return t},t.unflatten=function(t){return function t(e,n){return Object.keys(e).reduce((function(n,i,o){var l=i.split("."),a=l.shift();if(l.length>=1){var r=parseInt(l[0],10),d=!isNaN(r),s={};if(n[a]||(n[a]=d?[]:{}),d){var c=parseInt(l.shift(),10),p=n[a].length-1>=c,u=n[a][c];s[l.join(".")]=e[i],n[a][c]=p?Object.assign(u,t(s,u)):t(s,{})}else s[l.join(".")]=e[i],Object.assign(n[a],t(s,n[a]))}else n[a]=e[i];return n}),n)}(t,{})},t}(),StringUtils=function(){function t(){}return t.isEmpty=function(t){return null==t||null==t||""==t||0==t.length},t}(),FormUtils=function(){function FormUtils(){}return FormUtils.isFormDisable=function(t){return"BLOCKED"==t||"VIEW"==t},FormUtils.disableField=function(t,e){t&&t.get(e.key)&&t.get(e.key).disable()},FormUtils.disableFieldControl=function(t){t&&t.disable()},FormUtils.checkUniqueIdentifier=function(t){},FormUtils.getRawValue=function(t){var e={};return t&&(e=t.getRawValue()),e},FormUtils.initFormGroup=function(t,e,n,i){var o,l,a={};this.isFormDisable(i);try{for(var r=__values(t),d=r.next();!d.done;d=r.next()){var s=d.value;FormUtils.initFieldGroup(a,s,e,n,i)}}catch(t){o={error:t}}finally{try{d&&!d.done&&(l=r.return)&&l.call(r)}finally{if(o)throw o.error}}return new forms.FormGroup(a)},FormUtils.getFieldValidation=function(t){var e,n,i=new Array;if(t.validations&&t.validations.length>0)try{for(var o=__values(t.validations),l=o.next();!l.done;l=o.next()){var a=l.value;i.push(a.type)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return i},FormUtils.initFieldGroup=function(t,e,n,i,o){if(!DependentUtils.displayDependencyField(e.field.dependentOnFields,n,i))return null==i&&(i={}),void(e.addMore?i[e.field.key]=[]:i[e.field.key]=null);var l=this.getFieldValidation(e.field);if("CHECKBOX"==e.field.type){var a=FormUtils.getValueViaEval(i,e.field.key);if(e.addMore){var r=i&&a?a:new Array;t[e.field.key]=new forms.FormArray([]);for(var d=0;d<r.length;d++){var s=this.getCheckboxOption(o,e.field,r[d]);t[e.field.key].push(this.setFormGroup(o,e.field,s,l))}}else{var c=i&&a?a:null;s=this.getCheckboxOption(o,e.field,c);t[e.field.key]=this.setFormGroup(o,e.field,s,l)}}else if("CALENDAR"==e.field.type&&e.field.dateRange){var p={};l&&l.length>0?(p.startDate=new forms.FormControl("",l),p.endDate=new forms.FormControl("",l)):(p.startDate=new forms.FormControl(""),p.endDate=new forms.FormControl("")),t[e.field.key]=this.setFormGroup(o,e.field,p,l)}else if("PARAGRAPH"!=e.field.type||CollectionUtils.isEmpty(e.field.fieldContexts))if(e.addMore){var u=this.getFormFieldValue(i,e);if(t[e.field.key]=new forms.FormArray([]),CollectionUtils.isEmpty(u))t[e.field.key].push(this.setFormControl(o,e.field,"",l));else for(d=0;d<u.length;d++)t[e.field.key].push(this.setFormControl(o,e.field,u[d],l))}else{var g=this.getFormFieldValue(i,e);t[e.field.key]=this.setFormControl(o,e.field,g,l)}else{a=FormUtils.getValueViaEval(i,e.field.key),p=this.getParagraphFields(o,e.field,a);t[e.field.key]=this.setFormGroup(o,e.field,p,l)}return t},FormUtils.dateRangeValidation=function(t){return t.get("startDate").value||t.get("endDate").value?null:{mismatch:!0}},FormUtils.getCheckboxOption=function(t,e,n){var i,o,l={};if(e.options&&e.options.length>0)try{for(var a=__values(e.options),r=a.next();!r.done;r=a.next()){var d=r.value;if(ObjectUtils.isEmpty(n))d.selected?d.checked=!0:d.checked=!1;else{var s=n.indexOf(d.key)>-1;d.checked=!(!n||!s)}l[d.key]=new forms.FormControl(d.checked),FieldUtils.isFieldDisabled(e,t,"")&&l[d.key].disable()}}catch(t){i={error:t}}finally{try{r&&!r.done&&(o=a.return)&&o.call(a)}finally{if(i)throw i.error}}return l},FormUtils.getParagraphFields=function(t,e,n){var i,o,l={};if(CollectionUtils.isEmpty(n)&&(n=new Map),e.fieldContexts&&Object.keys(e.fieldContexts).length>0)try{for(var a=__values(Object.keys(e.fieldContexts)),r=a.next();!r.done;r=a.next()){var d=r.value,s=e.fieldContexts[d],c=this.getFieldValidation(s);l[s.key]=new forms.FormControl(n[s.key],c),FieldUtils.isFieldDisabled(e,t,"")&&l[s.key].disable()}}catch(t){i={error:t}}finally{try{r&&!r.done&&(o=a.return)&&o.call(a)}finally{if(i)throw i.error}}return l},FormUtils.setFormGroup=function(t,e,n,i){var o;return o=e.validations&&e.validations.length>0?new forms.FormGroup(n,i):new forms.FormGroup(n),!FieldUtils.isFieldDisabled(e,t,n)&&!e.isReadOnly&&"HIDDEN"!=e.type||StringUtils.isEmpty(n)||o.disable(),o},FormUtils.setFormControl=function(t,e,n,i){var o;return o=e.validations&&e.validations.length>0?new forms.FormControl(n,i):new forms.FormControl(n),FieldUtils.isFieldDisabled(e,t,n)?o.disable():o.enable(),o},FormUtils.getFormFieldValue=function(t,e){var n,i=FormUtils.getValueViaEval(t,e.field.key);if(e.addMore){var o=new Array;ObjectUtils.isEmpty(t)||CollectionUtils.isEmpty(i)||!util.isArray(i)?o.push(""):o=i;for(var l=0;l<o.length;l++)o[l]=this.getFieldValue(o[l],e.field);n=o}else{var a="";t&&i&&(a=i),n=this.getFieldValue(a,e.field)}return n},FormUtils.getFieldValue=function(t,e){var n=null;return e.value&&(n=e.value),StringUtils.isEmpty(t)||(n=t),null!=n&&"{}"!==JSON.stringify(n)||(n=""),n},FormUtils.reset=function(t,e){var n,i;if(t.reset(),null!=e)try{for(var o=__values(e.formFields),l=o.next();!l.done;l=o.next()){var a=l.value;"AUTOCOMPLETE"==a.field.type&&(a.default=null)}}catch(t){n={error:t}}finally{try{l&&!l.done&&(i=o.return)&&i.call(o)}finally{if(n)throw n.error}}},FormUtils.getValueViaEval=function(record,key){var value="";try{StringUtils.isEmpty(value)&&(value=record[key]),value=eval("record."+key)}catch(t){}return value},FormUtils.setOptionsUsingKey=function(t,e,n){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.formFields)||t.formFields.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.field)||t.field.key!=e||"AUTOCOMPLETE"!=t.field.type&&"CHECKBOX"!=t.field.type&&"RADIO"!=t.field.type&&"DROPDOWN"!=t.field.type||FieldUtils.setOptionsUsingKey(t.field,n)}))},FormUtils.setOptionsUsingValues=function(t,e,n,i,o){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.formFields)||t.formFields.forEach((function(t){if(!CollectionUtils.isEmpty(t)&&!CollectionUtils.isEmpty(t.field)){var i=!1;if(StringUtils.isEmpty(t.field.optionDependsOn))i=!0;else{var l=FormUtils.getValueViaEval(o,t.field.optionDependsOn);n.optionDependsOnValue==l&&(i=!0)}t.field.key!=e||"AUTOCOMPLETE"!=t.field.type&&"CHECKBOX"!=t.field.type&&"RADIO"!=t.field.type&&"DROPDOWN"!=t.field.type||i&&FieldUtils.setOptionsUsingValues(t.field,n)}}))},FormUtils.changeButtonLabelIcon=function(t,e,n,i){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.action)||CollectionUtils.isEmpty(t.action.buttons)||t.action.buttons.forEach((function(t){CollectionUtils.isEmpty(t)||t.identifier!=e||(StringUtils.isEmpty(n)||(t.label=n),StringUtils.isEmpty(i)||(t.icon=i))}))},FormUtils}(),MasterDataUtils=function(){function t(){}return t.getMasterDataFromLocalStore=function(t){return JSON.parse(localStorage.getItem("masterData"))[t]},t.getMasterDataAsOptions=function(e){var n=t.getMasterDataFromLocalStore(e),i=new Array;return n.items.forEach((function(t){i.push({key:t.key,value:t.label})})),i},t}(),FieldUtils=function(){function t(){}return t.isFieldDisabled=function(t,e,n){var i=!1;return(FormUtils.isFormDisable(e)||"DISABLED"==t.displayMode||"HIDDEN"==t.type||t.isReadOnly||t.isUnique&&"EDIT"==e&&!StringUtils.isEmpty(n))&&(i=!0),i},t.displayEllipsis=function(t,e){var n=!1,i=JSON.stringify(e);return t&&t>0&&!StringUtils.isEmpty(i)&&i.length>t&&(n=!0),n},t.readOnlyField=function(){return["IMAGE","IMAGE_AND_TEXT","JSON","LABEL","BOOLEAN"]},t.isEllipsisField=function(t){var e;return("LABEL"==t.type||"TEXT"==t.type||"TEXTAREA"==t.type||"EMAIL"==t.type||"PASSWORD"==t.type)&&t.ellipsis>0&&(e=!0),e},t.setOptionsUsingKey=function(t,e){if(!CollectionUtils.isEmpty(t)){var n=MasterDataUtils.getMasterDataAsOptions(e);t.options=n}},t.setOptionsUsingValues=function(t,e){CollectionUtils.isEmpty(t)||(t.options=e.options)},t}(),FormCustomUtils=function(){function t(){}return t.setCustomLayout=function(t,e){var n=this;e&&!CollectionUtils.isEmpty(e.cells)&&e.cells.forEach((function(e){CollectionUtils.isEmpty(e.controls)||e.controls.forEach((function(e){if(CollectionUtils.isEmpty(e.control)){var i;i=n.getControl(t,e),e.control=i}}))})),console.log(t.layout)},t.getControl=function(t,e){var n={};return e.control?n=e.control:CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.formFields)||"FIELD"!=e.type?CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.action)||"BUTTON"!=e.type||(n=this.getButtonControl(t.action,e.key)):n=this.getFieldControl(t.formFields,e.key),n},t.getFieldControl=function(t,e){var n={};return t.forEach((function(t){CollectionUtils.isEmpty(t.field)||t.field.key!=e||(n=t)})),n},t.getButtonControl=function(t,e){var n;return StringUtils.isEmpty(t.rowHeight)?t.buttons.forEach((function(t){t.identifier==e&&(n=t)})):t.cells.forEach((function(t){t.buttons.buttons.forEach((function(t){t.identifier==e&&(n=t)}))})),n},t}(),ListUtils=function(){function t(){}return t.addColoumn=function(){},t.hideColoumn=function(){},t.setOptionsUsingKey=function(t,e,n){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.columns)||t.columns.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.fields)||t.fields.forEach((function(t){CollectionUtils.isEmpty(t)||t.key!=e||"AUTOCOMPLETE"!=t.type&&"CHECKBOX"!=t.type&&"RADIO"!=t.type&&"DROPDOWN"!=t.type||FieldUtils.setOptionsUsingKey(t,n)}))}))},t.setOptionsUsingValues=function(t,e,n,i,o){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.columns)||t.columns.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.fields)||t.fields.forEach((function(t){var i=!1;if(StringUtils.isEmpty(t.optionDependsOn))i=!0;else{var l=FormUtils.getValueViaEval(o,t.optionDependsOn);n.optionDependsOnValue==l&&(i=!0)}CollectionUtils.isEmpty(t)||t.key!=e||"AUTOCOMPLETE"!=t.type&&"CHECKBOX"!=t.type&&"RADIO"!=t.type&&"DROPDOWN"!=t.type||i&&FieldUtils.setOptionsUsingValues(t,n)}))}))},t.getColumnKey=function(t){var e;return t.key?e=t.key:t.fields&&t.fields.length>0&&(e=t.fields[0].key),e},t.getColumnLabel=function(t){var e;return t.label?e=t.label:t.fields&&t.fields.length>0&&(e=t.fields[0].label),e},t.getColumnSelectorField=function(t){var e,n,i=new Array,o=new Array;try{for(var l=__values(t.columns),a=l.next();!a.done;a=l.next()){var r=a.value,d=this.getColumnKey(r),s=this.getColumnLabel(r);i.push({key:d,value:s,disabled:!1,selected:r.show}),r.show&&o.push(d)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(n=l.return)&&n.call(l)}finally{if(e)throw e.error}}return{key:"columnSelector",label:"Display Column",type:"DROPDOWN",appearance:"STANDARD",isReadOnly:!1,fieldDisplayType:"INLINE",placeholder:"Columns to display",options:i,multiselect:!0,value:o}},t.getMobileConfig=function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.mobile)||CollectionUtils.isEmpty(t.mobile.cells)||this.setCustomLayout(t,t.mobile)},t.setCustomLayouts=function(t){var e=this;this.hasRowHover(t)&&this.setCustomLayout(t,t.row.hover.template.layout),this.hasCustomCellLayout(t)&&t.columns.forEach((function(n){n.template&&n.template.layout&&e.setCustomLayout(t,n.template.layout)})),this.hasCustomRowLayout(t)&&this.setCustomLayout(t,t.row.template.layout)},t.hasRowHover=function(t){var e=!1;return t&&t.row&&t.row.hover&&t.row.hover.template&&t.row.hover.template.layout&&(e=!0),e},t.hasCustomRowLayout=function(t){var e=!1;return t&&t.row&&t.row.template&&t.row.template.layout&&(e=!0),e},t.hasCustomCellLayout=function(t){var e=!1;return t&&!CollectionUtils.isEmpty(t.columns)&&t.columns.forEach((function(t){t.template&&t.template.layout&&(e=!0)})),e},t.setCustomLayout=function(t,e){var n=this;e&&!CollectionUtils.isEmpty(e.cells)&&e.cells.forEach((function(e){CollectionUtils.isEmpty(e.controls)||e.controls.forEach((function(e){if(CollectionUtils.isEmpty(e.control)){var i;i=n.getControl(t,e),e.control=i.control,e.colIndex=i.colIndex,e.cControlIndex=i.cControlIndex}}))}))},t.getControl=function(t,e){var n={};return e.control?n={control:e.control,colIndex:0,cControlIndex:0}:CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.columns)||"FIELD"!=e.type?CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.actions)||"BUTTON"!=e.type||(n.control=this.getButtonControl(t.actions,e.key),n.colIndex=t.columns.length):n=this.getColumnControl(t.columns,e.key),n},t.getColumnControl=function(e,n){var i={},o=0;return e.forEach((function(e){if(!CollectionUtils.isEmpty(e.fields)&&CollectionUtils.isEmpty(i.control)){var l=0;e.fields.forEach((function(e){CollectionUtils.isEmpty(i.control)&&(i=t.getFieldControl(e,n,o,l),l++)}))}o++})),i},t.getFieldControl=function(t,e,n,i){var o={};return t.key==e&&(o.control=t,o.colIndex=n,o.cControlIndex=i,console.log("1111111"),console.log(o)),o},t.getButtonControl=function(t,e){var n;return t.forEach((function(t){t.identifier==e&&(n=t)})),n},t}(),PropertyUtils=function(){function t(){}return t.getPropertyFromLocalStore=function(t){return JSON.parse(localStorage.getItem("properties"))[t]},t}(),SecurityUtils=function(){function t(){}return t.encrypt=function(t){try{return CryptoJS.AES.encrypt(JSON.stringify(t),"key").toString()}catch(t){Error(t)}},t.decrypt=function(t){try{var e=CryptoJS.AES.decrypt(t,"key");return e.toString()?JSON.parse(e.toString(CryptoJS.enc.Utf8)):t}catch(t){Error(t)}},t}(),DropdownUtils=function(){function t(){}return t.getValue=function(t,e){var n;return CollectionUtils.isEmpty(e)||e.forEach((function(e){e.key==t&&(n=e.value)})),n},t}(),CrudUtils=function(){function t(){}return t.setOptionsUsingKey=function(t,e,n){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.form)||CollectionUtils.isEmpty(t.form.tabs)||t.form.tabs.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.widgets)||t.widgets.forEach((function(t){CollectionUtils.isEmpty(t)||"FORM"!=t.widgetType||FormUtils.setOptionsUsingKey(t.widget,e,n),CollectionUtils.isEmpty(t)||"LIST"!=t.widgetType||ListUtils.setOptionsUsingKey(t.widget,e,n)}))})),CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.list)||CollectionUtils.isEmpty(t.list.lists)||t.list.lists.forEach((function(t){CollectionUtils.isEmpty(t)||ListUtils.setOptionsUsingKey(t,e,n)})),CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.search)||CollectionUtils.isEmpty(t.search.form)||FormUtils.setOptionsUsingKey(t.search.form,e,n)},t.setOptionsUsingValues=function(t,e,n,i,o){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.form)||CollectionUtils.isEmpty(t.form.tabs)||t.form.tabs.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.widgets)||t.widgets.forEach((function(t){CollectionUtils.isEmpty(t)||"FORM"!=t.widgetType||FormUtils.setOptionsUsingValues(t.widget,e,n,i,o),CollectionUtils.isEmpty(t)||"LIST"!=t.widgetType||ListUtils.setOptionsUsingValues(t.widget,e,n,i,o)}))})),CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.list)||CollectionUtils.isEmpty(t.list.lists)||t.list.lists.forEach((function(t){CollectionUtils.isEmpty(t)||ListUtils.setOptionsUsingValues(t,e,n,i,o)})),CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.search)||CollectionUtils.isEmpty(t.search.form)||FormUtils.setOptionsUsingValues(t.search.form,e,n,i,o)},t.setDisplayType=function(t,e){CollectionUtils.isEmpty(t)||t.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.widgets)||t.widgets.forEach((function(t){CollectionUtils.isEmpty(t)||"FORM"!=t.widgetType||(t.widget.displayMode=e)}))}))},t.changeButtonLabelIcon=function(t,e,n,i){CollectionUtils.isEmpty(t)||t.forEach((function(t){CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.widgets)||t.widgets.forEach((function(t){CollectionUtils.isEmpty(t)||"FORM"!=t.widgetType||FormUtils.changeButtonLabelIcon(t.widget,e,n,i)}))}))},t}(),KeyMapUtils=function(){function t(){}return t.push=function(e,n,i,o,l,a,r){return i instanceof Array?i:MasterDataUtils.getMasterDataAsOptions(i),CollectionUtils.isEmpty(n)||(e.push(t.generateKeyMap(n,i,a)),t.setOptionssUsingValues(e,!0,o,l,r)),e},t.generateKeyMap=function(t,e,n){var i,o;return i=e instanceof Array?e:MasterDataUtils.getMasterDataAsOptions(e),CollectionUtils.isEmpty(t)||(o={associations:t,options:i,optionDependsOnValue:n}),o},t.setOptionssUsingValues=function(t,e,n,i,o){CollectionUtils.isEmpty(t)||t.forEach((function(t){CollectionUtils.isEmpty(t.associations)||t.associations.forEach((function(l){null!=n&&"CRUD"==n&&CrudUtils.setOptionsUsingValues(i,l.fieldKey,t,e,o),"FORM"==n&&FormUtils.setOptionsUsingValues(i,l.fieldKey,t,e,o),"LIST"==n&&ListUtils.setOptionsUsingValues(i,l.fieldKey,t,e,o)}))}))},t.getValue=function(t,e,n){var i="";return CollectionUtils.isEmpty(t)||t.forEach((function(t){CollectionUtils.isEmpty(t.associations)||t.associations.forEach((function(o){o.fieldKey!=e||CollectionUtils.isEmpty(t.options)||t.options.forEach((function(t){t.key==n&&(i=t.value)}))}))})),i},t}(),AbilityUtils=function(){function t(){}return t.setAbility=function(t){var e=JSON.parse(localStorage.getItem("user"));if(e&&e.permissions){var n=e.permissions;t.update(n)}},t}(),ButtonDeleteConfirmationComponent=function(){function t(t,e,n){this.dialogRef=t,this.data=e,this.ability=n,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){this.title=this.resolve(this.data.confirmationConfig.title),this.message=this.resolve(this.data.confirmationConfig.message)},t.prototype.displayOnlyIcon=function(t){return!(!t||StringUtils.isEmpty(t.icon)||!StringUtils.isEmpty(t.label))},t.prototype.displayIcon=function(t){return!(!t||StringUtils.isEmpty(t.icon))},t.prototype.resolve=function(t){return ObjectUtils.resolve(t,this.data.originalData)},t.prototype.click=function(t){this.dialogRef.close(t)},t}();ButtonDeleteConfirmationComponent.decorators=[{type:core.Component,args:[{selector:"cf-button-delete-confirmation",template:'<h1 mat-dialog-title *ngIf="title">{{title}}</h1>\n<div mat-dialog-content *ngIf="message">\n  <p>{{message}}</p>\n</div>\n<div \n  mat-dialog-actions \n  [style.text-align]="\'right\'"\n  class="cf-dialog-action">\n    \x3c!-- <button mat-flat-button *ngFor="let dialogButton of data.confirmationConfig.buttons" \n        [color]="dialogButton.color" [mat-dialog-close]="dialogButton.type" cdkFocusInitial>\n        <mat-icon aria-hidden="true" [attr.aria-label]="dialogButton.label" [ngClass]="{\'button-icon-text-padding\': dialogButton.icon && dialogButton.label}" *ngIf="displayIcon(dialogButton)">{{dialogButton.icon}}</mat-icon>\n        <span *ngIf="!displayOnlyIcon(dialogButton)">{{ dialogButton.label }}</span>\n    </button> --\x3e\n    \x3c!-- <pre>{{data | json}}</pre>  --\x3e\n    <cf-button *ngFor="let button of data.confirmationConfig.buttons"\n      [form]="data.form"\n      [sourceIdentifier]="data.sourceIdentifier"\n      [sourceIndex]="data.sourceIndex"\n      [widgetArrayIndex]="data.widgetArrayIndex"\n      [button]="button"\n      [context]="data.context"\n      [originalData]="data.originalData"\n      [buttonRoute]="data.buttonRoute"\n      [parentHierarchy]="data.parentHierarchy"\n      class="cf-button"\n      (onClick)="click($event)"\n    ></cf-button>\n</div>',styles:[".cf-dialog-action{text-align:right}.cf-dialog-action>.cf-button{margin-right:8px}"]}]}],ButtonDeleteConfirmationComponent.ctorParameters=function(){return[{type:dialog.MatDialogRef},{type:void 0,decorators:[{type:core.Inject,args:[dialog.MAT_DIALOG_DATA]}]},{type:ability.Ability}]};var ButtonComponent=function(){function t(t,e,n,i){this.dialog=t,this.router=e,this.route=n,this.ability=i,this.onClick=new core.EventEmitter,this.onIconClick=new core.EventEmitter,this.routerLink=[],this.displayButton=!0,this.isButtonDisabled=!1,this.isDisplayOnlyIcon=!1,this.hasIconDisplay=!1,this.isFlatButton=!1,this.isGhostButton=!1,this.isRaisedButton=!1,this.isStrokedButton=!1,this.isFabButton=!1,this.isChip=!1,this.isLink=!1,this.isGroupButton=!1,this.isMenuButton=!1,this.buttonWithoutPadding=!1,this.state=!0,AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"button",{get:function(){return this._button},set:function(t){this._button=t,!StringUtils.isEmpty(this.label)&&StringUtils.isEmpty(this._button.label)||(this.label=this._button.label),StringUtils.isEmpty(this._button.width)?this._button.width="":(this._button.width=this._button.width+"%",document.documentElement.style.setProperty("--width",this._button.width+"%")),StringUtils.isEmpty(this._button.iconPosition)&&(this._button.iconPosition="LEFT")},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this.displayButton&&(this.setLabel(),this.setButtonEnable(),this.form&&(this.formSubscription=this.form.valueChanges.subscribe((function(e){t.setButtonEnable()}))),this.setButtonDisplay(),this.setOnlyIconDisplay(),this.setIconDisplay(),this.setLink(),this.setGroupButton(),this.setFlatButton(),this.setGhostButton(),this.setRaisedButton(),this.setStrokedButton(),this.setFabButton(),this.setChip(),this.setButtonWithoutPadding(),this.setMenuButton())},t.prototype.setButtonDisplay=function(){(!CollectionUtils.isEmpty(this._button.displayInFormModes)&&this._button.displayInFormModes.indexOf(this.formDisplayMode)<=-1||!DependentUtils.displayDependencyField(this._button.dependentOnFields,null,this.context?this.context:this.originalData))&&(this.displayButton=!1)},t.prototype.setButtonWithoutPadding=function(){"fieldTextClearBtn"!=this._button.identifier&&"fieldRouteToBtn"!=this._button.identifier&&"listFieldAsLink"!=this._button.identifier&&"listFieldAsLink"!=this.identifier||(this.buttonWithoutPadding=!0)},t.prototype.setLabel=function(){StringUtils.isEmpty(this.label)&&(this.label=this._button.label)},t.prototype.click=function(t){CollectionUtils.isEmpty(this._button.confirmationConfiguration)?this.invokeAction(null,t):this.openDialog(t)},t.prototype.openDialog=function(t){var e=this;this.dialog.open(ButtonDeleteConfirmationComponent,{width:this._button.confirmationConfiguration.width?this._button.confirmationConfiguration.width:"250px",data:{form:this.form,sourceIdentifier:this.sourceIdentifier,sourceIndex:this.sourceIndex,widgetArrayIndex:this.widgetArrayIndex,context:this.context,originalData:this.originalData,buttonRoute:this.buttonRoute,parentHierarchy:this.parentHierarchy,confirmationConfig:this._button.confirmationConfiguration}}).afterClosed().subscribe((function(n){console.log("The dialog was closed"),e.invokeAction(n,t)}))},t.prototype.invokeAction=function(t,e){if("crudBackButton"==this._button.identifier&&this.buttonRoute&&this.buttonRoute.length>0)this.router.navigate(this.buttonRoute,{skipLocationChange:!1,replaceUrl:!0});else{"reset"==this._button.identifier&&(FormUtils.reset(this.form),this.context={});var n=ButtonUtils.getAction(this.sourceIdentifier,this.sourceIndex,this.widgetArrayIndex,this._button.identifier,this.parentHierarchy,e,this.originalData,this.context,t);"search"==this._button.identifier||"reset"==this._button.identifier?this.addSearchParamsInUrl(n.data):this.onClick.emit(n)}},t.prototype.iconClick=function(t){var e=ButtonUtils.getAction(this.sourceIdentifier,this.sourceIndex,this.widgetArrayIndex,this._button.identifier,this.parentHierarchy,t,this.originalData,this.context,null);"clearFilterField"==this._button.groupIdentifier?(delete e.data[e.action],this.addSearchParamsInUrl(e.data)):this.onIconClick.emit(e)},t.prototype.addSearchParamsInUrl=function(t){var e={filter:SecurityUtils.encrypt(t)};this.router.navigate([],{relativeTo:this.route,queryParams:e,queryParamsHandling:"merge",skipLocationChange:!1,replaceUrl:!0})},t.prototype.setButtonEnable=function(){var t=!1;this.form&&(t=!this.form.valid),this.form&&this.form.disabled&&(t=!1),"search"!=this._button.identifier&&"cancel"!=this._button.identifier&&"reset"!=this._button.identifier&&"add_field"!=this._button.identifier&&"remove_field"!=this._button.identifier&&1!=this._button.alwaysEnable||(t=!1),this.disabled&&(t=this.disabled),this.isButtonDisabled=t},t.prototype.setOnlyIconDisplay=function(){this.isDisplayOnlyIcon=!(!this._button||!this._button.onlyIcon||StringUtils.isEmpty(this._button.icon))},t.prototype.setIconDisplay=function(){this.hasIconDisplay=!(!this._button||!this._button.icon)},t.prototype.setFlatButton=function(){this.isFlatButton=!(!this._button||!ButtonUtils.instanceOfButton(this._button))&&("FLAT"==this._button.type&&!this.isGroupButton&&!this.isLink)},t.prototype.setGhostButton=function(){this.isGhostButton=!(!this._button||!ButtonUtils.instanceOfButton(this._button))&&("GHOST"==this._button.type&&!this.isGroupButton&&!this.isLink)},t.prototype.setRaisedButton=function(){this.isRaisedButton=!(!this._button||!ButtonUtils.instanceOfButton(this._button))&&("RAISED"==this._button.type&&!this.isGroupButton&&!this.isLink)},t.prototype.setStrokedButton=function(){this.isStrokedButton=!(!this._button||!ButtonUtils.instanceOfButton(this._button))&&("STROKED"==this._button.type&&!this.isGroupButton&&!this.isLink)},t.prototype.setFabButton=function(){this.isFabButton=!(!this._button||!ButtonUtils.instanceOfButton(this._button))&&("FAB"==this._button.type&&!this.isGroupButton&&!this.isLink)},t.prototype.setChip=function(){this.isChip=!(!this._button||!ButtonUtils.instanceOfChipButton(this._button)||StringUtils.isEmpty(this._button.groupIdentifier))},t.prototype.setLink=function(){this.isLink=!(!this._button||StringUtils.isEmpty(this.label))&&!CollectionUtils.isEmpty(this._button.routerLink),this.routerLink=this._button.routerLink},t.prototype.setGroupButton=function(){this.isGroupButton=!(!this._button||!ButtonUtils.instanceOfButtonGroup(this._button)||StringUtils.isEmpty(this._button.groupIdentifier))},t.prototype.setMenuButton=function(){this.isMenuButton=!(!this._button||!ButtonUtils.instanceOfHoverButton(this._button))},t.prototype.ngOnDestroy=function(){this.formSubscription&&this.formSubscription.unsubscribe()},t}();ButtonComponent.decorators=[{type:core.Component,args:[{selector:"cf-button",template:"\x3c!-- <pre>{{ _button.size == 'small' }}</pre> --\x3e\n<span \n    [style.width]=\"_button.width\"\n    class=\"cf-button-wrapper\" \n    *ngIf=\"_button && displayButton && (_button.permission == null || (_button.permission && (_button.permission['subject'] | can: _button.permission['action'])))\">\n    <button \n        mat-menu-item  \n        *ngIf=\"isMenuButton\"\n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-menu-button cf-menu-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': 'calc(' + _button.width + ' - 8px)'}\"\n        [attr.color]=\"_button.color\"  \n        (click)=\"click($event)\" \n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-flat-button\n        *ngIf=\"isFlatButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-flat-button cf-flat-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\"  \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button> \n\n    <button \n        mat-button \n        *ngIf=\"isGhostButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default', 'cf-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"cf-ghost-button cf-ghost-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>    \n    </button>\n    \n    <button \n        mat-raised-button \n        *ngIf=\"isRaisedButton\"\n        [color]=\"_button.color\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-raised-button cf-raised-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-stroked-button \n        *ngIf=\"isStrokedButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-stroked-button cf-stroked-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n\n    <button \n        mat-fab \n        *ngIf=\"isFabButton\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-fab-button cf-fab-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </button>\n \n    <mat-chip \n        [selected]=\"state\" \n        *ngIf=\"isChip\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default'}\" \n        class=\"cf-chip-button cf-chip-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\" \n        (click)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-chip>\n    \x3c!-- {{_button | json}} --\x3e\n    <a \n        mat-button \n        *ngIf=\"isLink\"\n        [color]=\"_button.color\" \n        [disabled]=\"isButtonDisabled\"  \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-default-btn': _button.size == 'default', 'cf-button-wt-padding': buttonWithoutPadding == true}\" \n        class=\"cf-link cf-link-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        [routerLink]=\"routerLink\" \n        [matTooltip]=\"_button.label\"\n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\" \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </a>\n\n    \x3c!-- appearance=\"legacy\"  --\x3e\n    <mat-button-toggle \n        *ngIf=\"isGroupButton\" \n        [value]=\"_button.identifier\" \n        [disabled]=\"isButtonDisabled\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'cf-small-btn': _button.size == 'small', 'cf-tiny-btn': _button.size == 'tiny', 'cf-micro-btn': _button.size == 'micro', 'cf-toggle-default-btn': _button.size == 'default'}\" \n        class=\"cf-toggle-button cf-button-{{_button.identifier}}\"\n        [ngStyle]=\"{'width': _button.width == '' || _button.width == '100%' ? _button.width : 'calc(' + _button.width + ' - 8px)'}\"\n        (change)=\"click($event)\" \n        [matBadge]=\"_button.badge ? _button.badge.content : ''\" \n        [matBadgeColor]=\"_button.badge ? _button.badge.color : ''\" \n        [matBadgePosition]=\"_button.badge ? _button.badge.position : ''\"  \n        [matBadgeSize]=\"_button.badge ? _button.badge.size : ''\" \n        [matBadgeHidden]=\"_button.badge ? _button.badge.hide : false\"\n    >\n        <ng-container *ngTemplateOutlet=\"cfButtonIcon\"></ng-container>\n    </mat-button-toggle>\n</span>\n\n<ng-template #cfButtonIcon>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'cf-small-icon': _button.size == 'small', 'cf-tiny-icon': _button.size == 'tiny', 'cf-micro-icon': _button.size == 'micro'}\"  \n        class=\"cf-button-icon cf-button-icon-{{_button.identifier}}\"\n        [style.padding-right.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'LEFT' || _button.iconPosition == 'TOP')\">\n            {{_button.icon}}\n    </mat-icon>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'TOP' && !isDisplayOnlyIcon\"/>\n    <span class=\"cf-button-label cf-button-label-{{_button.identifier}}\" *ngIf=\"!isDisplayOnlyIcon\">{{ label }}</span>\n    <br *ngIf=\"hasIconDisplay && _button.iconPosition == 'BOTTOM' && !isDisplayOnlyIcon\"/>\n    <mat-icon \n        (click)=\"iconClick($event)\" \n        aria-hidden=\"true\" \n        [attr.aria-label]=\"label\" \n        [ngClass]=\"{'cf-small-icon': _button.size == 'small', 'cf-tiny-icon': _button.size == 'tiny', 'cf-micro-icon': _button.size == 'micro'}\"  \n        class=\"cf-button-icon cf-button-icon-{{_button.identifier}}\"\n        [style.padding-left.px]=\"!isDisplayOnlyIcon ? 5 : 0\"\n        *ngIf=\"hasIconDisplay && (_button.iconPosition == 'RIGHT' || _button.iconPosition == 'BOTTOM')\">\n            {{_button.icon}}\n    </mat-icon>\n</ng-template>",styles:[".cf-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.cf-small-icon{font-size:12px;height:12px;width:12px}.cf-small-btn ::ng-deep .cf-button-label,.cf-small-btn ::ng-deep .mat-button-toggle-label-content{line-height:30px}.cf-small-btn.mat-standard-chip{min-height:30px}.cf-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.cf-tiny-icon{font-size:10px;height:10px;width:10px}.cf-tiny-btn ::ng-deep .cf-button-label,.cf-tiny-btn ::ng-deep .mat-button-toggle-label-content{line-height:24px}.cf-tiny-btn.mat-standard-chip{min-height:26px}.cf-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.cf-micro-icon{font-size:8px;height:8px;width:8px}.cf-micro-btn ::ng-deep .cf-button-label,.cf-micro-btn ::ng-deep .mat-button-toggle-label-content{line-height:18px}.cf-micro-btn.mat-standard-chip{min-height:20px}.cf-toggle-default-btn ::ng-deep .cf-button-label,.cf-toggle-default-btn ::ng-deep .mat-button-toggle-label-content{line-height:36px}.cf-chip-button{justify-content:center}.cf-chip-button .mat-standard-chip{margin:unset}.cf-button-wt-padding,.cf-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"]}]}],ButtonComponent.ctorParameters=function(){return[{type:dialog.MatDialog},{type:router.Router},{type:router.ActivatedRoute},{type:ability.Ability}]},ButtonComponent.propDecorators={form:[{type:core.Input}],formDisplayMode:[{type:core.Input}],sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],identifier:[{type:core.Input}],context:[{type:core.Input}],originalData:[{type:core.Input}],label:[{type:core.Input}],buttonRoute:[{type:core.Input}],parentHierarchy:[{type:core.Input}],disabled:[{type:core.Input}],onClick:[{type:core.Output}],onIconClick:[{type:core.Output}],_button:[{type:core.Input}],button:[{type:core.Input}]};var ButtonGroupComponent=function(){function t(t){this.ability=t,this.onClick=new core.EventEmitter,this.onIconClick=new core.EventEmitter,this.buttonLists=new Array,this.buttonListsType=new Array,this.displayDesktopDD=!1,this.displayTabletDD=!1,this.displayMobileDD=!1,this.hoverButtonLists=new Array,AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"buttons",{get:function(){return this._buttons},set:function(t){if(!(t instanceof Array)){var e=new Array;e.push(t),t=e}this._buttons=t,this.getButtonList(),this.getButtonType(),this.displayDesktopDD=this.hasMobileButton("showOnDesktop"),this.displayTabletDD=this.hasMobileButton("showOnTablet"),this.displayMobileDD=this.hasMobileButton("showOnMobile"),(this.displayDesktopDD||this.displayMobileDD||this.displayTabletDD)&&this.changeButtonTypeToGhost()},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.hasMobileButton=function(t){var e=!1;return CollectionUtils.isEmpty(this.buttonLists)||this.buttonLists.forEach((function(n){!CollectionUtils.isEmpty(n)&&n instanceof Array&&n.forEach((function(n){null==n.showOnDesktop&&null==n.showOnTablet&&null==n.showOnMobile&&(n.showOnDesktop=!0,n.showOnTablet=!0,n.showOnMobile=!0),n[t]&&(e=!0)}))})),e},t.prototype.changeButtonTypeToGhost=function(){this.hoverButtonLists=JSON.parse(JSON.stringify(this.buttonLists)),CollectionUtils.isEmpty(this.hoverButtonLists)||this.hoverButtonLists.forEach((function(t){!CollectionUtils.isEmpty(t)&&t instanceof Array&&t.forEach((function(t){t.type="GHOST"}))}))},t.prototype.getButtonList=function(){this.buttonLists=new Array;var t=new Array,e=0;if(this._buttons){for(var n=0;n<this._buttons.length;n++){if(ButtonUtils.instanceOfButton(this._buttons[n])&&(ObjectUtils.isEmpty(t[e])&&(t[e]=new Array,this.buttonLists.push(t[e])),t[e].push(this._buttons[n])),ButtonUtils.instanceOfButtonGroup(this._buttons[n])||ButtonUtils.instanceOfChipButton(this._buttons[n]))this.getGroupButton(this._buttons[n].groupIdentifier,this.buttonLists)&&e++}var i=this.getHoverButtons();i&&i.hoverButtons&&i.hoverButtons.length>0&&(this.buttonLists.push(i),e++)}},t.prototype.isGroupAdded=function(t,e){var n=!1;return e&&(n=e.filter((function(e){return e&&e.groupIdentifier==t})).length>0),n},t.prototype.getGroupButton=function(t,e){var n=!1,i=new Array;if(this._buttons&&0==this.isGroupAdded(t,e)){var o=(i=this._buttons.filter((function(e){return e.groupIdentifier==t})).map((function(t){return t.width="100",t}))).filter((function(t){return 1==t.fullWidth})).length>0?"100":"auto",l="auto";"auto"!=o&&(l=+o/i.length),e.push({groupIdentifier:t,width:o,buttonWidth:l,groupButtons:i}),n=!0}return n},t.prototype.getHoverButtons=function(){var t,e,n,i,o=new Array,l="auto";return this._buttons&&this._buttons.filter((function(t){return ButtonUtils.instanceOfHoverButton(t)})).forEach((function(a){StringUtils.isEmpty(t)&&(t=a.groupIdentifier),StringUtils.isEmpty(e)&&(e=a.groupLabel),StringUtils.isEmpty(n)&&(n=a.groupIcon),CollectionUtils.isEmpty(i)&&(i=a.badge),a.fullWidth&&(l="100",a.width="100"),o.push(a)})),{groupIdentifier:t,groupLabel:e,groupIcon:n,badge:i,width:l,hoverButtons:o}},t.prototype.getButtonType=function(){var t,e;if(this.buttonListsType=new Array,this.buttonLists&&this.buttonLists.length>0)try{for(var n=__values(this.buttonLists),i=n.next();!i.done;i=n.next()){var o=i.value,l="";this.isButtonGroup(o)?l="ButtonGroup":this.isChipGroup(o)?l="ChipGroup":this.isButtonHover(o)?l="ButtonHover":this.isButtonArray(o)&&(l="ButtonArray"),this.buttonListsType.push(l)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.isButtonGroup=function(t){var e=!1;return t&&t.groupButtons&&t.groupButtons.length>0&&!StringUtils.isEmpty(t.groupIdentifier)&&(e=t.groupButtons.filter((function(t){return ButtonUtils.instanceOfButtonGroup(t)})).length>0),e},t.prototype.isChipGroup=function(t){var e=!1;return t&&t.groupButtons&&t.groupButtons.length>0&&!StringUtils.isEmpty(t.groupIdentifier)&&(e=t.groupButtons.filter((function(t){return ButtonUtils.instanceOfChipButton(t)})).length>0)&&t.groupButtons.forEach((function(t){return ButtonUtils.instanceOfChipButton(t)})),e},t.prototype.isButtonHover=function(t){return t&&t.hoverButtons&&t.hoverButtons.length>0},t.prototype.isButtonArray=function(t){return t instanceof Array},t.prototype.click=function(t){this.onClick.emit(t)},t.prototype.iconClick=function(t){this.onIconClick.emit(t)},t}();ButtonGroupComponent.decorators=[{type:core.Component,args:[{selector:"cf-button-group",template:'\x3c!-- <pre>{{formDisplayMode | json}}</pre> --\x3e\n<span class="cf-button-group" *ngFor="let buttonList of buttonLists; let bIndex = index;">\n    <mat-chip-list \n        *ngIf="buttonListsType[bIndex] == \'ChipGroup\'"\n        [style.width.%]="buttonList.width" \n        [ngClass]="{\'cf-button\': bIndex < buttonLists.length - 1 }"\n        class="cf-chip-group cf-chip-group-{{buttonList.groupIdentifier}}"\n        aria-label="Chip Selection">\n        <cf-button *ngFor="let button of buttonList.groupButtons"\n            [form]="form"\n            [ngClass]="{\'cf-button\': (bIndex + 1) != buttonList.length}"\n            [style.width]="\'calc(\' + buttonList.buttonWidth + \'% - 8px)\'"\n            [formDisplayMode]="formDisplayMode"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="button"\n            [context]="context" \n            [originalData]="originalData"\n            [buttonRoute]="buttonRoute"\n            [parentHierarchy]="parentHierarchy"\n            [disabled]="disabled"\n            (onClick)="click($event)"\n            (onIconClick)="iconClick($event)"\n        ></cf-button>\n    </mat-chip-list>\n    \n    \x3c!-- appearance="legacy" --\x3e\n    <mat-button-toggle-group \n        *ngIf="buttonListsType[bIndex] == \'ButtonGroup\'"\n        [name]="buttonList.groupIdentifier" \n        multiple="false" \n        [ngClass]="{\'cf-button\': bIndex < buttonLists.length - 1 }"\n        class="cf-toggle-group cf-toggle-group-{{buttonList.groupIdentifier}}" \n        [style.width.%]="buttonList.width"\n        #group="matButtonToggleGroup">\n        <cf-button *ngFor="let button of buttonList.groupButtons"\n            [form]="form"\n            [style.width.%]="buttonList.buttonWidth"\n            [formDisplayMode]="formDisplayMode"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="button"\n            [context]="context"\n            [originalData]="originalData"\n            [buttonRoute]="buttonRoute"\n            [parentHierarchy]="parentHierarchy"\n            [disabled]="disabled"\n            (onClick)="click($event)"\n            (onIconClick)="iconClick($event)"\n        ></cf-button>\n    </mat-button-toggle-group>\n\n    <span \n        *ngIf="buttonListsType[bIndex] == \'ButtonHover\'"\n        [ngClass]="{\'cf-button\': bIndex < buttonLists.length - 1}"\n        class="cf-hover-group cf-hover-group-{{buttonList.groupIdentifier}}"\n        [style.width.%]="100">\n        <button \n            mat-raised-button \n            [matMenuTriggerFor]="menu" \n            [ngClass]="{\'cf-small-btn\': buttonList.hoverButtons[0].size == \'small\', \'cf-tiny-btn\': buttonList.hoverButtons[0].size == \'tiny\', \'cf-micro-btn\': buttonList.hoverButtons[0].size == \'micro\', \'cf-default-btn\': buttonList.hoverButtons[0].size == \'default\'}"\n            [style.width.%]="buttonList.width"\n            [attr.aria-label]="buttonList.groupLabel"\n            [matBadge]="buttonList.badge ? buttonList.badge.content : \'\'" \n            [matBadgeColor]="buttonList.badge ? buttonList.badge.color : \'\'" \n            [matBadgePosition]="buttonList.badge ? buttonList.badge.position : \'\'" \n            [matBadgeSize]="buttonList.badge ? buttonList.badge.size : \'\'" \n            [matBadgeHidden]="buttonList.badge ? buttonList.badge.hide : false">\n            <span class="cf-button-label cf-button-label-{{buttonList.groupIdentifier}}" *ngIf="buttonList.groupLabel">{{ buttonList.groupLabel }}</span>\n            <mat-icon\n                [ngClass]="{\'cf-small-icon\': buttonList.hoverButtons[0].size == \'small\', \'cf-tiny-icon\': buttonList.hoverButtons[0].size == \'tiny\', \'cf-micro-icon\': buttonList.hoverButtons[0].size == \'micro\', \'cf-default-icon\': buttonList.hoverButtons[0].size == \'default\'}"\n                class="cf-button-icon"\n            >{{buttonList.groupIcon}}</mat-icon>\n        </button> \n        <mat-menu #menu="matMenu">\n            <cf-button *ngFor="let button of buttonList.hoverButtons"\n                [form]="form" \n                [formDisplayMode]="formDisplayMode"\n                [sourceIdentifier]="sourceIdentifier"\n                [sourceIndex]="sourceIndex"\n                [widgetArrayIndex]="widgetArrayIndex"\n                [button]="button"\n                [context]="context"\n                [originalData]="originalData"\n                [buttonRoute]="buttonRoute"\n                [parentHierarchy]="parentHierarchy"\n                [disabled]="disabled"\n                (onClick)="click($event)"\n                (onIconClick)="iconClick($event)"\n                ></cf-button> \n        </mat-menu>\n    </span>\n    <span \n        [ngClass]="{\'cf-button\': bIndex < buttonLists.length - 1 }"\n        class="cf-buttons-group" \n        *ngIf="buttonListsType[bIndex] == \'ButtonArray\'">\n        <cf-button *ngFor="let button of buttonList; let index = index;"\n            [form]="form"\n            [formDisplayMode]="formDisplayMode"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="button"\n            [context]="context"\n            [originalData]="originalData"\n            [buttonRoute]="buttonRoute"\n            [parentHierarchy]="parentHierarchy"\n            [disabled]="disabled"\n            [ngClass]="{\'cf-button\': (index + 1) != buttonList.length}"\n            (onClick)="click($event)"\n            (onIconClick)="iconClick($event)"\n            [fxShow]="button.showOnDesktop" \n            [fxShow.xs]="button.showOnMobile" \n            [fxShow.sm]="button.showOnTablet"\n        ></cf-button> \n        <button \n            mat-icon-button \n            [matMenuTriggerFor]="dropMenu" \n            [fxShow]="!displayDesktopDD"\n            [fxShow.sm]="!displayTabletDD"\n            [fxShow.xs]="!displayMobileDD">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu class="cf-button-tooltip" #dropMenu="matMenu">\n            <ng-container *ngFor="let button of hoverButtonLists[bIndex]; let index = index;let last = last;">\n                <div [fxShow]="!button.showOnDesktop" \n                    [fxShow.sm]="!button.showOnTablet" \n                    [fxShow.xs]="!button.showOnMobile">\n                    \x3c!-- <button mat-menu-item (onClick)="click($event)">\n                        <mat-icon class="mr">{{item.icon}}</mat-icon>\n                        {{item.label}}\n                    </button> --\x3e\n                    <cf-button\n                        [form]="form"\n                        [formDisplayMode]="formDisplayMode"\n                        [sourceIdentifier]="sourceIdentifier"\n                        [sourceIndex]="sourceIndex"\n                        [widgetArrayIndex]="widgetArrayIndex"\n                        [button]="button"\n                        [context]="context"\n                        [originalData]="originalData"\n                        [buttonRoute]="buttonRoute"\n                        [disabled]="disabled"\n                        (onClick)="click($event)"\n                        (onIconClick)="iconClick($event)"\n                    ></cf-button>\n                    <mat-divider *ngIf="!last"></mat-divider>\n                </div>\n            </ng-container>\n        </mat-menu>\n    </span>\n</span>',encapsulation:core.ViewEncapsulation.None,styles:[".cf-button-group{vertical-align:middle}.cf-chip-group{display:inline-flex}.cf-button{margin-right:8px}.cf-chip-group .mat-chip-list-wrapper .mat-standard-chip{margin:unset}.cf-chip-group .mat-chip-list-wrapper{width:inherit}.cf-button-tooltip.mat-menu-panel{min-height:auto}",".cf-small-btn{box-sizing:border-box;line-height:30px;min-width:unset}.cf-small-icon{font-size:12px;height:12px;width:12px}.cf-small-btn ::ng-deep .cf-button-label,.cf-small-btn ::ng-deep .mat-button-toggle-label-content{line-height:30px}.cf-small-btn.mat-standard-chip{min-height:30px}.cf-tiny-btn{box-sizing:border-box;font-size:10px;line-height:24px;min-width:unset}.cf-tiny-icon{font-size:10px;height:10px;width:10px}.cf-tiny-btn ::ng-deep .cf-button-label,.cf-tiny-btn ::ng-deep .mat-button-toggle-label-content{line-height:24px}.cf-tiny-btn.mat-standard-chip{min-height:26px}.cf-micro-btn{box-sizing:border-box;font-size:8px;line-height:18px;min-width:unset}.cf-micro-icon{font-size:8px;height:8px;width:8px}.cf-micro-btn ::ng-deep .cf-button-label,.cf-micro-btn ::ng-deep .mat-button-toggle-label-content{line-height:18px}.cf-micro-btn.mat-standard-chip{min-height:20px}.cf-toggle-default-btn ::ng-deep .cf-button-label,.cf-toggle-default-btn ::ng-deep .mat-button-toggle-label-content{line-height:36px}.cf-chip-button{justify-content:center}.cf-chip-button .mat-standard-chip{margin:unset}.cf-button-wt-padding,.cf-button-wt-padding .mat-button{min-width:0!important;padding:0!important}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{padding:0 5px!important}"]}]}],ButtonGroupComponent.ctorParameters=function(){return[{type:ability.Ability}]},ButtonGroupComponent.propDecorators={form:[{type:core.Input}],formDisplayMode:[{type:core.Input}],sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],_buttons:[{type:core.Input}],buttons:[{type:core.Input}],context:[{type:core.Input}],originalData:[{type:core.Input}],buttonRoute:[{type:core.Input}],parentHierarchy:[{type:core.Input}],disabled:[{type:core.Input}],onClick:[{type:core.Output}],onIconClick:[{type:core.Output}]};var CrudFormComponent=function(){function t(t){this.ability=t,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.onSortClick=new core.EventEmitter,this.onPageClick=new core.EventEmitter,this.formsConfigToDisplay=new Array,this.rowsInTab=new Array,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){this.filterForms(),this.drawTabs(),this.setConfigAsPerTab(),this.addWidget=this.addWidgetButton("addWidget","Add","add","primary")},t.prototype.setConfigAsPerTab=function(t){var e=this;if(this.configData&&(this.badges=this.configData.badges,this.pageBackRoute=this.configData.pageBackRoute,this.record=this.configData.record,this.configData.configPerTabs)){var n=0;this.configData.configPerTabs.forEach((function(i,o){(o==t||0==n&&null==t)&&i&&(i.badges&&(e.badges=i.badges),i.pageBackRoute&&(e.pageBackRoute=i.pageBackRoute),i.record&&(e.record=e.configData.record)),n++}))}},t.prototype.getTabIdentifier=function(t){var e,n,i="";if(this.form&&this.form.tabs)try{for(var o=__values(this.form.tabs),l=o.next();!l.done;l=o.next()){var a=l.value;if(a.label==t){i=a.identifier;break}}}catch(t){e={error:t}}finally{try{l&&!l.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return i},t.prototype.drawTabs=function(){if(this.form&&this.form.tabs&&this.form.tabs.length>0)for(var t=0;t<this.form.tabs.length;t++)this.form.tabs[t]&&(null==this.form.tabs[t].permission||this.form.tabs[t].permission&&this.ability.can(this.form.tabs[t].permission.action,this.form.tabs[t].permission.subject))&&this.rowsInTab.push(this.drawTab(t))},t.prototype.drawTab=function(t){var e,n,i=new Array,o=0;if(this.form&&this.form.tabs&&this.form.tabs.length>0)for(var l=0;l<this.form.tabs.length;l++)if(this.form.tabs[l].widgets&&this.form.tabs[l].widgets.length>0&&l==t){var a=function(t){if(t&&(null==t.permission||t.permission&&r.ability.can(t.permission.action,t.permission.subject))){CollectionUtils.isEmpty(i[o])&&(i[o]=new Array);var e=0;i[o].forEach((function(t){return e+=t.colSpan})),e<2||(o++,i[o]=new Array),i[o].push(t)}},r=this;try{for(var d=(e=void 0,__values(this.form.tabs[l].widgets)),s=d.next();!s.done;s=d.next()){a(s.value)}}catch(t){e={error:t}}finally{try{s&&!s.done&&(n=d.return)&&n.call(d)}finally{if(e)throw e.error}}}return console.log(i),i},t.prototype.displayWidget=function(t,e,n){return DependentUtils.displayDependencyField(t.dependentOnFields,e,n)},t.prototype.filterForms=function(){var t,e,n,i,o,l,a,r,d;if(this.actionPages&&this.actions){try{for(var s=__values(this.actionPages),c=s.next();!c.done;c=s.next()){var p=c.value;try{for(var u=(n=void 0,__values(this.actions)),g=u.next();!g.done;g=u.next()){var m=g.value;p.buttonIdentifier==m.identifier&&(d=p.associatedFormIdentifiers)}}catch(t){n={error:t}}finally{try{g&&!g.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}}}catch(e){t={error:e}}finally{try{c&&!c.done&&(e=s.return)&&e.call(s)}finally{if(t)throw t.error}}if(this.form&&this.form.tabs&&d)try{for(var f=__values(this.form.tabs),h=f.next();!h.done;h=f.next()){var y=h.value;try{for(var _=(a=void 0,__values(y.widgets)),b=_.next();!b.done;b=_.next()){var x=b.value;d.indexOf(x.widget.identifier)>-1&&(x.widget.display=!0)}}catch(t){a={error:t}}finally{try{b&&!b.done&&(r=_.return)&&r.call(_)}finally{if(a)throw a.error}}}}catch(t){o={error:t}}finally{try{h&&!h.done&&(l=f.return)&&l.call(f)}finally{if(o)throw o.error}}else this.form.tabs.forEach((function(t){return t.widgets.forEach((function(t){return t.widget.display=!0}))}))}else this.form.tabs.forEach((function(t){return t.widgets.forEach((function(t){return t.widget.display=!0}))}))},t.prototype.addWidgetButton=function(t,e,n,i){return{identifier:t,type:"GHOST",label:e,color:i,size:"small",icon:n,onlyIcon:!1,alwaysEnable:!0}},t.prototype.fieldChange=function(t){console.log(t),this.onFieldChange.emit(t)},t.prototype.formChange=function(t){this.onFormChange.emit(t)},t.prototype.buttonClick=function(t){console.log(t),"addWidget"==t.action&&(this.record[t.sourceIdentifier]&&this.record[t.sourceIdentifier]instanceof Array||(this.record[t.sourceIdentifier]=new Array),this.record[t.sourceIdentifier].push({})),this.onButtonClick.emit(t)},t.prototype.onTabChange=function(t){console.log(t),this.setConfigAsPerTab(this.getTabIdentifier(t.tab.textLabel))},t.prototype.onAccordianChange=function(t){console.log(t)},t.prototype.onSort=function(t){console.log(t),this.onSortClick.emit(t)},t.prototype.onPage=function(t){console.log(t),this.onPageClick.emit(t)},t}();CrudFormComponent.decorators=[{type:core.Component,args:[{selector:"cf-crud-form",template:'<mat-card class="cf-crud-card">\n    \x3c!-- {{configData | json}} --\x3e\n    <mat-card-header class="cf-list-header">\n        <cf-crud-header\n            [identifier]="identifier"\n            [title]="header.title"\n            [subtitle]="header.subtitle"\n            [description]="header.description"\n            [badges]="badges"\n            [icon]="header.icon"\n            [pageBackRoute]="pageBackRoute"\n            [formDisplayMode]="\'CRUD_FORM\'"\n            [actions]="actions"\n            [originalData]="configData.originalData"  \n            [context]="record"\n            [style.width.%]="100"\n            (onButtonClick)="buttonClick($event)"\n        ></cf-crud-header>\n    </mat-card-header> \n  \n    <mat-card-content class="cf-crud-content">\n        <div class="mdc-layout-grid cf-crud-header" *ngIf="header.description && header.description.text && header.description.bgColor">\n            <div class="mdc-layout-grid__inner">\n                <div class="mdc-layout-grid__cell--span-12">\n                    <div \n                        class="cf-crud-header-desc"\n                        [style.background-color]="header.description.bgColor"\n                        [style.color]="header.description.textColor"\n                    >\n                        <mat-icon class="cf-crud-header-desc-icon" aria-hidden="true" [attr.aria-label]="header.description.icon" *ngIf="header.description.icon">{{header.description.icon}}</mat-icon>\n                        <span>{{ header.description.text }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \x3c!-- <cf-error></cf-error> --\x3e\n\n        <span *ngIf="form && form.displayType == \'TAB\' && form.tabs && form.tabs.length > 1">\n            <mat-tab-group (selectedTabChange)="onTabChange($event)">\n              <mat-tab \n                *ngFor="let tab of form.tabs; let tIndex=index"\n                [label]="tab.label">\n                <ng-container *ngTemplateOutlet="cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}"></ng-container>\n              </mat-tab>\n            </mat-tab-group>\n        </span>\n        <span *ngIf="form && form.displayType == \'ACCORDIAN\' && form.tabs && form.tabs.length > 1">\n            <mat-accordion>\n                <mat-expansion-panel\n                  *ngFor="let tab of form.tabs; let tIndex=index"\n                  [expanded]="tIndex === 0"\n                  (opened)="onAccordianChange(tIndex)">\n                  <mat-expansion-panel-header>\n                    <mat-panel-title>\n                      {{tab.label}}\n                    </mat-panel-title>\n                  </mat-expansion-panel-header>\n                  <ng-container *ngTemplateOutlet="cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}"></ng-container>\n                </mat-expansion-panel>\n            </mat-accordion>\n        </span>\n        <span *ngIf="form && form.tabs && form.tabs.length == 1">\n            <span \n                *ngFor="let tab of form.tabs; let tIndex=index">\n                <ng-container *ngTemplateOutlet="cfTab; context: {tab: tab, record: record, formRows: rowsInTab[tIndex], tIndex: tIndex}"></ng-container>\n            </span>\n        </span>\n    </mat-card-content>\n</mat-card>\n  \n<ng-template #cfTab let-tab="tab" let-record="record" let-formRows="formRows" let-tIndex="tIndex">\n    \x3c!-- {{record | json}} --\x3e\n    <div \n        class="mdc-layout-grid cf-crud-tab"\n        *ngIf="tab && (tab.permission == null || (tab.permission && (tab.permission[\'subject\'] | can: tab.permission[\'action\'])))"\n    >\n        <div class="mdc-layout-grid__inner cf-crud-tab-header" *ngIf="tab.description && tab.description.text">\n            <div class="mdc-layout-grid__cell--span-12">\n                {{tab.description.text}} \n            </div>\n        </div>\n\n        <div class="mdc-layout-grid__inner" *ngIf="tab.customPlugin && tab.customPlugin.component">\n            <div class="mdc-layout-grid__cell--span-12">\n                \x3c!-- <ndc-dynamic\n                    [ndcDynamicComponent]="tab.customPlugin.component"\n                ></ndc-dynamic> --\x3e\n            </div>\n        </div>\n\n        <div \n            *ngFor="let row of formRows; let rIndex = index;" \n            class="mdc-layout-grid__inner cf-crud-tab-form"> \n            <div\n                *ngFor="let cell of row" \n                class="mdc-layout-grid__cell--span-{{cell.colSpan * 6}} cf-crud-form">\n                \x3c!-- <pre>--{{configData.record[cell.widget.identifier] | json}}--</pre> --\x3e\n\n                <span *ngIf="cell.multiple && cell.multiple.addMore; else singleCell">\n                    <mat-card  *ngIf="displayWidget(cell, record, record[cell.widget.identifier] && record[cell.widget.identifier][0] ? record[cell.widget.identifier][0] : {})" class="cf-crud-child-widgets">\n                        \x3c!-- {{configData | json}} --\x3e\n                        <mat-card-header class="cf-list-header"> \n                            <mat-card-title>{{ cell.multiple.sectionTitle }}</mat-card-title>\n                            <cf-button \n                                class="cf-crud-widget-addmore"\n                                [sourceIdentifier]="cell.widget.identifier"\n                                [sourceIndex]="rIndex" \n                                [context]="record"\n                                [originalData]="configData.record[cell.widget.identifier]"\n                                [button]="addWidget"\n                                (onClick)="buttonClick($event);$event.event.stopPropagation()"\n                            ></cf-button> \n                        </mat-card-header> \n                        <mat-divider class="cf-crud-form-header-divider"></mat-divider>\n                        <mat-card-content class="cf-crud-child-widgets-content">\n                            <span *ngIf="record[cell.widget.identifier] && record[cell.widget.identifier].length > 0; else newCellAtIndex;">\n                                <span *ngFor="let cellAtIndex of record[cell.widget.identifier]; let cellArrayIndex = index;">\n                                    <ng-container *ngTemplateOutlet="cfWidget; context: {\n                                        cell: cell, \n                                        supportingRecord: record,\n                                        record: record[cell.widget.identifier][cellArrayIndex], \n                                        configData: configData.record[cell.widget.identifier][cellArrayIndex], \n                                        multiple: true,\n                                        cellArrayIndex: cellArrayIndex,\n                                        tIndex: tIndex\n                                    }"></ng-container>\n                                </span>\n                            </span>\n                            <ng-template #newCellAtIndex>\n                                <ng-container *ngTemplateOutlet="cfWidget; context: {\n                                    cell: cell, \n                                    supportingRecord: {},\n                                    record: {}, \n                                    configData: {}, \n                                    multiple: true,\n                                    cellArrayIndex: 0,\n                                    tIndex: tIndex\n                                }"></ng-container>\n                            </ng-template>\n                        </mat-card-content>\n                    </mat-card>\n                </span>\n                <ng-template #singleCell>\n                    <span *ngIf="displayWidget(cell, record, record[cell.widget.identifier])">\n                        <ng-container *ngTemplateOutlet="cfWidget; context: {\n                            cell: cell, \n                            supportingRecord: record,\n                            record: record[cell.widget.identifier], \n                            configData: configData.record[cell.widget.identifier], \n                            multiple: false,\n                            cellArrayIndex: null,\n                            tIndex: tIndex\n                        }"></ng-container>\n                    </span>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #cfWidget let-cell="cell" let-supportingRecord="supportingRecord" let-record="record" let-configData="configData" let-multiple="multiple" let-cellArrayIndex="cellArrayIndex" let-tIndex="tIndex">\n    <cf-form \n        *ngIf="cell.widgetType == \'FORM\'"\n        [formConfig]="cell.widget"\n        [sourceIndex]="tIndex"\n        [widgetArrayIndex]="cellArrayIndex"\n        [record]="record"\n        [originalData]="configData"  \n        [keyMap]="keyMap"\n        [reset]="reset" \n        (onFieldChange)="fieldChange($event)"\n        (onFormChange)="formChange($event)"\n        (onButtonClick)="buttonClick($event)"\n    ></cf-form>\n\n    <cf-static-list\n        *ngIf="cell.widgetType == \'LIST\' && cell.widget.listType == \'STATIC\'"\n        [listConfig]="cell.widget"\n        [sourceIdentifier]="identifier"\n        [sourceIndex]="tIndex"\n        [widgetArrayIndex]="cellArrayIndex"\n        [record]="record"\n        [originalData]="configData"  \n        [keyMap]="keyMap"\n        (onFormChange)="formChange($event)"\n        (onFieldChange)="fieldChange($event)"\n        (onButtonClick)="buttonClick($event)"\n        (onPageChange)="onPage($event)"\n        (onSortChange)="onSort($event)"  \n    ></cf-static-list>\n    \x3c!-- [expanded]="_expanded" --\x3e\n\n    <cf-dynamic-list\n        *ngIf="cell.widgetType == \'LIST\' && cell.widget.listType == \'DYNAMIC\'"\n        [listConfig]="cell.widget"\n        [sourceIdentifier]="identifier"\n        [sourceIndex]="tIndex"\n        [widgetArrayIndex]="cellArrayIndex"\n        [record]="record"\n        [originalData]="configData"  \n        [keyMap]="keyMap"\n        (onFormChange)="formChange($event)"\n        (onFieldChange)="fieldChange($event)"\n        (onButtonClick)="buttonClick($event)"\n        (onPageChange)="onPage($event)"\n        (onSortChange)="onSort($event)"  \n    ></cf-dynamic-list>\n</ng-template>',styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-crud-card{background-color:transparent}.cf-crud-form{padding-bottom:20px}.cf-crud-tab{padding:0!important}.cf-crud-tab-header{padding:20px 0!important}.cf-crud-tab-form{margin:1px}.cf-crud-header{padding:0}.cf-crud-header-desc{padding:5px 10px;width:auto}.cf-crud-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.cf-crud-child-widgets{background-color:#f5f5f5}.cf-crud-child-widgets-content{padding-top:20px}.cf-crud-widget-addmore{margin-top:-8px}.cf-crud-content{padding-top:16px}"]}]}],CrudFormComponent.ctorParameters=function(){return[{type:ability.Ability}]},CrudFormComponent.propDecorators={identifier:[{type:core.Input}],header:[{type:core.Input}],actions:[{type:core.Input}],actionPages:[{type:core.Input}],form:[{type:core.Input}],reset:[{type:core.Input}],configData:[{type:core.Input}],keyMap:[{type:core.Input}],onFormChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}],onSortClick:[{type:core.Output}],onPageClick:[{type:core.Output}]};var CrudListComponent=function(){function t(t,e){this._bottomSheet=t,this.ability=e,this._expanded=!1,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.onButtonIconClick=new core.EventEmitter,this.onSortClick=new core.EventEmitter,this.onPageClick=new core.EventEmitter,this.onTabClick=new core.EventEmitter,this.showSearchForm=!1,this.listHeaders=new Array,this.searchOnFieldsCount=0,this.searchOnFieldsButtons=new Array,AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"configData",{get:function(){return this._configData},set:function(t){this._configData=t,this.setConfigAsPerTab()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"expanded",{get:function(){return this._expanded},set:function(t){this._expanded=t},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){this.searchButton=this.setSearchButton("searchButton","Search","search"),this.searchModalButton=this.setSearchButton("searchCloseButton","Close","close"),this.displaySearchForm(),this.setListHeaders(),this.setCrudHeader(),this.searchConfig&&"ABOVE_LIST"!=this.searchConfig.displayType&&(this.searchConfig.form.displayInColumns=1),this.setConfigAsPerTab()},t.prototype.setConfigAsPerTab=function(t){var e=this;if(this._configData){if(this.badges=this._configData.badges,this.pageBackRoute=this._configData.pageBackRoute,this.records=this._configData.records,this.searchData=this._configData.searchData,this.searchOnFieldsCount=0,this.searchOnFieldsButtons=new Array,this.searchData&&!CollectionUtils.isEmpty(this.searchData))for(var n=0;n<Object.keys(this.searchData).length;n++)if(!StringUtils.isEmpty(this.searchData[Object.keys(this.searchData)[n]])){this.searchOnFieldsCount++;var i=this.setSelectedFilterButton(Object.keys(this.searchData)[n],this.searchData[Object.keys(this.searchData)[n]]);this.searchOnFieldsButtons.push(i)}if(this._configData.configPerTabs){var o=0;this._configData.configPerTabs.forEach((function(n,i){(i==t||0==o&&null==t)&&n&&(n.badges&&(e.badges=n.badges),n.pageBackRoute&&(e.pageBackRoute=n.pageBackRoute),n.records&&n.records.length>0&&(e.records=e._configData.records)),o++}))}}},t.prototype.getTabIdentifier=function(t){var e="";if(this.listConfig&&"TAB"==this.listConfig.displayType)for(var n=0;n<this.listConfig.lists.length;n++)if(this.listHeaders[n].title==t){e=this.listConfig.lists[n].identifier;break}return e},t.prototype.setListHeaders=function(){if(this.listConfig.lists)for(var t=0;t<this.listConfig.lists.length;t++)this.listHeaders.push(this.listConfig.lists[t].header)},t.prototype.setCrudHeader=function(){var t="";this.header&&(t=this.header.title),this.listConfig.lists&&1==this.listConfig.lists.length&&this.listConfig.lists[0].header&&this.listConfig.lists[0].header.title&&(t=this.listConfig.lists[0].header.title,this.listConfig.lists[0].header.title=""),this.title=t},t.prototype.displaySearchForm=function(){var t,e;if(this.listConfig&&this.listConfig.lists&&this.listConfig.lists.length>0)try{for(var n=__values(this.listConfig.lists),i=n.next();!i.done;i=n.next()){if("DYNAMIC"==i.value.listType&&this.searchConfig){this.showSearchForm=!0;break}}}catch(e){t={error:e}}finally{try{i&&!i.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}},t.prototype.setSearchButton=function(t,e,n){return{identifier:t,label:e,color:"primary",size:"small",icon:n,type:"GHOST",onlyIcon:!0}},t.prototype.setSelectedFilterButton=function(t,e){return{identifier:t,groupIdentifier:"clearFilterField",label:e,color:"primary",size:"tiny",icon:"close",iconPosition:"RIGHT",type:"STROKED"}},t.prototype.close=function(){this.sidenav.close()},t.prototype.fieldChange=function(t){console.log(t),this.onFieldChange.emit(t)},t.prototype.formChange=function(t){this.onFormChange.emit(t)},t.prototype.buttonClick=function(t){console.log(t),this.onButtonClick.emit(t)},t.prototype.buttonIconClick=function(t){this.onButtonIconClick.emit(t)},t.prototype.onSort=function(t){console.log(t),this.onSortClick.emit(t)},t.prototype.onPage=function(t){console.log(t),this.onPageClick.emit(t)},t.prototype.onAccordianChange=function(t){console.log(t)},t.prototype.onTabChange=function(t){console.log(t),this.setConfigAsPerTab(this.getTabIdentifier(t.tab.textLabel))},t.prototype.openBottomSheet=function(){var t=this,e=this._bottomSheet.open(BottomSearchSheet,{data:{searchConfig:this.searchConfig,searchData:this.searchData,reset:this.formReset}});this.buttonSubscriber=e.instance.onButtonClick.subscribe((function(e){return t.buttonClick(e)})),this.fieldSubscriber=e.instance.onFieldChange.subscribe((function(e){return t.fieldChange(e)})),this.formSubscriber=e.instance.onFormChange.subscribe((function(e){return t.formChange(e)})),this.dialogRefSubscriber=e.afterDismissed().subscribe((function(){t.bottomUnsubscribe()}))},t.prototype.ngOnDestroy=function(){this.bottomUnsubscribe(),this.dialogRefSubscriber&&this.dialogRefSubscriber.unsubscribe()},t.prototype.bottomUnsubscribe=function(){this.buttonSubscriber&&this.buttonSubscriber.unsubscribe(),this.fieldSubscriber&&this.fieldSubscriber.unsubscribe(),this.formSubscriber&&this.formSubscriber.unsubscribe()},t}();CrudListComponent.decorators=[{type:core.Component,args:[{selector:"cf-crud-list",template:'<mat-card \n  [style.padding.px]="listConfig && listConfig.style && listConfig.style.hideCard ? 0 : \'auto\'"\n  class="cf-crud-card"\n  *ngIf="listConfig && (listConfig.permission == null || (listConfig.permission && (listConfig.permission[\'subject\'] | can: listConfig.permission[\'action\'])))">\n  <cf-crud-header\n    [identifier]="identifier"\n    [title]="title"\n    [subtitle]="header.subtitle"\n    [description]="header.description"\n    [style]="listConfig.style"\n    [badges]="badges"\n    [icon]="header.icon"\n    [pageBackRoute]="pageBackRoute"\n    [formDisplayMode]="\'CRUD_LIST\'"\n    [actions]="actions" \n    [context]="records"\n    [originalData]="_configData.originalData"  \n    [style.width.%]="100"\n    (onButtonClick)="buttonClick($event)"\n  ></cf-crud-header>\n\n  <mat-card-content>  \n    <div \n      [style.margin]="listConfig && listConfig.style && listConfig.style.hideCard ? \'0px 16px\' : \'auto\'"\n      class="mdc-layout-grid cf-crud-header-desc" \n      *ngIf="header.description && header.description.text">\n      <div class="mdc-layout-grid__inner">\n          <div class="mdc-layout-grid__cell--span-12">\n              <div \n              [ngClass]="{\'cf-crud-header-desc-without-bg\': !header.description.bgColor, \'cf-crud-header-desc-with-bg\': header.description.bgColor}"\n              [style.background-color]="header.description.bgColor"\n              [style.color]="header.description.textColor"\n                  >\n                  <mat-icon class="cf-crud-header-desc-icon" aria-hidden="true" [attr.aria-label]="header.description.icon" *ngIf="header.description.icon">{{header.description.icon}}</mat-icon>\n                  <span>{{ header.description.text }}</span>\n              </div>\n          </div>\n      </div>\n    </div>\n    \x3c!-- <cf-error></cf-error> --\x3e\n    <div class="mdc-layout-grid cf-crud-body">\n      <div class="mdc-layout-grid__inner">\n        <div class="mdc-layout-grid__cell--span-12" *ngIf="quickLinks && quickLinks.length > 0">\n          <span class="cf-quicklinks">\n            <cf-button-group\n              [buttons]="quickLinks"\n              [sourceIdentifier]="identifier"\n              [sourceIndex]="\'0\'"\n              [context]="records"\n              [originalData]="configData.originalData"  \n              (onClick)="buttonClick($event)"\n            ></cf-button-group>\n          </span>  \n        </div>\n      </div>\n      <div class="mdc-layout-grid__inner cf-crud-search-inline" *ngIf="showSearchForm">\n        <div class="mdc-layout-grid__cell--span-12">\n          <ng-container *ngTemplateOutlet="cfsearchlayout"></ng-container>\n        </div>\n      </div>\n\n      <div class="mdc-layout-grid__inner cf-crud-list" *ngIf="listConfig.customPlugin && listConfig.customPlugin.placement == \'ABOVE\' && listConfig.customPlugin.component">\n        <div class="mdc-layout-grid__cell--span-12">\n          \x3c!-- <ndc-dynamic\n            [ndcDynamicComponent]="listConfig.customPlugin.component"\n          ></ndc-dynamic> --\x3e\n        </div>\n      </div>\n\n      <div class="mdc-layout-grid__inner cf-crud-list">\n        <div class="mdc-layout-grid__cell--span-12">\n          <ng-container *ngTemplateOutlet="cftablegroup"></ng-container>\n        </div>\n      </div>\n      \n      <div class="mdc-layout-grid__inner cf-crud-list" *ngIf="listConfig.customPlugin && listConfig.customPlugin.placement == \'BELOW\' && listConfig.customPlugin.component">\n        <div class="mdc-layout-grid__cell--span-12">\n          \x3c!-- <ndc-dynamic\n            [ndcDynamicComponent]="listConfig.customPlugin.component"\n          ></ndc-dynamic> --\x3e\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n\n<ng-template #cfsearchlayout>\n  <span *ngIf="searchConfig.displayType == \'ABOVE_LIST\'">\n    <ng-container *ngTemplateOutlet="cfsearch"></ng-container>\n  </span>\n  <span class="" *ngIf="searchConfig.displayType == \'LEFT_MODAL\' || searchConfig.displayType == \'RIGHT_MODAL\'">\n    \x3c!-- <mat-sidenav-container (backdropClick)="close(\'backdrop\')"> --\x3e\n    \x3c!-- <span class="cf-crud-search-strip-modal"> --\x3e\n      <span class="cf-crud-search-modal">\n        <mat-sidenav-content>\n          <cf-button\n            [sourceIdentifier]="identifier"\n            [sourceIndex]="\'0\'"\n            [button]="searchButton"\n            [context]="records"\n            [originalData]="configData.originalData"  \n            (onClick)="sidenav.open()"\n          ></cf-button>\n\n          <span class="cf-crud-search-applied">\n            <span class="cf-crud-search-label" *ngIf="searchOnFieldsCount == null || searchOnFieldsCount == 0">Apply Filter</span>\n            <span class="cf-crud-search-label" *ngIf="searchOnFieldsCount && searchOnFieldsCount > 0">Filters (<strong>{{ searchOnFieldsCount }}</strong>)</span>\n            \x3c!-- {{searchOnFieldsButtons | json}} --\x3e\n            <cf-button-group \n              [buttons]="searchOnFieldsButtons" \n              [formDisplayMode]="\'ADD\'"\n              [sourceIdentifier]="\'searchFields\'"\n              [sourceIndex]="0" \n              [widgetArrayIndex]="0"\n              [originalData]="searchData"\n              (onIconClick)="buttonIconClick"\n            >\n            </cf-button-group>\n            \x3c!-- <span *ngFor="let fButton of searchOnFieldsButtons">\n              <cf-button\n                [sourceIdentifier]="fButton.identifier"\n                [sourceIndex]="\'0\'"\n                [button]="fButton"\n              ></cf-button>\n            </span> --\x3e\n          </span>\n        </mat-sidenav-content>\n      </span>\n    \x3c!-- </span> --\x3e\n\n    <mat-sidenav #sidenav [position]="searchConfig.displayType == \'LEFT_MODAL\' ? \'start\': \'end\'" (keydown.escape)="close()" (backdropClick)="close()" [disableClose]="false">\n      <div class="mdc-layout-grid cf-crud-search-modal">\n        \x3c!-- <div class="mdc-layout-grid__inner">\n          <div class="mdc-layout-grid__cell--span-12 mdc-layout-grid--align-right">\n            <cf-button\n              [sourceIdentifier]="identifier"\n              [sourceIndex]="\'0\'"\n              [button]="searchModalButton"\n              align = "right"\n              (onClick)="close()"\n            ></cf-button>\n          </div>\n        </div> --\x3e\n        <div class="mdc-layout-grid__inner">\n          <div class="mdc-layout-grid__cell--span-12">\n            <ng-container *ngTemplateOutlet="cfsearch"></ng-container>\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n  </span>\n  <span *ngIf="searchConfig.displayType == \'BOTTOM_MODAL\'">\n    <cf-button\n      [sourceIdentifier]="identifier"\n      [sourceIndex]="\'0\'"\n      [button]="searchButton"\n      (onClick)="openBottomSheet()"\n    ></cf-button>\n  </span>\n</ng-template>\n\n<ng-template #cfsearch>\n  <span>\n    \x3c!-- {{searchData | json}}-- --\x3e\n    <cf-form\n      [formConfig]="searchConfig.form"\n      [sourceIndex]="\'0\'"\n      [reset]="formReset"\n      [record]="searchData"\n      [keyMap]="keyMap"\n      class="cf-crud-search"\n      (onFieldChange)="fieldChange($event)"\n      (onFormChange)="formChange($event)"\n      (onButtonClick)="buttonClick($event)"\n    ></cf-form>\n  </span>\n</ng-template>\n\n<ng-template #cftablegroup>\n  <span *ngIf="(listConfig.lists.length == 1) || (listConfig.lists.length > 1 && listConfig.displayType == \'LIST\')">\n    <span *ngFor="let lConfig of listConfig.lists">\n      <ng-container *ngTemplateOutlet="cftable; context: {lConfig: lConfig, rIndex: 0}"></ng-container>\n    </span>\n  </span>\n\n  <span *ngIf="listConfig.lists.length > 1 && listConfig.displayType == \'TAB\'">\n    <mat-tab-group (selectedTabChange)="onTabChange($event)">\n      <mat-tab \n        *ngFor="let lConfig of listConfig.lists; let rIndex=index"\n        [label]="listHeaders[rIndex].title">\n        <ng-container *ngTemplateOutlet="cftable; context: {lConfig: lConfig, rIndex: rIndex}"></ng-container>\n      </mat-tab>\n    </mat-tab-group>\n  </span>\n\n  <span class="cf-crud-list-accordian" *ngIf="listConfig.lists.length > 1 && listConfig.displayType == \'ACCORDIAN\'">\n    <mat-accordion>\n      <mat-expansion-panel\n        *ngFor="let lConfig of listConfig.lists; let rIndex=index"\n        [expanded]="rIndex === 0"\n        (opened)="onAccordianChange(rIndex)"> \n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{listHeaders[rIndex].title}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <ng-container *ngTemplateOutlet="cftable; context: {lConfig: lConfig, rIndex: rIndex}"></ng-container>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </span>\n</ng-template>\n\n<ng-template #cftable let-lConfig="lConfig" let-rIndex="rIndex">\n  \x3c!-- <pre>\n    {{records | json}}\n    {{lConfig | json}}\n    CRUD _listReset: {{listReset}}<br/>\n  </pre> --\x3e\n  <cf-static-list\n    *ngIf="lConfig.listType == \'STATIC\'"\n    [listConfig]="lConfig"\n    [sourceIdentifier]="identifier"\n    [sourceIndex]="rIndex"\n    [record]="records && records[rIndex] ? records[rIndex] : []"\n    [originalData]="configData.originalData"  \n    [listReset]="listReset"\n    [expanded]="_expanded"\n    [expandRowIndex]="expandRowIndex"\n    [keyMap]="keyMap"\n    (onFormChange)="formChange($event)"\n    (onFieldChange)="fieldChange($event)"\n    (onButtonClick)="buttonClick($event)"\n    (onPageChange)="onPage($event)"\n    (onSortChange)="onSort($event)"  \n  ></cf-static-list>  \n\n  <cf-dynamic-list\n    *ngIf="lConfig.listType == \'DYNAMIC\'"\n    [listConfig]="lConfig"\n    [sourceIdentifier]="identifier"\n    [sourceIndex]="rIndex"\n    [record]="records && records[rIndex] ? records[rIndex] : []"\n    [originalData]="configData.originalData"  \n    [listReset]="listReset"\n    [expanded]="_expanded"\n    [expandRowIndex]="expandRowIndex"\n    [keyMap]="keyMap"\n    (onFormChange)="formChange($event)"\n    (onFieldChange)="fieldChange($event)"\n    (onButtonClick)="buttonClick($event)"\n    (onPageChange)="onPage($event)"\n    (onSortChange)="onSort($event)"  \n  ></cf-dynamic-list>\n</ng-template>',styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-crud-card{background-color:transparent}.cf-crud-search-strip-modal{padding:0 0 0 8px}.cf-list-search-btn{text-align:right}.cf-crud-search-applied{color:rgba(0,0,0,.54);font-size:12px}.cf-crud-search-applied .cf-crud-search-label{padding-right:8px}.mdc-layout-grid{padding-left:0!important;padding-right:0!important}.cf-crud-search-modal{padding-bottom:0!important;padding-right:8px;padding-top:0!important}.cf-crud-search-modal mat-sidenav-content{margin-left:0!important}.cf-crud-list{padding-bottom:20px!important;padding-top:10px!important}::ng-deep .mat-expansion-panel-header{padding:0 16px!important}::ng-deep .mat-expansion-panel-body{padding:0!important}.cf-crud-header-desc{margin-left:5px;padding:0}.cf-crud-header-desc-without-bg{padding:10px 0;width:auto}.cf-crud-header-desc-with-bg{padding:10px;width:auto}.cf-crud-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.cf-crud-body{padding:0}"]}]}],CrudListComponent.ctorParameters=function(){return[{type:bottomSheet.MatBottomSheet},{type:ability.Ability}]},CrudListComponent.propDecorators={identifier:[{type:core.Input}],header:[{type:core.Input}],actions:[{type:core.Input}],actionPages:[{type:core.Input}],quickLinks:[{type:core.Input}],searchConfig:[{type:core.Input}],listConfig:[{type:core.Input}],formReset:[{type:core.Input}],originalData:[{type:core.Input}],_configData:[{type:core.Input}],configData:[{type:core.Input}],keyMap:[{type:core.Input}],listReset:[{type:core.Input}],expanded:[{type:core.Input}],expandRowIndex:[{type:core.Input}],onFormChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}],onButtonIconClick:[{type:core.Output}],onSortClick:[{type:core.Output}],onPageClick:[{type:core.Output}],onTabClick:[{type:core.Output}],sidenav:[{type:core.ViewChild,args:["sidenav"]}]};var BottomSearchSheet=function(){function t(t,e){this._bottomSheetRef=t,this.data=e,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,console.log(this.data)}return t.prototype.openLink=function(t){this._bottomSheetRef.dismiss(),t.preventDefault()},t.prototype.fieldChange=function(t){this.onFieldChange.emit(t)},t.prototype.formChange=function(t){this.onFormChange.emit(t)},t.prototype.buttonClick=function(t){console.log(t),this.onButtonClick.emit(t)},t}();BottomSearchSheet.decorators=[{type:core.Component,args:[{selector:"bottom-search-sheet",template:'<span class="cf-crud-bottom-search" *ngIf="data">\n  <cf-form\n    [formConfig]="data.searchConfig.form"\n    [sourceIndex]="\'0\'"\n    [record]="data.searchData"\n    [reset]="data.reset"\n    (onFieldChange)="fieldChange($event)"\n    (onFormChange)="formChange($event)"\n    (onButtonClick)="buttonClick($event)"\n  ></cf-form>\n</span>',styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-crud-bottom-search>.mat-bottom-sheet-container{padding:0!important}mat-sidenav-content{margin-left:16px}"]}]}],BottomSearchSheet.ctorParameters=function(){return[{type:bottomSheet.MatBottomSheetRef},{type:void 0,decorators:[{type:core.Inject,args:[bottomSheet.MAT_BOTTOM_SHEET_DATA]}]}]},BottomSearchSheet.propDecorators={onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}]};var FileUploaderComponent=function(){function t(t){var e=this;this._http=t,this.field=null,this.isFieldDisabled=!1,this.param="file",this.fileList=[],this.multiple=!1,this.fileType="*.*",this.fileIcon="",this.hideDownloadButton=!1,this.hideDeleteFileButton=!1,this.hideUploadButton=!1,this.hideFileIconButton=!1,this.hideDeleteAllButton=!1,this.hideActionStrip=!1,this.isUploaded=!1,this.isUploadingInProgress=!1,this.isFileImageType=!1,this.setFileTypeAndIcon=function(t){switch(t){case"PDF":e.fileType=".pdf",e.fileIcon="picture_as_pdf";break;case"WORD":e.fileType=".doc, .docx",e.fileIcon="attach_file";break;case"IMAGE":e.fileType=e.getImageFileType(),e.fileIcon="image",e.isFileImageType=!0;break;case"VIDEO":e.fileType="video/*",e.fileIcon="video_call";break;case"EXCEL":e.fileType=".xlsx, .xls, .csv",e.fileIcon="attach_file";break;default:e.fileType=".*",e.fileIcon="attach_file"}},this.onUploadClick=function(){var t=e.fileInput.nativeElement;t.onchange=function(){e.fileList=[],e.isUploadingInProgress=!0,console.log(t.files);for(var n=0;n<t.files.length;n++){var i=t.files[n];e.fileList.push({data:i,size:i.size,name:i.name})}e.field.onUploadClick(e.fileList).subscribe((function(t){e.isUploadingInProgress=!1,e.fileList=t}))},t.click()},this.onDeleteAllClick=function(){e.isFunctionDefined(e.field.onDeleteAllClick)&&(e.isUploadingInProgress=!0,e.field.onDeleteAllClick(e.fileList).subscribe((function(t){e.isUploadingInProgress=!1,t&&(e.fileList=[])})))},this.onDeleteFileClick=function(t){e.isFunctionDefined(e.field.onDeleteFileClick)&&(e.isUploadingInProgress=!0,e.field.onDeleteFileClick(t).subscribe((function(n){e.isUploadingInProgress=!1,n&&(e.fileList=e.fileList.filter((function(e){return e!==t})))})))},this.onShowAllItems=function(){e.showLess=e.fileList.length},this.isFunctionDefined=function(t){return"function"==typeof t},this.getImageFileType=function(){return e.field.subFileType?e.field.subFileType.map((function(t){return"image/"+t.toLowerCase()})).join(","):"image/*"}}return t.prototype.ngOnInit=function(){var t=this.field.multiple?"Upload Files":"Upload File";this.multiple=this.field.multiple,this.uploadButtonText=this.field.uploadButtonText||t,this.setFileTypeAndIcon(this.field.fileType),this.fileList=this.field.value||[],"LABEL"==this.field.displayMode?(this.hideDeleteFileButton=!0,this.hideUploadButton=!0,this.hideFileIconButton=!0):(this.hideDeleteFileButton=void 0!==this.field.hideDeleteFileButton&&this.field.hideDeleteFileButton,this.hideUploadButton=void 0!==this.field.hideUploadButton&&this.field.hideUploadButton,this.hideFileIconButton=void 0!==this.field.hideFileIconButton&&this.field.hideFileIconButton),this.hideDownloadButton=void 0!==this.field.hideDownloadButton&&this.field.hideDownloadButton,this.showLess=this.field.showLess||this.fileList.length,this.setFieldDisabled(),this.setHideDeleteAllButton(),this.setHideActionStrip()},t.prototype.setFieldDisabled=function(){this.isFieldDisabled&&(this.hideDeleteAllButton=!0,this.hideDeleteFileButton=!0,this.hideUploadButton=!0)},t.prototype.setHideDeleteAllButton=function(){void 0===this.field.hideDeleteAllButton&&(this.hideDeleteAllButton=!1),(this.fileList.length<=1||"LABEL"==this.field.displayMode)&&(this.hideDeleteAllButton=!0)},t.prototype.setHideActionStrip=function(){this.hideDeleteAllButton&&this.hideUploadButton&&this.showLess<=this.fileList.length&&(this.hideActionStrip=!0)},t}();FileUploaderComponent.decorators=[{type:core.Component,args:[{selector:"cf-file-uploader",template:'<div class="cf-field-nm">\n  <mat-card>\n    <mat-card-content *ngIf="fileList.length > 0"  class="card-content" \n      [ngClass]="{\'cf-disable\': disabled}" >\n      <ul class="file-list">\n        <ng-container *ngFor="let file of fileList; let index=index">\n          <li class="file-item" *ngIf="index < showLess">\n            <span>\n                <img *ngIf="isFileImageType" matListAvatar [src]="file.url" alt="" class="image" />\n                <span>{{file.name}}</span>\n            </span>\n            <span>\n              <a mat-icon-button [href]="file.url" download target="_blank" [disabled]="disabled" *ngIf="!hideDownloadButton">\n                <mat-icon class="mat-24">file_download</mat-icon>\n              </a>\n              <button mat-icon-button (click)="onDeleteFileClick(file)" *ngIf="!hideDeleteFileButton"\n                [disabled]="disabled || isUploadingInProgress">\n                <mat-icon class="mat-24" [color]="isUploadingInProgress? \'\' : \'warn\'">delete</mat-icon>\n              </button>\n            </span>\n          </li>\n        </ng-container>\n      </ul>\n    </mat-card-content>\n    <mat-card-actions \n      class="file-actions"\n      [ngClass]="{\'empty-list\':fileList.length == 0}"\n      *ngIf="!hideActionStrip">\n      <div>\n        <div class="mat-mini-fab file-icon" \n        [ngClass]="{\'cf-disable\': disabled}"\n        *ngIf="!hideFileIconButton">\n          <mat-icon>{{fileIcon}}</mat-icon>\n        </div>\n        <button mat-stroked-button color="primary" (click)="onUploadClick()"\n          [disabled]="disabled || isUploadingInProgress"\n          *ngIf="!hideUploadButton">\n          <mat-icon>file_upload</mat-icon>\n          {{uploadButtonText}}\n        </button>\n        <button  mat-button (click)="onShowAllItems()"\n          [ngClass]="{\'cf-disable\': disabled}"\n          [disabled]="disabled || isUploadingInProgress"\n          *ngIf="showLess<fileList.length">\n            Show All\n        </button>\n\n        <mat-spinner *ngIf="isUploadingInProgress" [diameter]="18" class="spinner">\n        </mat-spinner>\n      </div>\n\n      <button mat-icon-button (click)="onDeleteAllClick()"\n        [disabled]="disabled || isUploadingInProgress"\n        [ngClass]="{\'cf-disable\': disabled}"\n        *ngIf="!hideDeleteAllButton && fileList.length > 1">\n        <mat-icon [color]="isUploadingInProgress? \'\' : \'warn\'">delete</mat-icon>\n      </button>\n    </mat-card-actions>\n  </mat-card>\n  <input type="file" #fileInput\n    id="fileUpload"\n    name="fileUpload"\n    [multiple]="multiple"\n    [accept]="fileType"\n    style="display:none;"\n  />\n</div>',encapsulation:core.ViewEncapsulation.None,styles:["li,ul{list-style:none;margin:0;padding:0}#file-label{display:inline-flex;font-size:12px;line-height:18px;vertical-align:middle}#file-label mat-icon{font-size:18px;text-align:center}#file-label a{cursor:pointer}.file-icon{box-shadow:none}.file-icon .material-icons,.file-list .image{vertical-align:middle}.file-list .image{border:1px solid #4d4d4d;height:30px!important;margin-right:9px;width:30px!important}.file-list .file-item{align-items:center;border-bottom:1px solid #efeded;box-sizing:border-box;display:flex;flex-direction:row;height:40px;justify-content:space-between;padding:0;position:relative;width:100%}.file-list .file-item>span{padding-left:10px}.file-list .file-item:last-child{border-bottom:none;margin-bottom:5px}.file-list .mat-button-base:hover:not([disabled]){background:#efeded}.card-content{margin-bottom:0}.file-actions{border-top:1px solid #efeded;display:flex;justify-content:space-between;margin:0 -16px -8px;padding-top:11px}.file-actions .mat-mini-fab{box-shadow:none!important}.file-actions .spinner{float:right;margin-top:10px}.file-actions .mat-button-base,.file-actions>button,.file-actions>div{margin:0 16px}.file-actions .mat-button-base:hover:not([disabled]){background:#efeded}.file-actions.empty-list{border-top:none;justify-content:space-around;padding:0}.mat-card{margin-bottom:.25em}"]}]}],FileUploaderComponent.ctorParameters=function(){return[{type:http.HttpClient}]},FileUploaderComponent.propDecorators={field:[{type:core.Input}],isFieldDisabled:[{type:core.Input}],fileInput:[{type:core.ViewChild,args:["fileInput",{static:!1}]}],disabled:[{type:core.Input}]};var quillConfiguration={formula:!0,toolbar:[[{header:[1,2,3,4,5,6,!1]}],[{font:[]}],["bold","italic","underline","strike"],["blockquote"],[{align:[]},{indent:"-1"}],[{indent:"+1"}],[{color:[]},{background:[]}],[{list:"ordered"},{list:"bullet"}],[{script:"sub"},{script:"super"},"formula"],["link","image","video"]]},FieldErrorStateMatcher=function(){function t(){}return t.prototype.isErrorState=function(t,e){return!(!t||!t.invalid||!t.dirty&&!t.touched)},t}(),FieldComponent=function(){function t(t,e){var n=this;this.router=t,this.ability=e,this.onDependentFieldChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onFormChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.ellipsisRequired=!1,this.editorOptions=quillConfiguration,this.onListSelectionFuc=null,this.listOptions=null,this.dateRange=!1,this.minLengthForTrigger=3,this.highlightAutoCompleteText="",this.onShowAllOptions=function(){n.showLess=n.field.options.length},this.autoCompleteInputHasValue=!1,this.onListImageLoadError=function(t){t.target.src=n.field.defaultImageUrl},AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"displayMode",{get:function(){return this._displayMode},set:function(t){this._displayMode=t,this.isFieldDisabled=this.fieldDisabled()},enumerable:!1,configurable:!0}),t.prototype.isEditorErrorState=function(){return!(!this.fieldControl||!this.fieldControl.invalid||!this.fieldControl.dirty&&!this.fieldControl.touched)},t.prototype.ngOnInit=function(){null==this.field.placeholder&&(this.field.placeholder=""),this.field.ellipsis&&this.field.ellipsis>0&&(this.charLimit=this.field.ellipsis),this.matcher=new FieldErrorStateMatcher,this.getValue(this.field,this.value),this.isRequired=this.required(),this.isFieldDisabled=this.fieldDisabled(),this.hasFieldNavigate=this.fieldNavigate(),this.hasHintIcon=this.displayHintIcon(),this.setMaxLength(),this.setNumberMinMax(),this.setAppearance(),this.setOptionInDisplay(),this.getImagePath(this.field),this.setRows(),this.setHeight(),this.setClear(),this.setAsBubble(),this.setTextAlign(),this.setAddMoreDisplayInColumn(),this.setMinLengthForTrigger(),this.setDisplayTemplate(),this.setCalendar(),this.setShowLess(),this.textClearButton=this.setTextClearButton("fieldTextClearBtn","Clear Text","cancel",null),this.field.navigate&&(this.routeToButton=this.setTextClearButton("fieldRouteToBtn",this.field.navigate.text,this.field.navigate.icon?this.field.navigate.icon:"call_made",this.field.navigate.routeTo)),this.helpModalButton=this.setHelpButton("helpCloseButton","Close","close"),this.plusButton=this.addRemoveButton("add_field","Add","add"),this.minusButton=this.addRemoveButton("remove_field","Minus","remove")},t.prototype.setDisplayTemplate=function(){"RADIO"!=this.field.type&&"CHECKBOX"!=this.field.type||!StringUtils.isEmpty(this.field.displayTemplate)||(this.field.displayTemplate="CLASSIC")},t.prototype.setAddMoreDisplayInColumn=function(){this.isAddMore&&("desktop"==this.device&&(this.displayInColumns<6?(this.addMoreFieldDisplayInColumns=10,this.addMoreButtonDisplayInColumns=2):(this.addMoreFieldDisplayInColumns=11,this.addMoreButtonDisplayInColumns=1)),"tablet"==this.device&&(this.displayInColumns<6?(this.addMoreFieldDisplayInColumns=6,this.addMoreButtonDisplayInColumns=2):(this.addMoreFieldDisplayInColumns=7,this.addMoreButtonDisplayInColumns=1)),"mobile"==this.device&&(this.displayInColumns<3?(this.addMoreFieldDisplayInColumns=3,this.addMoreButtonDisplayInColumns=2):(this.addMoreFieldDisplayInColumns=3,this.addMoreButtonDisplayInColumns=1)))},t.prototype.setMinLengthForTrigger=function(){this.minLengthForTrigger=this.field.minLengthForTrigger?this.field.minLengthForTrigger:3},t.prototype.setRows=function(){this.rows=this.field.rows?this.field.rows:1},t.prototype.setHeight=function(){this.height=this.field.height?this.field.height:300},t.prototype.setAppearance=function(){this.appearance=this.field.appearance?this.field.appearance:"standard"},t.prototype.setAsBubble=function(){this.asBubble=!!this.field.asBubble&&this.field.asBubble,this.bubbleColor=this.field.bubbleColor?this.field.bubbleColor:""},t.prototype.setTextAlign=function(){this.textAlign=this.field.textAlign?this.field.textAlign:"left"},t.prototype.setMaxLength=function(){this.maxLength=this.field.maxLength?this.field.maxLength:1e6},t.prototype.setNumberMinMax=function(){this.min=this.field.min?this.field.min:null,this.max=this.field.max?this.field.max:null},t.prototype.displayHintIcon=function(){return!(!this.field.help||!this.field.help.icon)},t.prototype.close=function(){this.sidenav.close()},t.prototype.open=function(){this.sidenav.open()},t.prototype.setHelpButton=function(t,e,n){return{identifier:t,label:e,color:"primary",size:"small",icon:n,type:"GHOST",onlyIcon:!0}},t.prototype.required=function(){var t,e,n=!1;if(this.field.validations&&this.field.validations.length>0)try{for(var i=__values(this.field.validations),o=i.next();!o.done;o=i.next()){"required"==o.value.message.key&&(n=!0)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}return StringUtils.isEmpty(this.field.label)&&(n=!1),n},t.prototype.fieldNavigate=function(){var t=!1;return!this.field.navigate||StringUtils.isEmpty(this.field.navigate.icon)&&StringUtils.isEmpty(this.field.navigate.text)||CollectionUtils.isEmpty(this.field.navigate.routeTo)||(t=!0),t},t.prototype.fieldDisabled=function(){var t;return(t=FieldUtils.isFieldDisabled(this.field,this._displayMode,this.resolvedValue))&&FormUtils.disableFieldControl(this.fieldControl),t},t.prototype.getValue=function(t,e){var n=this,i="",o=0,l=0;return i=null!=this.fieldControl?this.fieldControl.value:e,"DROPDOWN"!=t.type&&this.keyMap&&this.keyMap.length>0&&this.keyMap.filter((function(e){var i=!1;return CollectionUtils.isEmpty(e)||CollectionUtils.isEmpty(e.associations)||e.associations.forEach((function(e){e.fieldKey==t.key&&e.componentIdentifier==n.sourceIdentifier&&(i=!0)})),i})).forEach((function(t){if(t.options&&t.options.length>0)for(var e=0;e<t.options.length;e++)if(t.options[e].key==i){i=t.options[e].value;break}})),this.resolvedValue=i,FieldUtils.isEllipsisField(this.field)&&FieldUtils.displayEllipsis(this.charLimit,this.resolvedValue)&&(o=(i=JSON.stringify(i)).length,l=(i=i.substr(0,this.field.ellipsis)).length,i+="...",o>l&&(this.ellipsisRequired=!0)),i},t.prototype.displayFullText=function(){var t=JSON.stringify(this.resolvedValue);StringUtils.isEmpty(t)||(this.charLimit=t.length)},t.prototype.displayShortText=function(){this.field.ellipsis&&this.field.ellipsis>0&&(this.charLimit=this.field.ellipsis,this.displayEllipsis())},t.prototype.displayEllipsis=function(){return FieldUtils.displayEllipsis(this.charLimit,this.resolvedValue)},t.prototype.setCalendar=function(){"CALENDAR"===this.field.type&&(this.dateRange=this.field.dateRange)},t.prototype.invokeOnChangeOnField=function(t,e){var n=!1;return"AUTOCOMPLETE"==this.field.type?(this.autoCompleteInputHasValue=!!t,t.length>=this.minLengthForTrigger?(this.autoCompleteInputHasValue=!!t,this.highlightAutoCompleteText=t):(this.autoCompleteInputHasValue=!1,this.highlightAutoCompleteText=""),n=!0):n=!0,n},t.prototype.autocompleteDisplayFn=function(t){return null!=t&&null!=t.key?t.value:t},t.prototype._filter=function(t){var e=t.toLowerCase(),n=this.field.options.filter((function(t){return t.value.toLowerCase().includes(e)}));return this.autoCompleteResultCount=n.length,n},t.prototype.setOptionInDisplay=function(){if(this.field.options&&this.fieldControl)for(var t=this.fieldControl.value,e=0;e<this.field.options.length;e++)this.field.options[e].key===t&&(this.field.options[e].checked=!0)},t.prototype.setClear=function(){var t=!1;this.resolvedValue&&this.field.hasClear&&("TEXT"==this.field.type||"TEXTAREA"==this.field.type||"EMAIL"==this.field.type||"PASSWORD"==this.field.type||"COLOR"==this.field.type||"MONTH"==this.field.type||"WEEK"==this.field.type||"NUMBER"==this.field.type||"DROPDOWN"==this.field.type||"AUTOCOMPLETE"==this.field.type||"CHIPS"==this.field.type||"TIME"==this.field.type||"CALENDAR"==this.field.type)&&(t=!0),this.hasClear=t},t.prototype.cleanValue=function(){this.resolvedValue="",this.fieldControl.setValue(""),this.setClear()},t.prototype.getResolveTextWithKey=function(t){var e="";return null!=this.row&&this.row[t.resolveOptionWithKey]&&(e=this.row[t.resolveOptionWithKey]),e},t.prototype.getDropdownValue=function(t,e){var n="";if(null!=this.fieldControl?this.fieldControl.value&&(n=this.fieldControl.value):n=e,t.options&&t.options.length>0)for(var i=0;i<t.options.length;i++){var o=!1;if(n instanceof Array?n.indexOf(t.options[i].key)>-1&&(o=!0):n instanceof String?t.options[i].key==n&&(o=!0):n instanceof Object&&n[t.options[i].key]&&(o=!0),o){n=t.options[i].value;break}}return n},t.prototype.getImagePath=function(t){!StringUtils.isEmpty(this.resolvedValue)&&this.resolvedValue instanceof String&&this.resolvedValue.indexOf("http://"),this.imagePath=this.resolvedValue},t.prototype.onAutocompleteChange=function(t){var e=t.option.value;this.onChangeEvent(this.field.key,e,t)},t.prototype.onToggleChange=function(t){console.log(t);var e=t.checked;this.onChangeEvent(this.field.key,e,t)},t.prototype.onSliderChange=function(t){var e=t.value;this.onChangeEvent(this.field.key,e,t)},t.prototype.onRadioChange=function(t){var e=t.value;this.onChangeEvent(this.field.key,e,t)},t.prototype.onCheckboxChange=function(t,e){var n=t.key,i=e.checked;this.onChangeEvent(n,i,e)},t.prototype.setShowLess=function(){"RADIO"!==this.field.type&&"CHECKBOX"!==this.field.type||(this.showLess=this.field.showLess||this.field.options.length)},t.prototype.onOptionChange=function(t){var e=this.listView.selectedOptions.selected.map((function(t){return t.value}));if("CHECKBOX"==this.field.type){var n=t.source._value,i=this.fieldControl.value;for(var o in i)n.indexOf(o)>-1?i[o]=!0:i[o]=!1;this.fieldControl.setValue(i)}else if("RADIO"==this.field.type){n=t.source._value;CollectionUtils.isEmpty(n)?(this.fieldControl.setValue(null),e=null):(this.fieldControl.setValue(n[0]),e=e[0])}this.onChangeEvent(this.field.key,e,t)},t.prototype.onHtmlEditorChange=function(t){this.onChangeEvent(this.field.key,t.html,t)},t.prototype.onChipsListChange=function(t){this.onChangeEvent(this.field.key,t.values,t)},t.prototype.onInputChange=function(t){console.log(t);var e=t.target.value;this.invokeOnChangeOnField(e,t)&&this.onChangeEvent(this.field.key,e,t)},t.prototype.onDateChange=function(t,e){var n=this.field.key;StringUtils.isEmpty(e)||(n=this.field.key+"."+e);var i=t.value;this.onChangeEvent(n,i,t)},t.prototype.onChange=function(t){var e=t.value;this.onChangeEvent(this.field.key,e,t)},t.prototype.onFileChange=function(t){var e=this;this.onChangeEvent(this.field.key,t,t);var n=new FileReader;n.readAsDataURL(t[0]),n.onload=function(t){e.imgURL=n.result}},t.prototype.onParagraphChange=function(t){this.onChangeEvent(this.field.key,t,t)},t.prototype.buttonClick=function(t){this.onButtonClick.emit(t)},t.prototype.onChangeEvent=function(t,e,n){var i=this;this.resolvedValue=e,this.setClear(),setTimeout((function(){if(i.dependencies&&i.dependencies[i.field.key]){var t={sourceIdentifier:i.sourceIdentifier,sourceIndex:i.sourceIndex,widgetArrayIndex:i.widgetArrayIndex,fieldIndex:i.fieldIndex,action:i.field.key,data:i.form.getRawValue(),parentHierarchy:null,event:n};i.onDependentFieldChange.emit(t)}}),200);var o={sourceIdentifier:this.sourceIdentifier,sourceIndex:this.sourceIndex,widgetArrayIndex:this.widgetArrayIndex,fieldIndex:this.fieldIndex,fieldKey:t,value:e,event:n};this.onFieldChange.emit(o)},t.prototype.errors=function(){var t=this,e=[];return null!=this.fieldControl&&(this.fieldControl&&this.fieldControl.errors?Object.keys(this.fieldControl.errors).forEach((function(n){var i,o;if(t.field.validations)try{for(var l=__values(t.field.validations),a=l.next();!a.done;a=l.next()){var r=a.value;n===r.message.key&&(e[e.length]={error:n,message:r.message.message})}}catch(t){i={error:t}}finally{try{a&&!a.done&&(o=l.return)&&o.call(l)}finally{if(i)throw i.error}}})):this.fieldControl instanceof forms.FormGroup&&this.fieldControl.controls&&this.fieldControl.controls.startDate&&this.fieldControl.controls.startDate.errors&&Object.keys(this.fieldControl.controls.startDate.errors).forEach((function(n){var i,o;if(t.field.validations)try{for(var l=__values(t.field.validations),a=l.next();!a.done;a=l.next()){var r=a.value;n===r.message.key&&(e[e.length]={error:n,message:r.message.message})}}catch(t){i={error:t}}finally{try{a&&!a.done&&(o=l.return)&&o.call(l)}finally{if(i)throw i.error}}}))),e},t.prototype.setTextClearButton=function(t,e,n,i){return{identifier:t,label:e,color:"primary",size:"small",icon:n,type:"GHOST",onlyIcon:!0,routerLink:i}},t.prototype.addField=function(t){var e=FormUtils.getFieldValidation(t);this.form.controls[t.key].push(FormUtils.setFormControl(this.displayMode,t,null,e)),this.onFormChange.emit(this.form)},t.prototype.removeField=function(t,e){this.form.controls[t.key].controls.splice(e,1),this.onFormChange.emit(this.form)},t.prototype.addRemoveButton=function(t,e,n){return{identifier:t,label:e,color:"primary",size:"small",icon:n,type:"FLAT",onlyIcon:!0}},t.prototype.onFileComplete=function(t){},t}();FieldComponent.decorators=[{type:core.Component,args:[{selector:"cf-field",template:'\x3c!-- {{field.fieldDisplayType}} --\x3e\n<div \n  class="mdc-layout-grid cf-field-horizontal-container" \n  *ngIf="(!(hideLabel == true) && field.fieldDisplayType == \'HORIZONTAL\') && (field && (field.permission == null || (field.permission && (field.permission[\'subject\'] | can: field.permission[\'action\']))))"\n> \n  <div class="mdc-layout-grid__inner">\n    <div class="mdc-layout-grid__cell--span-3">\n      <span \n        *ngIf="!isAddMore || (isAddMore && (fieldIndex == 0  || fieldIndex == null))"\n        class="cf-field-lbl cf-field-lbl-{{field.key}}" \n        [ngClass]="{\'cf-field-lbl-horizontal\': (field.type != \'CHECKBOX\' && field.type != \'RADIO\' && field.type != \'SLIDER\' && field.type != \'TOGGLE_OPTION\' && field.type != \'UPLOAD\' && field.type != \'IMAGE\' && field.type != \'BOOLEAN\' && field.type != \'JSON\'), \'cf-field-lbl-horizontal-premitive\': !(field.type != \'CHECKBOX\' && field.type != \'RADIO\' && field.type != \'SLIDER\' && field.type != \'TOGGLE_OPTION\' && field.type != \'UPLOAD\' && field.type != \'IMAGE\' && field.type != \'BOOLEAN\' && field.type != \'JSON\')}">\n        <strong>{{field.label}}</strong>\n        <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n        \x3c!-- <span   \n          *ngIf="field.help && field.help.message && hasFieldNavigate && field.help.displayType == \'TOOLTIP\'" \n          matTooltip="{{field.help.message}}"\n          matTooltipPosition="above"\n          class="cf-field-hint cf-field-hint-{{field.key}}">  \n          <mat-icon   \n            aria-hidden="true" \n            [attr.aria-label]="field.help.message" \n            class="cf-field-hint-icon cf-field-hint-icon-{{field.key}}" \n          >{{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n        </span>   --\x3e\n        <span *ngIf="field.help && field.help.message && field.help.displayType == \'RIGHT_MODAL\'">\n          <ng-container \n            *ngTemplateOutlet="cfhelpmodal" \n          ></ng-container>\n        </span>  \n        <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n          {{field.help.message}}\n        </span>\n      </span>\n    </div> \n    <div class="mdc-layout-grid__cell--span-9 mdc-layout-grid--align-right" [style.width.%]="100">\n      <ng-container *ngTemplateOutlet="cffield"></ng-container>\n    </div>\n  </div>\n</div>\n<span \n  *ngIf="(field.fieldDisplayType != \'HORIZONTAL\') && (field && (field.permission == null || (field.permission && (field.permission[\'subject\'] | can: field.permission[\'action\']))))"\n>\n  <ng-container *ngTemplateOutlet="cffield"></ng-container>\n</span>\n\n<ng-template #cffield>\n  \x3c!-- {{field.type}} --\x3e\n  <span *ngIf="(!form && !fieldControl) || field.displayMode == \'LABEL\'" [ngSwitch]="field.type" class="cf-field cf-field-key-{{field.key}}" [ngClass]="{\'cf-field-lbl-horizontal\': (field.type == \'LABEL\' || field.type == \'BOOLEAN\') && field.fieldDisplayType == \'HORIZONTAL\', \'cf-field-lbl\': (field.type == \'LABEL\' || field.type == \'BOOLEAN\') && sourceType == \'FORM\'}">\n    <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}} cf-field-lbl-inline" \n      *ngIf="field.fieldDisplayType != \'HORIZONTAL\' && field.type != \'PARAGRAPH\' && field.type != \'TOGGLE_OPTION\' && !hideLabel">\n      <strong>{{field.label}}</strong>\n      <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n      <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n      \x3c!-- <span  \n        *ngIf="field.help && field.help.message && hasFieldNavigate && field.help.displayType == \'TOOLTIP\'" \n        matTooltip="{{field.help.message}}"\n        matTooltipPosition="above"\n        class="cf-field-hint cf-field-hint-{{field.key}}">  \n        <mat-icon  \n          aria-hidden="true" \n          [attr.aria-label]="field.help.message" \n          class="cf-field-hint-icon cf-field-hint-icon-{{field.key}}" \n        >{{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n      </span>   --\x3e\n      <span *ngIf="field.help && field.help.message && field.help.displayType == \'RIGHT_MODAL\'">\n        <ng-container \n          *ngTemplateOutlet="cfhelpmodal" \n        ></ng-container>\n      </span>  \n      <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n\n    <span *ngSwitchCase="\'IMAGE\'"\n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}">\n      <img \n        class="cf-field-image cf-field-image-{{field.key}}" \n        [src]="imagePath"\n        [style.width.px]="field[\'width\'] ? field[\'width\'] : \'auto\'">\n    </span>\n    <span *ngSwitchCase="\'BOOLEAN\'" \n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"\n      class="mat-input-element cf-field-boolean cf-field-boolean-{{field.key}}">\n      <mat-icon class="cf-field-boolean-success" *ngIf="resolvedValue == true" aria-hidden="true">done</mat-icon>\n      <mat-icon class="cf-field-boolean-failure" *ngIf="resolvedValue == false" aria-hidden="true">close</mat-icon>\n    </span>\n    <span *ngSwitchCase="\'DROPDOWN\'"\n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"> \n      <span *ngIf="value == true || value == false" class="mat-input-element  cf-field-boolean cf-field-boolean-{{field.key}}">\n        <mat-icon class="cf-field-boolean-success" *ngIf="resolvedValue == true" aria-hidden="true">done</mat-icon>\n        <mat-icon class="cf-field-boolean-failure" *ngIf="resolvedValue == false" aria-hidden="true">close</mat-icon>\n      </span>\n      <span *ngIf="value != true && value != false" class="cf-field-value cf-field-value-{{field.key}}">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase="\'CHECKBOX\'"\n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"> \n      <span *ngIf="value == true || value == false" class="mat-input-element  cf-field-boolean cf-field-boolean-{{field.key}}">\n        <mat-icon class="cf-field-boolean-success" *ngIf="resolvedValue == true" aria-hidden="true">done</mat-icon>\n        <mat-icon class="cf-field-boolean-failure" *ngIf="resolvedValue == false" aria-hidden="true">close</mat-icon>\n      </span>\n      <span *ngIf="value != true && value != false" class="cf-field-value cf-field-value-{{field.key}}">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase="\'RADIO\'"\n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"> \n      <span *ngIf="value == true || value == false" class="mat-input-element  cf-field-boolean cf-field-boolean-{{field.key}}">\n        <mat-icon class="cf-field-boolean-success" *ngIf="resolvedValue == true" aria-hidden="true">done</mat-icon>\n        <mat-icon class="cf-field-boolean-failure" *ngIf="resolvedValue == false" aria-hidden="true">close</mat-icon>\n      </span>\n      <span *ngIf="value != true && value != false" class="cf-field-value cf-field-value-{{field.key}}">\n        {{getDropdownValue(field, value)}}\n      </span>\n    </span>  \n    <span *ngSwitchCase="\'AUTOCOMPLETE\'" \n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"\n      class="mat-form-field cf-field-value cf-field-value-{{field.key}}">\n      {{field[\'resolveTextWithKey\'] ? getResolveTextWithKey(field) : resolvedValue}}\n    </span>\n    <span *ngSwitchCase="\'JSON\'">\n      <div class="cf-field-nm mdc-layout-grid cf-field-showmore-pannel cf-field-showmore-pannel-{{field.key}}">\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-content">\n          <div class="mdc-layout-grid__cell--span-12">\n            <div *ngIf="displayEllipsis(); else elseValue" (click)="displayFullText()" class="cf-field-short-value">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue> \n              <span (click)="displayShortText()" class="cf-field-value">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-action" (click)="displayFullText()" *ngIf="displayEllipsis() && ellipsisRequired">\n          <div class="mdc-layout-grid__cell--span-12">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-action" (click)="displayShortText()" *ngIf="!displayEllipsis() && ellipsisRequired">\n          <div class="mdc-layout-grid__cell--span-12">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>\n    <span *ngSwitchCase="\'PARAGRAPH\'" class="cf-field-paragraph">\n      \x3c!-- <span class="cf-field"> --\x3e\n        <cf-paragraph [field]="field"\n          [sourceType]="sourceType"\n          [sourceIdentifier]="sourceIdentifier"\n          [sourceIndex]="sourceIndex" \n          [widgetArrayIndex]="widgetArrayIndex" \n          [form]="form" \n          [keyMap]="keyMap"\n          [field]="field"\n          [displayMode]="displayMode"\n          [originalData]="originalData"\n          [fieldControl]="fieldControl"\n          [dependencies]="dependencies"\n          (onFieldChange)="onParagraphChange($event)"\n          (onButtonClick)="buttonClick($event)"\n          ></cf-paragraph>\n        \x3c!-- </span> --\x3e\n    </span>\n    <span *ngSwitchCase="\'MULTI_IMAGE\'">\n      <cf-multi-image [field]="field" [disabled]="isFieldDisabled"></cf-multi-image>\n      <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n    </span>\n    <span *ngSwitchCase="\'UPLOAD\'">\n      <cf-file-uploader [field]="field" [disabled]="isFieldDisabled"></cf-file-uploader>\n    </span>\n    <span *ngSwitchCase="\'EMAIL\'">\n      <a href="mailto:{{getValue(field, value)}}">{{getValue(field, value)}}</a>\n    </span>\n    <span *ngSwitchDefault>\n      \x3c!-- displayFullText(value) --\x3e\n      <span [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}" [style.text-align]="textAlign" *ngIf="!asBubble; else elseAsBubble">\n        <span *ngIf="displayEllipsis(); else elseValue" (click)="displayFullText()" class="cf-field-short-value" [innerHtml]="getValue(field, value)">\n          ...\n        </span>\n        <ng-template #elseValue>\n          <span (click)="displayShortText()" class="cf-field-value" [innerHtml]="getValue(field, value)">\n          </span>\n        </ng-template> \n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]="getValue(field, value)">\n          <mat-chip class="cf-small-bubble" [color]="bubbleColor" selected>{{getValue(field, value)}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>\n  </span>\n\n  <span *ngIf="form && fieldControl && matcher && field.displayMode != \'LABEL\' && !isAddMore" class="cf-field" [ngClass]="{\'cf-field-lbl-horizontal\': (field.type == \'LABEL\' || field.type == \'BOOLEAN\') && field.fieldDisplayType == \'HORIZONTAL\', \'cf-field-lbl-for-label\': (field.type == \'LABEL\' || field.type == \'BOOLEAN\') && sourceType == \'FORM\'}">\n    <ng-container *ngTemplateOutlet="cffieldeditable"></ng-container>\n  </span>\n\n  <span *ngIf="form && fieldControl && matcher && field.displayMode != \'LABEL\' && isAddMore" class="cf-field">\n    <div class="mdc-layout-grid cf-form-add-more-row">\n      <div class="mdc-layout-grid__inner">\n        <div class="mdc-layout-grid__cell--span-{{isAddMore ? addMoreFieldDisplayInColumns : (addMoreFieldDisplayInColumns + addMoreButtonDisplayInColumns)}} mdc-layout-grid__cell--align-middle">\n          <ng-container *ngTemplateOutlet="cffieldeditable"></ng-container>\n        </div>\n        <div class="mdc-layout-grid__cell--span-{{addMoreButtonDisplayInColumns}} mdc-layout-grid__cell--align-middle" *ngIf="isAddMore">\n          <cf-button\n            *ngIf="fieldIndex != form.controls[field.key][\'controls\'].length - 1"\n            [disabled]="!(addMorePermission == null || (addMorePermission && (addMorePermission[\'subject\'] | can: addMorePermission[\'action\'])))"\n            [form]="form"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="minusButton"\n            class="cf-field-addmore cf-field-addmore-{{field.key}}"\n            (onClick)="removeField(field, fieldIndex)"\n          ></cf-button>\n          <cf-button\n            *ngIf="fieldIndex == form.controls[field.key][\'controls\'].length - 1"\n            [form]="form"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="plusButton"\n            class="cf-field-addmore cf-field-addmore-{{field.key}}"\n            (onClick)="addField(field)"\n          ></cf-button>\n        </div>\n      </div>\n    </div>\n  </span>\n</ng-template>\n\n<ng-template #cffieldeditable>\n  <span [ngSwitch]="field.type">\n    \x3c!-- [appearance]="appearance | lowercase"  --\x3e\n    \x3c!-- [appearance]="appearance | lowercase" --\x3e\n    <mat-form-field \n      class="cf-field"\n      [ngClass]="{\'cf-inbuild-type\': (field.type== \'TIME\' || field.type== \'COLOR\' || field.type== \'WEEK\' || field.type== \'MONTH\'|| field.type== \'NUMBER\'), \'cf-field-horizontal\': field.fieldDisplayType == \'HORIZONTAL\'}" \n      *ngIf="field.type != \'PARAGRAPH\' && field.type != \'MULTI_IMAGE\' && field.type != \'CHECKBOX\' && field.type != \'TOOLBAR\' && field.type != \'CHIPS\' && field.type != \'HTML_EDITOR\' && field.type != \'RADIO\' && field.type != \'SLIDER\' && field.type != \'TOGGLE_OPTION\' && field.type != \'UPLOAD\' && field.type != \'IMAGE\' && field.type != \'BOOLEAN\' && field.type != \'CALENDAR\' && field.type != \'JSON\' && field.type != \'LABEL\'">\n      <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}}" *ngIf="!(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'">\n        <strong>{{field.label}}</strong>\n        <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n        <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n          {{field.help.message}}\n        </span>\n      </mat-label>\n      \x3c!-- <mat-label class="cf-field-lbl" *ngIf="(hideLabel == true)"> \n      </mat-label> --\x3e\n\n      <mat-icon \n        *ngIf="field.icon" \n        matPrefix\n        aria-hidden="true" \n        [attr.aria-label]="field.icon" \n        class="cf-field-icon" \n      >{{field.icon}}</mat-icon>\n\n      <span *ngSwitchCase="\'TEXT\'">\n        <input  \n          matInput \n          [id]="field.key" \n          [formControl]="fieldControl" \n          [errorStateMatcher]="matcher" \n          [maxLength]="maxLength"\n          [placeholder]="field.placeholder"\n          [disabled]="isFieldDisabled"\n          class="mat-input-element cf-field-text cf-field-text-{{field.key}}"\n          (input)="onInputChange($event)"/>\n      </span>\n      \x3c!-- <input  \n        *ngSwitchCase="\'HIDDEN\'" \n        matInput \n        type="hidden"\n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n      > --\x3e\n\n      \x3c!-- [mat-autosize]="\'true\'" --\x3e\n      <textarea\n        *ngSwitchCase="\'TEXTAREA\'" \n        matInput \n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [maxLength]="maxLength"\n        rows="{{rows}}"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-textarea cf-field-textarea-{{field.key}}"\n        (input)="onInputChange($event)"> \n      </textarea>\n      \x3c!-- <br/> --\x3e  \n      <mat-hint hintLabel="end" *ngIf="field.type == \'TEXTAREA\' && maxLength && maxLength > 0 && maxLength != 1000000"><strong>{{fieldControl.value.length}}</strong> / {{maxLength}} characters</mat-hint>\n\n      <input \n        *ngSwitchCase="\'COLOR\'" \n        matInput \n        type="color"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-color cf-field-color-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'EMAIL\'" \n        matInput \n        type="email"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [maxLength]="maxLength"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-email cf-field-email-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'MONTH\'" \n        matInput \n        type="month"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [maxLength]="maxLength"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-month cf-field-month-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'NUMBER\'" \n        matInput \n        type="number"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [min]="min"\n        [max]="max"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-number cf-field-number-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'PASSWORD\'" \n        matInput \n        type="password"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [maxLength]="maxLength"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-password cf-field-password-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'TIME\'" \n        matInput \n        type="time"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-time cf-field-time-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <input \n        *ngSwitchCase="\'WEEK\'" \n        matInput \n        type="week"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        [errorStateMatcher]="matcher"\n        [placeholder]="field.placeholder"\n        [disabled]="isFieldDisabled"\n        class="mat-input-element cf-field-week cf-field-week-{{field.key}}"\n        (input)="onInputChange($event)"/>\n      <span *ngSwitchCase="\'DROPDOWN\'">\n        <mat-select\n          [id]="field.key" \n          [formControl]="fieldControl"\n          [errorStateMatcher]="matcher"\n          [multiple]="field[\'multiselect\']"\n          [placeholder]="field.placeholder"\n          [disabled]="isFieldDisabled"\n          class="mat-input-element cf-field-dropdown cf-field-dropdown-{{field.key}}"\n          (selectionChange)="onChange($event)">\n          <mat-option class="mat-option" *ngIf="field[\'defaultOption\']">{{field[\'defaultOption\']}}</mat-option>\n          <mat-option class="mat-option" *ngFor="let option of field[\'options\']" [value]="option.key" [disabled]="option.disabled" >{{option.value}}</mat-option>\n        </mat-select>\n      </span>\n      <span *ngSwitchCase="\'AUTOCOMPLETE\'"> \n        <input \n          matInput \n          [id]="field.key"  \n          [formControl]="fieldControl" \n          [errorStateMatcher]="matcher"\n          [attr.aria-label]="field.label" \n          [placeholder]="field.placeholder"\n          [matAutocomplete]="auto"\n          class="mat-input-element cf-field-autocomplete cf-field-autocomplete-{{field.key}}"\n          [disabled]="isFieldDisabled"\n          (input)="onInputChange($event)"/>\n        <mat-autocomplete \n          #auto="matAutocomplete"\n          [displayWith]="autocompleteDisplayFn"\n          (optionSelected)="onAutocompleteChange($event)">\n          <mat-option \n            class="mat-option cf-field-autocomplete-option cf-field-autocomplete-option-{{field.key}}" \n            *ngIf="field[\'defaultOption\']">\n            {{field[\'defaultOption\']}}\n          </mat-option>\n          <mat-option \n            class="mat-option cf-field-autocomplete-option cf-field-autocomplete-option-{{field.key}}" \n            *ngFor="let option of field[\'options\']" \n            [value]="option" \n            [disabled]="option.disabled" >\n            <span [innerHTML]="option.value | highlight: highlightAutoCompleteText"></span>\n          </mat-option>\n          <mat-option *ngIf="(field[\'options\'])?.length==0 && autoCompleteInputHasValue">\n            {{field[\'noRecordFound\'] ? field[\'noRecordFound\'] : \'No Result Found\'}}\n          </mat-option>\n        </mat-autocomplete>\n      </span> \n      \x3c!-- <cf-button\n        matSuffix\n        *ngIf="hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == \'TOOLTIP\' && field.help.message)"\n        [button]="textClearButton"\n        class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n        (onClick)="cleanValue()"\n      ></cf-button> --\x3e\n      <cf-button\n        matSuffix\n        *ngIf="hasFieldNavigate"\n        [button]="routeToButton"\n        class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n        (onClick)="resolvedValue = \'\'"\n      ></cf-button> \n      <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n\n      \x3c!-- <ng-container *ngTemplateOutlet="cfHelp;"></ng-container> --\x3e\n      <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint">\n        <mat-icon \n          aria-hidden="true" \n          [attr.aria-label]="field.help.message" \n          class="cf-field-hint-icon">\n          {{field.help.icon ? field.help.icon : \'live_help\'}}\n        </mat-icon>\n        <span>{{field.help.message}}</span>\n      </mat-hint>\n\n      <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n    </mat-form-field>\n\n    <span *ngSwitchCase="\'CALENDAR\'">\n      \x3c!-- [appearance]="appearance | lowercase" --\x3e\n      <mat-form-field \n        class="cf-field" \n        *ngIf="dateRange">\n        <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}}" *ngIf="!(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'" class="cf-field-label">\n          <strong>{{field.label}}</strong>\n          <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n          <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n            {{field.help.message}}\n          </span>\n        </mat-label>\n        <mat-date-range-input [formGroup]="fieldControl" [rangePicker]="datePicker" >\n          <input \n            matStartDate\n            matInput\n            [id]="field.key" \n            formControlName="startDate" \n            [min]="field[\'minDate\']"\n            [disabled]="isFieldDisabled"\n            [errorStateMatcher]="matcher"\n            placeholder="Start date"\n            (dateChange)="onDateChange($event, \'startDate\')">\n          <input \n            matEndDate\n            matInput\n            [id]="field.key" \n            [max]="field[\'maxDate\']"\n            [disabled]="isFieldDisabled"\n            [errorStateMatcher]="matcher"\n            formControlName="endDate" \n            placeholder="End date"\n            (dateChange)="onDateChange($event, \'endDate\')">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]="datePicker" ></mat-datepicker-toggle>\n        <mat-date-range-picker #datePicker ></mat-date-range-picker>\n\n        \x3c!-- <cf-button\n          matSuffix\n          *ngIf="hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == \'TOOLTIP\' && field.help.message)"\n          [button]="textClearButton"\n          class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n          (onClick)="cleanValue()"\n        ></cf-button> --\x3e\n        <cf-button\n          matSuffix\n          *ngIf="hasFieldNavigate"\n          [button]="routeToButton"\n          class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n          (onClick)="resolvedValue = \'\'"\n        ></cf-button> \n        <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n\n        \x3c!-- <ng-container *ngTemplateOutlet="cfHelp;"></ng-container> --\x3e\n        <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint">\n          <mat-icon \n            aria-hidden="true" \n            [attr.aria-label]="field.help.message" \n            class="cf-field-hint-icon">\n            {{field.help.icon ? field.help.icon : \'live_help\'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n      </mat-form-field>\n      \x3c!-- [appearance]="appearance | lowercase" --\x3e\n      <mat-form-field \n        class="cf-field" \n        *ngIf="!dateRange">\n        <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}}" *ngIf="!(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'" class="cf-field-label">\n          <strong>{{field.label}}</strong>\n          <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n          <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n            {{field.help.message}}\n          </span>  \n        </mat-label>      \n        <input \n            matInput \n            [matDatepicker]="picker"\n            [id]="field.key" \n            [formControl]="fieldControl" \n            [matDatepickerFilter]="field[\'filter\']"\n            [min]="field[\'minDate\']"\n            [max]="field[\'maxDate\']"\n            [errorStateMatcher]="matcher"\n            [disabled]="isFieldDisabled"\n            class="mat-input-element cf-field-datepicker cf-field-datepicker-{{field.key}}" \n            (dateChange)="onDateChange($event, \'\')" />\n        <mat-datepicker-toggle   matSuffix [for]="picker" ></mat-datepicker-toggle>\n        <mat-datepicker #picker ></mat-datepicker>\n        \x3c!-- <cf-button\n          matSuffix\n          *ngIf="hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == \'TOOLTIP\' && field.help.message)"\n          [button]="textClearButton"\n          class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n          (onClick)="cleanValue()"\n        ></cf-button> --\x3e\n        <cf-button\n          matSuffix\n          *ngIf="hasFieldNavigate"\n          [button]="routeToButton"\n          class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n          (onClick)="resolvedValue = \'\'"\n        ></cf-button>\n\n        \x3c!-- <ng-container *ngTemplateOutlet="cfHelp;"></ng-container> --\x3e\n        <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint">\n          <mat-icon \n            aria-hidden="true" \n            [attr.aria-label]="field.help.message" \n            class="cf-field-hint-icon">\n            {{field.help.icon ? field.help.icon : \'live_help\'}}\n          </mat-icon>\n          <span>{{field.help.message}}</span>\n        </mat-hint>\n        <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n        <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n      </mat-form-field>\n    </span>\n\n    <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}} cf-field-lbl-inline" \n      *ngIf="!(field.type != \'MULTI_IMAGE\' && field.type != \'TOOLBAR\' && field.type != \'CHECKBOX\' && field.type != \'HTML_EDITOR\' && field.type != \'RADIO\' && field.type != \'SLIDER\' && field.type != \'UPLOAD\' && field.type != \'IMAGE\' && field.type != \'BOOLEAN\' && field.type != \'JSON\' && field.type != \'LABEL\') && !(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'">\n      <strong>{{field.label}}</strong>\n      <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n      <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n      \x3c!-- <span  \n        *ngIf="field.help && field.help.message && hasFieldNavigate && field.help.displayType == \'TOOLTIP\'" \n        matTooltip="{{field.help.message}}"\n        matTooltipPosition="above"\n        class="cf-field-hint cf-field-hint-{{field.key}}">  \n        <mat-icon  \n          aria-hidden="true" \n          [attr.aria-label]="field.help.message" \n          class="cf-field-hint-icon cf-field-hint-icon-{{field.key}}" \n        >{{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n      </span>   --\x3e\n      <span *ngIf="field.help && field.help.message && field.help.displayType == \'RIGHT_MODAL\'">\n        <ng-container \n          *ngTemplateOutlet="cfhelpmodal" \n        ></ng-container>\n      </span>  \n      <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n        {{field.help.message}}\n      </span>\n    </mat-label>\n    <span *ngSwitchCase="\'HTML_EDITOR\'" >\n      <div class="cf-field-nm">\n        <quill-editor \n          [ngClass]="{\'cf-editor-invalid\': isEditorErrorState(), \'cf-disable\': isFieldDisabled}"  \n          class="cf-field-nm"\n          [styles]="{height: height + \'px\',\'margin-bottom\': isEditorErrorState() ? 0 : \'1.25em\'}"\n          (onEditorChanged)="onHtmlEditorChange($event)"\n          [id]="field.key" \n          [formControl]="fieldControl" \n          [disabled]="isFieldDisabled"\n          [placeholder]="field.placeholder"\n          [readOnly]="isFieldDisabled"\n          [modules]="editorOptions" \n        >\n        </quill-editor>\n        <span *ngIf="isEditorErrorState()" class="cf-field-editor-error">\n          <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n        </span> \n        <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n      </div>\n    </span>\n\n    <span *ngSwitchCase="\'CHECKBOX\'" class="mat-input-element cf-field-chk-group">\n      <div \n        [ngClass]="{\'cf-field-checkbox-horizontal\': field[\'displayType\'] == \'INLINE\'}"\n        class="cf-field-nm"\n        *ngIf="field[\'displayTemplate\'] == \'CLASSIC\'; else elseValue">\n        <span \n          *ngFor="let option of field[\'options\']" \n          class="cf-field-chk">\n          <mat-checkbox \n              class="mat-checkbox mat-accent cf-field-chk-inner cf-field-chk-inner-{{field.key}}"\n              [ngClass]="{\'cf-field-checkbox-horizontal\': field[\'displayType\'] == \'INLINE\'}"\n              [formControl]="fieldControl[\'controls\'][option.key]" \n              [disabled]="option.disabled || isFieldDisabled"\n              (change)="onCheckboxChange(option, $event)">\n            {{option.value}}\n          </mat-checkbox>\n          <i *ngIf="option.description" class="cf-field-chk-desc cf-field-chk-desc-{{field.key}}" [ngClass]="{\'cf-disabled\': option.disabled || isFieldDisabled}">{{option.description}}</i>\n        </span>\n        <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n      </div>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet="cfoptiontemplate"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase="\'RADIO\'">\n      \x3c!-- =={{field | json}} --\x3e\n      <mat-radio-group \n        *ngIf="field[\'displayTemplate\'] == \'CLASSIC\'; else elseValue"\n        [id]="field.key" \n        [formControl]="fieldControl" \n        class="cf-field-nm cf-field-radio-group cf-field-radio-group-{{field.key}}"\n        [ngClass]="{\'cf-field-radio-horizontal\': field[\'displayType\'] == \'INLINE\'}"\n        (change)="onRadioChange($event)"> \n          <span \n          [ngClass]="{\'cf-field-radio-horizontal-padding\': field[\'displayType\'] == \'INLINE\'}"\n          *ngFor="let option of field[\'options\']">\n            <mat-radio-button \n              class="mat-radio-button mat-accent cf-field-radio cf-field-radio-{{field.key}}"\n              [value]="option.key" \n              [disabled]="option.disabled || isFieldDisabled">\n              {{option.value}}\n            </mat-radio-button>\n            <br *ngIf="option.description"/><i *ngIf="option.description" class="cf-field-radio-desc" [ngClass]="{\'cf-disabled\': option.disabled || isFieldDisabled}">{{option.description}}</i>\n          </span>\n          <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n        </mat-radio-group>\n      <ng-template #elseValue>\n        <ng-container *ngTemplateOutlet="cfoptiontemplate"></ng-container>\n      </ng-template>\n    </span>\n    <span *ngSwitchCase="\'SLIDER\'">\n      <mat-slider\n        [id]="field.key" \n        [formControl]="fieldControl"\n        [invert]="field[\'invert\']"\n        [max]="field[\'max\']"\n        [min]="field[\'min\']"\n        [step]="field[\'step\']"\n        [thumbLabel]="field[\'thumbLabel\']"\n        [tickInterval]="field[\'tickInterval\']"\n        [vertical]="field[\'vertical\']"\n        class="mat-slider cf-field-slider cf-field-slider-{{field.key}}"\n        [disabled]="isFieldDisabled"\n        (change)="onSliderChange($event)">\n      </mat-slider>\n      <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n    </span>\n    <span *ngSwitchCase="\'TOGGLE_OPTION\'">\n      <mat-slide-toggle \n        [formControl]="fieldControl"\n        [color]="field[\'color\']" \n        [checked]="field[\'checked\']"\n        [disabled]="isFieldDisabled"\n        class="mat-slide-toggle cf-field-toggle cf-field-toggle-{{field.key}}"\n        (change)="onToggleChange($event)">\n        {{field[\'label\']}}\n        <span *ngIf="field[\'description\']">{{field[\'description\']}}</span>\n      </mat-slide-toggle>\n    </span>\n    <span *ngSwitchCase="\'UPLOAD\'">\n      <cf-file-uploader [field]="field" [disabled]="isFieldDisabled"></cf-file-uploader>\n      <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n    </span>\n    <span *ngSwitchCase="\'MULTI_IMAGE\'">\n      <cf-multi-image [field]="field" [disabled]="isFieldDisabled"></cf-multi-image>\n      <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n    </span>\n    <span *ngSwitchCase="\'IMAGE\'"\n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}">\n      <img class="cf-field-image cf-field-image-{{field.key}}" [src]="imagePath" \n        [style.width.px]="field[\'width\'] ? field[\'width\'] : \'auto\'">\n    </span>\n    <span *ngSwitchCase="\'BOOLEAN\'" \n      [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}"\n      class="mat-input-element cf-field-boolean cf-field-boolean-{{field.key}}">\n      <mat-icon class="cf-field-boolean-success" *ngIf="resolvedValue == true" aria-hidden="true">done</mat-icon>\n      <mat-icon class="cf-field-boolean-failure" *ngIf="resolvedValue == false" aria-hidden="true">close</mat-icon>\n    </span>\n    <span *ngSwitchCase="\'JSON\'" class="cf-field-json cf-field-json-{{field.key}}">\n      <div class="cf-field-nm mdc-layout-grid cf-field-showmore-pannel cf-field-showmore-pannel-{{field.key}}">\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-content">\n          <div class="mdc-layout-grid__cell--span-12">\n            <div *ngIf="displayEllipsis(); else elseValue" (click)="displayFullText()" class="cf-field-short-value">\n              {{getValue(field, value)}}...\n            </div>\n            <ng-template #elseValue>\n              <span (click)="displayShortText()" class="cf-field-value">\n                <pre>{{getValue(field, value) | json}}</pre>\n              </span>\n            </ng-template>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-action" (click)="displayFullText()" *ngIf="displayEllipsis() && ellipsisRequired">\n          <div class="mdc-layout-grid__cell--span-12">\n            Show More\n            <mat-icon>expand_more</mat-icon>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-showmore-pannel-action" (click)="displayShortText()" *ngIf="!displayEllipsis() && ellipsisRequired">\n          <div class="mdc-layout-grid__cell--span-12">\n            Show Less\n            <mat-icon>expand_less</mat-icon>\n          </div>\n        </div>\n      </div>\n    </span>  \n    <span *ngSwitchCase="\'CHIPS\'">\n      <cf-chips [field]="field"  \n        [formControl]="fieldControl"\n        [disabled]="isFieldDisabled"\n        [errorMatcher]="matcher"\n        (onListChange)="onChipsListChange($event)"\n      ></cf-chips>\n    </span>\n    <span *ngSwitchCase="\'PARAGRAPH\'" class="cf-field-paragraph">\n      \x3c!-- [sourceType]="\'FORM\'" --\x3e\n      <cf-paragraph [field]="field"\n        [sourceType]="sourceType"\n        [sourceIdentifier]="sourceIdentifier"\n        [sourceIndex]="sourceIndex" \n        [widgetArrayIndex]="widgetArrayIndex"\n        [form]="form" \n        [keyMap]="keyMap"\n        [field]="field"\n        [displayMode]="displayMode"\n        [originalData]="originalData"\n        [fieldControl]="fieldControl"\n        [dependencies]="dependencies"\n        (onFieldChange)="onParagraphChange($event)"\n        (onButtonClick)="buttonClick($event)"\n        ></cf-paragraph>\n      <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n    </span>\n    <span *ngSwitchCase="\'TOOLBAR\'">\n      <cf-toolbar [field]="field"></cf-toolbar>\n    </span>\n    <span *ngSwitchDefault>\n      \x3c!-- displayFullText(value) --\x3e\n      <span [ngClass]="{\'cf-field-value-wrapper-horizontal\': field.fieldDisplayType != \'HORIZONTAL\', \'cf-field-value-wrapper-vertical\': field.fieldDisplayType == \'HORIZONTAL\'}" [style.text-align]="textAlign" *ngIf="!asBubble; else elseAsBubble">\n        <span class="cf-field-short-value" [innerHtml]="resolvedValue">\n          ...\n        </span>\n      </span>\n      <ng-template #elseAsBubble>\n        <mat-chip-list [attr.aria-label]="resolvedValue">\n          <mat-chip class="cf-small-bubble" [color]="bubbleColor" selected>{{resolvedValue}}</mat-chip>\n        </mat-chip-list>\n      </ng-template>\n    </span>    \n  </span>\n</ng-template>\n\n<ng-template #cfhelplaintext>\n  <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint cf-field-hint-nm">\n    <mat-icon \n      aria-hidden="true" \n      [attr.aria-label]="field.help && field.help.message" \n      class="cf-field-hint-icon">{{field.help && field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n    {{field.help.message}}\n  </mat-hint>\n</ng-template>\n\n<ng-template #cfhelpmodal>\n    <mat-sidenav #sidenav [position]="\'end\'" (keydown.escape)="close()" disableClose>\n      <div class="mdc-layout-grid cf-crud-search-modal cf-crud-search-modal-{{field.key}}">\n        <div class="mdc-layout-grid__inner">\n          <div class="mdc-layout-grid__cell--span-9 cf-field-help-modal-header">\n            <strong>{{field.help.title}}</strong>\n          </div>\n          <div class="mdc-layout-grid__cell--span-3 mdc-layout-grid--align-right">\n            <cf-button\n              [sourceIdentifier]="field.key"\n              [sourceIndex]="\'0\'"\n              [widgetArrayIndex]="\'0\'"\n              [button]="helpModalButton"\n              align = "right"\n              (onClick)="close()"\n            ></cf-button>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-help-modal-divider">\n          <div class="mdc-layout-grid__cell--span-12">\n            <mat-divider class="cf-field-help-divider"></mat-divider>\n          </div>\n        </div>\n        <div class="mdc-layout-grid__inner cf-field-help-modal-description">\n          <div class="mdc-layout-grid__cell--span-12">\n            {{field.help.message}}\n          </div>\n        </div>\n      </div>\n    </mat-sidenav>\n    <br/>\n    <mat-sidenav-content class="cf-field-help-modal">\n      <span \n        matTooltip="Click for help"\n        matTooltipPosition="above"\n        class="cf-field-hint cf-field-hint-{{field.key}}"\n        (click)="open()"\n        >\n        <mat-icon \n          aria-hidden="true"  \n          [attr.aria-label]="field.help.message" \n          class="cf-field-hint-icon cf-field-hint-icon-{{field.key}}" \n          (click)="open()"\n        >{{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n      </span>  \n    </mat-sidenav-content>\n</ng-template>\n\n<ng-template #cfoptiontemplate> \n  <mat-selection-list \n    #listView \n    [multiple]="field.type == \'CHECKBOX\'" \n    (selectionChange)="onOptionChange($event)"\n    class="cf-field-list cf-field-nm">\n    <ng-container \n      *ngFor="let option of field[\'options\']; let index=index,let last = last">\n      <mat-list-option \n        *ngIf="index < showLess" \n        [value]="option.key" \n        [selected]="field.type == \'CHECKBOX\' ? option.checked : option.key == fieldControl.value"\n        [disabled]="option.disabled || isFieldDisabled"\n        class="cf-field-list-option">\n        <img \n          *ngIf="option.image || field[\'defaultImageUrl\']" \n          matListAvatar \n          [src]="option.image" \n          (error)="onListImageLoadError($event)"  \n          alt="" \n          class="cf-field-list-image"/>\n          <h3 matLine class="primary">\n            {{option.value}}\n          </h3>\n          <p matLine class="secondary">\n            <span>{{option.description}}</span>\n          </p>\n        <mat-divider *ngIf="!last"></mat-divider>\n      </mat-list-option>\n    </ng-container>\n  </mat-selection-list>\n  <span class="cf-show-all-btn">\n    <button  mat-button (click)="onShowAllOptions()" *ngIf="showLess < field[\'options\'].length">\n      {{field[\'showAllLabel\'] ? field[\'showAllLabel\'] : \'Show All\'}}\n      <mat-icon aria-hidden="true">keyboard_arrow_down</mat-icon>\n    </button>\n  </span>\n  <ng-container *ngTemplateOutlet="cfhelplaintext"></ng-container>\n</ng-template>',encapsulation:core.ViewEncapsulation.None,styles:[".cf-field-lbl,.cf-field-lbl-for-label{display:block}.cf-field-lbl-horizontal{padding-top:20px}.cf-field-lbl-horizontal-premitive{padding-top:13px}.cf-field-hint-inline{text-align:right}.cf-field-hint-nm{font-size:75%}.cf-field-hint-nm .cf-field-hint-icon{height:1em;width:1em}.cf-field-hint-icon{font-size:100%!important}.cf-field-hint .mat-icon{margin-right:4px!important;vertical-align:middle!important}.cf-field{width:100%}.cf-field-chk-group{padding-top:24px}.cf-field-chk{display:flex;flex-direction:column;margin:0}.cf-field-chk-inner{margin:5px 0}.cf-field-chk-desc{padding-left:22px}.cf-field-radio-group{display:flex;flex-direction:column;margin:0}.cf-field-radio{margin:5px 0}.cf-field-radio-desc{padding-left:26px}.cf-disabled{color:rgba(0,0,0,.54)}.cf-field-slider{width:100%}.cf-field-slider .mat-slider-wrapper{top:16px!important}.cf-field-toggle{height:48px!important}.cf-field-help-modal{margin-left:0!important;width:20px}.cf-field-help-modal-header{font-size:20px;font-weight:500;padding:16px 16px 8px}.cf-field-help-modal-divider{padding:12px 16px 0}.cf-field-help-modal-description{padding:16px 16px 8px}.cf-form-add-more-row{padding:0!important}.cf-field-upload{vertical-align:middle}.cf-field-upload .file-input-text{display:none!important}.cf-field-img{padding-top:5px}.cf-field-showmore-pannel{background-color:#eff0f1;border-radius:3px;margin-bottom:1em!important;overflow:auto;padding:0 8px!important;width:auto}.cf-field-showmore-pannel-content{padding-bottom:5px}.cf-field-showmore-pannel-action{border-top:1px solid #d3d3d3;color:grey;padding-top:5px;text-align:center}.cf-field-horizontal-container{padding:0!important}.cf-field-horizontal-container label#mat-form-field-label-1{color:transparent}.cf-field-horizontal-container .cf-field-nm{margin-top:6px}.cf-field-boolean-success,.cf-success{color:green}.cf-failure,.cf-field-boolean-failure{color:red}.cf-field-boolean{margin-bottom:1.25em!important}.cf-field-addmore .mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{min-width:30px!important}.cf-small-bubble{box-sizing:border-box!important;font-size:10px;line-height:24px;margin-top:12px!important;min-height:24px!important;min-width:unset;padding:0 8px!important}.cf-field-value-wrapper-horizontal{padding-top:8px}.cf-field-value-wrapper-vertical{display:block;padding-bottom:12px}.cf-field-list{padding-bottom:8px}.cf-field-list>div{margin-bottom:1.25em;text-align:center}.cf-field-list .cf-field-list-option[aria-selected=true]{background:rgba(203,197,197,.2)!important}.cf-field-list .cf-field-list-option .cf-field-list-image{border:1px solid #4d4d4d;height:30px!important;width:30px!important}.cf-field-list .cf-field-list-option .primary{margin:5px 0}.cf-field-list .cf-field-list-option .secondary{font-style:italic}.cf-field-list .cf-field-list-option:not(:last-child){border-bottom:1px solid #ebebeb}.cf-field-list .cf-field-list-option:nth-last-child(2){border-bottom:none}.highlight{font-weight:700}.cf-show-all-btn{display:block}.cf-field-paragraph .cf-field{width:auto!important}.cf-field-paragraph .cf-field .cf-field-lbl,.cf-field-paragraph .cf-field .cf-field-value-wrapper-horizontal{display:inline;width:auto!important}.cf-field-lbl-inline{color:rgba(0,0,0,.54);font-size:10px;height:10px;line-height:10px;margin-bottom:8px}.cf-field-lbl-inline .mat-icon-button{color:rgba(0,0,0,.54);height:10px;line-height:8px;width:30px}.mat-slide-toggle{line-height:unset;margin-top:4px}.ql-toolbar.ql-snow{border:none;border-radius:4px 4px 0 0;box-shadow:0 0 1px -1px rgba(0,0,0,.2),0 0 1px 0 rgba(0,0,0,.14),0 0 3px 0 rgba(0,0,0,.12)}.ql-container.ql-snow{border:none;border-radius:0 0 4px 4px;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)!important}.cf-field-editor-error{font-size:75%}.cf-field-editor-error .mat-error{margin-bottom:1.25em;margin-top:.5416666667em}.cf-editor-invalid .ql-toolbar.ql-snow{border:1px solid #f44336;border-bottom:none}.cf-editor-invalid .ql-container.ql-snow{border:1px solid #f44336}.cf-field-chk-group .cf-field-chk:last-child,.cf-field-radio-group{margin-bottom:1.25em!important}.cf-field-radio-horizontal{display:inline-block}.cf-field-radio-horizontal-padding{padding-right:10px}.cf-field-checkbox-horizontal{display:flex;padding-right:10px}.cf-disable,.cf-disable .ql-container,.cf-disable .ql-toolbar{opacity:.38}.cf-disable .mat-list-item-disabled{background:none}.cf-disable.cf-field-list:hover{outline:none}input[type=color],input[type=month],input[type=number],input[type=time],input[type=week]{-webkit-appearance:none;border:none;height:16px}input[type=color]::-webkit-color-swatch-wrapper{padding:0}input[type=color]::-webkit-color-swatch{border:none}"]}]}],FieldComponent.ctorParameters=function(){return[{type:router.Router},{type:ability.Ability}]},FieldComponent.propDecorators={sourceType:[{type:core.Input}],sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],form:[{type:core.Input}],fieldControl:[{type:core.Input}],fieldIndex:[{type:core.Input}],field:[{type:core.Input}],originalData:[{type:core.Input}],_displayMode:[{type:core.Input}],displayMode:[{type:core.Input}],hideLabel:[{type:core.Input}],value:[{type:core.Input}],isAddMore:[{type:core.Input}],addMorePermission:[{type:core.Input}],device:[{type:core.Input}],displayInColumns:[{type:core.Input}],dependencies:[{type:core.Input}],row:[{type:core.Input}],keyMap:[{type:core.Input}],onDependentFieldChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onFormChange:[{type:core.Output}],onButtonClick:[{type:core.Output}],listView:[{type:core.ViewChild,args:["listView"]}],sidenav:[{type:core.ViewChild,args:["sidenav"]}]};var FieldLayoutComponent=function(){function t(t){this.ability=t,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){},t.prototype.initField=function(){},t.prototype.isRequired=function(){var t,e,n=!1;if(this.field.validations&&this.field.validations.length>0)try{for(var i=__values(this.field.validations),o=i.next();!o.done;o=i.next()){"required"==o.value.message.key&&(n=!0)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}return n},t.prototype.isValidDisplayType=function(t){return!!this.field&&this.field.fieldDisplayType==t},t}();FieldLayoutComponent.decorators=[{type:core.Component,args:[{selector:"cf-field-layout",template:"<p>field-layout works!</p>\n",styles:[""]}]}],FieldLayoutComponent.ctorParameters=function(){return[{type:ability.Ability}]},FieldLayoutComponent.propDecorators={sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],form:[{type:core.Input}],field:[{type:core.Input}],displayMode:[{type:core.Input}],value:[{type:core.Input}],dependencies:[{type:core.Input}],row:[{type:core.Input}],keyMap:[{type:core.Input}]};var FieldHorizontalLayoutComponent=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.ngOnInit=function(){this.initField()},e.prototype.displayHorizonalForm=function(){return this.isValidDisplayType("HORIZONTAL")},e}(FieldLayoutComponent);FieldHorizontalLayoutComponent.decorators=[{type:core.Component,args:[{selector:"cf-field-horizontal-layout",template:'\x3c!-- <div class="form-group row" *ngIf="displayHorizonalForm()">\n  <mat-form-field>\n    <mat-label class="label col-md-3 col-form-label">\n      {{field.label}}\n      <span class="required-label" *ngIf="isRequired()">*</span>\n    </mat-label> --\x3e\n    \x3c!-- <div class="col-md-9"> --\x3e\n      <cf-field\n        [sourceIdentifier]="sourceIdentifier" \n        [sourceIndex]="sourceIndex" \n        [form]="form" \n        [field]="field" \n        [displayMode]="displayMode" \n        [value]="value" \n        [dependencies]="dependencies"\n        [row]="row"\n        [keyMap]="keyMap"\n      ></cf-field>\n    \x3c!-- </div> --\x3e\n  \x3c!-- </mat-form-field>\n</div> --\x3e',encapsulation:core.ViewEncapsulation.None,styles:[""]}]}];var FieldInlineLayoutComponent=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.ngOnInit=function(){this.initField()},e.prototype.displayInlineForm=function(){return this.isValidDisplayType("INLINE")},e}(FieldLayoutComponent);FieldInlineLayoutComponent.decorators=[{type:core.Component,args:[{selector:"cf-field-inline-layout",template:'<div class="form-group row" *ngIf="displayInlineForm()" >\n    <div class="col-md-12">\n      <mat-form-field>\n        \x3c!-- <mat-label>{{field.label}}</mat-label> --\x3e\n        <cf-field \n          [sourceIdentifier]="sourceIdentifier" \n          [sourceIndex]="sourceIndex" \n          [form]="form" \n          [field]="field" \n          [displayMode]="displayMode" \n          [value]="value" \n          [dependencies]="dependencies"\n          [row]="row"\n          [keyMap]="keyMap"\n        ></cf-field>\n      </mat-form-field>\n    </div>\n  </div>',encapsulation:core.ViewEncapsulation.None,styles:[""]}]}];var FieldVerticalLayoutComponent=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.ngOnInit=function(){this.initField()},e.prototype.displayVerticalForm=function(){return this.isValidDisplayType("INLINE")},e}(FieldLayoutComponent);FieldVerticalLayoutComponent.decorators=[{type:core.Component,args:[{selector:"cf-field-vertical-layout",template:'<div class="form-group" *ngIf="displayVerticalForm()">\n  <mat-form-field>\n    <mat-label class="label">\n      {{field.label}}\n      <span class="required-label" *ngIf="isRequired()">*</span>\n    </mat-label>\n    <cf-field \n      [sourceIdentifier]="sourceIdentifier" \n      [sourceIndex]="sourceIndex" \n      [form]="form" \n      [field]="field" \n      [displayMode]="displayMode" \n      [value]="value" \n      [dependencies]="dependencies"\n      [row]="row"\n      [keyMap]="keyMap"\n    ></cf-field>\n  </mat-form-field>\n</div>',encapsulation:core.ViewEncapsulation.None,styles:[""]}]}];var ListComponent=function(){function ListComponent(t,e){this.ability=t,this.breakpointObserver=e,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.onPageChange=new core.EventEmitter,this.onSortChange=new core.EventEmitter,this._expanded=!1,this.dataSource=new table.MatTableDataSource,this.cellCount=12,this.displayVertical=!1,this.formIndex=-1,this.inlineEditButtons=new Array,this.hasDisplayActions=!1,this.isInlineEditable=!1,this.inlineButtonSize="default",this.childRows=new Map,this.displayModes=new Array,this.columnNames=new Array,this.columnConfigs=new Array,this.selection=new collections.SelectionModel(!0,[]),this.hideCard=!1,this.hideHeader=!1,this.hideFooter=!1,this.pageSizeOptions=[5,10,25,100],this.rowCount=0,this.limit=0,this.rowColors=new Array,this.cellColors=new Array,this.showCard=!1,this.sortDirection="asc",this.tooltipPosition={top:0,left:0},AbilityUtils.setAbility(this.ability)}return Object.defineProperty(ListComponent.prototype,"listConfig",{get:function(){return this._listConfig},set:function(t){this._listConfig=t,this.setColumnNames(),this.setDetailColumnCount(),this.setCardVisibility()},enumerable:!1,configurable:!0}),Object.defineProperty(ListComponent.prototype,"record",{get:function(){return this._record},set:function(t){(!this.parent||this.parent&&JSON.stringify(t)!=JSON.stringify(this._record))&&(this._record=t,this.init(),this.setCardVisibility())},enumerable:!1,configurable:!0}),Object.defineProperty(ListComponent.prototype,"listReset",{get:function(){return this._listReset},set:function(t){this._listReset=t,this._listReset&&this.resetInlineEditButton("inlineEditButton","Edit","edit")},enumerable:!1,configurable:!0}),Object.defineProperty(ListComponent.prototype,"expanded",{get:function(){return this._expanded},set:function(t){this._expanded=t},enumerable:!1,configurable:!0}),Object.defineProperty(ListComponent.prototype,"contentPage",{set:function(t){this.dataSource.paginator=t},enumerable:!1,configurable:!0}),Object.defineProperty(ListComponent.prototype,"contentSort",{set:function(t){this.dataSource.sort=t},enumerable:!1,configurable:!0}),ListComponent.prototype.ngOnInit=function(){},ListComponent.prototype.init=function(){this.getLayout(),this.setPageSize(),void 0===this._record&&(this._record={total:10,pageNo:1,rows:[]}),this._record&&this._record.rows&&this._record.rows.length!=this.rowCount&&(this._record.rows=__spread(this._record.rows),this.dataSource.data=this._record.rows),this.resetInlineEditButton("inlineEditButton","Edit","edit"),this.populateAllChilds(),this.showRowEditable(),this.initCommonFormGroup(),this.setColors(),this.setIconPosition(),this.setFilterBar(),ListUtils.setCustomLayouts(this.listConfig)},ListComponent.prototype.sticky=function(){var t=document.querySelectorAll(".mat-toolbar"),e=document.getElementById("mySearch");if(e){var n=e.offsetTop;window.pageYOffset>n?(e.classList.add("sticky"),t.forEach((function(t){t.classList.add("sticky-header")}))):(e.classList.remove("sticky"),t.forEach((function(t){t.classList.remove("sticky-header")})))}},ListComponent.prototype.onScrolled=function(t){},ListComponent.prototype.setFilterBar=function(){this._listConfig.staticList.hasOnPageFilter&&!this._listConfig.hasColumnSelection&&(this.contentFilterColumnSpan=12),!this._listConfig.staticList.hasOnPageFilter&&this._listConfig.hasColumnSelection&&(this.columnSelectionColumnSpan=12)},ListComponent.prototype.setPageSize=function(){"ALL"==this._listConfig.pagination?this.limit=this._record&&this._record.rows?this._record.rows.length:10:this._listConfig.pageSize&&(this.limit=this._listConfig.pageSize)},ListComponent.prototype.setIconPosition=function(){this.iconPosition="BEFORE_TITLE",this._listConfig.header&&this._listConfig.header.icon&&this._listConfig.header.icon.position&&(this.iconPosition=this._listConfig.header.icon.position)},ListComponent.prototype.getFilterField=function(){return this.filterField={key:"pageFilter",label:"Filter",type:"TEXT",icon:"search",appearance:"STANDARD",isReadOnly:!1,fieldDisplayType:"INLINE",placeholder:"Type to display filtered list",value:""},this.filterField},ListComponent.prototype.getColumnSelectorField=function(){return this.columnSelectorField=ListUtils.getColumnSelectorField(this._listConfig),this.columnSelectorField},ListComponent.prototype.updateColumnDisplay=function(t){var e,n;console.log(t);try{for(var i=__values(this._listConfig.columns),o=i.next();!o.done;o=i.next()){var l=o.value;t.value.indexOf(ListUtils.getColumnKey(l))>-1?l.show=!0:l.show=!1}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.setColumnNames(),this.setDetailColumnCount()},ListComponent.prototype.inlinEditButton=function(t,e,n){return{identifier:t,type:"RAISED",label:e,color:"primary",size:"small",icon:n,onlyIcon:!1}},ListComponent.prototype.getColumnLabel=function(t){return ListUtils.getColumnLabel(t)},ListComponent.prototype.getColumnKey=function(t){return ListUtils.getColumnKey(t)},ListComponent.prototype.resetInlineEditButton=function(t,e,n){for(var i,o,l,a,r=0;r<this.columnConfigs.length;r++){if(!CollectionUtils.isEmpty(this._listConfig.actions))try{for(var d=(i=void 0,__values(this._listConfig.actions)),s=d.next();!s.done;s=d.next()){var c=s.value;if(null==c.permission||this.ability.can(c.permission.action,c.permission.subject)){this.hasDisplayActions=!0;break}}}catch(t){i={error:t}}finally{try{s&&!s.done&&(o=d.return)&&o.call(d)}finally{if(i)throw i.error}}if(this.hasDisplayActions)try{for(var p=(l=void 0,__values(this.columnConfigs[r].fields)),u=p.next();!u.done;u=p.next()){var g=u.value;if(!(FieldUtils.readOnlyField().indexOf(g.type)>-1)){this.isInlineEditable=!0;break}}}catch(t){l={error:t}}finally{try{u&&!u.done&&(a=p.return)&&a.call(p)}finally{if(l)throw l.error}}}if(this.inlineEditButtons=new Array,this._record&&this._record.rows)for(var m=0;m<this._record.rows.length;m++)this.inlineEditButtons.push(this.inlinEditButton(t,e,n)),this.displayModes[m]="VIEW";this.formIndex=-1,this.setColumnNames()},ListComponent.prototype.showRowEditable=function(){if(CollectionUtils.isEmpty(this._listConfig.actions)||(this.inlineButtonSize=this._listConfig.actions[0].size),this._record&&this._record.rows)for(var t=0;t<this._record.rows.length;t++)this._record.rows[t].showRowEditable&&this.setRowEditablity(t)},ListComponent.prototype.setRowEditablity=function(t){var e=this;if(-1!=this.formIndex&&this.formIndex!=t&&(this.inlineEditButtons[this.formIndex].identifier="inlineEditButton",this.inlineEditButtons[this.formIndex].label="Edit",this.inlineEditButtons[this.formIndex].icon="edit",this.inlineEditButtons[this.formIndex].size=this.inlineButtonSize,this.formIndex=-1),"Edit"==this.inlineEditButtons[t].label){if(this.inlineEditButtons[t].identifier="cancelInlineStaticList",this.inlineEditButtons[t].label="Cancel",this.inlineEditButtons[t].icon="close",this.inlineEditButtons[t].size=this.inlineButtonSize,this._record&&this._record.rows){for(var n=0;n<this._record.rows.length;n++)this.displayModes[n]="VIEW",n!=t&&(this.inlineEditButtons[n].identifier="inlineEditButton",this.inlineEditButtons[n].label="Edit",this.inlineEditButtons[n].icon="edit",this.inlineEditButtons[n].size=this.inlineButtonSize);this._record.rows[t].formDisplayMode?this.displayModes[t]=this._record.rows[t].formDisplayMode:this.displayModes[t]="EDIT"}this.initFormGroup(t),this.formIndex=t,this._listReset=!1}else this.inlineEditButtons[t].identifier="inlineEditButton",this.inlineEditButtons[t].label="Edit",this.inlineEditButtons[t].icon="edit",this.inlineEditButtons[t].size=this.inlineButtonSize,this.formIndex=-1;var i=this.inlineEditButtons[t];this.inlineEditButtons[t]=void 0,setTimeout((function(){return e.inlineEditButtons[t]=i}),100)},ListComponent.prototype.populateAllChilds=function(){if(this._record&&this._record.rows&&this._record.rows.length>0)for(var t=0;t<this._record.rows.length;t++)this.childRows[t]=this.getChildRows(this._record.rows[t])},ListComponent.prototype.getChildRows=function(t){if(this._listConfig&&this._listConfig.child&&t){var e=this._listConfig.child.recordIdentifier?t[this._listConfig.child.recordIdentifier]:t;if("LIST"!=this._listConfig.child.type)return e;if(e){var n=void 0;return e instanceof Array?n=e:(n=new Array).push(e),{pageNo:1,total:n.length,rows:n}}}},ListComponent.prototype.getValue=function(colIndex,cFieldIndex,row,value){try{value=eval("row."+this.columnConfigs[colIndex].fields[cFieldIndex].key)}catch(t){}return value},ListComponent.prototype.updateFilter=function(t){var e=t.value;this.dataSource.filter=e.trim().toLowerCase(),this.dataSource.paginator&&this.dataSource.paginator.firstPage()},ListComponent.prototype.initFormGroup=function(t){var e,n,i,o,l={},a=this.getCurrentRecord(t);KeyMapUtils.setOptionssUsingValues(this.keyMap,!1,"LIST",this._listConfig,a);try{for(var r=__values(this.columnConfigs),d=r.next();!d.done;d=r.next()){var s=d.value;try{for(var c=(i=void 0,__values(s.fields)),p=c.next();!p.done;p=c.next()){var u={field:p.value,addMore:!1};this._listConfig.uniqueKeys.indexOf(u.field.key)>-1&&(u.field.isUnique=!0),FormUtils.initFieldGroup(l,u,null,a,this.displayModes[t])}}catch(t){i={error:t}}finally{try{p&&!p.done&&(o=c.return)&&o.call(c)}finally{if(i)throw i.error}}}}catch(t){e={error:t}}finally{try{d&&!d.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}this.form=new forms.FormGroup(l),this.formIndex=t},ListComponent.prototype.initCommonFormGroup=function(){var t={};FormUtils.initFieldGroup(t,{field:this.getFilterField(),addMore:!1},{},{},"EDIT"),FormUtils.initFieldGroup(t,{field:this.getColumnSelectorField(),addMore:!1},{},{},"EDIT"),this.commonListForm=new forms.FormGroup(t)},ListComponent.prototype.getCurrentRecord=function(t){var e={};return this.dataSource&&this.dataSource._renderData&&this.dataSource._renderData._value&&this.dataSource._renderData._value[t]?e=this.dataSource._renderData._value[t]:this._record&&this._record.rows&&this._record.rows[t]&&(e=this._record.rows[t]),e},ListComponent.prototype.getObjectTree=function(t){if(this._listConfig&&this._listConfig.uniqueKeys&&this._listConfig.uniqueKeys.length>0){var e=this._listConfig.uniqueKeys,n=new Array;e.forEach((function(e){return n.push(t[e])}));var i={parent:{key:n}};return this.parent&&(i.hierarchyUp=JSON.parse(JSON.stringify(this.parent))),i}return null},ListComponent.prototype.isAllSelected=function(){return this.selection.selected.length===this.dataSource.data.length},ListComponent.prototype.masterToggle=function(){var t=this;this.isAllSelected()?this.selection.clear():this.dataSource.data.forEach((function(e){return t.selection.select(e)}))},ListComponent.prototype.checkboxLabel=function(t){return t?(this.selection.isSelected(t)?"deselect":"select")+" row "+(t.position+1):(this.isAllSelected()?"select":"deselect")+" all"},ListComponent.prototype.setCardVisibility=function(){this.hideCard=!1,(this._listConfig.hideCard||this._listConfig.hideHeader&&this._listConfig.hideFooter)&&(this.hideCard=!0),0==this.hideCard&&this._record&&this._record.rows&&this._record.rows.length==this._record.total&&StringUtils.isEmpty(this._listConfig.header)&&this._listConfig.description&&(this.hideCard=!0),this.hideHeader=!1,((!this._listConfig.header||StringUtils.isEmpty(this._listConfig.header.title))&&StringUtils.isEmpty(this._listConfig.description)||this._listConfig.hideHeader)&&(this.hideHeader=!0),this.hideFooter=!1,(this._record&&this._record.rows&&this._record.rows.length==this._record.total||this._listConfig.hideFooter)&&(this.hideFooter=!0)},ListComponent.prototype.setColumnNames=function(){var t,e,n=this;if(this.columnNames=new Array,this.columnConfigs=new Array,this.totalDispalyableWidth=0,this._listConfig.selectable){this.columnNames.push("select"),this._listConfig.header||(this._listConfig.header={title:""}),this._listConfig.header&&!CollectionUtils.isEmpty(this._listConfig.header.actions)||(this._listConfig.header.actions=new Array);var i=!1;try{for(var o=__values(this._listConfig.header.actions),l=o.next();!l.done;l=o.next()){"listCrudSelectionButton"==l.value.identifier&&(i=!0)}}catch(e){t={error:e}}finally{try{l&&!l.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}i||this._listConfig.header.actions.unshift(this.selectableButton("listCrudSelectionButton",this._listConfig.selectable.label,this._listConfig.selectable.icon))}this._listConfig.columns&&this._listConfig.columns.length>0&&this._listConfig.columns.filter((function(t){return 1==t.show})).forEach((function(t){var e,i,o=!1;try{for(var l=__values(t.fields),a=l.next();!a.done;a=l.next()){var r=a.value;(null==r.permission||n.ability.can(r.permission.action,r.permission.subject))&&(o=!0)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(i=l.return)&&i.call(l)}finally{if(e)throw e.error}}o&&(n.columnNames.push(ListUtils.getColumnKey(t)),n.columnConfigs.push(t),n.totalDispalyableWidth+=t.width)})),this.hasDisplayActions&&(this.columnNames.push("action"),this.totalDispalyableWidth+=this._listConfig.actionWidth)},ListComponent.prototype.setDetailColumnCount=function(){this.childColumnCount=this.columnConfigs.length+(this._listConfig.actions&&this._listConfig.actions.length>0?1:0)+(this._listConfig.selectable?1:0)},ListComponent.prototype.setColors=function(){if(this._record&&this._record.rows)for(var t=0;t<this._record.rows.length;t++){CollectionUtils.isEmpty(this.rowColors[t])&&this.rowColors.push({bgColor:"",textColor:""});var e=this.rowColors[t];this._listConfig.rowBgColor&&(e.bgColor=this._listConfig.rowBgColor(this._record.rows[t])),this._listConfig.rowTextColor&&(e.textColor=this._listConfig.rowTextColor(this._record.rows[t]));for(var n=0;n<this.columnConfigs.length;n++){CollectionUtils.isEmpty(this.cellColors[t])&&this.cellColors.push(new Array),CollectionUtils.isEmpty(this.cellColors[t][n])&&(this.cellColors[t][n]={bgColor:"",textColor:""});var i=this.cellColors[t][n];StringUtils.isEmpty(i.bgColor)&&(i.bgColor=e.bgColor),this.columnConfigs[n].bgColor&&(i.bgColor=this.columnConfigs[n].bgColor(this._record.rows[t])),StringUtils.isEmpty(i.textColor)&&(i.textColor=e.textColor),this.columnConfigs[n].textColor&&(i.textColor=this.columnConfigs[n].textColor(this._record.rows[t]))}}},ListComponent.prototype.selectableButton=function(t,e,n){return{identifier:t,label:e,color:"primary",size:"small",icon:n,type:"FLAT",onlyIcon:!1}},ListComponent.prototype.fieldChange=function(t){var e=this;console.log(t),this.onFieldChange.emit(t),this.formChange(this.form),t.fieldKey,this._listConfig.columns.forEach((function(n){n.fields.forEach((function(n){if(n.optionDependsOn==t.fieldKey){var i=FormUtils.getRawValue(e.form);KeyMapUtils.setOptionssUsingValues(e.keyMap,!1,"LIST",e._listConfig,i)}}))}))},ListComponent.prototype.formChange=function(t){console.log(t),null==t?this.onFormChange.emit(this.form):this.onFormChange.emit(t)},ListComponent.prototype.buttonClick=function(t){console.log(t),"listCrudSelectionButton"==t.action&&(t.data=this.selection.selected),"row_expand"==t.action||"row_collapse"==t.action||t.event.stopPropagation(),this.onButtonClick.emit(t)},ListComponent.prototype.getLayout=function(){var t=this;this.breakpointSubscription=this.breakpointObserver.observe([layout.Breakpoints.XSmall,layout.Breakpoints.Small,layout.Breakpoints.Medium,layout.Breakpoints.Large,layout.Breakpoints.XLarge]).subscribe((function(e){e.breakpoints[layout.Breakpoints.XSmall]&&(t.isMobile=!0,t.cellCount=t.listConfig.mobile&&t.listConfig.mobile.cellCount?t.listConfig.mobile.cellCount:4,t.hideCard=!0,ListUtils.getMobileConfig(t.listConfig),console.log("Matches XSmall viewport")),e.breakpoints[layout.Breakpoints.Small]&&(t.isTablet=!0,console.log("Matches Small viewport")),e.breakpoints[layout.Breakpoints.Medium]&&(t.isDesktop=!0,console.log("Matches Medium  viewport")),e.breakpoints[layout.Breakpoints.Large]&&(t.isDesktop=!0,console.log("Matches Large viewport")),e.breakpoints[layout.Breakpoints.XLarge]&&(t.isDesktop=!0,console.log("Matches XLarge viewport")),t.resetVerticalDisplay()}))},ListComponent.prototype.rowClick=function(t,e,n,i){var o=this;console.log(t),console.log(e),console.log(n);var l=null;if(!CollectionUtils.isEmpty(this._listConfig.actions)&&(this._listConfig.actions.forEach((function(t){t.identifier==o._listConfig.rowAction&&(l=t)})),null!=l)){var a=ButtonUtils.getAction(this._listConfig.identifier,e,this.widgetArrayIndex,l.identifier,this.parent,i,t,n,null);this.onButtonClick.emit(a)}},ListComponent.prototype.resetVerticalDisplay=function(){},ListComponent.prototype.getButton=function(t){var e=new Array;return CollectionUtils.isEmpty(t)||CollectionUtils.isEmpty(t.controls)||(e=t.controls.filter((function(t){return"BUTTON"==t.type})).map((function(t){return t.control}))),e},ListComponent.prototype.onHover=function(t,e,n){this.hoverRowData=n,this.hoverRowIndex=e,this.tooltipPosition.top=t.y,this.tooltipPosition.left=t.x},ListComponent.prototype.ngOnDestroy=function(){this.breakpointSubscription&&this.breakpointSubscription.unsubscribe()},ListComponent}();ListComponent.decorators=[{type:core.Component,args:[{selector:"cf-list",template:"<p>list works!</p>\n",animations:[animations.trigger("detailExpand",[animations.state("collapsed",animations.style({height:"0px",minHeight:"0"})),animations.state("expanded",animations.style({height:"*"})),animations.transition("expanded <=> collapsed",animations.animate("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],encapsulation:core.ViewEncapsulation.None,styles:[""]}]}],ListComponent.ctorParameters=function(){return[{type:ability.Ability},{type:layout.BreakpointObserver}]},ListComponent.propDecorators={_listConfig:[{type:core.Input}],listConfig:[{type:core.Input}],_record:[{type:core.Input}],record:[{type:core.Input}],sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],originalData:[{type:core.Input}],parent:[{type:core.Input}],_listReset:[{type:core.Input}],listReset:[{type:core.Input}],disabled:[{type:core.Input}],keyMap:[{type:core.Input}],onFormChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}],onPageChange:[{type:core.Output}],onSortChange:[{type:core.Output}],expanded:[{type:core.Input}],expandRowIndex:[{type:core.Input}],contentPage:[{type:core.ViewChild,args:[paginator.MatPaginator,{static:!1}]}],contentSort:[{type:core.ViewChild,args:[sort.MatSort,{static:!1}]}]};var StaticListComponent=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.ability=e,i.breakpointObserver=n,window.onscroll=function(){i.sticky()},i}return __extends(e,t),e.prototype.ngOnInit=function(){this.init()},e.prototype.isList=function(){return"STATIC"==this.listConfig.listType},e.prototype.onSort=function(t){var e={sorton:t.active,sortdir:t.direction};this.expandedRow=null;var n={sourceIdentifier:this.sourceIdentifier?this.sourceIdentifier:this._listConfig.identifier,sourceIndex:this.sourceIndex?this.sourceIndex:0,widgetArrayIndex:this.widgetArrayIndex,action:this._listConfig.identifier,actionData:e,data:this.record,originalData:this.record,parentHierarchy:this.parent,event:t};console.log(n),this.onSortChange.emit(n)},e.prototype.onPage=function(t){console.log("scrolled:-",t);var e={sourceIdentifier:this.sourceIdentifier?this.sourceIdentifier:this._listConfig.identifier,sourceIndex:this.sourceIndex?this.sourceIndex:0,widgetArrayIndex:this.widgetArrayIndex,action:this._listConfig.identifier,actionData:t,data:this.record,originalData:this.record,parentHierarchy:this.parent,event:t};console.log(e),this.onPageChange.emit(e)},e.prototype.ngOnDestroy=function(){},e}(ListComponent);StaticListComponent.decorators=[{type:core.Component,args:[{selector:"cf-static-list",template:'\x3c!-- <pre>\n  {{displayVertical | json}}----\n</pre>  --\x3e\n<mat-card [class.cf-table-hidden]="!(_listConfig && isList()) || hideCard || !(_listConfig && _listConfig.header && _listConfig.description && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n  <mat-card-header class="cf-list-header" *ngIf="hideHeader == false">\n    <mat-icon \n      mat-card-avatar  \n      *ngIf="_listConfig.header.icon && _listConfig.header.icon.font && iconPosition == \'BEFORE_TITLE\'"\n      aria-hidden="false" \n      [style.margin-top.px]="_listConfig.header.subtitle ? 8 : 0"\n      [attr.aria-label]="_listConfig.header.icon.font">\n      {{ _listConfig.header.icon.font }}\n    </mat-icon>\n\n    <mat-card-title *ngIf="_listConfig.header && _listConfig.header.title">\n      {{_listConfig.header.title}}\n      <mat-icon \n        *ngIf="_listConfig.header.icon && _listConfig.header.icon.font && iconPosition == \'AFTER_TITLE\'"\n        aria-hidden="false" [attr.aria-label]="_listConfig.header.icon.font">{{ _listConfig.header.icon.font }}</mat-icon>\n    </mat-card-title>\n    \n    <mat-card-subtitle class="cf-list-header-subtitle" *ngIf="_listConfig.header.subtitle">{{ _listConfig.header.subtitle }}</mat-card-subtitle>\n\n    <div class="cf-list-header-buttons">\n      <cf-button-group \n          [buttons]="_listConfig.header.actions" \n          [sourceIdentifier]="sourceIdentifier"\n          [sourceIndex]="sourceIndex"\n          [widgetArrayIndex]="widgetArrayIndex"\n          [originalData]="originalData"\n          (onClick)="buttonClick($event)">\n      </cf-button-group> \n    </div>\n  </mat-card-header>\n  <mat-card-content>\n    <div class="mdc-layout-grid cf-table" *ngIf="_listConfig.description && _listConfig.description.text && _listConfig.description.bgColor">\n      <div class="mdc-layout-grid__inner">\n        <div class="mdc-layout-grid__cell--span-12">\n          <div \n            class="cf-list-header-desc"\n            [style.background-color]="_listConfig.description.bgColor"\n            [style.color]="_listConfig.description.textColor"\n          >\n            <mat-icon class="cf-list-header-desc-icon" aria-hidden="true" [attr.aria-label]="_listConfig.description.icon" *ngIf="_listConfig.description.icon">{{_listConfig.description.icon}}</mat-icon>\n            <span>{{ _listConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class="cf-list-header-divider" *ngIf="_listConfig.header && _listConfig.description && !_listConfig.description.bgColor"></mat-divider>\n    <mat-card-subtitle *ngIf="_listConfig.description && _listConfig.description.text && !_listConfig.description.bgColor">{{ _listConfig.description.text }}</mat-card-subtitle>\n  </mat-card-content>\n</mat-card>\n\n<span [class.cf-table-hidden]="!(_listConfig && isList()) || hideCard || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n    <ng-container *ngTemplateOutlet="cftable"></ng-container>\n</span>\n\n<mat-card [class.cf-table-hidden]="hideFooter == true && (!(_listConfig && isList()) || hideCard || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\'])))))" *ngIf="_listConfig.pagination!=\'INFINIT_SCROLL\'">\n  <mat-card-actions \n    *ngIf="hideFooter == false"\n    class="actions-align-right" \n    align="right">\n    <mat-paginator \n      [length]="_record.total" \n      [pageSize]="limit"\n      [pageSizeOptions]="pageSizeOptions"\n      (page)="onPage($event)"\n      [ngClass]="{\'page-wise\': _listConfig.pagination==\'NO_PAGE\'}"\n      [hidePageSize]="_listConfig.pagination==\'NO_PAGE\'"\n    ></mat-paginator>\n  </mat-card-actions>\n</mat-card>\n\n<span *ngIf="(hideCard && _listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n  <ng-container *ngTemplateOutlet="cftable"></ng-container>\n</span>\n\n<ng-template #cftable>\n  <span *ngIf="!isMobile">\n    <ng-container *ngTemplateOutlet="cftablelist"></ng-container>\n  </span>\n  <span *ngIf="isMobile && _listConfig.mobile">\n    <ng-container \n      [ngTemplateOutlet]="cftablemobile"\n      [ngTemplateOutletContext]="{layout: _listConfig.mobile}"></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cftablemobile let-layout="layout">\n  <div class="mdc-layout-grid cf-card-list">\n    <div class="mdc-layout-grid__inner" id="mySearch" *ngIf="_listConfig.staticList.hasOnPageFilter">\n      <div \n        *ngIf="_listConfig.staticList.hasOnPageFilter"\n        class="search-mobile-container mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !layout.sorting ? 12 : 9}}"\n      >\n        <cf-field \n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'pageFilter\']) ? commonListForm.controls[\'pageFilter\'] : null"\n          [field]="filterField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          [value]=""\n          (onFieldChange)="updateFilter($event);$event.event.stopPropagation()"\n          class="cf-list-search-field search-mobile"\n          [style.width.%]="100">\n        </cf-field>  \n        <div> \n          <mat-icon \n            class="cf-mobile-filter-icon" \n            [ngClass]="{\'rote\':this.sortDirection==\'desc\'}" \n            [matMenuTriggerFor]="filterMenu" \n            aria-label="Filter Menu"\n          >filter_list</mat-icon>\n          \x3c!-- (click)="(sortDirection == \'asc\' ? sortDirection = \'desc\' : sortDirection = \'asc\');_record.rows=_record.rows.reverse();" --\x3e\n          <mat-menu #filterMenu="matMenu">\n            <button \n              class="cf-mobile-filter-link"\n              *ngFor="let sorting of _listConfig.mobile.sorting" \n              mat-menu-item\n              (click)="onSort({\'action\':sorting.key, \'direction\':sorting.direction})"\n            >{{sorting.label}}</button>\n          </mat-menu>\n        </div>\n      </div>\n    </div>\n\n    <div [ngClass]="{\'wrapper-a\': _listConfig.pagination==\'INFINIT_SCROLL\'}" infiniteScroll [infiniteScrollDistance]="2" [infiniteScrollThrottle]="1.5" [infiniteScrollContainer]="scrollRow" #scrollRow (scrolled)="onPage($event)">\n      \x3c!-- <pre>{{_listConfig.mobile.cells | json}}</pre> --\x3e\n      <mat-card class="cf-card-mobile" *ngFor="let row of _record.rows; let rowIndex=index">\n        <mat-card-content>\n          <mat-grid-list [cols]="cellCount" [rowHeight]="_listConfig.mobile.rowHeight">\n            <mat-grid-tile *ngFor="let cell of _listConfig.mobile.cells" [colspan]="cell.cols" [rowspan]="cell.rows">\n              <div class="cf-card-mobile-cell"\n                *ngIf="!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;">\n                <ng-container [ngTemplateOutlet]="cfCustomCell"\n                  [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"></ng-container>\n              </div>\n              <ng-template #elseValue>\n                <div class="cf-card-mobile-cell-inline">\n                  <ng-container [ngTemplateOutlet]="cfCustomCell"\n                    [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"></ng-container>\n                </div>\n              </ng-template>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #cfCustomRowLayout let-layout="layout" let-row="row" let-rowIndex="rowIndex" let-withCard="withCard"> \n  <mat-card class="cf-card-mobile" *ngIf="withCard">\n    <mat-card-content>\n      <ng-container  \n        [ngTemplateOutlet]="cfCustomRow"\n        [ngTemplateOutletContext]="{layout: layout, row: row, rowIndex: rowIndex}"\n      ></ng-container>\n    </mat-card-content>\n  </mat-card>\n  <span class="cf-card-mobile" *ngIf="!withCard">\n    <ng-container  \n      [ngTemplateOutlet]="cfCustomRow"\n      [ngTemplateOutletContext]="{layout: layout, row: row, rowIndex: rowIndex}"\n    ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfCustomRow let-layout="layout" let-row="row" let-rowIndex="rowIndex"> \n  <mat-grid-list \n      [cols]="cellCount"  \n      [rowHeight]="layout.rowHeight">\n      <mat-grid-tile\n        *ngFor="let cell of layout.cells"\n        [colspan]="cell.cols"\n        [rowspan]="cell.rows">\n        <div class="cf-card-mobile-cell" *ngIf="!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;"> \n          <ng-container \n            [ngTemplateOutlet]="cfCustomCell"\n            [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"\n          ></ng-container>\n        </div>\n        <ng-template #elseValue>\n          <div class="cf-card-mobile-cell-inline">\n            <ng-container \n              [ngTemplateOutlet]="cfCustomCell"\n              [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </mat-grid-tile>\n    </mat-grid-list>   \n</ng-template>\n\n<ng-template #cfCustomCell let-cell="cell" let-row="row" let-rowIndex="rowIndex"> \n  <span \n    [ngClass]="{\'fullwidth\': control.fullWidth}"\n    *ngFor="let control of cell.controls; let cControlIndex = index;">\n    \x3c!-- {{control.control.key}} --\x3e \n    <span \n      class="cf-card-mobile-control-separator"\n      *ngIf="cell.displayInline && cell.displayInline.separator && cControlIndex > 0" \n      [innerHtml]="cell.displayInline.separator"></span>\n\n    \x3c!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== --\x3e\n    \x3c!-- //{{control.colIndex}}-{{control.cControlIndex}} --\x3e\n    <cf-field\n      *ngIf="control.control && (!cell.link || (cell.link && cell.linkKey && cell.linkKey != control.control.key)) && control.type == \'FIELD\'" \n      [sourceType]="\'LIST\'"\n      [sourceIdentifier]="_listConfig.identifier" \n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n      [fieldControl]="(formIndex == rowIndex && form != undefined) ? form.controls[control.control.key] : null"\n      [field]="control.control"\n      [displayMode]="displayModes[rowIndex]" \n      [hideLabel]="true"\n      [value]="getValue(control.colIndex, control.cControlIndex, row, control.control.value)" \n      class="cf-list-field"\n      [ngClass]="{\'cf-list-field-disabled\': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled, \'cf-primary-text\': control.fieldStyle && control.fieldStyle.class == \'PRIMARY\', \'cf-secondary-text\': control.fieldStyle && control.fieldStyle.class == \'SECONDARY\', \'cf-tertiary-text\': control.fieldStyle && control.fieldStyle.class == \'TERTIARY\'}"\n      [row]="row"\n      [keyMap]="keyMap"\n      (onFieldChange)="fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): \'\'">\n    </cf-field>\n    <cf-button\n      *ngIf="cell.link && ((cell.linkKey && cell.linkKey == control.control.key) || !cell.linkKey) && control.type == \'FIELD\'" \n      [identifier]="\'listFieldAsLink\'"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex"\n      [widgetArrayIndex]="widgetArrayIndex"\n      [button]="cell.link"\n      [label]="getValue(control.colIndex, control.cControlIndex, row, control.control.value)"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n      [originalData]="row"\n      [parentHierarchy]="parent"\n      [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n      (onClick)="buttonClick($event);$event.event.stopPropagation()"\n    ></cf-button>\n\n    \x3c!-- [formDisplayMode]="formConfig.displayMode" --\x3e\n    \x3c!-- <cf-button-group \n      [ngClass]="{\'fullwidth\': control.fullWidth}"\n      *ngIf="control.type == \'BUTTON\'"\n      [buttons]="control.control" \n      [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [originalData]="row"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n      (onClick)="buttonClick($event)">\n    </cf-button-group> --\x3e\n\n    <cf-button \n      *ngIf="control.type == \'BUTTON\'"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [button]="control.control"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n      [originalData]="row"\n      [parentHierarchy]="parent" \n      [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n      (onClick)="setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()"\n    ></cf-button> \n  </span>\n</ng-template>\n\n<ng-template #cftablelist>\n  <div class="mdc-layout-grid cf-table">\n    <div class="mdc-layout-grid__inner" *ngIf="_listConfig.staticList.hasOnPageFilter || _listConfig.hasColumnSelection">\n      <div \n        *ngIf="_listConfig.staticList.hasOnPageFilter"\n        class="mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !_listConfig.hasColumnSelection ? 12 : 9}}"\n      >\n        <cf-field \n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'pageFilter\']) ? commonListForm.controls[\'pageFilter\'] : null"\n          [field]="filterField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          [value]=""\n          (onFieldChange)="updateFilter($event);$event.event.stopPropagation()"\n          class="cf-list-search-field"\n          [style.width.%]="100">\n        </cf-field>  \n      </div>\n      <div \n        *ngIf="_listConfig.hasColumnSelection" \n        class="mdc-layout-grid__cell--span-{{!_listConfig.staticList.hasOnPageFilter && _listConfig.hasColumnSelection ? 12 : 3}} mdc-layout-grid--align-right" \n        [style.width.%]="100">\n        <cf-field\n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'columnSelector\']) ? commonListForm.controls[\'columnSelector\'] : null"\n          [field]="columnSelectorField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          class="cf-list-sel-col-field"\n          (onFieldChange)="updateColumnDisplay($event)"\n          [style.width.%]="100">\n        </cf-field>  \n        \x3c!-- ;$event.event.stopPropagation() --\x3e\n      </div>\n    </div>\n    <div class="mdc-layout-grid__inner">\n      <div class="mdc-layout-grid__cell--span-12" *ngIf="columnNames">\n        <table  \n          mat-table  \n          [dataSource]="dataSource" \n          class="cf-table"\n          [ngClass]="{\'cf-table-hover\': _listConfig.shade && _listConfig.shade.type == \'HOVER\', \'cf-table-alternate\': _listConfig.shade && _listConfig.shade.type == \'ALTERNATE\', \'cf-table-without-header\': _listConfig.hideHeaderRow}"\n          multiTemplateDataRows\n          matSort\n          [matSortActive]="_listConfig.defaultSort ? _listConfig.defaultSort.column : \'\'" \n          matSortDisableClear  \n          [style.width.%]="\'100\'"\n          [matSortDirection]="_listConfig.defaultSort ? _listConfig.defaultSort.order: \'\'"\n          (matSortChange)="onSort($event)">\n          \n          <ng-container matColumnDef="select">\n            <th \n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              mat-header-cell \n              *matHeaderCellDef \n              class="selectable-column">\n              <mat-checkbox \n                class="cf-list-checkbox-selectable"\n                (change)="$event ? masterToggle() : null"\n                [checked]="selection.hasValue() && isAllSelected()"\n                [indeterminate]="selection.hasValue() && !isAllSelected()"\n                [aria-label]="checkboxLabel()">\n              </mat-checkbox>\n            </th>\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              [style.background-color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : \'\'"\n              [style.color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : \'\'"\n              class="selectable-column">\n              <mat-checkbox \n                class="cf-list-checkbox-selectable"\n                [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                (click)="$event.event.stopPropagation()"\n                (change)="$event ? selection.toggle(row) : null"\n                [checked]="selection.isSelected(row)"\n                [aria-label]="checkboxLabel(row)">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n          \n          <ng-container \n            *ngFor="let column of columnConfigs; let colIndex = index"\n            [matColumnDef]="getColumnKey(column)">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              mat-sort-header\n              disableClear\n              [disabled]="!column.sortable"\n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              [ngClass]="{\'cf-list-field-first\': colIndex == 0}"\n              [style.width.%]="displayVertical ? \'100\' : column.width / totalDispalyableWidth * 100">\n              {{getColumnLabel(column)}}\n            </th> \n            \x3c!-- [attr.data-label]="getColumnLabel(column)" --\x3e\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              class="cf-table-data-cell"\n              [style.background-color]="cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].bgColor : \'\'"\n              [style.color]="cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].textColor : \'\'"\n              [style.width.%]="displayVertical ? \'100\' : column.width / totalDispalyableWidth * 100"\n              (click)="_listConfig.rowAction ? rowClick(row, rowIndex, ((formIndex == rowIndex && form != undefined) ? form.value : null), $event) : _listConfig.rowAction"\n              >\n \n              <ng-container *ngIf="column?.template?.html || column?.template?.layout; else elseDefault">\n                <span *ngIf="column?.template?.html">\n                  <ng-container *cfTemplate="\'<style>\'+column?.template?.css+\'</style>\' + column?.template?.html; context: {row: row, index: rowIndex}"></ng-container>\n                </span>\n                <span *ngIf="column?.template?.layout">\n                  \x3c!-- {{row | json}}--- --\x3e\n                  <ng-container  \n                    [ngTemplateOutlet]="cfCustomRowLayout"\n                    [ngTemplateOutletContext]="{layout: column.template.layout, row: row, rowIndex: rowIndex, withCard: false}"\n                  ></ng-container>\n                </span>\n              </ng-container>\n              <ng-template #elseDefault>\n                <div [ngClass]="{\'cf-list-field-not-first\': cFieldIndex > 0, \'cf-list-field-inline\': column.displayInline && column.displayInline.separator}" *ngFor="let field of column.fields; let cFieldIndex = index;">\n                  <span *ngIf="column.displayInline && column.displayInline.separator && cFieldIndex > 0">{{column.displayInline.separator}}</span>\n                  <cf-field\n                    *ngIf="!column.link || (column.link && column.linkKey && column.linkKey != field.key)" \n                    [sourceType]="\'LIST\'"\n                    [sourceIdentifier]="_listConfig.identifier" \n                    [sourceIndex]="rowIndex" \n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n                    [fieldControl]="(formIndex == rowIndex && form != undefined) ? form.controls[field.key] : null"\n                    [field]="field"\n                    [displayMode]="displayModes[rowIndex]" \n                    [hideLabel]="true"\n                    [value]="getValue(colIndex, cFieldIndex, row, field.value)" \n                    class="cf-list-field"\n                    [ngClass]="{\'cf-list-field-disabled\': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled}"\n                    [row]="row"\n                    [keyMap]="keyMap"\n                    (onFieldChange)="fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): \'\'">\n                  </cf-field>\n                  <cf-button\n                    *ngIf="column.link && ((column.linkKey && column.linkKey == field.key) || !column.linkKey)" \n                    [identifier]="\'listFieldAsLink\'"\n                    [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                    [sourceIdentifier]="_listConfig.identifier"\n                    [sourceIndex]="rowIndex"\n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [button]="column.link"\n                    [label]="getValue(colIndex, cFieldIndex, row, field.value)"\n                    [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n                    [originalData]="row"\n                    [parentHierarchy]="parent"\n                    [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                    (onClick)="buttonClick($event);$event.event.stopPropagation()"\n                  ></cf-button>\n                </div>\n              </ng-template>\n            </td>\n          </ng-container>\n      \n          <ng-container matColumnDef="expandedRow"> \n            <td mat-cell *matCellDef="let row; let rowIndex = dataIndex" [attr.colspan]="childColumnCount">\n              <div class="cf-element-detail"\n                  [@detailExpand]="row == expandedRow || this._expanded == true ? \'expanded\' : \'collapsed\'">\n                <cf-static-list \n                  *ngIf="_listConfig.child && _listConfig.child.type == \'LIST\' && _listConfig.child.record && (row == expandedRow || _expanded == true)"\n                  [listConfig]="_listConfig.child.record" \n                  [sourceIdentifier]="sourceIdentifier"\n                  [record]="getChildRows(expandedRow)" \n                  [keyMap]="keyMap"\n                  [expanded]="_expanded"\n                  [listReset]="listReset"\n                  [parent]="getObjectTree(row)"\n                  [style.width.%]="100"\n                  [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                  (onFormChange)="formChange($event)"\n                  (onFieldChange)="fieldChange($event);$event.event.stopPropagation()"\n                  (onButtonClick)="buttonClick($event);$event.event.stopPropagation()"\n                  (onPageChange)="onPage($event)"\n                  (onSortChange)="onSort($event)"  \n                >\n                </cf-static-list>\n                <cf-form\n                    *ngIf="_listConfig.child && _listConfig.child.type == \'FORM\' && (row == expandedRow || _expanded == true)"\n                    [formConfig]="_listConfig.child.record"\n                    [sourceIdentifier]="_listConfig.identifier"\n                    [sourceIndex]="rowIndex"\n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [style.width.%]="100"\n                    (onFormChange)="formChange($event)"\n                    (onFieldChange)="fieldChange($event)"\n                    (onButtonClick)="buttonClick($event)"\n                ></cf-form>\n              </div>\n            </td> \n          </ng-container>\n      \n          <ng-container \n            *ngIf="_listConfig.actions && _listConfig.actions.length > 0"\n            matColumnDef="action">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              class="cf-list-action-col"\n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              [style.width.%]="displayVertical ? \'100\' : _listConfig.actionWidth / totalDispalyableWidth * 100"\n              >\n              Action\n            </th>\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              class="cf-list-action-col"\n              [style.background-color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : \'\'"\n              [style.color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : \'\'"\n              [style.width.%]="displayVertical ? \'100\' : _listConfig.actionWidth / totalDispalyableWidth * 100"\n              > \n              \x3c!-- --{{inlineEditButtons[rowIndex].size}} --\x3e\n              <cf-button \n                *ngIf="isInlineEditable && inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].icon"\n                [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                [sourceIdentifier]="_listConfig.identifier"\n                [sourceIndex]="rowIndex" \n                [widgetArrayIndex]="widgetArrayIndex"\n                [button]="inlineEditButtons[rowIndex]"\n                class="cf-button"\n                [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n                [originalData]="row"\n                [parentHierarchy]="parent" \n                [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                (onClick)="setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()"\n              ></cf-button> \n              <cf-button-group\n                  *ngIf="!isInlineEditable || (inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == \'Cancel\')"\n                  [buttons]="_listConfig.actions"\n                  [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                  [sourceIdentifier]="_listConfig.identifier"\n                  [sourceIndex]="rowIndex"\n                  [widgetArrayIndex]="widgetArrayIndex"\n                  [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n                  [originalData]="row"\n                  [parentHierarchy]="parent"\n                  [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                  (onClick)="buttonClick($event);"\n              ></cf-button-group>\n            </td>\n          </ng-container> \n          <tr \n            mat-header-row \n            *matHeaderRowDef="columnNames; sticky: _listConfig.stickyHeader"\n          ></tr>\n          <div *ngIf="(_listConfig.row &&_listConfig.row.hover);else withoutTooltip">\n            <tr \n              mat-row \n              *matRowDef="let row; columns: columnNames; let i = dataIndex;"\n              [tooltip]="rowHoverTemplate"\n              show-delay="300"\n              [position]="tooltipPosition"\n              [width]="_listConfig?.row?.hover?.width"  \n              theme="light"\n              content-type="template"\n              class="cf-row"\n              [ngClass]="{\'without-hover\': !(_listConfig.row &&_listConfig.row.hover)}"\n              (mouseenter)="onHover($event,i, (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row)" \n              (click)="expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row"\n            ></tr>\n          </div>\n\n          <ng-template #withoutTooltip>\n            <tr \n              mat-row \n              *matRowDef="let row; columns: columnNames; let i = dataIndex;"\n              class="cf-row"\n              [ngClass]="{\'without-hover\': !(_listConfig.row &&_listConfig.row.hover)}"\n              (click)="expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row"\n            ></tr>\n          </ng-template>\n          \x3c!-- [tooltip]="rowHoverTemplate"\n          placement="bottom"\n          content-type="template"\n          hideDelayTouchscreen=0\n          hide-delay=100\n          show-delay=100\n          animation-duration=100\n          max-width=_listConfig?.row?.hover?.width\n          display="_listConfig.row && _listConfig.row.hover && (_listConfig.row.hover.template || _listConfig.row.hover.layout)"\n          theme="light"\n           --\x3e\n          <tr  \n            style="background-color: aliceblue;"\n            mat-row  \n            *matRowDef="let row; columns: [\'expandedRow\']" \n            [ngClass]="{\'cf-detail-row-hide\': !_listConfig.child || !_listConfig.child.record}"\n            class="cf-detail-row"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-template> \n\n<ng-template #rowHoverTemplate>\n  <div *ngIf="_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.component" [ngStyle]="{\'width\': _listConfig.row.hover.width + \'px\'}">\n    \x3c!-- <ndc-dynamic\n      [ndcDynamicComponent]="_listConfig.row.hover.template.component"\n      [ndcDynamicInputs]="hoverRowData"\n    ></ndc-dynamic> --\x3e\n  </div>\n  <div *ngIf="_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.layout" [ngStyle]="{\'width\': _listConfig.row.hover.width + \'px\'}" class="cf-list-hover-tooltip">\n    <ng-container  \n      [ngTemplateOutlet]="cfCustomRowLayout"\n      [ngTemplateOutletContext]="{layout: _listConfig.row.hover.template.layout, row: hoverRowData, rowIndex: hoverRowIndex, withCard: false}"\n    ></ng-container>\n  </div>\n</ng-template> \n\n<ng-template #rowTemplate>\n  <div *ngIf="_listConfig?.row?.template">\n    \x3c!-- <ndc-dynamic [ndcDynamicComponent]="_listConfig.row.template"></ndc-dynamic> --\x3e\n  </div>\n</ng-template>',animations:[animations.trigger("detailExpand",[animations.state("collapsed",animations.style({height:"0px",minHeight:"0"})),animations.state("expanded",animations.style({height:"*"})),animations.transition("expanded <=> collapsed",animations.animate("225ms cubic-bezier(0.4, 0.0, 0.2, 1)"))])],encapsulation:core.ViewEncapsulation.None,styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-list-header .mat-card-header-text{margin:0!important}.cf-list-header .mat-card-title{margin-top:6px}.cf-list-header .mat-card-avatar{font-size:40px;padding-right:8px}.cf-list-header-subtitle .mat-card-subtitle,.mat-card-subtitle{padding-top:0!important}.cf-list-header-buttons{position:absolute;right:5px;top:5px}.cf-table-header-hidden,.cf-table-hidden{display:none!important}.cf-table-without-header thead,.cf-table-without-header tr.mat-header-row{height:0!important}table{width:100%}.cf-table{padding:0!important}td,th{max-width:200px;white-space:normal;word-wrap:break-word}.cf-element-detail{border-left:2px groove #f5f5f5;display:flex;overflow:hidden;padding-right:3px;width:100%}.cf-list-action-col{text-align:right!important}tr.cf-detail-row{background-color:#f5f5f5;height:0!important}tr.cf-detail-row-hide{display:none!important}.sticky{position:-webkit-sticky;position:sticky}.selectable-column{padding-right:1%}.rote{transform:rotateX(180deg)}.cf-element-detail>th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:0!important}.mat-card-content{margin-bottom:0!important}.cf-list-header-desc{margin:5px 0 5px 15px;padding:5px 10px;width:auto}.cf-list-header-desc-icon{font-size:15px;height:15px;margin-top:0;padding:0 5px 0 0;width:15px}.cf-table-alternate tr.mat-row:nth-child(odd),.cf-table-hover tr.mat-row:hover{background:#f5f5f5}.cf-table-alternate tr.mat-row:not(:nth-child(4n+1)){background:#fff}.cf-table-data-cell{padding:0 10px 0 0!important}.cf-list-field .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:0}.cf-list-field-not-first{padding-top:5px}.cf-list-field-first{padding-left:0!important}.cf-list-field-disabled{color:rgba(0,0,0,.5411764705882353)}.cf-list-checkbox-selectable{padding-right:12px}.cf-list-field-inline{display:inline}@media screen and (max-width:599px){.mat-table{border:0;vertical-align:middle}.mat-table caption{font-size:1em}.mat-table .mat-header-row{display:none}.mat-table .mat-header-cell{border:10px solid;clip:rect(0 0 0 0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.mat-table .mat-row{border-bottom:5px solid #ddd;display:block;height:unset}.mat-table .mat-cell{display:block;font-size:1em;font-weight:700;margin-bottom:4%;min-height:48px}.mat-table .mat-cell:before{content:attr(data-label);float:left;font-size:.85em;font-weight:400}.mat-table .mat-cell:last-child{border-bottom:0}.mat-table .mat-cell:first-child{margin-top:4%}.mat-table .mat-row td{max-width:unset}}.cf-card-list{padding:0}.cf-card-list mat-card{padding:8px}.cf-card-mobile{margin-bottom:12px;word-wrap:break-word}.cf-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.cf-card-mobile .cf-primary-text .cf-field-value{font-size:18px;font-weight:400;margin-bottom:none}.cf-card-mobile .cf-secondary-text .cf-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.cf-card-mobile .cf-tertiary-text .cf-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.cf-card-mobile .cf-card-mobile-cell{display:block;width:100%}.cf-card-mobile .cf-card-mobile-cell .fullwidth button{width:100%}.cf-card-mobile .cf-card-mobile-cell .cf-primary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-secondary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-tertiary-text .cf-field-value{display:block}.cf-card-mobile .cf-card-mobile-cell .fullwidth button,.cf-card-mobile .cf-card-mobile-cell .fullwidth mat-chip{width:100%}.cf-card-mobile .cf-card-mobile-cell-inline{display:inline-block;width:100%}.cf-card-mobile .cf-card-mobile-cell-inline .cf-card-mobile-control-separator{padding:4px}.hover-template{display:none;position:absolute;z-index:9999}.cf-row:hover .without-hover{pointer-events:none}.wrapper-a{height:69vh;overflow-y:auto}.search-mobile{margin-right:10px}.search-mobile-container{display:flex}.sticky{background:#fff;border-bottom:1px solid #d3cece;left:0;margin:0 auto;padding:10px 20px;position:fixed;right:0;top:0;width:88%;z-index:99}.sticky+.content{padding-top:102px}.cf-mobile-filter-icon{padding-top:8px}.cf-mobile-filter-link{text-align:end}.cf-list-hover-tooltip{padding:8px}"]}]}],StaticListComponent.ctorParameters=function(){return[{type:ability.Ability},{type:layout.BreakpointObserver}]};var DynamicListComponent=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.ability=e,i.breakpointObserver=n,window.onscroll=function(){i.sticky()},i}return __extends(e,t),e.prototype.ngOnInit=function(){this.init()},e.prototype.isList=function(){return"DYNAMIC"==this._listConfig.listType},e.prototype.onSort=function(t){var e={sorton:t.active,sortdir:t.direction},n={sourceIdentifier:this.sourceIdentifier?this.sourceIdentifier:this._listConfig.identifier,sourceIndex:this.sourceIndex?this.sourceIndex:0,widgetArrayIndex:this.widgetArrayIndex,action:this._listConfig.identifier,actionData:e,data:this.record,originalData:this.record,parentHierarchy:this.parent,event:t};console.log(n),this.onSortChange.emit(n)},e.prototype.onPage=function(t){console.log(t);var e={sourceIdentifier:this.sourceIdentifier?this.sourceIdentifier:this._listConfig.identifier,sourceIndex:this.sourceIndex?this.sourceIndex:0,widgetArrayIndex:this.widgetArrayIndex,action:this._listConfig.identifier,actionData:t,data:this.record,originalData:this.record,parentHierarchy:this.parent,event:t};console.log(e),this.onPageChange.emit(e)},e}(ListComponent);DynamicListComponent.decorators=[{type:core.Component,args:[{selector:"cf-dynamic-list",template:'\x3c!-- <pre>\n  {{displayVertical | json}}----\n</pre>  --\x3e\n<mat-card [class.cf-table-hidden]="!(_listConfig && isList()) || hideCard || !(_listConfig && _listConfig.header && _listConfig.description && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n  <mat-card-header class="cf-list-header" *ngIf="hideHeader == false">\n    <mat-icon \n      mat-card-avatar  \n      *ngIf="_listConfig.header.icon && _listConfig.header.icon.font && iconPosition == \'BEFORE_TITLE\'"\n      aria-hidden="false" \n      [style.margin-top.px]="_listConfig.header.subtitle ? 8 : 0"\n      [attr.aria-label]="_listConfig.header.icon.font">\n      {{ _listConfig.header.icon.font }}\n    </mat-icon>\n\n    <mat-card-title *ngIf="_listConfig.header && _listConfig.header.title">\n      {{_listConfig.header.title}}\n      <mat-icon \n        *ngIf="_listConfig.header.icon && _listConfig.header.icon.font && iconPosition == \'AFTER_TITLE\'"\n        aria-hidden="false" [attr.aria-label]="_listConfig.header.icon.font">{{ _listConfig.header.icon.font }}</mat-icon>\n    </mat-card-title>\n    \n    <mat-card-subtitle class="cf-list-header-subtitle" *ngIf="_listConfig.header.subtitle">{{ _listConfig.header.subtitle }}</mat-card-subtitle>\n\n    <div class="cf-list-header-buttons">\n      <cf-button-group \n          [buttons]="_listConfig.header.actions" \n          [sourceIdentifier]="sourceIdentifier"\n          [sourceIndex]="sourceIndex"\n          [widgetArrayIndex]="widgetArrayIndex"\n          [originalData]="originalData"\n          (onClick)="buttonClick($event)">\n      </cf-button-group> \n    </div>\n  </mat-card-header>\n  <mat-card-content>\n    <div class="mdc-layout-grid cf-table" *ngIf="_listConfig.description && _listConfig.description.text && _listConfig.description.bgColor">\n      <div class="mdc-layout-grid__inner">\n        <div class="mdc-layout-grid__cell--span-12">\n          <div \n            class="cf-list-header-desc"\n            [style.background-color]="_listConfig.description.bgColor"\n            [style.color]="_listConfig.description.textColor"\n          >\n            <mat-icon class="cf-list-header-desc-icon" aria-hidden="true" [attr.aria-label]="_listConfig.description.icon" *ngIf="_listConfig.description.icon">{{_listConfig.description.icon}}</mat-icon>\n            <span>{{ _listConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class="cf-list-header-divider" *ngIf="_listConfig.header && _listConfig.description && !_listConfig.description.bgColor"></mat-divider>\n    <mat-card-subtitle *ngIf="_listConfig.description && _listConfig.description.text && !_listConfig.description.bgColor">{{ _listConfig.description.text }}</mat-card-subtitle>\n  </mat-card-content>\n</mat-card>\n\n<span [class.cf-table-hidden]="!(_listConfig && isList()) || hideCard || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n    <ng-container *ngTemplateOutlet="cftable"></ng-container>\n</span>\n\n<mat-card [class.cf-table-hidden]="hideFooter == true && (!(_listConfig && isList()) || hideCard || !(_listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\'])))))" *ngIf="_listConfig.pagination!=\'INFINIT_SCROLL\'">\n  <mat-card-actions \n    *ngIf="hideFooter == false"\n    class="actions-align-right" \n    align="right">\n    <mat-paginator \n      [length]="_record.total" \n      [pageSize]="limit"\n      [pageSizeOptions]="pageSizeOptions"\n      (page)="onPage($event)"\n      [ngClass]="{\'page-wise\': _listConfig.pagination==\'NO_PAGE\'}"\n      [hidePageSize]="_listConfig.pagination==\'NO_PAGE\'"\n    ></mat-paginator>\n  </mat-card-actions>\n</mat-card>\n\n<span *ngIf="(hideCard && _listConfig && (_listConfig.permission == null || (_listConfig.permission && (_listConfig.permission[\'subject\'] | can: _listConfig.permission[\'action\']))))">\n  <ng-container *ngTemplateOutlet="cftable"></ng-container>\n</span>\n\n<ng-template #cftable>\n  <span *ngIf="!isMobile">\n    <ng-container *ngTemplateOutlet="cftablelist"></ng-container>\n  </span>\n  <span *ngIf="isMobile && _listConfig.mobile">\n    <ng-container \n      [ngTemplateOutlet]="cftablemobile"\n      [ngTemplateOutletContext]="{layout: _listConfig.mobile}"></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cftablemobile let-layout="layout">\n  <div class="mdc-layout-grid cf-card-list">\n    <div class="mdc-layout-grid__inner" id="mySearch" *ngIf="_listConfig.staticList.hasOnPageFilter">\n      <div \n        *ngIf="_listConfig.staticList.hasOnPageFilter"\n        class="search-mobile-container mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !layout.sorting ? 12 : 9}}"\n      >\n        <cf-field \n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'pageFilter\']) ? commonListForm.controls[\'pageFilter\'] : null"\n          [field]="filterField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          [value]=""\n          (onFieldChange)="updateFilter($event);$event.event.stopPropagation()"\n          class="cf-list-search-field search-mobile"\n          [style.width.%]="100">\n        </cf-field>  \n        <div> \n          <mat-icon \n            class="cf-mobile-filter-icon" \n            [ngClass]="{\'rote\':this.sortDirection==\'desc\'}" \n            [matMenuTriggerFor]="filterMenu" \n            aria-label="Filter Menu"\n          >filter_list</mat-icon>\n          \x3c!-- (click)="(sortDirection == \'asc\' ? sortDirection = \'desc\' : sortDirection = \'asc\');_record.rows=_record.rows.reverse();" --\x3e\n          <mat-menu #filterMenu="matMenu">\n            <button \n              class="cf-mobile-filter-link"\n              *ngFor="let sorting of _listConfig.mobile.sorting" \n              mat-menu-item\n              (click)="onSort({\'action\':sorting.key, \'direction\':sorting.direction})"\n            >{{sorting.label}}</button>\n          </mat-menu>\n        </div>\n      </div>\n    </div>\n\n    <div [ngClass]="{\'wrapper-a\': _listConfig.pagination==\'INFINIT_SCROLL\'}" infiniteScroll [infiniteScrollDistance]="2" [infiniteScrollThrottle]="1.5" [infiniteScrollContainer]="scrollRow" #scrollRow (scrolled)="onPage($event)">\n      \x3c!-- <pre>{{_listConfig.mobile.cells | json}}</pre> --\x3e\n      <mat-card class="cf-card-mobile" *ngFor="let row of _record.rows; let rowIndex=index">\n        <mat-card-content>\n          <mat-grid-list [cols]="cellCount" [rowHeight]="_listConfig.mobile.rowHeight">\n            <mat-grid-tile *ngFor="let cell of _listConfig.mobile.cells" [colspan]="cell.cols" [rowspan]="cell.rows">\n              <div class="cf-card-mobile-cell"\n                *ngIf="!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;">\n                <ng-container [ngTemplateOutlet]="cfCustomCell"\n                  [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"></ng-container>\n              </div>\n              <ng-template #elseValue>\n                <div class="cf-card-mobile-cell-inline">\n                  <ng-container [ngTemplateOutlet]="cfCustomCell"\n                    [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"></ng-container>\n                </div>\n              </ng-template>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #cfCustomRowLayout let-layout="layout" let-row="row" let-rowIndex="rowIndex" let-withCard="withCard"> \n  <mat-card class="cf-card-mobile" *ngIf="withCard">\n    <mat-card-content>\n      <ng-container  \n        [ngTemplateOutlet]="cfCustomRow"\n        [ngTemplateOutletContext]="{layout: layout, row: row, rowIndex: rowIndex}"\n      ></ng-container>\n    </mat-card-content>\n  </mat-card>\n  <span class="cf-card-mobile" *ngIf="!withCard">\n    <ng-container  \n      [ngTemplateOutlet]="cfCustomRow"\n      [ngTemplateOutletContext]="{layout: layout, row: row, rowIndex: rowIndex}"\n    ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfCustomRow let-layout="layout" let-row="row" let-rowIndex="rowIndex"> \n  <mat-grid-list \n      [cols]="cellCount"  \n      [rowHeight]="layout.rowHeight">\n      <mat-grid-tile\n        *ngFor="let cell of layout.cells"\n        [colspan]="cell.cols"\n        [rowspan]="cell.rows">\n        <div class="cf-card-mobile-cell" *ngIf="!(cell.displayInline && cell.displayInline.separator && cell.controls && cell.controls.length > 0); else elseValue;"> \n          <ng-container \n            [ngTemplateOutlet]="cfCustomCell"\n            [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"\n          ></ng-container>\n        </div>\n        <ng-template #elseValue>\n          <div class="cf-card-mobile-cell-inline">\n            <ng-container \n              [ngTemplateOutlet]="cfCustomCell"\n              [ngTemplateOutletContext]="{cell:cell, row:row, rowIndex:rowIndex}"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </mat-grid-tile>\n    </mat-grid-list>   \n</ng-template>\n\n<ng-template #cfCustomCell let-cell="cell" let-row="row" let-rowIndex="rowIndex"> \n  <span \n    [ngClass]="{\'fullwidth\': control.fullWidth}"\n    *ngFor="let control of cell.controls; let cControlIndex = index;">\n    \x3c!-- {{control.control.key}} --\x3e \n    <span \n      class="cf-card-mobile-control-separator"\n      *ngIf="cell.displayInline && cell.displayInline.separator && cControlIndex > 0" \n      [innerHtml]="cell.displayInline.separator"></span>\n\n    \x3c!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== --\x3e\n    \x3c!-- //{{control.colIndex}}-{{control.cControlIndex}} --\x3e\n    <cf-field\n      *ngIf="control.control && (!cell.link || (cell.link && cell.linkKey && cell.linkKey != control.control.key)) && control.type == \'FIELD\'" \n      [sourceType]="\'LIST\'"\n      [sourceIdentifier]="_listConfig.identifier" \n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n      [fieldControl]="(formIndex == rowIndex && form != undefined) ? form.controls[control.control.key] : null"\n      [field]="control.control"\n      [displayMode]="displayModes[rowIndex]" \n      [hideLabel]="true"\n      [value]="getValue(control.colIndex, control.cControlIndex, row, control.control.value)" \n      class="cf-list-field"\n      [ngClass]="{\'cf-list-field-disabled\': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled, \'cf-primary-text\': control.fieldStyle && control.fieldStyle.class == \'PRIMARY\', \'cf-secondary-text\': control.fieldStyle && control.fieldStyle.class == \'SECONDARY\', \'cf-tertiary-text\': control.fieldStyle && control.fieldStyle.class == \'TERTIARY\'}"\n      [row]="row"\n      [keyMap]="keyMap"\n      (onFieldChange)="fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): \'\'">\n    </cf-field>\n    <cf-button\n      *ngIf="cell.link && ((cell.linkKey && cell.linkKey == control.control.key) || !cell.linkKey) && control.type == \'FIELD\'" \n      [identifier]="\'listFieldAsLink\'"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex"\n      [widgetArrayIndex]="widgetArrayIndex"\n      [button]="cell.link"\n      [label]="getValue(control.colIndex, control.cControlIndex, row, control.control.value)"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n      [originalData]="row"\n      [parentHierarchy]="parent"\n      [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n      (onClick)="buttonClick($event);$event.event.stopPropagation()"\n    ></cf-button>\n\n    \x3c!-- [formDisplayMode]="formConfig.displayMode" --\x3e\n    \x3c!-- <cf-button-group \n      [ngClass]="{\'fullwidth\': control.fullWidth}"\n      *ngIf="control.type == \'BUTTON\'"\n      [buttons]="control.control" \n      [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [originalData]="row"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n      (onClick)="buttonClick($event)">\n    </cf-button-group> --\x3e\n\n    <cf-button \n      *ngIf="control.type == \'BUTTON\'"\n      [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n      [sourceIdentifier]="_listConfig.identifier"\n      [sourceIndex]="rowIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [button]="control.control"\n      [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n      [originalData]="row"\n      [parentHierarchy]="parent" \n      [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n      (onClick)="setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()"\n    ></cf-button> \n  </span>\n</ng-template>\n\n<ng-template #cftablelist>\n  <div class="mdc-layout-grid cf-table">\n    <div class="mdc-layout-grid__inner" *ngIf="_listConfig.staticList.hasOnPageFilter || _listConfig.hasColumnSelection">\n      <div \n        *ngIf="_listConfig.staticList.hasOnPageFilter"\n        class="mdc-layout-grid__cell--span-{{ _listConfig.staticList.hasOnPageFilter && !_listConfig.hasColumnSelection ? 12 : 9}}"\n      >\n        <cf-field \n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'pageFilter\']) ? commonListForm.controls[\'pageFilter\'] : null"\n          [field]="filterField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          [value]=""\n          (onFieldChange)="updateFilter($event);$event.event.stopPropagation()"\n          class="cf-list-search-field"\n          [style.width.%]="100">\n        </cf-field>  \n      </div>\n      <div \n        *ngIf="_listConfig.hasColumnSelection" \n        class="mdc-layout-grid__cell--span-{{!_listConfig.staticList.hasOnPageFilter && _listConfig.hasColumnSelection ? 12 : 3}} mdc-layout-grid--align-right" \n        [style.width.%]="100">\n        <cf-field\n          [sourceType]="\'FORM\'"\n          [form]="commonListForm" \n          [fieldControl]="(commonListForm != undefined && commonListForm.controls[\'columnSelector\']) ? commonListForm.controls[\'columnSelector\'] : null"\n          [field]="columnSelectorField"\n          [hideLabel]="true"\n          [displayMode]="\'EDIT\'" \n          class="cf-list-sel-col-field"\n          (onFieldChange)="updateColumnDisplay($event)"\n          [style.width.%]="100">\n        </cf-field>  \n        \x3c!-- ;$event.event.stopPropagation() --\x3e\n      </div>\n    </div>\n    <div class="mdc-layout-grid__inner">\n      <div class="mdc-layout-grid__cell--span-12" *ngIf="columnNames">\n        <table  \n          mat-table  \n          [dataSource]="dataSource" \n          class="cf-table"\n          [ngClass]="{\'cf-table-hover\': _listConfig.shade && _listConfig.shade.type == \'HOVER\', \'cf-table-alternate\': _listConfig.shade && _listConfig.shade.type == \'ALTERNATE\', \'cf-table-without-header\': _listConfig.hideHeaderRow}"\n          multiTemplateDataRows\n          matSort\n          [matSortActive]="_listConfig.defaultSort ? _listConfig.defaultSort.column : \'\'" \n          matSortDisableClear  \n          [style.width.%]="\'100\'"\n          [matSortDirection]="_listConfig.defaultSort ? _listConfig.defaultSort.order: \'\'"\n          (matSortChange)="onSort($event)">\n          \n          <ng-container matColumnDef="select">\n            <th \n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              mat-header-cell \n              *matHeaderCellDef \n              class="selectable-column">\n              <mat-checkbox \n                class="cf-list-checkbox-selectable"\n                (change)="$event ? masterToggle() : null"\n                [checked]="selection.hasValue() && isAllSelected()"\n                [indeterminate]="selection.hasValue() && !isAllSelected()"\n                [aria-label]="checkboxLabel()">\n              </mat-checkbox>\n            </th>\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              [style.background-color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : \'\'"\n              [style.color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : \'\'"\n              class="selectable-column">\n              <mat-checkbox \n                class="cf-list-checkbox-selectable"\n                [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                (click)="$event.event.stopPropagation()"\n                (change)="$event ? selection.toggle(row) : null"\n                [checked]="selection.isSelected(row)"\n                [aria-label]="checkboxLabel(row)">\n              </mat-checkbox>\n            </td>\n          </ng-container>\n          \n          <ng-container \n            *ngFor="let column of columnConfigs; let colIndex = index"\n            [matColumnDef]="getColumnKey(column)">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              mat-sort-header\n              disableClear\n              [disabled]="!column.sortable"\n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              [ngClass]="{\'cf-list-field-first\': colIndex == 0}"\n              [style.width.%]="displayVertical ? \'100\' : column.width / totalDispalyableWidth * 100">\n              {{getColumnLabel(column)}}\n            </th> \n            \x3c!-- [attr.data-label]="getColumnLabel(column)" --\x3e\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              class="cf-table-data-cell"\n              [style.background-color]="cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].bgColor : \'\'"\n              [style.color]="cellColors && cellColors[rowIndex] && cellColors[rowIndex][colIndex] ? cellColors[rowIndex][colIndex].textColor : \'\'"\n              [style.width.%]="displayVertical ? \'100\' : column.width / totalDispalyableWidth * 100"\n              (click)="_listConfig.rowAction ? rowClick(row, rowIndex, ((formIndex == rowIndex && form != undefined) ? form.value : null), $event) : _listConfig.rowAction"\n              >\n \n              <ng-container *ngIf="column?.template?.html || column?.template?.layout; else elseDefault">\n                <span *ngIf="column?.template?.html">\n                  <ng-container *cfTemplate="\'<style>\'+column?.template?.css+\'</style>\' + column?.template?.html; context: {row: row, index: rowIndex}"></ng-container>\n                </span>\n                <span *ngIf="column?.template?.layout">\n                  \x3c!-- {{row | json}}--- --\x3e\n                  <ng-container  \n                    [ngTemplateOutlet]="cfCustomRowLayout"\n                    [ngTemplateOutletContext]="{layout: column.template.layout, row: row, rowIndex: rowIndex, withCard: false}"\n                  ></ng-container>\n                </span>\n              </ng-container>\n              <ng-template #elseDefault>\n                <div [ngClass]="{\'cf-list-field-not-first\': cFieldIndex > 0, \'cf-list-field-inline\': column.displayInline && column.displayInline.separator}" *ngFor="let field of column.fields; let cFieldIndex = index;">\n                  <span *ngIf="column.displayInline && column.displayInline.separator && cFieldIndex > 0">{{column.displayInline.separator}}</span>\n                  <cf-field\n                    *ngIf="!column.link || (column.link && column.linkKey && column.linkKey != field.key)" \n                    [sourceType]="\'LIST\'"\n                    [sourceIdentifier]="_listConfig.identifier" \n                    [sourceIndex]="rowIndex" \n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [form]="(formIndex == rowIndex && form != undefined) ? form : null" \n                    [fieldControl]="(formIndex == rowIndex && form != undefined) ? form.controls[field.key] : null"\n                    [field]="field"\n                    [displayMode]="displayModes[rowIndex]" \n                    [hideLabel]="true"\n                    [value]="getValue(colIndex, cFieldIndex, row, field.value)" \n                    class="cf-list-field"\n                    [ngClass]="{\'cf-list-field-disabled\': (_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled}"\n                    [row]="row"\n                    [keyMap]="keyMap"\n                    (onFieldChange)="fieldChange($event);$event.event && $event.event.stopPropagation ? $event.event.stopPropagation(): \'\'">\n                  </cf-field>\n                  <cf-button\n                    *ngIf="column.link && ((column.linkKey && column.linkKey == field.key) || !column.linkKey)" \n                    [identifier]="\'listFieldAsLink\'"\n                    [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                    [sourceIdentifier]="_listConfig.identifier"\n                    [sourceIndex]="rowIndex"\n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [button]="column.link"\n                    [label]="getValue(colIndex, cFieldIndex, row, field.value)"\n                    [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n                    [originalData]="row"\n                    [parentHierarchy]="parent"\n                    [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                    (onClick)="buttonClick($event);$event.event.stopPropagation()"\n                  ></cf-button>\n                </div>\n              </ng-template>\n            </td>\n          </ng-container>\n      \n          <ng-container matColumnDef="expandedRow"> \n            <td mat-cell *matCellDef="let row; let rowIndex = dataIndex" [attr.colspan]="childColumnCount">\n              <div class="cf-element-detail"\n                  [@detailExpand]="row == expandedRow || this._expanded == true ? \'expanded\' : \'collapsed\'">\n                <cf-static-list \n                  *ngIf="_listConfig.child && _listConfig.child.type == \'LIST\' && _listConfig.child.record && (row == expandedRow || _expanded == true)"\n                  [listConfig]="_listConfig.child.record" \n                  [sourceIdentifier]="sourceIdentifier"\n                  [record]="getChildRows(expandedRow)" \n                  [keyMap]="keyMap"\n                  [expanded]="_expanded"\n                  [listReset]="listReset"\n                  [parent]="getObjectTree(row)"\n                  [style.width.%]="100"\n                  [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                  (onFormChange)="formChange($event)"\n                  (onFieldChange)="fieldChange($event);$event.event.stopPropagation()"\n                  (onButtonClick)="buttonClick($event);$event.event.stopPropagation()"\n                  (onPageChange)="onPage($event)"\n                  (onSortChange)="onSort($event)"  \n                >\n                </cf-static-list>\n                <cf-form\n                    *ngIf="_listConfig.child && _listConfig.child.type == \'FORM\' && (row == expandedRow || _expanded == true)"\n                    [formConfig]="_listConfig.child.record"\n                    [sourceIdentifier]="_listConfig.identifier"\n                    [sourceIndex]="rowIndex"\n                    [widgetArrayIndex]="widgetArrayIndex"\n                    [style.width.%]="100"\n                    (onFormChange)="formChange($event)"\n                    (onFieldChange)="fieldChange($event)"\n                    (onButtonClick)="buttonClick($event)"\n                ></cf-form>\n              </div>\n            </td> \n          </ng-container>\n      \n          <ng-container \n            *ngIf="_listConfig.actions && _listConfig.actions.length > 0"\n            matColumnDef="action">\n            <th \n              mat-header-cell \n              *matHeaderCellDef\n              class="cf-list-action-col"\n              [class.cf-table-header-hidden]="_listConfig.hideHeaderRow"\n              [style.width.%]="displayVertical ? \'100\' : _listConfig.actionWidth / totalDispalyableWidth * 100"\n              >\n              Action\n            </th>\n            <td \n              mat-cell \n              *matCellDef="let row; let rowIndex = dataIndex"\n              class="cf-list-action-col"\n              [style.background-color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].bgColor : \'\'"\n              [style.color]="rowColors && rowColors[rowIndex] ? rowColors[rowIndex].textColor : \'\'"\n              [style.width.%]="displayVertical ? \'100\' : _listConfig.actionWidth / totalDispalyableWidth * 100"\n              > \n              \x3c!-- --{{inlineEditButtons[rowIndex].size}} --\x3e\n              <cf-button \n                *ngIf="isInlineEditable && inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].icon"\n                [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                [sourceIdentifier]="_listConfig.identifier"\n                [sourceIndex]="rowIndex" \n                [widgetArrayIndex]="widgetArrayIndex"\n                [button]="inlineEditButtons[rowIndex]"\n                class="cf-button"\n                [context]="(formIndex == rowIndex && form != undefined) ? form.value : null" \n                [originalData]="row"\n                [parentHierarchy]="parent" \n                [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                (onClick)="setRowEditablity(rowIndex);buttonClick($event);$event.event.stopPropagation()"\n              ></cf-button> \n              <cf-button-group\n                  *ngIf="!isInlineEditable || (inlineEditButtons && inlineEditButtons[rowIndex] && inlineEditButtons[rowIndex].label == \'Cancel\')"\n                  [buttons]="_listConfig.actions"\n                  [form]="(formIndex == rowIndex && form != undefined) ? form : null"\n                  [sourceIdentifier]="_listConfig.identifier"\n                  [sourceIndex]="rowIndex"\n                  [widgetArrayIndex]="widgetArrayIndex"\n                  [context]="(formIndex == rowIndex && form != undefined) ? form.value : null"\n                  [originalData]="row"\n                  [parentHierarchy]="parent"\n                  [disabled]="(_listConfig && row && _listConfig.disableRow && _listConfig.disableRow(row)) || disabled"\n                  (onClick)="buttonClick($event);"\n              ></cf-button-group>\n            </td>\n          </ng-container> \n          <tr \n            mat-header-row \n            *matHeaderRowDef="columnNames; sticky: _listConfig.stickyHeader"\n          ></tr>\n          <div *ngIf="(_listConfig.row &&_listConfig.row.hover);else withoutTooltip">\n            <tr \n              mat-row \n              *matRowDef="let row; columns: columnNames; let i = dataIndex;"\n              [tooltip]="rowHoverTemplate"\n              show-delay="300"\n              [position]="tooltipPosition"\n              [width]="_listConfig?.row?.hover?.width"  \n              theme="light"\n              content-type="template"\n              class="cf-row"\n              [ngClass]="{\'without-hover\': !(_listConfig.row &&_listConfig.row.hover)}"\n              (mouseenter)="onHover($event,i, (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row)" \n              (click)="expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row"\n            ></tr>\n          </div>\n\n          <ng-template #withoutTooltip>\n            <tr \n              mat-row \n              *matRowDef="let row; columns: columnNames; let i = dataIndex;"\n              class="cf-row"\n              [ngClass]="{\'without-hover\': !(_listConfig.row &&_listConfig.row.hover)}"\n              (click)="expandedRow = (_listConfig && _listConfig.child && _listConfig.child.record && expandedRow === row) ? null : row"\n            ></tr>\n          </ng-template>\n          \x3c!-- [tooltip]="rowHoverTemplate"\n          placement="bottom"\n          content-type="template"\n          hideDelayTouchscreen=0\n          hide-delay=100\n          show-delay=100\n          animation-duration=100\n          max-width=_listConfig?.row?.hover?.width\n          display="_listConfig.row && _listConfig.row.hover && (_listConfig.row.hover.template || _listConfig.row.hover.layout)"\n          theme="light"\n           --\x3e\n          <tr  \n            style="background-color: aliceblue;"\n            mat-row  \n            *matRowDef="let row; columns: [\'expandedRow\']" \n            [ngClass]="{\'cf-detail-row-hide\': !_listConfig.child || !_listConfig.child.record}"\n            class="cf-detail-row"\n          ></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-template> \n\n<ng-template #rowHoverTemplate>\n  <div *ngIf="_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.component" [ngStyle]="{\'width\': _listConfig.row.hover.width + \'px\'}">\n    \x3c!-- <ndc-dynamic\n      [ndcDynamicComponent]="_listConfig.row.hover.template.component"\n      [ndcDynamicInputs]="hoverRowData"\n    ></ndc-dynamic> --\x3e\n  </div>\n  <div *ngIf="_listConfig?.row?.hover && _listConfig.row.hover.template && _listConfig.row.hover.template.layout" [ngStyle]="{\'width\': _listConfig.row.hover.width + \'px\'}" class="cf-list-hover-tooltip">\n    <ng-container  \n      [ngTemplateOutlet]="cfCustomRowLayout"\n      [ngTemplateOutletContext]="{layout: _listConfig.row.hover.template.layout, row: hoverRowData, rowIndex: hoverRowIndex, withCard: false}"\n    ></ng-container>\n  </div>\n</ng-template> \n\n<ng-template #rowTemplate>\n  <div *ngIf="_listConfig?.row?.template">\n    \x3c!-- <ndc-dynamic [ndcDynamicComponent]="_listConfig.row.template"></ndc-dynamic> --\x3e\n  </div>\n</ng-template>',encapsulation:core.ViewEncapsulation.None,styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-list-header .mat-card-header-text{margin:0!important}.cf-list-header .mat-card-title{margin-top:6px}.cf-list-header .mat-card-avatar{font-size:40px;padding-right:8px}.cf-list-header-subtitle .mat-card-subtitle,.mat-card-subtitle{padding-top:0!important}.cf-list-header-buttons{position:absolute;right:5px;top:5px}.cf-table-header-hidden,.cf-table-hidden{display:none!important}.cf-table-without-header thead,.cf-table-without-header tr.mat-header-row{height:0!important}table{width:100%}.cf-table{padding:0!important}td,th{max-width:200px;white-space:normal;word-wrap:break-word}.cf-element-detail{border-left:2px groove #f5f5f5;display:flex;overflow:hidden;padding-right:3px;width:100%}.cf-list-action-col{text-align:right!important}tr.cf-detail-row{background-color:#f5f5f5;height:0!important}tr.cf-detail-row-hide{display:none!important}.sticky{position:-webkit-sticky;position:sticky}.selectable-column{padding-right:1%}.rote{transform:rotateX(180deg)}.cf-element-detail>th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:0!important}.mat-card-content{margin-bottom:0!important}.cf-list-header-desc{margin:5px 0 5px 15px;padding:5px 10px;width:auto}.cf-list-header-desc-icon{font-size:15px;height:15px;margin-top:0;padding:0 5px 0 0;width:15px}.cf-table-alternate tr.mat-row:nth-child(odd),.cf-table-hover tr.mat-row:hover{background:#f5f5f5}.cf-table-alternate tr.mat-row:not(:nth-child(4n+1)){background:#fff}.cf-table-data-cell{padding:0 10px 0 0!important}.cf-list-field .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:0}.cf-list-field-not-first{padding-top:5px}.cf-list-field-first{padding-left:0!important}.cf-list-field-disabled{color:rgba(0,0,0,.5411764705882353)}.cf-list-checkbox-selectable{padding-right:12px}.cf-list-field-inline{display:inline}@media screen and (max-width:599px){.mat-table{border:0;vertical-align:middle}.mat-table caption{font-size:1em}.mat-table .mat-header-row{display:none}.mat-table .mat-header-cell{border:10px solid;clip:rect(0 0 0 0);height:1px;margin:-1px;padding:0;position:absolute;width:1px}.mat-table .mat-row{border-bottom:5px solid #ddd;display:block;height:unset}.mat-table .mat-cell{display:block;font-size:1em;font-weight:700;margin-bottom:4%;min-height:48px}.mat-table .mat-cell:before{content:attr(data-label);float:left;font-size:.85em;font-weight:400}.mat-table .mat-cell:last-child{border-bottom:0}.mat-table .mat-cell:first-child{margin-top:4%}.mat-table .mat-row td{max-width:unset}}.cf-card-list{padding:0}.cf-card-list mat-card{padding:8px}.cf-card-mobile{margin-bottom:12px;word-wrap:break-word}.cf-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.cf-card-mobile .cf-primary-text .cf-field-value{font-size:18px;font-weight:400;margin-bottom:none}.cf-card-mobile .cf-secondary-text .cf-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.cf-card-mobile .cf-tertiary-text .cf-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.cf-card-mobile .cf-card-mobile-cell{display:block;width:100%}.cf-card-mobile .cf-card-mobile-cell .fullwidth button{width:100%}.cf-card-mobile .cf-card-mobile-cell .cf-primary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-secondary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-tertiary-text .cf-field-value{display:block}.cf-card-mobile .cf-card-mobile-cell .fullwidth button,.cf-card-mobile .cf-card-mobile-cell .fullwidth mat-chip{width:100%}.cf-card-mobile .cf-card-mobile-cell-inline{display:inline-block;width:100%}.cf-card-mobile .cf-card-mobile-cell-inline .cf-card-mobile-control-separator{padding:4px}.hover-template{display:none;position:absolute;z-index:9999}.cf-row:hover .without-hover{pointer-events:none}.wrapper-a{height:69vh;overflow-y:auto}.search-mobile{margin-right:10px}.search-mobile-container{display:flex}.sticky{background:#fff;border-bottom:1px solid #d3cece;left:0;margin:0 auto;padding:10px 20px;position:fixed;right:0;top:0;width:88%;z-index:99}.sticky+.content{padding-top:102px}.cf-mobile-filter-icon{padding-top:8px}.cf-mobile-filter-link{text-align:end}.cf-list-hover-tooltip{padding:8px}"]}]}],DynamicListComponent.ctorParameters=function(){return[{type:ability.Ability},{type:layout.BreakpointObserver}]};var ModalComponent=function(){function t(t,e,n){this.dialogRef=t,this.data=e,this.ability=n,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){},t.prototype.click=function(t){this.dialogRef.close(t)},t.prototype.fieldChange=function(t){console.log(t),this.onFieldChange.emit(t)},t.prototype.formChange=function(t){this.onFormChange.emit(t)},t.prototype.buttonClick=function(t){console.log(t),this.onButtonClick.emit(t)},t}();ModalComponent.decorators=[{type:core.Component,args:[{selector:"cf-modal",template:'\x3c!-- <h1 mat-dialog-title *ngIf="title">{{title}}</h1>\n<div mat-dialog-content *ngIf="message">\n  <p>{{message}}</p>\n</div>\n<div \n  mat-dialog-actions \n  [style.text-align]="\'right\'"\n  class="cf-dialog-action">\n</div> --\x3e\n\n\x3c!-- <pre>\n    {{data | json}}\n</pre> --\x3e\n<cf-form \n    *ngIf="data && data.type == \'FORM\'"\n    [formConfig]="data.widgetConfig"\n    [sourceIndex]="data.sourceIndex"\n    [record]="data.context ? data.context[data.widgetConfig.identifier] : data.context"\n    [originalData]="data.originalData && data.originalData.record ? data.originalData.record[data.widgetConfig.identifier] : {}"  \n    [keyMap]="data.keyMap"\n    [reset]="data.reset"\n    (onFieldChange)="fieldChange($event)"\n    (onFormChange)="formChange($event)"\n    (onButtonClick)="buttonClick($event)"\n></cf-form>\n',encapsulation:core.ViewEncapsulation.None,styles:[".cf-dialog-action{text-align:right}.cf-dialog-action>.cf-button{margin-right:8px}.mat-dialog-container{padding:0!important}"]}]}],ModalComponent.ctorParameters=function(){return[{type:dialog.MatDialogRef},{type:void 0,decorators:[{type:core.Inject,args:[dialog.MAT_DIALOG_DATA]}]},{type:ability.Ability}]},ModalComponent.propDecorators={onFormChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}]};var AdminLayoutComponent=function(){function t(t){this.ability=t,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){},t}();AdminLayoutComponent.decorators=[{type:core.Component,args:[{selector:"app-admin-layout",template:"<p>admin-layout works!</p>\n",styles:[""]}]}],AdminLayoutComponent.ctorParameters=function(){return[{type:ability.Ability}]};var CrudHeaderComponent=function(){function t(t){this.ability=t,this.onButtonClick=new core.EventEmitter,this.badgeButtons=new Array,AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"pageBackRoute",{get:function(){return this._pageBackRoute},set:function(t){this._pageBackRoute=t,this.addBackButton()},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){this.setIconPosition(),this.addBackButton(),this.transformBadgeButtons()},t.prototype.setIconPosition=function(){this.iconPosition="BEFORE_TITLE",this.icon&&this.icon.position&&(this.iconPosition=this.icon.position)},t.prototype.transformBadgeButtons=function(){var t,e;if(this.badges&&this.badges.length>0){try{for(var n=__values(this.badges),i=n.next();!i.done;i=n.next()){var o=i.value;this.badgeButtons.push({identifier:"crudHeaderBadge-0",type:"CHIP",label:o.content,color:this.badgeColorToButtonColor(o.color),size:"micro",groupIdentifier:"crudHeaderGroup"})}}catch(e){t={error:e}}finally{try{i&&!i.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}}},t.prototype.badgeColorToButtonColor=function(t){var e;return"accent"==t?e="accent":"primary"==t?e="primary":"warn"==t&&(e="warn"),e},t.prototype.addBackButton=function(){var t,e;if(this._pageBackRoute&&!CollectionUtils.isEmpty(this._pageBackRoute)){var n;CollectionUtils.isEmpty(this.actions)&&(this.actions=new Array),n={identifier:"crudBackButton",label:"Back",color:"primary",size:"small",icon:"keyboard_return",type:"GHOST",onlyIcon:!1,routerLink:this._pageBackRoute,displayInFormModes:["CRUD_FORM"]};var i=!1;try{for(var o=__values(this.actions),l=o.next();!l.done;l=o.next()){"crudBackButton"==l.value.identifier&&(i=!0)}}catch(e){t={error:e}}finally{try{l&&!l.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}i||(this.actions.unshift(n),this.actions=JSON.parse(JSON.stringify(this.actions)))}},t.prototype.buttonClick=function(t){console.log(t),this.onButtonClick.emit(t)},t}();CrudHeaderComponent.decorators=[{type:core.Component,args:[{selector:"cf-crud-header",template:'<div \n  class="cf-header"\n  [style.padding]="style && style.hideCard ? \'0px 16px\' : \'auto\'"\n>\n    <div class="mdc-layout-grid">\n        <div class="mdc-layout-grid__inner">\n          <div class="mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 6 : 12}}-desktop mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 4 : 8}}-tablet mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 3 : 4}}-phone mdc-layout-grid__cell--align-middle">\n            <mat-card-header class="cf-crud-header">\n              <mat-icon\n                mat-card-avatar \n                class="cf-crud-header-icon-before"\n                *ngIf="icon && icon.font && iconPosition == \'BEFORE_TITLE\'"\n                aria-hidden="false" \n                [style.margin-top.px]="subtitle ? 8 : 0"\n                [attr.aria-label]="icon.font"\n                >{{ icon.font }}</mat-icon>\n\n              <mat-card-title>\n                {{ title }} \n                <mat-icon \n                  class="cf-crud-header-icon-after"\n                  *ngIf="icon && icon.font && iconPosition == \'AFTER_TITLE\'"\n                  aria-hidden="false" [attr.aria-label]="icon.font">{{ icon.font }}</mat-icon>\n              </mat-card-title>\n              \n              \x3c!-- <mat-card-subtitle *ngIf="description && description.text && !description.bgColor">{{ description.text }}</mat-card-subtitle> --\x3e\n\n              <mat-card-subtitle class="cf-crud-header-subtitle" *ngIf="subtitle">{{ subtitle }}</mat-card-subtitle>\n\n              <span class="cf-crud-header-badge" *ngIf="badges && badges.length > 0"> \n                  <cf-button-group\n                      [buttons]="badgeButtons"\n                      [sourceIdentifier]="identifier"\n                      [sourceIndex]="\'0\'"\n                      (onClick)="buttonClick($event)"\n                  ></cf-button-group>\n              </span>\n            </mat-card-header>\n          </div>\n          <div \n            class="mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 6 : 0}}-desktop mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 4 : 0}}-tablet mdc-layout-grid__cell--span-{{actions && actions.length > 0 ? 1 : 0}}-phone mdc-layout-grid__cell--align-middle mdc-layout-grid--align-right cf-crud-header-button" \n            *ngIf="actions && actions.length > 0">\n            \x3c!-- <pre>{{actions | json}}</pre> --\x3e \n            <cf-button-group\n                [buttons]="actions"\n                [sourceIdentifier]="identifier"\n                [formDisplayMode]="formDisplayMode"\n                [sourceIndex]="\'0\'"\n                [originalData]="originalData"\n                [context]="context"\n                (onClick)="buttonClick($event)"\n            ></cf-button-group> \n          </div>\n        </div> \n    </div>\n</div>\n<mat-divider class="cf-crud-header-divider" *ngIf="(title || (actions && actions.length > 0)) && description && !description.bgColor"></mat-divider>\n',styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}.cf-crud-header ::ng-deep .mat-card-header-text{margin:0!important}.cf-crud-header .mat-card-title{margin-top:6px}.cf-crud-header .mat-card-avatar{font-size:40px;padding-right:8px}.cf-crud-header-subtitle .mat-card-subtitle,.mat-card-subtitle{padding-top:0!important}.cf-crud-header-btns{background:#faebd7;margin-left:8px;padding:2px 5px}.cf-header>.mdc-layout-grid{padding:0!important}.cf-crud-header-button{margin-top:-8px}.cf-crud-header-badge{vertical-align:text-bottom}.mdc-layout-grid{padding:0 0 10px!important}.cf-crud-header-icon-after{padding-left:10px}"]}]}],CrudHeaderComponent.ctorParameters=function(){return[{type:ability.Ability}]},CrudHeaderComponent.propDecorators={identifier:[{type:core.Input}],title:[{type:core.Input}],subtitle:[{type:core.Input}],description:[{type:core.Input}],badges:[{type:core.Input}],icon:[{type:core.Input}],style:[{type:core.Input}],_pageBackRoute:[{type:core.Input}],pageBackRoute:[{type:core.Input}],formDisplayMode:[{type:core.Input}],actions:[{type:core.Input}],showHeader:[{type:core.Input}],originalData:[{type:core.Input}],context:[{type:core.Input}],onButtonClick:[{type:core.Output}]};var FormHeaderComponent=function(){function t(t){this.ability=t,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.fields=new Array,this.buttons=new Array,AbilityUtils.setAbility(this.ability)}return t.prototype.ngOnInit=function(){this.getFormHeader(),this.setIconPosition(),this.saperateFormActions()},t.prototype.getFormHeader=function(){var t=this.formHeaderConfig.title;switch(this.subtitle=this.formHeaderConfig.subtitle,this.formDisplayMode){case"SEARCH":t=this.formHeaderConfig.searchModeTitle?this.formHeaderConfig.searchModeTitle:t;case"ADD":t=this.formHeaderConfig.addModeTitle?this.formHeaderConfig.addModeTitle:t;case"EDIT":t=this.formHeaderConfig.editModeTitle?this.formHeaderConfig.editModeTitle:t;case"VIEW":t=this.formHeaderConfig.viewModeTitle?this.formHeaderConfig.viewModeTitle:t;default:t=this.formHeaderConfig.title}null!=this.widgetArrayIndex&&(t+=" - "+(this.widgetArrayIndex+1)),this.title=t},t.prototype.setIconPosition=function(){this.iconPosition="BEFORE_TITLE",this.formHeaderConfig.icon&&this.formHeaderConfig.icon.position&&(this.iconPosition=this.formHeaderConfig.icon.position)},t.prototype.saperateFormActions=function(){var t=this;CollectionUtils.isEmpty(this.formActions)||(this.formActions.forEach((function(e){ButtonUtils.instanceOfAnyButtonType(e)?t.buttons.push(e):t.fields.push(e)})),this.initFormGroup())},t.prototype.initFormGroup=function(){if(this.fields&&this.fields.length>0){var t=new Array;this.fields.map((function(e){return t.push({field:e,addMore:!1})})),this.form=FormUtils.initFormGroup(t,{},{},"ADD")}},t.prototype.fieldChange=function(t){this.onFieldChange.emit(t)},t.prototype.buttonClick=function(t){this.onButtonClick.emit(t)},t}();FormHeaderComponent.decorators=[{type:core.Component,args:[{selector:"cf-form-header",template:'<mat-card-header class="cf-form-header">\n    <mat-icon \n        *ngIf="formHeaderConfig.icon && formHeaderConfig.icon.font && iconPosition == \'BEFORE_TITLE\'"\n        mat-card-avatar \n        aria-hidden="false" \n        [style.margin-top.px]="subtitle ? 8 : 0"\n        [attr.aria-label]="formHeaderConfig.icon.font">{{ formHeaderConfig.icon.font }}</mat-icon>\n\n    <mat-card-title class="cf-form-header-title">\n        {{ title }}\n        <mat-icon \n            mat-card-avatar\n            *ngIf="formHeaderConfig.icon && formHeaderConfig.icon.font && iconPosition == \'AFTER_TITLE\'"\n            aria-hidden="false" \n            [attr.aria-label]="formHeaderConfig.icon.font"\n            class="cf-form-header-after-icon">\n            {{ formHeaderConfig.icon.font }}</mat-icon>\n    </mat-card-title>\n\n    <mat-card-subtitle class="cf-form-header-subtitle" *ngIf="subtitle">{{ subtitle }}</mat-card-subtitle>\n\n    <div class="cf-form-header-buttons">\n        <cf-field \n            *ngFor="let field of fields"\n            [sourceIdentifier]="formIdentifier" \n            [sourceIndex]="sourceIndex" \n            [widgetArrayIndex]="widgetArrayIndex"\n            [form]="form"\n            [field]="field"\n            [displayMode]="formDisplayMode" \n            [value]=""\n            (onFieldChange)="fieldChange($event)">\n        </cf-field> \n        \x3c!-- {{context | json}} --\x3e\n        \x3c!-- {{ originalData | json }} --\x3e\n        <cf-button-group \n            [buttons]="buttons" \n            [form]="form" \n            [sourceIdentifier]="formIdentifier"\n            [sourceIndex]="sourceIndex"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [context]="context"\n            [originalData]="originalData"\n            (onClick)="buttonClick($event)">\n        </cf-button-group>  \n    </div>\n</mat-card-header>',encapsulation:core.ViewEncapsulation.None,styles:[".cf-form-header-buttons{position:absolute;right:0;text-align:right;top:5px}.mat-card-header-text{margin:0 0 10px}.cf-form-header-title{margin-top:0!important}.cf-form-header-after-icon{text-align:center}"]}]}],FormHeaderComponent.ctorParameters=function(){return[{type:ability.Ability}]},FormHeaderComponent.propDecorators={form:[{type:core.Input}],formHeaderConfig:[{type:core.Input}],description:[{type:core.Input}],formDisplayMode:[{type:core.Input}],formIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],originalData:[{type:core.Input}],context:[{type:core.Input}],formActions:[{type:core.Input}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}]};var FormComponent=function(){function t(t,e){this.ability=t,this.breakpointObserver=e,this.onFormChange=new core.EventEmitter,this.onFieldChange=new core.EventEmitter,this.onButtonClick=new core.EventEmitter,this.formFields=new Array,this.cellCount=12,this.showButtons=!0,this.formLayouts=new Array,AbilityUtils.setAbility(this.ability)}return Object.defineProperty(t.prototype,"supportingRecord",{get:function(){return this._supportingRecord},set:function(t){this._supportingRecord=t,this.initFormGroup()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"record",{get:function(){return this._record},set:function(t){this._record=t,this.initFormGroup()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"reset",{get:function(){return this._reset},set:function(t){this._reset=t,1==this._reset&&FormUtils.reset(this.form,this.formConfig)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){this.getLayout(),this.getActions(),this.dependencies=Object.assign(Object.assign({},DependentUtils.getDependencyTree(this.formConfig.formFields)),DependentUtils.getDependencyTreeForButton(this.formConfig.action)),this.getCustomLayout()},t.prototype.getCustomLayout=function(){this.formConfig.showCustomLayout?FormCustomUtils.setCustomLayout(this.formConfig,this.formConfig.layout):this.formConfig.showCustomLayout=!1},t.prototype.getActions=function(){this.formConfig&&this.formConfig.action&&this.formConfig.action.align&&this.formConfig.action.buttons&&this.formConfig.action.buttons.length>0&&(this.formButton=this.formConfig.action),this.formConfig&&this.formConfig.action&&this.formConfig.action.cells&&this.formConfig.action.cells.length>0&&(this.formButtonLayout=this.formConfig.action)},t.prototype.dependentFieldChange=function(t){var e=this;if(this.formConfig.identifier==t.sourceIdentifier){var n=ObjectUtils.unflatten(this.form.getRawValue());this.record=Object.assign(Object.assign({},this.record),n),console.log(this.record),this.initFormGroup(),this.showButtons=!1,setTimeout((function(){e.showButtons=!0}),50)}},t.prototype.fieldChange=function(t){this.onFieldChange.emit(t),this.onFormChange.emit(this.form)},t.prototype.buttonClick=function(t){this.onButtonClick.emit(t)},t.prototype.fieldDefaultSetting=function(){var t,e;if(this.formConfig){try{for(var n=__values(this.formConfig.formFields),i=n.next();!i.done;i=n.next()){var o=i.value;o.field.fieldDisplayType||(o.field.fieldDisplayType=this.formConfig.displayType)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}this.formConfig.displayInColumns||(this.formConfig.displayInColumns=1)}this.setTitle()},t.prototype.setTitle=function(){if(this.formConfig.header){var t=this.formConfig.header.title;switch(this.formConfig.displayMode){case"ADD":this.formConfig.header.addModeTitle&&(t=this.formConfig.header.addModeTitle);break;case"EDIT":this.formConfig.header.editModeTitle&&(t=this.formConfig.header.editModeTitle);break;case"VIEW":case"BLOCKED":this.formConfig.header.viewModeTitle&&(t=this.formConfig.header.viewModeTitle)}this.formConfig.header.title=t}},t.prototype.initFormGroup=function(){KeyMapUtils.setOptionssUsingValues(this.keyMap,!1,"FORM",this.formConfig,this._record),this.form=FormUtils.initFormGroup(this.formConfig.formFields,this._supportingRecord,this._record,this.formConfig.displayMode),this.onFormChange.emit(this.form),(this.isMobile||this.isTablet||this.isDesktop)&&this.resetDisplayInColumn()},t.prototype.getFormValue=function(){return FormUtils.getRawValue(this.form)},t.prototype.transformRows=function(){var t,e,n="",i=new Array,o=-1,l=this.formConfig.displayInColumns;if(this.formConfig.formFields)try{for(var a=__values(this.formConfig.formFields),r=a.next();!r.done;r=a.next()){var d=r.value;if(this.form.controls[d.field.key]&&DependentUtils.displayDependencyField(d.field.dependentOnFields,this._supportingRecord,this._record)&&((d.separator||""==n)&&(i.push({sectionLabel:d&&d.separator&&d.separator.label?d.separator.label:"",sectionIcon:d&&d.separator&&d.separator.icon?d.separator.icon:"",sectionExpandable:d&&d.separator&&d.separator.expandable?d.separator.expandable:null,rows:new Array}),n="-",o++),i[o])){var s=i[o].rows.length;0==i[o].rows.length&&(i[o].rows.push({columns:new Array}),i[o].rows[0].columns=new Array),this.formFieldRowColumnCount(i,o)>=l&&(i[o].rows[s]={columns:new Array}),i[o].rows[i[o].rows.length-1].columns.push(d)}}}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(t)throw t.error}}this.formLayouts=i},t.prototype.formFieldRowColumnCount=function(t,e){for(var n=0,i=0;i<t[e].rows[t[e].rows.length-1].columns.length;i++)t[e].rows[t[e].rows.length-1].columns[i].displayInColumns?n+=t[e].rows[t[e].rows.length-1].columns[i].displayInColumns:(n+=1,t[e].rows[t[e].rows.length-1].columns[i].displayInColumns=1);return n},t.prototype.toggleList=function(t){t.sectionExpandable&&t.sectionExpandable.allowed&&("EXPAND"==t.sectionExpandable.default?t.sectionExpandable.default="COLLAPSE":t.sectionExpandable.default="EXPAND")},t.prototype.getLayout=function(){var t=this;this.breakpointSubscription=this.breakpointObserver.observe([layout.Breakpoints.XSmall,layout.Breakpoints.Small,layout.Breakpoints.Medium,layout.Breakpoints.Large,layout.Breakpoints.XLarge]).subscribe((function(e){e.breakpoints[layout.Breakpoints.XSmall]&&(t.isMobile=!0,console.log("Matches XSmall viewport")),e.breakpoints[layout.Breakpoints.Small]&&(t.isTablet=!0,console.log("Matches Small viewport")),e.breakpoints[layout.Breakpoints.Medium]&&(t.isDesktop=!0,console.log("Matches Medium  viewport")),e.breakpoints[layout.Breakpoints.Large]&&(t.isDesktop=!0,console.log("Matches Large viewport")),e.breakpoints[layout.Breakpoints.XLarge]&&(t.isDesktop=!0,console.log("Matches XLarge viewport")),t.resetButtonDisplay(),t.resetDisplayInColumn()}))},t.prototype.resetButtonDisplay=function(){this.formConfig&&this.formConfig.action&&!CollectionUtils.isEmpty(this.formConfig.action.buttons)&&(!this.isMobile&&!this.isTablet||ButtonUtils.hasWidth(this.formConfig.action.buttons)||ButtonUtils.setEqualWidth(this.formConfig.action.buttons))},t.prototype.resetDisplayInColumn=function(){var t=this;this.formConfig&&this.formConfig.displayInColumns&&(this.isMobile&&(this.cellCount=4,this.formConfig.displayInColumns=this.getNewDisplayInColumn("mobile",this.formConfig.displayInColumns)),this.isTablet&&(this.cellCount=8,this.formConfig.displayInColumns=this.getNewDisplayInColumn("tablet",this.formConfig.displayInColumns))),this.formConfig&&!CollectionUtils.isEmpty(this.formConfig.formFields)&&this.formConfig.formFields.forEach((function(e){e.displayInColumns?(t.isMobile&&(t.cellCount=4,e.displayInColumns=t.getNewDisplayInColumn("mobile",e.displayInColumns)),t.isTablet&&(t.cellCount=8,e.displayInColumns=t.getNewDisplayInColumn("tablet",e.displayInColumns))):e.displayInColumns=1})),this.fieldDefaultSetting(),this.transformRows()},t.prototype.getNewDisplayInColumn=function(t,e){var n=new Map,i=new Map;i.set(12,1),i.set(11,1),i.set(10,1),i.set(9,1),i.set(8,1),i.set(7,1),i.set(6,1),i.set(5,1),i.set(4,1),i.set(3,1),i.set(2,1),i.set(1,1),n.set("mobile",i);var o=new Map;return o.set(12,2),o.set(11,2),o.set(10,2),o.set(9,2),o.set(8,2),o.set(7,2),o.set(6,2),o.set(5,2),o.set(4,2),o.set(3,2),o.set(2,2),o.set(1,1),n.set("tablet",o),n.get(t).get(e)},t.prototype.ngOnDestroy=function(){this.breakpointSubscription&&this.breakpointSubscription.unsubscribe()},t}();FormComponent.decorators=[{type:core.Component,args:[{selector:"cf-form",template:'<mat-card *ngIf="(isMobile || isTablet || isDesktop) && formConfig && (formConfig.permission == null || (formConfig.permission && (formConfig.permission[\'subject\'] | can: formConfig.permission[\'action\'])))" class="cf-form-container">\n  \x3c!-- <mat-card *ngIf="formConfig && (formConfig.permission == null || (formConfig.permission && (formConfig.permission[\'subject\'] | can: formConfig.permission[\'action\'])))"> --\x3e\n  \n  <cf-form-header \n    *ngIf="formConfig.header && formConfig.header.title"\n    class="cf-form-header"\n    [formHeaderConfig]="formConfig.header"  \n    [description]="formConfig.description"\n    [sourceIndex]="sourceIndex"\n    [widgetArrayIndex]="widgetArrayIndex"\n    [formDisplayMode]="formConfig.displayMode" \n    [formIdentifier]="formConfig.identifier"\n    [form]="form"\n    [originalData]="originalData"\n    [context]="getFormValue()"\n    [formActions]="formConfig.header.actions"\n    (onFieldChange)="fieldChange($event)"\n    (onButtonClick)="buttonClick($event)"\n  ></cf-form-header>  \n\n  <mat-card-content *ngIf="!formConfig.showCustomLayout">\n    <div class="mdc-layout-grid cf-table" *ngIf="formConfig.description && formConfig.description.text && formConfig.description.bgColor">\n      <div class="mdc-layout-grid__inner">\n        <div class="mdc-layout-grid__cell--span-{{cellCount}}">\n          <div \n            class="cf-form-header-desc"\n            [style.background-color]="formConfig.description.bgColor"\n            [style.color]="formConfig.description.textColor"\n          >\n            <mat-icon class="cf-form-header-desc-icon" aria-hidden="true" [attr.aria-label]="formConfig.description.icon" *ngIf="formConfig.description.icon">{{formConfig.description.icon}}</mat-icon>\n            <span>{{ formConfig.description.text }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <mat-divider class="cf-form-header-divider" *ngIf="formConfig.formFields && formConfig.formFields.length > 0 && (formConfig.header && formConfig.header.title) && (!formConfig.description || !formConfig.description.bgColor)"></mat-divider>\n    <mat-card-subtitle *ngIf="formConfig.description && formConfig.description.text && !formConfig.description.bgColor">{{ formConfig.description.text }}</mat-card-subtitle>\n\n    <div class="fields-container">\n      <mat-list *ngFor="let formLayout of formLayouts">\n        <mat-list-item \n          *ngIf="formLayout.sectionLabel" \n          class="cf-form-separator" \n          (click)="toggleList(formLayout)">\n          \x3c!-- <mat-icon *ngIf="formLayout.sectionIcon" matListIcon>{{ formLayout.sectionIcon }}</mat-icon> --\x3e\n          <span>\n            <span [ngClass]="{\'cf-form-separator-expandable\': formLayout.sectionExpandable && formLayout.sectionExpandable.allowed}">\n              {{formLayout.sectionLabel}}\n            </span>\n            <mat-icon class="cf-form-section-showhide" *ngIf="formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == \'COLLAPSE\'" matListIcon>keyboard_arrow_down</mat-icon>\n            <mat-icon class="cf-form-section-showhide" *ngIf="formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == \'EXPAND\'" matListIcon>keyboard_arrow_up</mat-icon>\n          </span>\n          \n        </mat-list-item>\n        <mat-divider class="cf-form-section-divider" *ngIf="formLayout.sectionLabel && ((!formLayout.sectionExpandable || !formLayout.sectionExpandable.allowed) || (formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == \'EXPAND\'))"></mat-divider>\n        <div class="mdc-layout-grid cf-form-field-container" [hidden]="formLayout.sectionExpandable && formLayout.sectionExpandable.allowed && formLayout.sectionExpandable.default == \'COLLAPSE\'">\n          \x3c!-- <pre>{{formLayout | json}}</pre> --\x3e\n          <div class="mdc-layout-grid__inner" *ngFor="let row of formLayout.rows; let rIndex = index;">\n            <div class="mdc-layout-grid__cell--span-{{cellCount / formConfig.displayInColumns * (column.displayInColumns ? column.displayInColumns : 1)}} mdc-layout-grid__cell--align-top" *ngFor="let column of row.columns">\n              \x3c!-- <pre>\n                {{column | json}}\n                {{form.controls[column.field.key]}}\n              </pre> --\x3e\n              <ng-container \n                [ngTemplateOutlet]="cfControl"\n                [ngTemplateOutletContext]="{formField: column}"\n              ></ng-container>\n            </div>\n          </div>\n        </div> \n      </mat-list>\n    </div>\n  </mat-card-content>\n  \x3c!-- <pre>{{originalData | json}}</pre> --\x3e\n\n  <mat-card-content class="cf-card-mobile" *ngIf="formConfig.showCustomLayout">\n    <mat-grid-list \n      [cols]="formConfig.layout.cellCount"  \n      [rowHeight]="formConfig.layout.rowHeight">\n      <mat-grid-tile\n        *ngFor="let cell of formConfig.layout.cells"\n        [colspan]="cell.cols"\n        [rowspan]="cell.rows">\n        <span class="cf-card-mobile-cell-container" *ngIf="cell.controls && cell.controls.length > 0; else elseValue;">\n          <div class="cf-card-mobile-cell-inline" *ngIf="cell.displayInline && cell.displayInline.separator; else elseValue;"> \n            <ng-container \n              [ngTemplateOutlet]="cfCustomCell"\n              [ngTemplateOutletContext]="{cell:cell}"\n            ></ng-container>\n          </div>\n          <ng-template #elseValue>\n            <div class="cf-card-mobile-cell">\n              <ng-container  \n                [ngTemplateOutlet]="cfCustomCell"\n                [ngTemplateOutletContext]="{cell:cell}"\n              ></ng-container>\n            </div>\n          </ng-template>\n        </span>\n        <ng-template #elseValue>\n          <span\n            *ngIf="cell.separator && (cell.separator.label || cell.separator.icon)" \n            class="cf-form-separator" \n          >\n            <mat-icon *ngIf="cell.separator.icon" matListIcon>{{ cell.separator.icon }}</mat-icon>\n            <span>{{cell.separator.label}}</span>\n          </span>\n        </ng-template>\n    </mat-grid-tile>\n    </mat-grid-list>   \n  </mat-card-content>\n\n  <mat-card-actions \n    class="cf-form-action"  \n    [style.text-align]="formButton.align"\n    *ngIf="formButton && showButtons">\n    <cf-button-group \n      [buttons]="formButton.buttons" \n      [form]="form" \n      [formDisplayMode]="formConfig.displayMode"\n      [sourceIdentifier]="formConfig.identifier"\n      [sourceIndex]="sourceIndex" \n      [widgetArrayIndex]="widgetArrayIndex"\n      [originalData]="originalData"\n      [context]="getFormValue()" \n      (onClick)="buttonClick($event)"> \n    </cf-button-group>\n  </mat-card-actions> \n\n  <mat-card-actions  \n    class="cf-form-action"  \n    *ngIf="formButtonLayout && showButtons">\n    <mat-grid-list \n      [cols]="cellCount"  \n      [rowHeight]="formButtonLayout.rowHeight">\n      <mat-grid-tile\n        *ngFor="let cell of formButtonLayout.cells"\n        [colspan]="cell.cols"\n        [rowspan]="cell.rows"> \n        <div [ngClass]="{\'cf-form-button-grid-cell-left\': cell.buttons.align == \'left\', \'cf-form-button-grid-cell-right\': cell.buttons.align == \'right\'}">\n          <cf-button-group \n            [buttons]="cell.buttons.buttons" \n            [form]="form" \n            [formDisplayMode]="formConfig.displayMode"\n            [sourceIdentifier]="formConfig.identifier"\n            [sourceIndex]="sourceIndex" \n            [widgetArrayIndex]="widgetArrayIndex"\n            [originalData]="originalData"\n            [context]="getFormValue()" \n            (onClick)="buttonClick($event)">\n          </cf-button-group>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card-actions> \n</mat-card>\n\n<ng-template #cfCustomCell let-cell="cell"> \n  <span \n    [ngClass]="{\'fullwidth\': control.fullWidth}"\n    *ngFor="let control of cell.controls; let cControlIndex = index;">\n    \x3c!-- {{control.control.key}} --\x3e \n    <span \n      class="cf-card-mobile-control-separator"\n      *ngIf="cell.displayInline && cell.displayInline.separator && cControlIndex > 0" \n      [innerHtml]="cell.displayInline.separator"></span>\n\n      \x3c!-- =={{cell.link | json}}--{{cell.linkKey}}--=={{control.control.key}}=={{control.type}}== --\x3e\n      \x3c!-- //{{control.colIndex}}-{{control.cControlIndex}} --\x3e\n      <ng-container \n        *ngIf="control.type == \'FIELD\'"\n        [ngTemplateOutlet]="cfControl"\n        [ngTemplateOutletContext]="{formField: control.control}"\n      ></ng-container>\n  </span>\n</ng-template>\n\n<ng-template #cfControl let-formField="formField">\n  <cf-field \n    *ngIf="formField && !formField.addMore"\n    [sourceType]="\'FORM\'"\n    [sourceIdentifier]="formConfig.identifier" \n    [sourceIndex]="sourceIndex" \n    [widgetArrayIndex]="widgetArrayIndex"\n    [form]="form" \n    [keyMap]="keyMap"\n    [fieldControl]="form.controls[formField.field.key]"\n    [field]="formField.field"\n    [originalData]="originalData"\n    [displayMode]="formConfig.displayMode" \n    [value]="" \n    [dependencies]="dependencies"\n    (onDependentFieldChange)="dependentFieldChange($event)"\n    (onFieldChange)="fieldChange($event)"\n    (onButtonClick)="buttonClick($event)"\n    class="cf-form-field">\n  </cf-field>\n  <ng-template [ngIf]="formField && formField.addMore">\n    <span *ngFor="let fieldControl of form.controls[formField.field.key][\'controls\']; let i=index;">\n      <cf-field\n        [sourceType]="\'FORM\'"\n        [sourceIdentifier]="formConfig.identifier" \n        [sourceIndex]="sourceIndex" \n        [widgetArrayIndex]="widgetArrayIndex"\n        [fieldIndex]="i"\n        [form]="form" \n        [keyMap]="keyMap"\n        [fieldControl]="fieldControl"\n        [field]="formField.field"\n        [originalData]="originalData"\n        [displayMode]="formConfig.displayMode" \n        [value]="" \n        [isAddMore]="formField.addMore"\n        [addMorePermission]="formField.addMorePermission"\n        [device]="isDesktop ? \'desktop\' : (isTablet ? \'tablet\' : \'mobile\')"\n        [displayInColumns]="cellCount / formConfig.displayInColumns * (formField.displayInColumns ? formField.displayInColumns : 1)"\n        [dependencies]="dependencies"\n        (onDependentFieldChange)="dependentFieldChange($event)"\n        (onFieldChange)="fieldChange($event)"\n        (onButtonClick)="buttonClick($event)"\n        class="cf-form-field">\n      </cf-field>\n    </span>\n  </ng-template>\n</ng-template>\n\n',encapsulation:core.ViewEncapsulation.None,styles:[":root{--mdc-layout-grid-column-width-desktop:72px;--mdc-layout-grid-column-width-phone:72px;--mdc-layout-grid-column-width-tablet:72px;--mdc-layout-grid-gutter-desktop:24px;--mdc-layout-grid-gutter-phone:16px;--mdc-layout-grid-gutter-tablet:16px;--mdc-layout-grid-margin-desktop:24px;--mdc-layout-grid-margin-phone:16px;--mdc-layout-grid-margin-tablet:16px}@media (min-width:840px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:24px;padding:var(--mdc-layout-grid-margin-desktop,24px)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-tablet,16px)}}@media (max-width:599px){.mdc-layout-grid{box-sizing:border-box;margin:0 auto;padding:16px;padding:var(--mdc-layout-grid-margin-phone,16px)}}@media (min-width:840px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[12];display:-ms-grid;display:grid;grid-gap:24px;grid-gap:var(--mdc-layout-grid-gutter-desktop,24px);grid-template-columns:repeat(12,minmax(0,1fr));margin:0}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[8];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-tablet,16px);grid-template-columns:repeat(8,minmax(0,1fr));margin:0}}}@media (max-width:599px){.mdc-layout-grid__inner{align-items:stretch;display:flex;flex-flow:row wrap;margin:-8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2*-1)}@supports (display:grid){.mdc-layout-grid__inner{-ms-grid-columns:(minmax(0,1fr))[4];display:-ms-grid;display:grid;grid-gap:16px;grid-gap:var(--mdc-layout-grid-gutter-phone,16px);grid-template-columns:repeat(4,minmax(0,1fr));margin:0}}}@media (min-width:840px){.mdc-layout-grid__cell{box-sizing:border-box;margin:12px;margin:calc(var(--mdc-layout-grid-gutter-desktop, 24px)/2);width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{width:calc(8.33333% - 24px);width:calc(8.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-desktop{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{width:calc(16.66667% - 24px);width:calc(16.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-desktop{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{width:calc(25% - 24px);width:calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-desktop{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{width:calc(33.33333% - 24px);width:calc(33.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-desktop{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{width:calc(41.66667% - 24px);width:calc(41.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-desktop{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{width:calc(50% - 24px);width:calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-desktop{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{width:calc(58.33333% - 24px);width:calc(58.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-desktop{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{width:calc(66.66667% - 24px);width:calc(66.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-desktop{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{width:calc(75% - 24px);width:calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-desktop{-ms-grid-column-span:9;grid-column-end:span 9;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{width:calc(83.33333% - 24px);width:calc(83.33333% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-desktop{-ms-grid-column-span:10;grid-column-end:span 10;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{width:calc(91.66667% - 24px);width:calc(91.66667% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-desktop{-ms-grid-column-span:11;grid-column-end:span 11;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{width:calc(100% - 24px);width:calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-desktop{-ms-grid-column-span:12;grid-column-end:span 12;width:auto}}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-tablet, 16px)/2);width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{width:calc(12.5% - 16px);width:calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-tablet{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-tablet{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{width:calc(37.5% - 16px);width:calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-tablet{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-tablet{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{width:calc(62.5% - 16px);width:calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-tablet{-ms-grid-column-span:5;grid-column-end:span 5;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-tablet{-ms-grid-column-span:6;grid-column-end:span 6;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{width:calc(87.5% - 16px);width:calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-tablet{-ms-grid-column-span:7;grid-column-end:span 7;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-tablet{-ms-grid-column-span:8;grid-column-end:span 8;width:auto}}}@media (max-width:599px){.mdc-layout-grid__cell{box-sizing:border-box;margin:8px;margin:calc(var(--mdc-layout-grid-gutter-phone, 16px)/2);width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell{-ms-grid-column-span:4;grid-column-end:span 4;margin:0;width:auto}}.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{width:calc(25% - 16px);width:calc(25% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-1,.mdc-layout-grid__cell--span-1-phone{-ms-grid-column-span:1;grid-column-end:span 1;width:auto}}.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{width:calc(50% - 16px);width:calc(50% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-2,.mdc-layout-grid__cell--span-2-phone{-ms-grid-column-span:2;grid-column-end:span 2;width:auto}}.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{width:calc(75% - 16px);width:calc(75% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-3,.mdc-layout-grid__cell--span-3-phone{-ms-grid-column-span:3;grid-column-end:span 3;width:auto}}.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-4,.mdc-layout-grid__cell--span-4-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-5,.mdc-layout-grid__cell--span-5-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-6,.mdc-layout-grid__cell--span-6-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-7,.mdc-layout-grid__cell--span-7-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-8,.mdc-layout-grid__cell--span-8-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-9,.mdc-layout-grid__cell--span-9-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-10,.mdc-layout-grid__cell--span-10-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-11,.mdc-layout-grid__cell--span-11-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{width:calc(100% - 16px);width:calc(100% - var(--mdc-layout-grid-gutter-phone, 16px))}@supports (display:grid){.mdc-layout-grid__cell--span-12,.mdc-layout-grid__cell--span-12-phone{-ms-grid-column-span:4;grid-column-end:span 4;width:auto}}}.mdc-layout-grid__cell--order-1{order:1}.mdc-layout-grid__cell--order-2{order:2}.mdc-layout-grid__cell--order-3{order:3}.mdc-layout-grid__cell--order-4{order:4}.mdc-layout-grid__cell--order-5{order:5}.mdc-layout-grid__cell--order-6{order:6}.mdc-layout-grid__cell--order-7{order:7}.mdc-layout-grid__cell--order-8{order:8}.mdc-layout-grid__cell--order-9{order:9}.mdc-layout-grid__cell--order-10{order:10}.mdc-layout-grid__cell--order-11{order:11}.mdc-layout-grid__cell--order-12{order:12}.mdc-layout-grid__cell--align-top{align-self:flex-start}@supports (display:grid){.mdc-layout-grid__cell--align-top{-ms-grid-row-align:start;align-self:start}}.mdc-layout-grid__cell--align-middle{-ms-grid-row-align:center;align-self:center}.mdc-layout-grid__cell--align-bottom{align-self:flex-end}@supports (display:grid){.mdc-layout-grid__cell--align-bottom{-ms-grid-row-align:end;align-self:end}}@media (min-width:840px){.mdc-layout-grid--fixed-column-width{width:1176px;width:calc(var(--mdc-layout-grid-column-width-desktop, 72px)*12 + var(--mdc-layout-grid-gutter-desktop, 24px)*11 + var(--mdc-layout-grid-margin-desktop, 24px)*2)}}@media (min-width:600px) and (max-width:839px){.mdc-layout-grid--fixed-column-width{width:720px;width:calc(var(--mdc-layout-grid-column-width-tablet, 72px)*8 + var(--mdc-layout-grid-gutter-tablet, 16px)*7 + var(--mdc-layout-grid-margin-tablet, 16px)*2)}}@media (max-width:599px){.mdc-layout-grid--fixed-column-width{width:368px;width:calc(var(--mdc-layout-grid-column-width-phone, 72px)*4 + var(--mdc-layout-grid-gutter-phone, 16px)*3 + var(--mdc-layout-grid-margin-phone, 16px)*2)}}.mdc-layout-grid--align-left{margin-left:0;margin-right:auto}.mdc-layout-grid--align-right{margin-left:auto;margin-right:0}body{margin:0}.cf-form-container{box-shadow:none!important}.cf-form-field{width:100%}.cf-form-separator{font-size:12px}.cf-form-separator .mat-list-item-content{padding-left:0!important}.mdc-layout-grid{padding:0!important}.mat-card-header-text{margin:0}.cf-form-header-desc{padding:5px 10px;width:auto}.cf-form-header-desc-icon{font-size:15px;height:15px!important;margin-top:0;padding:0 5px 0 0;width:15px!important}.mat-card-subtitle{padding-top:12px}.cf-form-field-container{padding-top:8px!important}.fields-container .mat-list-base{padding-top:0!important}.cf-form-separator-expandable{color:#00f!important;cursor:pointer;text-decoration:underline}.cf-form-section-showhide{font-size:16px!important;height:16px!important;width:16px!important}.cf-form-button-grid-cell-left{bottom:8px;left:8px;position:absolute}.cf-form-button-grid-cell-right{bottom:8px;position:absolute;right:8px}.cf-form-section-divider{border-top-color:#696969;border-top-width:2px!important}::-webkit-scrollbar{height:8px;width:8px}::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 4px rgba(0,0,0,.38);border-radius:2px}::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 2px rgba(0,0,0,.5);border-radius:8px}::-webkit-scrollbar-thumb,::-webkit-scrollbar-thumb:window-inactive{background:rgba(0,0,0,.38)}.cf-card-mobile{margin-bottom:12px;word-wrap:break-word}.cf-card-mobile .mat-grid-tile .mat-figure{justify-content:unset}.cf-card-mobile .cf-primary-text .cf-field-value{font-size:18px;font-weight:400;margin-bottom:none}.cf-card-mobile .cf-secondary-text .cf-field-value{font-size:14px;font-weight:300;margin-bottom:none;margin-top:4px}.cf-card-mobile .cf-tertiary-text .cf-field-value{font-size:12px;font-weight:300;margin-bottom:none;margin-top:8px}.cf-card-mobile .cf-card-mobile-cell-container{width:100%}.cf-card-mobile .cf-card-mobile-cell{display:block;padding:4px;width:100%}.cf-card-mobile .cf-card-mobile-cell .fullwidth button{width:100%}.cf-card-mobile .cf-card-mobile-cell .cf-primary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-secondary-text .cf-field-value,.cf-card-mobile .cf-card-mobile-cell .cf-tertiary-text .cf-field-value{display:block}.cf-card-mobile .cf-card-mobile-cell .fullwidth button,.cf-card-mobile .cf-card-mobile-cell .fullwidth mat-chip{width:100%}.cf-card-mobile .cf-card-mobile-cell-inline{display:inline-block;width:100%}.cf-card-mobile .cf-card-mobile-cell-inline .cf-card-mobile-control-separator{padding:4px}"]}]}],FormComponent.ctorParameters=function(){return[{type:ability.Ability},{type:layout.BreakpointObserver}]},FormComponent.propDecorators={formConfig:[{type:core.Input}],sourceIdentifier:[{type:core.Input}],sourceIndex:[{type:core.Input}],widgetArrayIndex:[{type:core.Input}],originalData:[{type:core.Input}],keyMap:[{type:core.Input}],onFormChange:[{type:core.Output}],onFieldChange:[{type:core.Output}],onButtonClick:[{type:core.Output}],supportingRecord:[{type:core.Input}],record:[{type:core.Input}],reset:[{type:core.Input}],form:[{type:core.Input}]};var CrudListComponentInterface=function(){function t(){this.keyMap=new Array}return t.prototype.ngOnInit=function(){this.setCommonConfig(),this.setListConfig()},t.prototype.setCommonConfig=function(){},t.prototype.setListConfig=function(){},t.prototype.setBadges=function(){return null},t.prototype.setCommonConfigUsingCrud=function(t){this.identifier=t.identifier,this.header=t.header,this.listReset=!0},t.prototype.setListConfigUsingCrud=function(t){this.quickLinks=t.quickLinks,this.searchConfig=t.search,this.listConfig=t.list,this.actions=t.actions,this.setConfigListData([],[])},t.prototype.loadFilterParams=function(t){if(null!=t){var e=SecurityUtils.decrypt(t);this.configListData.searchData=e}this.configListData.pageNo=1},t.prototype.setConfigListData=function(t,e,n){var i={pageBackRoute:n,badges:e,records:t,originalData:this.originalData};this.configListData=Object.assign(Object.assign({},this.configListData),i)},t.prototype.getRowKey=function(t){return this.listConfig&&this.listConfig.lists&&this.listConfig.lists[t]?this.listConfig.lists[t].uniqueKeys:new Array},t.prototype.getChildRowKey=function(t){return this.listConfig&&this.listConfig.lists&&this.listConfig.lists[t]&&this.listConfig.lists[t].child&&this.listConfig.lists[t].child.record&&this.listConfig.lists[t].child.record.uniqueKeys?this.listConfig.lists[t].child.record.uniqueKeys:new Array},t.prototype.getChildRecordIdentifier=function(t){return this.listConfig&&this.listConfig.lists&&this.listConfig.lists[t]&&this.listConfig.lists[t].child?this.listConfig.lists[t].child.recordIdentifier:""},t.prototype.beforeChangeMerge=function(t,e){var n,i,o,l=-1;if(this.configListData&&this.configListData.records)for(var a=0;a<this.configListData.records.length;a++)if(this.listConfig.lists[a].identifier==e)for(var r=0;r<this.configListData.records[a].rows.length;r++){var d=this.getRowKey(a),s=!0;try{for(var c=(n=void 0,__values(d)),p=c.next();!p.done;p=c.next()){var u=p.value;this.configListData.records[a].rows[r][u]!=t.originalData[u]&&(s=!1)}}catch(t){n={error:t}}finally{try{p&&!p.done&&(i=c.return)&&i.call(c)}finally{if(n)throw n.error}}if(s){this.configListData.records[a].rows[r]=Object.assign(Object.assign({},t.originalData),t.data),o=this.configListData.records[a].rows,l=r;break}}return{rows:o,rowIndex:l}},t.prototype.addRow=function(t,e,n){var i,o=-1;if(this.configListData&&this.configListData.records)for(var l=0;l<this.configListData.records.length;l++)if(this.listConfig.lists[l].identifier==e){CollectionUtils.isEmpty(n)?this.configListData.records[l].rows.push({}):this.configListData.records[l].rows.push(n),i=this.configListData.records[l].rows,o=this.configListData.records[l].rows.length-1;break}return{rows:i,rowIndex:o}},t.prototype.afterChangeMerge=function(){this.configListData=JSON.parse(JSON.stringify(this.configListData)),this.listReset=!0},t.prototype.beforeChildChangeMerge=function(t,e){var n,i,o,l,a,r=-1;if(this.configListData&&this.configListData.records)for(var d=0;d<this.configListData.records.length;d++)if(this.listConfig.lists[d].identifier==e)for(var s=0;s<this.configListData.records[d].rows.length;s++){var c=this.getRowKey(d),p=!0;try{for(var u=(n=void 0,__values(c)),g=u.next();!g.done;g=u.next()){var m=g.value;t.parentHierarchy.parent.key.indexOf(this.configListData.records[d].rows[s][m])<-1&&(p=!1)}}catch(t){n={error:t}}finally{try{g&&!g.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}if(p)for(var f=this.getChildRecordIdentifier(d),h=0;h<this.configListData.records[d].rows[s][f].length;h++){var y=this.getChildRowKey(d),_=!0;try{for(var b=(o=void 0,__values(y)),x=b.next();!x.done;x=b.next()){m=x.value;this.configListData.records[d].rows[s][f][h][m]!=t.originalData[m]&&(_=!1)}}catch(t){o={error:t}}finally{try{x&&!x.done&&(l=b.return)&&l.call(b)}finally{if(o)throw o.error}}if(_){this.configListData.records[d].rows[s][f][h]=Object.assign(Object.assign({},t.originalData),t.data),a=this.configListData.records[d].rows[s][f],r=h;break}}}return{rows:a,rowIndex:r}},t.prototype.addChildRow=function(t,e,n){var i,o,l,a=-1;if(this.configListData&&this.configListData.records)for(var r=0;r<this.configListData.records.length;r++)if(this.listConfig.lists[r].identifier==t.sourceIdentifier)for(var d=0;d<this.configListData.records[r].rows.length;d++){var s=this.getRowKey(r),c=!0;try{for(var p=(i=void 0,__values(s)),u=p.next();!u.done;u=p.next()){var g=u.value;t.originalData[g].indexOf(this.configListData.records[r].rows[d][g])<-1&&(c=!1)}}catch(t){i={error:t}}finally{try{u&&!u.done&&(o=p.return)&&o.call(p)}finally{if(i)throw i.error}}if(c)for(var m=this.getChildRecordIdentifier(r),f=0;f<this.configListData.records[r].rows[d][m].length;f++){CollectionUtils.isEmpty(n)?this.configListData.records[r].rows[d][m].push({}):this.configListData.records[r].rows[d][m].push(n),l=this.configListData.records[r].rows[d][m],a=f;break}}return{rows:l,rowIndex:a}},t.prototype.setTabDisplayMode=function(t,e){CrudUtils.setDisplayType(t,e)},t.prototype.afterChildChangeMerge=function(){this.afterChangeMerge()},t.prototype.setHeaderTitle=function(t){this.header.title=t},t.prototype.setHeaderDescription=function(t){this.header.description.text=t},t}();CrudListComponentInterface.decorators=[{type:core.Component,args:[{selector:"cf-crud-list-interface",template:"<p>crud-list works!</p>\n",styles:[""]}]}],CrudListComponentInterface.ctorParameters=function(){return[]};var ChipsComponent=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.router=e,i.ability=n,i.field=null,i.onListChange=new core.EventEmitter,i.placeholder="",i.separatorKeysCodes=[keycodes.ENTER],i.chips=[],i.addOnBlur=!0,i.addItem=function(t){var e=t.input,n=t.value,o=i.keyExists(n.trim());(n||"").trim()&&!o&&i.chips.push({key:n.trim(),value:n.trim(),disabled:!1,removable:i.removable||!0}),e&&(e.value=""),i.triggerChangedEvent(t)},i.removeItem=function(t,e,n){i.chips.splice(n,1)},i.drop=function(t){dragDrop.moveItemInArray(i.chips,t.previousIndex,t.currentIndex),i.triggerChangedEvent(t)},i.triggerChangedEvent=function(t){var e=i.chips.map((function(t){return t.key}));i.formControl.setValue(e),i.onListChange.emit({values:e,event:t})},i.onSelected=function(t){i.keyExists(t.option.value.key)||(i.chips.push({key:t.option.value.key,value:t.option.value.value,removable:!0,disabled:!1}),i.input.nativeElement.value="",i.triggerChangedEvent(t))},i.isFunctionDefined=function(t){return"function"==typeof t},i}return __extends(e,t),e.prototype.setDescribedByIds=function(t){throw new Error("Method not implemented.")},e.prototype.onContainerClick=function(t){throw new Error("Method not implemented.")},e.prototype.ngOnInit=function(){this.placeholder=this.field.placeholder||"",this.orientation=this.field.orientation||"HORIZONTAL",this.options=this.field.options||[],this.setChips()},e.prototype.setChips=function(){var t=this,e=this.formControl.value,n=FieldUtils.isFieldDisabled(this.field,this.displayMode,e);CollectionUtils.isEmpty(e)?this.chips=[]:e.forEach((function(e){if(CollectionUtils.isEmpty(t.field.options))t.chips.push({key:e,value:e,disabled:n,removable:!0});else{var i=null;t.field.options.forEach((function(t){t.key==e&&(i=t)})),null!=i?t.chips.push({key:i.key,value:i.value,disabled:n,removable:!0}):t.chips.push({key:e,value:e,disabled:n,removable:!0})}}))},e.prototype.keyExists=function(t){var e=!1;return this.chips.forEach((function(n){n.key==t&&(e=!0)})),e},e.prototype.errors=function(){var t=this,e=[];return null!=this.formControl&&this.formControl&&this.formControl.errors&&Object.keys(this.formControl.errors).forEach((function(n){var i,o;if(t.field.validations)try{for(var l=__values(t.field.validations),a=l.next();!a.done;a=l.next()){var r=a.value;n===r.message.key&&(e[e.length]={error:n,message:r.message.message})}}catch(t){i={error:t}}finally{try{a&&!a.done&&(o=l.return)&&o.call(l)}finally{if(i)throw i.error}}})),e},e}(FieldComponent);ChipsComponent.decorators=[{type:core.Component,args:[{selector:"cf-chips",template:'<ng-container *ngIf="!enableDragAndDrop && options.length==0">\n    <ng-container *ngTemplateOutlet="chipListStandard"></ng-container>\n</ng-container>\n<ng-container *ngIf="!enableDragAndDrop && options.length>0">\n    <ng-container *ngTemplateOutlet="chipListAutoComplete"></ng-container>\n</ng-container>\n\n\x3c!-- Chip list Standard --\x3e\n<ng-template #chipListStandard>\n    <mat-form-field \n        [appearance]="appearance | lowercase"\n        class="cf-chip-list">\n        <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}}" *ngIf="!(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'">\n          <strong>{{field.label}}</strong>\n          <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n          <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n            {{field.help.message}}\n          </span>\n        </mat-label>\n        \x3c!-- <mat-label class="cf-field-lbl" *ngIf="(hideLabel == true)"> \n        </mat-label> --\x3e\n  \n        <mat-icon \n          *ngIf="field.icon" \n          matPrefix\n          aria-hidden="true" \n          [attr.aria-label]="field.icon" \n          class="cf-field-icon" \n        >{{field.icon}}</mat-icon>\n  \n        <mat-chip-list #chipList [ngClass]="{\'mat-chip-list-stacked\': orientation === \'VERTICAL\'}">\n            <mat-chip *ngFor="let chip of chips;let i=index" [removable]="chip.removable || true"\n                (removed)="removeItem($event,chip,i)" class="chip-item" [disabled]="chip.disabled">\n                {{chip.value}}\n                <mat-icon matChipRemove *ngIf="chip.removable">cancel</mat-icon>\n            </mat-chip>\n            \x3c!-- [formControl]="formControl"  --\x3e\n            <input \n                matInput \n                #input \n                [id]="field.key"\n                [placeholder]="placeholder" \n                [matChipInputFor]="chipList"\n                [errorStateMatcher]="errorMatcher"\n                [disabled]="disabled"\n                [matChipInputSeparatorKeyCodes]="separatorKeysCodes" \n                [matChipInputAddOnBlur]="addOnBlur"\n                (matChipInputTokenEnd)="addItem($event)" />\n        </mat-chip-list>\n        <cf-button\n            matSuffix\n            *ngIf="hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == \'TOOLTIP\' && field.help.message)"\n            [button]="textClearButton"\n            class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n            (onClick)="cleanValue()"\n        ></cf-button>\n        <cf-button\n            matSuffix\n            *ngIf="hasFieldNavigate"\n            [button]="routeToButton"\n            class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n            (onClick)="resolvedValue = \'\'"\n        ></cf-button> \n        <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n\n        \x3c!-- <ng-container *ngTemplateOutlet="cfHelp;"></ng-container> --\x3e\n        <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint">\n            <mat-icon \n            aria-hidden="true"  \n            [attr.aria-label]="field.help.message" \n            class="cf-field-hint-icon">\n            {{field.help.icon ? field.help.icon : \'live_help\'}}\n            </mat-icon>\n            {{field.help.message}}\n        </mat-hint>\n\n        <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n    </mat-form-field>\n</ng-template>\n\n\x3c!-- Chip list with Autocomplete --\x3e\n<ng-template #chipListAutoComplete>\n    <mat-form-field class="cf-chip-list">\n        <mat-label class="cf-field-lbl cf-field-lbl-{{field.key}}" *ngIf="!(hideLabel == true) && field.fieldDisplayType != \'HORIZONTAL\'">\n            <strong>{{field.label}}</strong>\n            <span class="cf-field-lbl-req" *ngIf="isRequired">*</span>\n            <span *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && field.help.withLabel">\n              {{field.help.message}}\n            </span>\n          </mat-label>\n          \x3c!-- <mat-label class="cf-field-lbl" *ngIf="(hideLabel == true)"> \n          </mat-label> --\x3e\n    \n          <mat-icon \n            *ngIf="field.icon" \n            matPrefix\n            aria-hidden="true" \n            [attr.aria-label]="field.icon" \n            class="cf-field-icon" \n          >{{field.icon}}</mat-icon>\n      \n        <mat-chip-list #chipList [ngClass]="{\'mat-chip-list-stacked\': orientation === \'VERTICAL\'}">\n            <mat-chip *ngFor="let chip of chips;let i=index" [removable]="chip.removable || true"\n                (removed)="removeItem($event,chip,i)" class="chip-item" [disabled]="chip.disabled">\n                {{chip.value}}\n                <mat-icon matChipRemove *ngIf="chip.removable">cancel</mat-icon>\n            </mat-chip>\n            \x3c!-- [formControl]="formControl"  --\x3e\n            <input \n                matInput \n                #input \n                [id]="field.key"\n                [placeholder]="placeholder" \n                [matChipInputFor]="chipList"\n                [errorStateMatcher]="errorMatcher"\n                [disabled]="disabled"\n                [matChipInputSeparatorKeyCodes]="separatorKeysCodes" \n                [matChipInputAddOnBlur]="addOnBlur"\n                [matAutocomplete]="auto" />\n        </mat-chip-list>\n        <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n        <mat-autocomplete #auto="matAutocomplete" (optionSelected)="onSelected($event)">\n            <mat-option \n                *ngFor="let option of options" \n                [value]="option"\n                [disabled]="option.disabled" >\n                {{option.value}}\n                \x3c!-- <span [innerHTML]="option.value | highlight: highlightAutoCompleteText"></span> --\x3e\n            </mat-option>\n        </mat-autocomplete>\n\n        <cf-button\n            matSuffix\n            *ngIf="hasClear && !hasFieldNavigate && !(field.help && field.help.displayType == \'TOOLTIP\' && field.help.message)"\n            [button]="textClearButton"\n            class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n            (onClick)="cleanValue()"\n        ></cf-button>\n        <cf-button\n            matSuffix\n            *ngIf="hasFieldNavigate"\n            [button]="routeToButton"\n            class="cf-field-clr-btn cf-field-clr-btn-{{field.key}}"\n            (onClick)="resolvedValue = \'\'"\n        ></cf-button> \n        <cf-tooltip matSuffix [field]="field"></cf-tooltip>\n\n        \x3c!-- <ng-container *ngTemplateOutlet="cfHelp;"></ng-container> --\x3e\n        <mat-hint *ngIf="field.help && field.help.message && field.help.displayType == \'PLAIN_TEXT\' && !field.help.withLabel" class="cf-field-hint">\n            <mat-icon \n            aria-hidden="true" \n            [attr.aria-label]="field.help.message" \n            class="cf-field-hint-icon">\n            {{field.help.icon ? field.help.icon : \'live_help\'}}\n            </mat-icon>\n            {{field.help.message}}\n        </mat-hint>\n\n        <mat-error aria-hidden="true" [attr.aria-label]="error.message" *ngFor="let error of errors()" [innerHtml]="error.message"></mat-error>\n\n    </mat-form-field>\n</ng-template>\n\n',styles:[".cf-chip-list{width:100%}.cf-chip-list .chip-item.cdk-drag-animating,.cf-chip-list .hip-item .cdk-drop-list-dragging{transition:transform .25s cubic-bezier(0,0,.2,1)}.cf-chip-list .mat-chip-list-stacked input.mat-chip-input{flex:none}"]}]}],ChipsComponent.ctorParameters=function(){return[{type:router.Router},{type:ability.Ability}]},ChipsComponent.propDecorators={field:[{type:core.Input}],disabled:[{type:core.Input}],formControl:[{type:core.Input}],errorMatcher:[{type:core.Input}],input:[{type:core.ViewChild,args:["input"]}],matAutocomplete:[{type:core.ViewChild,args:["auto"]}],onListChange:[{type:core.Output}]};var ToolbarComponent=function(){function t(){this.field=null,this.onMenuClick=function(t){t.onClick(t)}}return t.prototype.ngOnInit=function(){this.title=this.field.title,this.menuItems=this.field.menuItems},t}();ToolbarComponent.decorators=[{type:core.Component,args:[{selector:"cf-toolbar",template:'<span>\n    <button mat-button *ngFor="let item of menuItems" (click)="onMenuClick(item)"\n    [fxShow]="item.showOnDesktop" \n    [fxShow.xs]="item.showOnMobile"\n    [fxShow.sm]="item.showOnTablet">\n        <mat-icon class="mr">{{item.icon}}</mat-icon>\n        {{item.label}}\n    </button>\n    <button mat-icon-button [matMenuTriggerFor]="dropMenu">\n        <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #dropMenu="matMenu">\n        <ng-container *ngFor="let item of menuItems">\n            <div [fxShow]="!item.showOnDesktop" \n                [fxShow.sm]="!item.showOnTablet" \n                [fxShow.xs]="!item.showOnMobile">\n                <button mat-menu-item (click)="onMenuClick(item)">\n                    <mat-icon class="mr">{{item.icon}}</mat-icon>\n                    {{item.label}}\n                </button>\n                <mat-divider></mat-divider>\n            </div>\n        </ng-container>\n    </mat-menu>\n</span>',encapsulation:core.ViewEncapsulation.None,styles:[".cf-chip-list{width:100%}.cf-chip-list .chip-item.cdk-drag-animating,.cf-chip-list .hip-item .cdk-drop-list-dragging{transition:transform .25s cubic-bezier(0,0,.2,1)}"]}]}],ToolbarComponent.ctorParameters=function(){return[]},ToolbarComponent.propDecorators={field:[{type:core.Input}]};var MultiImageComponent=function(){function t(){var t=this;this.field=null,this.onShowAllClick=function(){t.count=t.images.length}}return t.prototype.ngOnInit=function(){this.radius=10*(this.field.radius||5),this.showCount=this.field.showCount||!1,this.showAll=this.field.showAll||!1,this.images=this.field.images,this.images=this.images?this.images:this.field.value,this.count=this.field.count||(this.images?this.images.length:0),!this.showCount||!this.showAll&&this.showAll?this.showAll&&!this.showCount&&(this.lastItemLabel=">"):this.lastItemLabel="+"+(this.images.length-this.count),this.hideTooltip=this.images&&this.images.length>0&&"string"==typeof this.images[0]},t}();MultiImageComponent.decorators=[{type:core.Component,args:[{selector:"cf-multi-image",template:'<div class="avatars cf-field-nm"  [ngClass]="{\'cf-disable\': disabled}">\n    <ng-container *ngFor="let img of images; let i=index,let last = last">\n        <div class="avatar"  *ngIf="i<count" matTooltip="{{img.name}}" [matTooltipDisabled]="hideTooltip"\n            [style.margin-left.px]="i==0? 0:-radius/2" [style.z-index]="1000-i">\n            <img class="item" src="{{img.url || img}}" [style.width.px]="radius" [style.height.px]="radius"/>\n        </div>\n    </ng-container>\n    <span class="avatar" *ngIf="(showCount || showAll) && (count !== images.length)"\n        [style.margin-left.px]="-radius/2" [style.width.px]="radius">\n        <button class="item"  (click)="onShowAllClick()"\n            [style.padding-left.px]="radius/4" \n            [disabled]="(disabled || !showAll)" \n            [style.width.px]="radius" \n            [style.height.px]="radius">\n            {{lastItemLabel}}\n        </button>\n    </span>\n</div>',encapsulation:core.ViewEncapsulation.None,styles:[".avatars{display:flex;margin-bottom:1.25em!important;overflow:auto;width:100%}.item{align-items:center;background-color:#bbb;border-radius:9999px;box-shadow:0 0 0 2px #fff;color:#fff;display:flex;justify-content:center}button{background:transparent;border:none;color:#4d4d4d;font-size:18px}button:hover:not([disabled]){background-color:rgba(103,58,183,.5803921568627451);cursor:pointer}button:disabled:hover:not([disabled]){color:#ccc}"]}]}],MultiImageComponent.ctorParameters=function(){return[]},MultiImageComponent.propDecorators={field:[{type:core.Input}],control:[{type:core.Input}],disabled:[{type:core.Input}]};var ParagraphComponent=function(t){function e(e,n){var i=t.call(this,e,n)||this;return i.router=e,i.ability=n,i.tokens=new Array,i.onButtonClick=new core.EventEmitter,i}return __extends(e,t),e.prototype.ngOnInit=function(){var t=this;this.paragraphField=this.field;var e=this.paragraphField.template.split(" ");e&&e.length>0&&e.map((function(e){var n=e.slice(1,-1);-1==e.indexOf("{")?t.tokens.push({type:"LABEL",value:e}):-1!=e.indexOf("{")&&null!=t.paragraphField.fieldContexts[n]?(t.tokens.push({type:"FIELD",field:t.paragraphField.fieldContexts[n]}),t.paragraphField.isReadOnly&&(t.paragraphField.fieldContexts[n].isReadOnly=t.paragraphField.isReadOnly),"LABEL"==t.paragraphField.displayMode&&(t.paragraphField.fieldContexts[n].displayMode="LABEL")):-1!=e.indexOf("{")&&null!=t.paragraphField.buttonContexts[n]&&t.tokens.push({type:"BUTTON",button:t.paragraphField.buttonContexts[n]})}))},e.prototype.fieldChange=function(t){this.onFieldChange.emit(t)},e.prototype.isButtonDisable=function(){return ButtonUtils.isDisable(this.displayMode)||this.paragraphField.isReadOnly},e.prototype.getFormValue=function(){return FormUtils.getRawValue(this.form)},e.prototype.buttonClick=function(t){console.log(t),this.onButtonClick.emit(t)},e}(FieldComponent);ParagraphComponent.decorators=[{type:core.Component,args:[{selector:"cf-paragraph",template:'<ng-container *ngFor="let token of tokens">\n    <ng-container *ngIf="token.type == \'LABEL\'">\n        <span class="text">{{token.value}} </span>\n    </ng-container>\n    <ng-container *ngIf="token.type == \'FIELD\'">\n        <cf-field \n            [sourceType]="sourceType"\n            [sourceIdentifier]="sourceIdentifier" \n            [sourceIndex]="sourceIndex" \n            [widgetArrayIndex]="widgetArrayIndex"\n            [form]="form" \n            [fieldControl]="fieldControl[\'controls\'][token.field.key]"\n            [keyMap]="keyMap"\n            [field]="token.field"\n            [displayMode]="displayMode" \n            [value]="" \n            (onFieldChange)="fieldChange($event)" \n            class="field">\n        </cf-field> \n    </ng-container> \n    <ng-container *ngIf="token.type == \'BUTTON\'">\n        \x3c!-- \n        [buttonRoute]="buttonRoute"\n        [parentHierarchy]="parentHierarchy"\n         --\x3e\n        <cf-button\n            [form]="form"\n            [sourceIdentifier]="sourceIdentifier"\n            [sourceIndex]="sourceIndex"\n            class="button"\n            [widgetArrayIndex]="widgetArrayIndex"\n            [button]="token.button"\n            [context]="getFormValue()"\n            [originalData]="originalData"\n            [formDisplayMode]="displayMode"\n            [disabled]="isButtonDisable()"\n            (onClick)="buttonClick($event)"\n        ></cf-button>\n    </ng-container>\n</ng-container>',encapsulation:core.ViewEncapsulation.None,styles:[".text{vertical-align:middle}.button,.field{padding:0 10px}"]}]}],ParagraphComponent.ctorParameters=function(){return[{type:router.Router},{type:ability.Ability}]},ParagraphComponent.propDecorators={onButtonClick:[{type:core.Output}]};var HighlightPipe=function(){function t(){}return t.prototype.transform=function(t,e){var n=e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&").split(" ").filter((function(t){return t.length>0})).join("|"),i=new RegExp(n,"gi");return e?t.replace(i,(function(t){return"<b>"+t+"</b>"})):t},t}();HighlightPipe.decorators=[{type:core.Pipe,args:[{name:"highlight"}]}];var TooltipComponent=function(){function t(){this.field=null}return t.prototype.ngOnInit=function(){this.hasFieldNavigate=this.fieldNavigate(),this.field.help&&this.field.help.orientation?this.placement=this.field.help.orientation.toLowerCase():this.placement="bottom"},t.prototype.fieldNavigate=function(){var t=!1;return!this.field.navigate||StringUtils.isEmpty(this.field.navigate.icon)&&StringUtils.isEmpty(this.field.navigate.text)||CollectionUtils.isEmpty(this.field.navigate.routeTo)||(t=!0),t},t}();TooltipComponent.decorators=[{type:core.Component,args:[{selector:"cf-tooltip",template:'    \x3c!-- <mat-icon  matSuffix inline="true"> {{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon> --\x3e\n<span *ngIf="field.help && field.help.message && !hasFieldNavigate && field.help.displayType == \'TOOLTIP\'" \n    [tooltip]="HtmlContent"\n    [placement]="placement"\n    theme="light"\n    content-type="template"\n    class="cf-field-hint cf-field-hint-inline cf-field-hint-{{field.key}}">\n    \n    <button mat-icon-button class="cf-tooltip-button">\n        <mat-icon inline="true"> {{field.help.icon ? field.help.icon : \'live_help\'}}</mat-icon>\n    </button>\n</span>\n\n<ng-template #HtmlContent>\n    <mat-card class="tooltip-card">\n        <mat-card-header>\n            {{field.help.title}}\n        </mat-card-header>\n        <mat-card-content>\n            {{field.help.message}}\n        </mat-card-content>\n    </mat-card>\n</ng-template>',encapsulation:core.ViewEncapsulation.None,styles:[".tooltip{background-color:#fff!important;max-width:260px;padding:0!important}.tooltip .tooltip-card{margin:0!important;padding:0!important}.tooltip .tooltip-card .mat-card-header{background-color:#e5e3e3!important;color:#4d4d4d}.tooltip .tooltip-card .mat-card-content,.tooltip .tooltip-card .mat-card-header{padding:10px;text-align:left}.tooltip-top:after{border-color:#444 transparent transparent!important;border-width:7px!important;margin-left:-7px!important}.cf-tooltip-button{color:rgba(0,0,0,.54)}"]}]}],TooltipComponent.ctorParameters=function(){return[]},TooltipComponent.propDecorators={field:[{type:core.Input}],control:[{type:core.Input}]};var NgInit=function(){function t(){this.ngInit=new core.EventEmitter}return t.prototype.ngOnInit=function(){this.ngInit.emit()},t}();NgInit.decorators=[{type:core.Directive,args:[{selector:"[ngInit]"}]}],NgInit.propDecorators={ngInit:[{type:core.Output}]};var SafeHtmlPipe=function(){function t(t){this.sanitizer=t}return t.prototype.transform=function(t,e){return this.sanitizer.bypassSecurityTrustHtml(t)},t}();SafeHtmlPipe.decorators=[{type:core.Pipe,args:[{name:"safeHtml"}]}],SafeHtmlPipe.ctorParameters=function(){return[{type:platformBrowser.DomSanitizer}]};var cfTemplateDirective=function(){function t(t,e){this.vcRef=t,this.compiler=e}return t.prototype.ngOnChanges=function(){var t=this;if(!this.cfTemplate){if(this.componentRef)return void this.updateProperties();throw Error("You must provide template.")}this.vcRef.clear(),this.componentRef=null;var e=this.createDynamicComponent(this.cfTemplate),n=this.createDynamicModule(e);this.compiler.compileModuleAndAllComponentsAsync(n).then((function(n){var i=n.componentFactories.find((function(t){return t.componentType===e}));t.componentRef=t.vcRef.createComponent(i),t.updateProperties()})).catch((function(t){console.log(t)}))},t.prototype.updateProperties=function(){for(var t in this.cfTemplateContext)this.componentRef.instance[t]=this.cfTemplateContext[t]},t.prototype.createDynamicComponent=function(t){var e=function(){};return e.decorators=[{type:core.Component,args:[{selector:"cf-dynamic-component",template:t}]}],e},t.prototype.createDynamicModule=function(t){var e=function(){};return e.decorators=[{type:core.NgModule,args:[{imports:[common.CommonModule,AdminBuilderModule],declarations:[t]}]}],e},t}();cfTemplateDirective.decorators=[{type:core.Directive,args:[{selector:"[cfTemplate]"}]}],cfTemplateDirective.ctorParameters=function(){return[{type:core.ViewContainerRef},{type:core.Compiler}]},cfTemplateDirective.propDecorators={cfTemplate:[{type:core.Input}],cfTemplateContext:[{type:core.Input}],currentComponent:[{type:core.Input}]};var NavigationComponent=function(){function t(){this.isExpanded=!0,this.logout=new core.EventEmitter,this.showSubmenu=[!1],this.isShowing=!1,this.showSubSubMenu=[[!1,!1],!1]}return t.prototype.mouseenter=function(){this.isExpanded||(this.isShowing=!0)},t.prototype.mouseleave=function(){this.isExpanded||(this.isShowing=!1)},t.prototype.logoutEvent=function(){this.logout.emit()},t.prototype.ngOnInit=function(){this.navigation=this.navigationPanel.navigations},t}();NavigationComponent.decorators=[{type:core.Component,args:[{selector:"admin-navigation",template:'<mat-sidenav-container class="admin-container" autosize>\n  <mat-sidenav #sidenav class="admin-sidenav"\n    [ngClass]="{\'side-width\':(isExpanded || isShowing),\'mobile-side-remove\':!isExpanded,\'collaps-width\':(!isExpanded && !isShowing)}"\n    mode="side" opened="true" (mouseenter)="mouseenter()" (mouseleave)="mouseleave()">\n    <span class="flex-layout">\n\n      <mat-nav-list>\n        <div *ngFor="let data of navigation;let i=index">\n          \x3c!-- <mat-list-item (click)="showSubmenu[0] = !showSubmenu[0]" class="parent">\n          <span class="full-width" *ngIf="isExpanded || isShowing">{{data.name}}</span>\n          <mat-icon mat-list-icon>{{data.icon}}</mat-icon>\n          <mat-icon class="menu-button" [ngClass]="{\'rotated\' : showSubmenu[0]}" *ngIf="isExpanded || isShowing">\n            expand_more</mat-icon>\n        </mat-list-item> --\x3e\n          <ng-container *ngTemplateOutlet="mainmenu; context: {menu:data,index:i}"></ng-container>\n\n        </div>\n      </mat-nav-list>\n\n      <footer *ngIf="navigationPanel.footer">\n        <mat-nav-list>\n          <mat-list-item *ngIf="navigationPanel.footer.logout" (click)="logoutEvent()">\n            <ng-container *ngIf="navigationPanel.footer?.template.content as tmpl; else footertemplate">\n\n              <ng-container cfTemplate [cfTemplate]="\'<style>\'+navigationPanel.footer?.template?.css+\'</style>\'+tmpl">\n              </ng-container>\n            </ng-container>\n          </mat-list-item>\n        </mat-nav-list>\n\n\n      </footer>\n\n    </span>\n  </mat-sidenav>\n\n  <ng-content></ng-content>\n</mat-sidenav-container>\n\n<ng-template #submenu let-menu="menu" let-j="mainindex" let-s="subindex">\n\n  <div class="submenu" [ngClass]="{\'expanded\' :(s>=0?showSubSubMenu[j][s]:showSubmenu[j])}"\n    *ngIf="isShowing || isExpanded">\n    <div *ngFor="let item of menu;let m=index">\n\n      <div *ngIf="item?.children;else nochild">\n        <mat-list-item (click)="showSubSubMenu[j][m] = !showSubSubMenu[j][m]" class="parent">\n          <span class="full-width" *ngIf="isExpanded || isShowing">\n            <span *ngIf="item.name;else submenuImage">{{item.name}}</span>\n            <span [matBadge]="item?.subText?.text" *ngIf="item?.subText?.displayType==\'BADGE\'"\n              matBadgeOverlap="false"></span>\n            <span *ngIf="item?.subText?.displayType==\'PLAIN_TEXT\'" class="sub-text">{{item?.subText?.text}}</span>\n          </span>\n          <mat-icon *ngIf="item.icon;else subimageIcon" mat-list-icon>{{item.icon}}</mat-icon>\n          <mat-icon class="menu-button" [ngClass]="{\'rotated\' : showSubSubMenu[j][m]}" *ngIf="isExpanded || isShowing">\n            expand_more</mat-icon>\n        </mat-list-item>\n        <span *ngIf="showSubSubMenu[j][m]">\n          <ng-container *ngTemplateOutlet="submenu; context: {menu:item.children,mainindex:j,subindex:m}">\n          </ng-container>\n        </span>\n      </div>\n      <ng-template #nochild>\n\n        <mat-list-item [routerLink]="[item?.route]" routerLinkActive="active">\n          <span *ngIf="item.name;else submenuImage">{{item.name}}</span>\n          <span [matBadge]="item?.subText?.text" *ngIf="item?.subText?.displayType==\'BADGE\'"\n            matBadgeOverlap="false"></span>\n          <span *ngIf="item?.subText?.displayType==\'PLAIN_TEXT\'" class="sub-text">{{item?.subText?.text}}</span>\n          <mat-icon *ngIf="item.icon;else subimageIcon" mat-list-icon>\n            {{item.icon}}</mat-icon>\n        </mat-list-item>\n\n      </ng-template>\n      <mat-divider *ngIf="item?.divider"></mat-divider>\n\n      <ng-template #subimageIcon>\n        <img [src]="item.image" class="image-icon">\n      </ng-template>\n\n      <ng-template #submenuImage>\n        <img [src]="item.nameAsImage" class="image-name">\n      </ng-template>\n    </div>\n    \x3c!-- <mat-list-item>SubSubmenu Item 2</mat-list-item> --\x3e\n  </div>\n</ng-template>\n\n<ng-template #mainmenu let-menu="menu" let-i="index">\n  <div *ngIf="menu.children;else nochild">\n    <mat-list-item (click)="showSubmenu[i] = !showSubmenu[i]" class="parent">\n      <span class="full-width" *ngIf="isExpanded || isShowing">\n        <span *ngIf="menu.name;else menuImage">{{menu.name}}</span>\n        <span [matBadge]="menu?.subText?.text" *ngIf="menu?.subText?.displayType==\'BADGE\'"\n          matBadgeOverlap="false"></span>\n\n        <span *ngIf="menu?.subText?.displayType==\'PLAIN_TEXT\'" class="sub-text">{{menu?.subText?.text}}</span>\n      </span>\n      <mat-icon *ngIf="menu.icon;else imageIcon" mat-list-icon>{{menu.icon}} </mat-icon>\n\n      <mat-icon class="menu-button" [ngClass]="{\'rotated\' : showSubmenu[i]}" *ngIf="isExpanded || isShowing">\n        expand_more\n      </mat-icon>\n    </mat-list-item>\n    <span *ngIf="showSubmenu[i]">\n      <ng-container *ngTemplateOutlet="submenu; context: {menu:menu.children,mainindex:i}"></ng-container>\n    </span>\n  </div>\n  <ng-template #nochild>\n\n    <mat-list-item class="parent" [routerLink]="[menu?.route]" routerLinkActive="active"><span class="full-width"\n        *ngIf="isExpanded || isShowing"> <span *ngIf="menu.name;else menuImage">{{menu.name}}</span></span>\n      <mat-icon *ngIf="menu.icon;else imageIcon" mat-list-icon>\n        {{menu.icon}}</mat-icon>\n    </mat-list-item>\n  </ng-template>\n  <mat-divider *ngIf="menu?.divider"></mat-divider>\n  <ng-template #imageIcon>\n    <img [src]="menu.image" class="image-icon">\n  </ng-template>\n\n  <ng-template #menuImage>\n    <img [src]="menu.nameAsImage" class="image-name">\n  </ng-template>\n</ng-template>\n\n\n<ng-template #footertemplate>\n\n  <mat-icon mat-list-icon>power_settings_new</mat-icon>\n  <span *ngIf="isExpanded || isShowing">Logout</span>\n\n</ng-template>\n\n\n<button mat-mini-fab color="primary" [ngClass]="{\'minimize\':(!isExpanded && !isShowing)}"\n  (click)="isExpanded = !isExpanded" class="menu-side-button" aria-label="Menu collapse">\n  <mat-icon> keyboard_arrow_left</mat-icon>\n</button>',styles:[".admin-sidenav-content{align-items:center;display:flex;height:100%;justify-content:center}.admin-sidenav{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none}.full-width{align-items:center;display:flex;padding-left:10px;width:100%}.menu-button{transform:rotate(0deg);transition:.3s ease-in-out}.menu-button.rotated{transform:rotate(180deg)}.submenu{overflow-y:hidden;padding-left:30px;transform:scaleY(0);transform-origin:top;transition:transform .3s ease}.submenu.expanded{transform:scaleY(1)}.side-width{width:250px}.collaps-width{width:65px}.menu-side-button{background:#fff;color:#000;left:238px;position:absolute;top:110px;z-index:9}@media (max-width:599px){.menu-side-button{display:none}}.menu-side-button.minimize{left:52px;transform:rotate(180deg)}@media (max-width:599px){.mobile-side-remove{display:none}}mat-sidenav-container{min-height:88vh}.image-icon{width:32px}.image-name{width:92px;z-index:-1}.sub-text{background:#673ab7;border-radius:5px;color:#fff;margin:5px;padding:5px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-18px}.flex-beetween{align-content:space-between}.flex-beetween,.flex-layout{display:flex;flex-direction:column}.flex-layout{height:100%;justify-content:space-between}"]}]}],NavigationComponent.ctorParameters=function(){return[]},NavigationComponent.propDecorators={sidenav:[{type:core.ViewChild,args:["sidenav"]}],isExpanded:[{type:core.Input}],navigationPanel:[{type:core.Input}],navigation:[{type:core.Input}],logout:[{type:core.Output}]};var ɵ0=new ability.Ability,AdminBuilderModule=function(){};AdminBuilderModule.decorators=[{type:core.NgModule,args:[{declarations:[ButtonComponent,ButtonGroupComponent,ButtonDeleteConfirmationComponent,CrudHeaderComponent,CrudFormComponent,CrudListComponent,CrudListComponentInterface,BottomSearchSheet,FileUploaderComponent,FieldComponent,FieldHorizontalLayoutComponent,FieldVerticalLayoutComponent,FieldInlineLayoutComponent,FieldLayoutComponent,FormHeaderComponent,FormComponent,AdminLayoutComponent,ListComponent,StaticListComponent,DynamicListComponent,ModalComponent,ChipsComponent,ToolbarComponent,MultiImageComponent,ParagraphComponent,HighlightPipe,TooltipComponent,NgInit,SafeHtmlPipe,cfTemplateDirective,NavigationComponent],imports:[common.CommonModule,http.HttpClientModule,router.RouterModule,mde.MdePopoverModule,forms.ReactiveFormsModule,ng2TooltipDirective.TooltipModule,layout.LayoutModule,button.MatButtonModule,buttonToggle.MatButtonToggleModule,menu.MatMenuModule,chips.MatChipsModule,icon.MatIconModule,badge.MatBadgeModule,dialog.MatDialogModule,card.MatCardModule,tabs.MatTabsModule,expansion.MatExpansionModule,sidenav.MatSidenavModule,bottomSheet.MatBottomSheetModule,divider.MatDividerModule,icon.MatIconModule,formField.MatFormFieldModule,input.MatInputModule,icon.MatIconModule,select.MatSelectModule,autocomplete.MatAutocompleteModule,checkbox.MatCheckboxModule,radio.MatRadioModule,datepicker.MatDatepickerModule,materialMomentAdapter.MatMomentDateModule,slider.MatSliderModule,slideToggle.MatSlideToggleModule,list.MatListModule,table.MatTableModule,sort.MatSortModule,paginator.MatPaginatorModule,gridList.MatGridListModule,progressBar.MatProgressBarModule,progressSpinner.MatProgressSpinnerModule,dragDrop.DragDropModule,tooltip.MatTooltipModule,divider.MatDividerModule,sidenav.MatSidenavModule,expansion.MatExpansionModule,formField.MatFormFieldModule,card.MatCardModule,divider.MatDividerModule,button.MatButtonModule,icon.MatIconModule,card.MatCardModule,divider.MatDividerModule,formField.MatFormFieldModule,icon.MatIconModule,checkbox.MatCheckboxModule,dialog.MatDialogModule,ngxQuill.QuillModule.forRoot(),angular.AbilityModule,flexLayout.FlexLayoutModule,toolbar.MatToolbarModule,ngxInfiniteScroll.InfiniteScrollModule],exports:[ButtonComponent,ButtonGroupComponent,CrudListComponentInterface,CrudFormComponent,CrudListComponent,FileUploaderComponent,FieldComponent,FormComponent,StaticListComponent,DynamicListComponent,ModalComponent,mde.MdePopoverModule,button.MatButtonModule,buttonToggle.MatButtonToggleModule,menu.MatMenuModule,chips.MatChipsModule,icon.MatIconModule,badge.MatBadgeModule,dialog.MatDialogModule,card.MatCardModule,tabs.MatTabsModule,expansion.MatExpansionModule,sidenav.MatSidenavModule,bottomSheet.MatBottomSheetModule,divider.MatDividerModule,icon.MatIconModule,formField.MatFormFieldModule,input.MatInputModule,icon.MatIconModule,select.MatSelectModule,autocomplete.MatAutocompleteModule,checkbox.MatCheckboxModule,radio.MatRadioModule,datepicker.MatDatepickerModule,materialMomentAdapter.MatMomentDateModule,slider.MatSliderModule,slideToggle.MatSlideToggleModule,list.MatListModule,table.MatTableModule,sort.MatSortModule,paginator.MatPaginatorModule,gridList.MatGridListModule,progressBar.MatProgressBarModule,progressSpinner.MatProgressSpinnerModule,tooltip.MatTooltipModule,divider.MatDividerModule,sidenav.MatSidenavModule,expansion.MatExpansionModule,formField.MatFormFieldModule,card.MatCardModule,divider.MatDividerModule,button.MatButtonModule,icon.MatIconModule,card.MatCardModule,divider.MatDividerModule,formField.MatFormFieldModule,icon.MatIconModule,checkbox.MatCheckboxModule,dialog.MatDialogModule,ngxInfiniteScroll.InfiniteScrollModule,NgInit,SafeHtmlPipe,cfTemplateDirective,NavigationComponent],providers:[{provide:ability.Ability,useValue:ɵ0},{provide:ability.PureAbility,useExisting:ability.Ability}]}]}];var ModalUitls=function(){function ModalUitls(){}return ModalUitls.openDialog=function(modal,component){var dialogRef;dialogRef=modal.dialog.open(component||ModalComponent,{width:modal.widgetConfig.modal&&modal.widgetConfig.modal.width?modal.widgetConfig.modal.width+"px":"250px",data:{type:modal.type,widgetConfig:modal.widgetConfig,sourceIndex:modal.sourceIndex,context:modal.context,originalData:modal.originalData,keyMap:modal.keyMap,reset:modal.reset}}),dialogRef.componentInstance.onButtonClick&&dialogRef.componentInstance.onButtonClick.subscribe((function(event){console.log(event),eval("this.buttonClick")&&eval("this.buttonClick(event)")})),dialogRef.componentInstance.onFieldChange&&dialogRef.componentInstance.onFieldChange.subscribe((function(event){console.log(event),eval("this.fieldChange")&&eval("this.fieldChange(event)")}),this),dialogRef.componentInstance.onFormChange&&dialogRef.componentInstance.onFormChange.subscribe((function(event){console.log(event),eval("this.formChange")&&eval("this.formChange(event)")})),dialogRef.afterClosed().subscribe((function(t){console.log("The dialog was closed")}))},ModalUitls}();exports.AbilityUtils=AbilityUtils,exports.AdminBuilderModule=AdminBuilderModule,exports.AdminLayoutComponent=AdminLayoutComponent,exports.BadgeUitls=BadgeUitls,exports.BottomSearchSheet=BottomSearchSheet,exports.ButtonComponent=ButtonComponent,exports.ButtonGroupComponent=ButtonGroupComponent,exports.ButtonUtils=ButtonUtils,exports.CollectionUtils=CollectionUtils,exports.CrudFormComponent=CrudFormComponent,exports.CrudListComponent=CrudListComponent,exports.CrudListComponentInterface=CrudListComponentInterface,exports.CrudUtils=CrudUtils,exports.DependentUtils=DependentUtils,exports.DropdownUtils=DropdownUtils,exports.DynamicListComponent=DynamicListComponent,exports.FieldComponent=FieldComponent,exports.FieldErrorStateMatcher=FieldErrorStateMatcher,exports.FieldUtils=FieldUtils,exports.FormComponent=FormComponent,exports.FormCustomUtils=FormCustomUtils,exports.FormHeaderComponent=FormHeaderComponent,exports.FormUtils=FormUtils,exports.KeyMapUtils=KeyMapUtils,exports.ListUtils=ListUtils,exports.MasterDataUtils=MasterDataUtils,exports.ModalComponent=ModalComponent,exports.ModalUitls=ModalUitls,exports.ObjectUtils=ObjectUtils,exports.PropertyUtils=PropertyUtils,exports.SecurityUtils=SecurityUtils,exports.StaticListComponent=StaticListComponent,exports.StringUtils=StringUtils,exports.ɵ0=ɵ0,exports.ɵa=ButtonDeleteConfirmationComponent,exports.ɵb=CrudHeaderComponent,exports.ɵc=FileUploaderComponent,exports.ɵd=FieldComponent,exports.ɵe=FieldHorizontalLayoutComponent,exports.ɵf=FieldVerticalLayoutComponent,exports.ɵg=FieldInlineLayoutComponent,exports.ɵh=FieldLayoutComponent,exports.ɵi=FormHeaderComponent,exports.ɵj=FormComponent,exports.ɵk=ListComponent,exports.ɵl=ChipsComponent,exports.ɵm=ToolbarComponent,exports.ɵn=MultiImageComponent,exports.ɵo=ParagraphComponent,exports.ɵp=HighlightPipe,exports.ɵq=TooltipComponent,exports.ɵr=NgInit,exports.ɵs=SafeHtmlPipe,exports.ɵt=cfTemplateDirective,exports.ɵu=NavigationComponent,Object.defineProperty(exports,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-material-widget.umd.min.js.map